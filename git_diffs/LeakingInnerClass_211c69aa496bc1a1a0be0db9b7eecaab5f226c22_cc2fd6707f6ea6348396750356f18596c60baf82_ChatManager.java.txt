diff --git a/app/src/androidTest/java/com/alexkang/btchatroom/ApplicationTest.java b/app/src/androidTest/java/com/alexkang/bluechat/ApplicationTest.java
similarity index 90%
rename from app/src/androidTest/java/com/alexkang/btchatroom/ApplicationTest.java
rename to app/src/androidTest/java/com/alexkang/bluechat/ApplicationTest.java
index c7e1772..92b9b98 100644
--- a/app/src/androidTest/java/com/alexkang/btchatroom/ApplicationTest.java
+++ b/app/src/androidTest/java/com/alexkang/bluechat/ApplicationTest.java
@@ -1,4 +1,4 @@
-package com.alexkang.btchatroom;
+package com.alexkang.bluechat;
 
 import android.app.Application;
 import android.test.ApplicationTestCase;
diff --git a/app/src/main/java/com/alexkang/btchatroom/ChatManager.java b/app/src/main/java/com/alexkang/bluechat/ChatManager.java
similarity index 68%
rename from app/src/main/java/com/alexkang/btchatroom/ChatManager.java
rename to app/src/main/java/com/alexkang/bluechat/ChatManager.java
index 7ef6f5b..984e901 100644
--- a/app/src/main/java/com/alexkang/btchatroom/ChatManager.java
+++ b/app/src/main/java/com/alexkang/bluechat/ChatManager.java
@@ -1,16 +1,17 @@
-package com.alexkang.btchatroom;
+package com.alexkang.bluechat;
 
 import android.app.Activity;
 import android.bluetooth.BluetoothAdapter;
 import android.bluetooth.BluetoothSocket;
+import android.content.Intent;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.os.Handler;
 import android.os.Message;
-import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.Toast;
 
+import java.io.FilterInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
@@ -94,11 +95,14 @@ public class ChatManager {
                     break;
                 case MESSAGE_RECEIVE_IMAGE:
                     byte[] imageBuffer = (byte[]) msg.obj;
-                    Bitmap bitmap = BitmapFactory.decodeByteArray(imageBuffer, 0, imageBuffer.length);
+                    int imageSenderLength = msg.arg1;
 
-                    ImageView imageView = new ImageView(mActivity);
-                    imageView.setImageBitmap(bitmap);
-                    mMessageFeed.addView(imageView, 0);
+                    String imageWholeMessage = new String(imageBuffer);
+                    String imageSenderName = imageWholeMessage.substring(0, imageSenderLength);
+                    Bitmap bitmap = BitmapFactory.decodeByteArray(imageBuffer, imageSenderLength, imageBuffer.length - imageSenderLength);
+
+                    MessageBox imageBox = new MessageBox(imageSenderName, bitmap, new Date(), true);
+                    addMessage(imageBox);
             }
         }
 
@@ -134,7 +138,12 @@ public class ChatManager {
                 mSocket.close();
                 mConnectedThread = new ConnectedThread(mSocket);
                 mConnectedThread.start();
-            } catch (IOException e) {}
+            } catch (IOException e) {
+                Toast.makeText(mActivity, "Failed to reconnect, now exiting", Toast.LENGTH_SHORT).show();
+                Intent i = new Intent(mActivity, MainActivity.class);
+                mActivity.startActivity(i);
+                mActivity.finish();
+            }
         }
     }
 
@@ -144,7 +153,7 @@ public class ChatManager {
                 connection.write(byteArray);
             }
 
-            mHandler.obtainMessage(byteArray[0], byteArray[1], -1, Arrays.copyOfRange(byteArray, 2, byteArray.length))
+            mHandler.obtainMessage(byteArray[0], byteArray[2], -1, Arrays.copyOfRange(byteArray, 3, byteArray.length))
                     .sendToTarget();
         } else {
             mConnectedThread.write(byteArray);
@@ -176,7 +185,12 @@ public class ChatManager {
             try {
                 tmpIn = socket.getInputStream();
                 tmpOut = socket.getOutputStream();
-            } catch (IOException e) {}
+            } catch (IOException e) {
+                Toast.makeText(mActivity, "Could not connect to ChatRoom, now exiting", Toast.LENGTH_SHORT).show();
+                Intent i = new Intent(mActivity, MainActivity.class);
+                mActivity.startActivity(i);
+                mActivity.finish();
+            }
 
             mmInStream = tmpIn;
             mmOutStream = tmpOut;
@@ -185,19 +199,31 @@ public class ChatManager {
         public void run() {
             while (true) {
                 try {
-                    byte[] buffer = new byte[1024];
-                    mmInStream.read(buffer);
-                    int type = buffer[0];
-                    int nameLength = buffer[1];
+                    int type = mmInStream.read();
+                    int packetLength = mmInStream.read();
+                    int nameLength = mmInStream.read();
 
                     if (type == MESSAGE_SEND || type == MESSAGE_SEND_IMAGE) {
+                        // We add 3 bytes to reinsert the type, packet length, and name length.
+                        byte[] buffer = new byte[packetLength + 3];
+                        buffer[0] = (byte) type;
+                        buffer[1] = (byte) packetLength;
+                        buffer[2] = (byte) nameLength;
+
+                        mmInStream.read(buffer, 3, packetLength);
                         mHandler.obtainMessage(type, -1, -1, buffer)
                                 .sendToTarget();
-                    } else if (type == MESSAGE_RECEIVE || type == MESSAGE_RECEIVE_IMAGE) {
-                        mHandler.obtainMessage(type, nameLength, -1, Arrays.copyOfRange(buffer, 2, buffer.length))
+                    } else if (type == MESSAGE_RECEIVE || type == MESSAGE_NAME) {
+                        byte[] buffer = new byte[packetLength];
+
+                        mmInStream.read(buffer);
+                        mHandler.obtainMessage(type, nameLength, -1, buffer)
                                 .sendToTarget();
-                    } else {
-                        mHandler.obtainMessage(type, -1, -1, Arrays.copyOfRange(buffer, 1, buffer.length))
+                    } else if (type == MESSAGE_RECEIVE_IMAGE) {
+                        byte[] buffer = new byte[packetLength];
+
+                        mmInStream.read(buffer);
+                        mHandler.obtainMessage(type, nameLength, -1, buffer)
                                 .sendToTarget();
                     }
                 } catch (IOException e) {
@@ -215,4 +241,28 @@ public class ChatManager {
 
     }
 
+    static class FlushedInputStream extends FilterInputStream {
+        public FlushedInputStream(InputStream inputStream) {
+            super(inputStream);
+        }
+
+        @Override
+        public long skip(long n) throws IOException {
+            long totalBytesSkipped = 0L;
+            while (totalBytesSkipped < n) {
+                long bytesSkipped = in.skip(n - totalBytesSkipped);
+                if (bytesSkipped == 0L) {
+                    int b = read();
+                    if (b < 0) {
+                        break;  // we reached EOF
+                    } else {
+                        bytesSkipped = 1; // we read one byte
+                    }
+                }
+                totalBytesSkipped += bytesSkipped;
+            }
+            return totalBytesSkipped;
+        }
+    }
+
 }
diff --git a/app/src/main/java/com/alexkang/btchatroom/ClientActivity.java b/app/src/main/java/com/alexkang/bluechat/ClientActivity.java
similarity index 90%
rename from app/src/main/java/com/alexkang/btchatroom/ClientActivity.java
rename to app/src/main/java/com/alexkang/bluechat/ClientActivity.java
index 2f7c802..4adb720 100644
--- a/app/src/main/java/com/alexkang/btchatroom/ClientActivity.java
+++ b/app/src/main/java/com/alexkang/bluechat/ClientActivity.java
@@ -1,4 +1,4 @@
-package com.alexkang.btchatroom;
+package com.alexkang.bluechat;
 
 import android.app.Activity;
 import android.app.ProgressDialog;
@@ -99,11 +99,13 @@ public class ClientActivity extends Activity {
 
         try {
             byte[] messageBytes = mMessage.getText().toString().getBytes();
+            byte[] senderBytes = mBluetoothAdapter.getName().getBytes();
 
-            ByteArrayOutputStream output = new ByteArrayOutputStream(messageBytes.length + 1);
+            ByteArrayOutputStream output = new ByteArrayOutputStream(senderBytes.length + messageBytes.length + 3);
             output.write(ChatManager.MESSAGE_SEND);
-            output.write(mBluetoothAdapter.getName().length());
-            output.write(mBluetoothAdapter.getName().getBytes());
+            output.write(senderBytes.length + messageBytes.length);
+            output.write(senderBytes.length);
+            output.write(senderBytes);
             output.write(messageBytes);
 
             byteArray = output.toByteArray();
@@ -125,13 +127,16 @@ public class ClientActivity extends Activity {
     private void sendImage(Bitmap bitmap) {
         try {
             ByteArrayOutputStream output = new ByteArrayOutputStream();
-            ByteArrayOutputStream imageArray = new ByteArrayOutputStream();
+            byte[] senderBytes = mBluetoothAdapter.getName().getBytes();
 
             output.write(ChatManager.MESSAGE_SEND_IMAGE);
-            bitmap.compress(Bitmap.CompressFormat.JPEG, 25, imageArray);
-            output.write(imageArray.toByteArray());
+            output.write(senderBytes.length);
+            output.write(senderBytes.length);
+            output.write(senderBytes);
+            bitmap.compress(Bitmap.CompressFormat.JPEG, 15, output);
 
             byte[] byteArray = output.toByteArray();
+            byteArray[1] = (byte) (byteArray.length - 3);
 
             mChatManager.write(byteArray);
         } catch (Exception e) {}
diff --git a/app/src/main/java/com/alexkang/btchatroom/HostActivity.java b/app/src/main/java/com/alexkang/bluechat/HostActivity.java
similarity index 88%
rename from app/src/main/java/com/alexkang/btchatroom/HostActivity.java
rename to app/src/main/java/com/alexkang/bluechat/HostActivity.java
index 20dd767..30981e5 100644
--- a/app/src/main/java/com/alexkang/btchatroom/HostActivity.java
+++ b/app/src/main/java/com/alexkang/bluechat/HostActivity.java
@@ -1,4 +1,4 @@
-package com.alexkang.btchatroom;
+package com.alexkang.bluechat;
 
 import android.app.Activity;
 import android.app.AlertDialog;
@@ -7,33 +7,20 @@ import android.bluetooth.BluetoothServerSocket;
 import android.bluetooth.BluetoothSocket;
 import android.content.DialogInterface;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.database.Cursor;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
-import android.graphics.drawable.BitmapDrawable;
-import android.graphics.drawable.Drawable;
 import android.net.Uri;
 import android.os.Bundle;
 import android.provider.MediaStore;
-import android.view.Menu;
-import android.view.MenuItem;
 import android.view.View;
 import android.view.inputmethod.EditorInfo;
 import android.widget.Button;
 import android.widget.EditText;
-import android.widget.ListView;
 import android.widget.Toast;
 
-import com.alexkang.btchatroom.R;
-
 import java.io.ByteArrayOutputStream;
-import java.io.FileOutputStream;
 import java.io.IOException;
-import java.io.InputStream;
-import java.nio.ByteBuffer;
-import java.util.ArrayList;
-import java.util.UUID;
 
 public class HostActivity extends Activity {
 
@@ -127,11 +114,13 @@ public class HostActivity extends Activity {
 
         try {
             byte[] messageBytes = mMessage.getText().toString().getBytes();
+            byte[] senderBytes = mBluetoothAdapter.getName().getBytes();
 
-            ByteArrayOutputStream output = new ByteArrayOutputStream(messageBytes.length + 1);
+            ByteArrayOutputStream output = new ByteArrayOutputStream(senderBytes.length + messageBytes.length + 3);
             output.write(ChatManager.MESSAGE_RECEIVE);
-            output.write(mBluetoothAdapter.getName().length());
-            output.write(mBluetoothAdapter.getName().getBytes());
+            output.write(senderBytes.length + messageBytes.length);
+            output.write(senderBytes.length);
+            output.write(senderBytes);
             output.write(messageBytes);
 
             byteArray = output.toByteArray();
@@ -146,14 +135,16 @@ public class HostActivity extends Activity {
     private void sendImage(Bitmap bitmap) {
         try {
             ByteArrayOutputStream output = new ByteArrayOutputStream();
-            ByteArrayOutputStream imageArray = new ByteArrayOutputStream();
+            byte[] senderBytes = mBluetoothAdapter.getName().getBytes();
 
             output.write(ChatManager.MESSAGE_RECEIVE_IMAGE);
-            bitmap.compress(Bitmap.CompressFormat.JPEG, 25, imageArray);
-            output.write(imageArray.toByteArray());
+            output.write(senderBytes.length);
+            output.write(senderBytes.length);
+            output.write(senderBytes);
+            bitmap.compress(Bitmap.CompressFormat.JPEG, 15, output);
 
             byte[] byteArray = output.toByteArray();
-            Toast.makeText(this, byteArray.length + "", Toast.LENGTH_SHORT).show();
+            byteArray[1] = (byte) (byteArray.length - 3);
 
             mChatManager.write(byteArray);
         } catch (Exception e) {}
@@ -185,6 +176,9 @@ public class HostActivity extends Activity {
     public void onStop() {
         super.onStop();
 
+        try {
+            mAcceptThread.cancel();
+        } catch (Exception e) {}
     }
 
     private void manageSocket(BluetoothSocket socket) {
@@ -195,6 +189,8 @@ public class HostActivity extends Activity {
         try {
             ByteArrayOutputStream output = new ByteArrayOutputStream(mChatRoomName.length() + 1);
             output.write(ChatManager.MESSAGE_NAME);
+            output.write(mChatRoomName.length());
+            output.write(-1);
             output.write(mChatRoomName.getBytes());
             byteArray = output.toByteArray();
         } catch (IOException e) {
@@ -207,9 +203,11 @@ public class HostActivity extends Activity {
     private class AcceptThread extends Thread {
 
         private final BluetoothServerSocket mmServerSocket;
+        private boolean isAccepting;
 
         public AcceptThread() {
             BluetoothServerSocket tmp = null;
+            isAccepting = true;
 
             try {
                 tmp = mBluetoothAdapter.
@@ -222,7 +220,7 @@ public class HostActivity extends Activity {
         }
 
         public void run() {
-            while (true) {
+            while (isAccepting) {
                 final BluetoothSocket socket;
 
                 try {
@@ -244,6 +242,7 @@ public class HostActivity extends Activity {
 
         public void cancel() {
             try {
+                isAccepting = false;
                 mmServerSocket.close();
             } catch (IOException e) {}
         }
diff --git a/app/src/main/java/com/alexkang/btchatroom/MainActivity.java b/app/src/main/java/com/alexkang/bluechat/MainActivity.java
similarity index 96%
rename from app/src/main/java/com/alexkang/btchatroom/MainActivity.java
rename to app/src/main/java/com/alexkang/bluechat/MainActivity.java
index 310f758..d7f1552 100644
--- a/app/src/main/java/com/alexkang/btchatroom/MainActivity.java
+++ b/app/src/main/java/com/alexkang/bluechat/MainActivity.java
@@ -1,11 +1,9 @@
-package com.alexkang.btchatroom;
+package com.alexkang.bluechat;
 
 import android.app.Activity;
 import android.bluetooth.BluetoothAdapter;
 import android.content.Intent;
 import android.os.Bundle;
-import android.view.Menu;
-import android.view.MenuItem;
 import android.view.View;
 import android.widget.Button;
 import android.widget.Toast;
diff --git a/app/src/main/java/com/alexkang/btchatroom/MessageBox.java b/app/src/main/java/com/alexkang/bluechat/MessageBox.java
similarity index 63%
rename from app/src/main/java/com/alexkang/btchatroom/MessageBox.java
rename to app/src/main/java/com/alexkang/bluechat/MessageBox.java
index 11faa1b..7df88f2 100644
--- a/app/src/main/java/com/alexkang/btchatroom/MessageBox.java
+++ b/app/src/main/java/com/alexkang/bluechat/MessageBox.java
@@ -1,6 +1,7 @@
-package com.alexkang.btchatroom;
+package com.alexkang.bluechat;
+
+import android.graphics.Bitmap;
 
-import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.util.Date;
 
@@ -11,15 +12,24 @@ public class MessageBox {
 
     private String sender;
     private String message;
+    private Bitmap image;
     private Date time;
 
     private boolean self;
+    private boolean isImage;
 
     public MessageBox(String sender, String message, Date time, boolean self) {
         this.sender = sender;
         this.message = message;
         this.time = time;
         this.self = self;
+        this.isImage = false;
+    }
+
+    public MessageBox(String sender, Bitmap image, Date time, boolean self) {
+        this(sender, "", time, self);
+        this.image = image;
+        this.isImage = true;
     }
 
     public String getSender() {
@@ -30,6 +40,10 @@ public class MessageBox {
         return message;
     }
 
+    public Bitmap getImage() {
+        return image;
+    }
+
     public String getTime() {
         SimpleDateFormat dateFormatter = new SimpleDateFormat("hh:mm");
         return dateFormatter.format(time);
@@ -39,4 +53,8 @@ public class MessageBox {
         return self;
     }
 
+    public boolean isImage() {
+        return isImage;
+    }
+
 }
diff --git a/app/src/main/java/com/alexkang/btchatroom/MessageFeedAdapter.java b/app/src/main/java/com/alexkang/bluechat/MessageFeedAdapter.java
similarity index 67%
rename from app/src/main/java/com/alexkang/btchatroom/MessageFeedAdapter.java
rename to app/src/main/java/com/alexkang/bluechat/MessageFeedAdapter.java
index d25e1d7..500ffe3 100644
--- a/app/src/main/java/com/alexkang/btchatroom/MessageFeedAdapter.java
+++ b/app/src/main/java/com/alexkang/bluechat/MessageFeedAdapter.java
@@ -1,11 +1,13 @@
-package com.alexkang.btchatroom;
+package com.alexkang.bluechat;
 
 import android.content.Context;
 import android.view.Gravity;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.AbsListView;
 import android.widget.ArrayAdapter;
+import android.widget.ImageView;
 import android.widget.TextView;
 
 import java.util.ArrayList;
@@ -33,6 +35,7 @@ public class MessageFeedAdapter extends ArrayAdapter<MessageBox> {
         TextView senderView = (TextView) convertView.findViewById(R.id.name);
         TextView messageView = (TextView) convertView.findViewById(R.id.message);
         TextView timeView = (TextView) convertView.findViewById(R.id.time);
+        ImageView imageView = (ImageView) convertView.findViewById(R.id.image);
 
         if (message.isSelf()) {
             senderView.setGravity(Gravity.RIGHT);
@@ -42,8 +45,20 @@ public class MessageFeedAdapter extends ArrayAdapter<MessageBox> {
             messageView.setGravity(Gravity.LEFT);
         }
 
+        if (!message.isImage()) {
+            messageView.setText(message.getMessage());
+            imageView.setImageDrawable(null);
+        } else {
+            AbsListView.LayoutParams imageParams =
+                    new AbsListView.LayoutParams(
+                            AbsListView.LayoutParams.MATCH_PARENT,
+                            AbsListView.LayoutParams.WRAP_CONTENT
+                    );
+            convertView.setLayoutParams(imageParams);
+            imageView.setImageBitmap(message.getImage());
+        }
+
         senderView.setText(message.getSender());
-        messageView.setText(message.getMessage());
         timeView.setText(message.getTime());
 
         return convertView;
