diff --git a/app/src/main/java/com/kunzisoft/keyboard/switcher/KeyboardNotificationService.java b/app/src/main/java/com/kunzisoft/keyboard/switcher/KeyboardNotificationService.java
deleted file mode 100644
index ee7b5aa..0000000
--- a/app/src/main/java/com/kunzisoft/keyboard/switcher/KeyboardNotificationService.java
+++ /dev/null
@@ -1,76 +0,0 @@
-package com.kunzisoft.keyboard.switcher;
-
-import android.app.NotificationChannel;
-import android.app.NotificationManager;
-import android.app.Service;
-import android.content.Intent;
-import android.os.Build;
-import android.os.IBinder;
-import android.util.Log;
-
-import com.kunzisoft.keyboard.switcher.utils.Utilities;
-
-import androidx.core.app.NotificationCompat;
-import androidx.core.content.ContextCompat;
-
-import static android.content.ContentValues.TAG;
-
-public class KeyboardNotificationService extends Service {
-
-    private static final String CHANNEL_ID_KEYBOARD = "com.kunzisoft.keyboard.notification.channel";
-    private static final String CHANNEL_NAME_KEYBOARD = "Keyboard switcher notification";
-
-    private NotificationManager notificationManager;
-    private int notificationId = 1;
-
-    public KeyboardNotificationService() {}
-
-    @Override
-    public IBinder onBind(Intent intent) {
-        return null;
-    }
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
-
-        // Create notification channel for Oreo+
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-            NotificationChannel channel = new NotificationChannel(CHANNEL_ID_KEYBOARD,
-                    CHANNEL_NAME_KEYBOARD,
-                    NotificationManager.IMPORTANCE_LOW);
-            notificationManager.createNotificationChannel(channel);
-        }
-    }
-
-    @Override
-    public int onStartCommand(Intent intent, int flags, int startId) {
-        if (intent == null) {
-            Log.w(TAG, "null intent");
-
-        } else {
-            NotificationCompat.Builder builder = new NotificationCompat.Builder(this, CHANNEL_ID_KEYBOARD)
-                    .setSmallIcon(R.drawable.ic_notification_white_24dp)
-                    .setColor(ContextCompat.getColor(this, R.color.colorPrimary))
-                    .setContentTitle(getString(R.string.notification_title))
-                    .setAutoCancel(false)
-                    .setOngoing(true)
-                    .setPriority(NotificationCompat.PRIORITY_LOW)
-                    .setVisibility(NotificationCompat.VISIBILITY_SECRET)
-                    .setContentText(getString(R.string.notification_content_text))
-                    .setContentIntent(Utilities.getPendingIntent(this));
-
-            notificationManager.cancel(notificationId);
-            notificationManager.notify(notificationId, builder.build());
-
-        }
-        return START_NOT_STICKY;
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        notificationManager.cancel(notificationId);
-    }
-}
diff --git a/app/src/main/java/com/kunzisoft/keyboard/switcher/NotificationBuilder.java b/app/src/main/java/com/kunzisoft/keyboard/switcher/NotificationBuilder.java
new file mode 100644
index 0000000..626a364
--- /dev/null
+++ b/app/src/main/java/com/kunzisoft/keyboard/switcher/NotificationBuilder.java
@@ -0,0 +1,52 @@
+package com.kunzisoft.keyboard.switcher;
+
+import android.app.NotificationChannel;
+import android.app.NotificationManager;
+import android.content.Context;
+import android.os.Build;
+
+import com.kunzisoft.keyboard.switcher.utils.Utilities;
+
+import androidx.core.app.NotificationCompat;
+import androidx.core.content.ContextCompat;
+
+public class NotificationBuilder {
+
+	private static final String CHANNEL_ID_KEYBOARD = "com.kunzisoft.keyboard.notification.channel";
+	private static final String CHANNEL_NAME_KEYBOARD = "Keyboard switcher notification";
+
+	private NotificationManager mNotificationManager;
+	private int notificationId = 45;
+
+	public NotificationBuilder(NotificationManager notificationManager) {
+		this.mNotificationManager = notificationManager;
+
+		// Create notification channel for Oreo+
+		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+			NotificationChannel channel = new NotificationChannel(CHANNEL_ID_KEYBOARD,
+					CHANNEL_NAME_KEYBOARD,
+					NotificationManager.IMPORTANCE_LOW);
+			notificationManager.createNotificationChannel(channel);
+		}
+	}
+
+	public void createKeyboardNotification(Context context) {
+		NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID_KEYBOARD)
+				.setSmallIcon(R.drawable.ic_notification_white_24dp)
+				.setColor(ContextCompat.getColor(context, R.color.colorPrimary))
+				.setContentTitle(context.getString(R.string.notification_title))
+				.setAutoCancel(false)
+				.setOngoing(true)
+				.setPriority(NotificationCompat.PRIORITY_LOW)
+				.setVisibility(NotificationCompat.VISIBILITY_SECRET)
+				.setContentText(context.getString(R.string.notification_content_text))
+				.setContentIntent(Utilities.getPendingIntent(context));
+
+		mNotificationManager.cancel(notificationId);
+		mNotificationManager.notify(notificationId, builder.build());
+	}
+
+	public void cancelKeyboardNotification() {
+		mNotificationManager.cancel(notificationId);
+	}
+}
diff --git a/app/src/main/java/com/kunzisoft/keyboard/switcher/boot/BootUpActivity.java b/app/src/main/java/com/kunzisoft/keyboard/switcher/boot/BootUpActivity.java
index ee3af5f..128c653 100644
--- a/app/src/main/java/com/kunzisoft/keyboard/switcher/boot/BootUpActivity.java
+++ b/app/src/main/java/com/kunzisoft/keyboard/switcher/boot/BootUpActivity.java
@@ -1,5 +1,6 @@
 package com.kunzisoft.keyboard.switcher.boot;
 
+import android.app.NotificationManager;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Build;
@@ -7,7 +8,7 @@ import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.provider.Settings;
 
-import com.kunzisoft.keyboard.switcher.KeyboardNotificationService;
+import com.kunzisoft.keyboard.switcher.NotificationBuilder;
 import com.kunzisoft.keyboard.switcher.OverlayShowingService;
 import com.kunzisoft.keyboard.switcher.R;
 
@@ -18,10 +19,6 @@ import androidx.appcompat.app.AppCompatActivity;
  */
 public class BootUpActivity extends AppCompatActivity{
 
-	private void startNotificationService() {
-		startService(new Intent(this, KeyboardNotificationService.class));
-	}
-
     private void startFloatingButtonService() {
 		startService(new Intent(this, OverlayShowingService.class));
 	}
@@ -33,7 +30,9 @@ public class BootUpActivity extends AppCompatActivity{
         SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
 
         if (preferences.getBoolean(getString(R.string.settings_notification_key), false)) {
-			startNotificationService();
+			NotificationBuilder notificationBuilder =
+					new NotificationBuilder((NotificationManager) getSystemService(NOTIFICATION_SERVICE));
+			notificationBuilder.createKeyboardNotification(this);
         }
 
         if (preferences.getBoolean(getString(R.string.settings_floating_button_key), false)) {
diff --git a/app/src/main/java/com/kunzisoft/keyboard/switcher/settings/PreferenceActivity.java b/app/src/main/java/com/kunzisoft/keyboard/switcher/settings/PreferenceActivity.java
index 7ae0be8..9f24822 100644
--- a/app/src/main/java/com/kunzisoft/keyboard/switcher/settings/PreferenceActivity.java
+++ b/app/src/main/java/com/kunzisoft/keyboard/switcher/settings/PreferenceActivity.java
@@ -76,12 +76,12 @@ public class PreferenceActivity extends AppCompatActivity implements WarningFloa
     @Override
     public void onFloatingButtonDialogPositiveButtonClick() {
         if (preferenceFragment != null)
-        	preferenceFragment.startFloatingButtonServiceAndCheckButton();
+        	preferenceFragment.startFloatingButtonAndCheckButton();
     }
 
     @Override
     public void onFloatingButtonDialogNegativeButtonClick() {
 		if (preferenceFragment != null)
-        	preferenceFragment.stopFloatingButtonServiceAndUncheckedButton();
+        	preferenceFragment.stopFloatingButtonAndUncheckedButton();
     }
 }
diff --git a/app/src/main/java/com/kunzisoft/keyboard/switcher/settings/PreferenceFragment.java b/app/src/main/java/com/kunzisoft/keyboard/switcher/settings/PreferenceFragment.java
index 09f363f..f5f255c 100644
--- a/app/src/main/java/com/kunzisoft/keyboard/switcher/settings/PreferenceFragment.java
+++ b/app/src/main/java/com/kunzisoft/keyboard/switcher/settings/PreferenceFragment.java
@@ -1,5 +1,6 @@
 package com.kunzisoft.keyboard.switcher.settings;
 
+import android.app.NotificationManager;
 import android.content.ActivityNotFoundException;
 import android.content.DialogInterface;
 import android.content.Intent;
@@ -9,7 +10,7 @@ import android.os.Bundle;
 import android.provider.Settings;
 
 import com.kunzisoft.androidclearchroma.ChromaPreferenceFragmentCompat;
-import com.kunzisoft.keyboard.switcher.KeyboardNotificationService;
+import com.kunzisoft.keyboard.switcher.NotificationBuilder;
 import com.kunzisoft.keyboard.switcher.OverlayShowingService;
 import com.kunzisoft.keyboard.switcher.R;
 import com.kunzisoft.keyboard.switcher.dialogs.WarningFloatingButtonDialog;
@@ -21,6 +22,8 @@ import androidx.appcompat.app.AlertDialog;
 import androidx.preference.Preference;
 import androidx.preference.SwitchPreference;
 
+import static android.content.Context.NOTIFICATION_SERVICE;
+
 public class PreferenceFragment extends ChromaPreferenceFragmentCompat
         implements Preference.OnPreferenceClickListener,
         Preference.OnPreferenceChangeListener {
@@ -33,6 +36,8 @@ public class PreferenceFragment extends ChromaPreferenceFragmentCompat
     private SwitchPreference preferenceNotification;
     private SwitchPreference preferenceFloatingButton;
 
+    private NotificationBuilder mNotificationBuilder;
+
 	@Override
 	public void onResume() {
 		super.onResume();
@@ -58,6 +63,10 @@ public class PreferenceFragment extends ChromaPreferenceFragmentCompat
 
         preferenceNotification = (SwitchPreference) findPreference(getString(R.string.settings_notification_key));
         preferenceNotification.setOnPreferenceChangeListener(this);
+        if (getContext() != null) {
+			mNotificationBuilder =
+					new NotificationBuilder((NotificationManager) getContext().getSystemService(NOTIFICATION_SERVICE));
+		}
 
         preferenceFloatingButton = (SwitchPreference) findPreference(getString(R.string.settings_floating_button_key));
         preferenceFloatingButton.setOnPreferenceChangeListener(this);
@@ -88,7 +97,7 @@ public class PreferenceFragment extends ChromaPreferenceFragmentCompat
      */
     public void onPositiveButtonClick(@ColorInt int color) {
         super.onPositiveButtonClick(color);
-        restartFloatingButtonServiceAndCheckedButton();
+        restartFloatingButtonAndCheckedButton();
     }
 
     @Override
@@ -100,9 +109,9 @@ public class PreferenceFragment extends ChromaPreferenceFragmentCompat
             switchPreference.setChecked(notificationEnabled);
 
             if (notificationEnabled) {
-                startNotificationServiceAndCheckButton();
+                startNotificationAndCheckButton();
             } else {
-                stopNotificationServiceAndUncheckButton();
+                stopNotificationAndUncheckButton();
             }
         }
 
@@ -117,23 +126,23 @@ public class PreferenceFragment extends ChromaPreferenceFragmentCompat
 					if (getFragmentManager() != null)
 						dialogFragment.show(getFragmentManager(), "warning_floating_button_dialog");
 				} else {
-					startFloatingButtonServiceAndCheckButton();
+					startFloatingButtonAndCheckButton();
 				}
 			} else {
-				stopFloatingButtonServiceAndUncheckedButton();
+				stopFloatingButtonAndUncheckedButton();
 			}
 		}
 
         if (preference.getKey().equals(getString(R.string.settings_floating_button_position_key))) {
             SwitchPreference switchPreference = (SwitchPreference) preference;
             switchPreference.setChecked((Boolean) newValue);
-            restartFloatingButtonServiceAndCheckedButton();
+            restartFloatingButtonAndCheckedButton();
         }
 
         if (preference.getKey().equals(getString(R.string.settings_floating_button_lock_key))) {
             SwitchPreference switchPreference = (SwitchPreference) preference;
             switchPreference.setChecked((Boolean) newValue);
-            restartFloatingButtonServiceAndCheckedButton();
+            restartFloatingButtonAndCheckedButton();
         }
 
         return false;
@@ -175,7 +184,7 @@ public class PreferenceFragment extends ChromaPreferenceFragmentCompat
             /* if so check once again if we have permission */
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                 if (Settings.canDrawOverlays(getActivity())) {
-                    startFloatingButtonServiceAndCheckButton();
+                    startFloatingButtonAndCheckButton();
                 }
             }
         }
@@ -185,18 +194,18 @@ public class PreferenceFragment extends ChromaPreferenceFragmentCompat
     ------ Notification Service ------
      */
 
-	private void startNotificationServiceAndCheckButton() {
-        if (getActivity() != null) {
-        	getActivity().startService(new Intent(getActivity(), KeyboardNotificationService.class));
-        }
+	private void startNotificationAndCheckButton() {
+		if(mNotificationBuilder != null) {
+			mNotificationBuilder.createKeyboardNotification(getContext());
+		}
         if (preferenceNotification != null)
             preferenceNotification.setChecked(true);
     }
 
-	private void stopNotificationServiceAndUncheckButton() {
-        if (getActivity() != null) {
-            getActivity().stopService(new Intent(getActivity(), KeyboardNotificationService.class));
-        }
+	private void stopNotificationAndUncheckButton() {
+		if(mNotificationBuilder != null) {
+			mNotificationBuilder.cancelKeyboardNotification();
+		}
         if (preferenceNotification != null)
             preferenceNotification.setChecked(false);
     }
@@ -211,7 +220,7 @@ public class PreferenceFragment extends ChromaPreferenceFragmentCompat
 		}
 	}
 
-    void startFloatingButtonServiceAndCheckButton() {
+    void startFloatingButtonAndCheckButton() {
 		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
 			if (drawOverlayPermissionAllowed()) {
 				startFloatingButtonService();
@@ -226,7 +235,7 @@ public class PreferenceFragment extends ChromaPreferenceFragmentCompat
             preferenceFloatingButton.setChecked(true);
     }
 
-    void stopFloatingButtonServiceAndUncheckedButton() {
+    void stopFloatingButtonAndUncheckedButton() {
         if (getActivity() != null) {
             getActivity().stopService(new Intent(getActivity(), OverlayShowingService.class));
         }
@@ -234,11 +243,11 @@ public class PreferenceFragment extends ChromaPreferenceFragmentCompat
             preferenceFloatingButton.setChecked(false);
     }
 
-    private void restartFloatingButtonServiceAndCheckedButton() {
+    private void restartFloatingButtonAndCheckedButton() {
         // Restart service
         if (getActivity() != null) {
             getActivity().stopService(new Intent(getActivity(), OverlayShowingService.class));
         }
-		startFloatingButtonServiceAndCheckButton();
+		startFloatingButtonAndCheckButton();
     }
 }
\ No newline at end of file
