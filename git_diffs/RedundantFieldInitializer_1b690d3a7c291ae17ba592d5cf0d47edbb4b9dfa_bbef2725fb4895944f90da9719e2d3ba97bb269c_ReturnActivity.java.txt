diff --git a/app/src/main/java/com/example/hochi/nextcompanion/LoginActivity.java b/app/src/main/java/com/example/hochi/nextcompanion/LoginActivity.java
index 0223138..08af359 100644
--- a/app/src/main/java/com/example/hochi/nextcompanion/LoginActivity.java
+++ b/app/src/main/java/com/example/hochi/nextcompanion/LoginActivity.java
@@ -10,7 +10,6 @@ import android.support.v7.app.AppCompatActivity;
 import android.os.Build;
 import android.os.Bundle;
 import android.text.TextUtils;
-import android.util.Log;
 import android.view.KeyEvent;
 import android.view.View;
 import android.view.View.OnClickListener;
@@ -161,12 +160,12 @@ public class LoginActivity extends AppCompatActivity implements AsyncTaskCallbac
 
     @Override
     public void onTaskComplete(String response) {
+        //Callback called when RequestHandler finished request
         if (!response.isEmpty()) {
             try {
                 JSONObject jObject = new JSONObject(response);
                 JSONObject userObject = jObject.getJSONObject("user");
                 String loginkey = userObject.getString("loginkey");
-                Log.d("DEBUG", loginkey);
                 SharedPreferences sharedPref = getSharedPreferences("persistence", MODE_PRIVATE);
                 SharedPreferences.Editor editor = sharedPref.edit();
                 editor.putString("loginKey", loginkey);
diff --git a/app/src/main/java/com/example/hochi/nextcompanion/MainActivity.java b/app/src/main/java/com/example/hochi/nextcompanion/MainActivity.java
index e490aec..ea805ab 100644
--- a/app/src/main/java/com/example/hochi/nextcompanion/MainActivity.java
+++ b/app/src/main/java/com/example/hochi/nextcompanion/MainActivity.java
@@ -5,10 +5,8 @@ import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.support.design.widget.FloatingActionButton;
-import android.support.design.widget.Snackbar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
-import android.util.Log;
 import android.view.View;
 import android.view.Menu;
 import android.view.MenuItem;
@@ -21,7 +19,6 @@ import org.json.JSONException;
 import org.json.JSONObject;
 
 import java.util.ArrayList;
-import java.util.Arrays;
 
 public class MainActivity extends AppCompatActivity implements AsyncTaskCallbacks<String> {
     private RequestHandler getBikesTask = null;
@@ -53,6 +50,7 @@ public class MainActivity extends AppCompatActivity implements AsyncTaskCallback
         SharedPreferences sharedPref = getSharedPreferences("persistence", MODE_PRIVATE);
         String defaultValue = "nokey";
         String loginKey = sharedPref.getString("loginKey", defaultValue);
+        //if not, go to LoginActivity
         if (loginKey.equals("nokey")) {
             Intent intent = new Intent(this, LoginActivity.class);
             startActivity(intent);
@@ -102,14 +100,13 @@ public class MainActivity extends AppCompatActivity implements AsyncTaskCallback
 
     @Override
     public void onTaskComplete(String response) {
+        //Callback called when RequestHandler finished request
         final Context context = this;
-
         if (!response.isEmpty()) {
             final ArrayList<String> list = new ArrayList<>();
             try {
                 JSONObject jObject = new JSONObject(response);
                 JSONArray bikesArray = jObject.getJSONArray("rentalCollection");
-
                 for (int i = 0; i < bikesArray.length(); i++) {
                     String entry;
                     JSONObject bike = bikesArray.getJSONObject(i);
@@ -117,10 +114,11 @@ public class MainActivity extends AppCompatActivity implements AsyncTaskCallback
                             + " with lock code " + bike.getString("code");
                     list.add(entry);
                 }
-                Log.d("DEBUG", list.toString());
             } catch (Exception e) {
                 e.printStackTrace();
             }
+
+            //Create and fill list
             final ListView listview = findViewById(R.id.listview);
             final ArrayAdapter<String> adapter = new ArrayAdapter<>(this,
                     android.R.layout.simple_list_item_1, list);
@@ -129,7 +127,7 @@ public class MainActivity extends AppCompatActivity implements AsyncTaskCallback
             try {
                 final JSONObject jObject = new JSONObject(response);
                 final JSONArray bikesArray = jObject.getJSONArray("rentalCollection");
-            listview.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+                listview.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                 @Override
                 public void onItemClick(AdapterView<?> parent, final View view, int position, long id) {
                     Intent intent = new Intent(context, ReturnActivity.class);
diff --git a/app/src/main/java/com/example/hochi/nextcompanion/RentActivity.java b/app/src/main/java/com/example/hochi/nextcompanion/RentActivity.java
index 4bd86a8..79c7fb4 100644
--- a/app/src/main/java/com/example/hochi/nextcompanion/RentActivity.java
+++ b/app/src/main/java/com/example/hochi/nextcompanion/RentActivity.java
@@ -24,6 +24,7 @@ public class RentActivity extends AppCompatActivity implements AsyncTaskCallback
     }
 
     void rentRequest() {
+        //Prepare request to rent bike
         TextView mBikeInput;
         mBikeInput = findViewById(R.id.bike_id);
         String bikeID = mBikeInput.getText().toString();
@@ -45,6 +46,7 @@ public class RentActivity extends AppCompatActivity implements AsyncTaskCallback
 
     @Override
     public void onTaskComplete(String response) {
+        //get back to main activity
         //TODO: *any* response handling
         finish();
     }
diff --git a/app/src/main/java/com/example/hochi/nextcompanion/RequestHandler.java b/app/src/main/java/com/example/hochi/nextcompanion/RequestHandler.java
index c3a5fc0..2476e63 100644
--- a/app/src/main/java/com/example/hochi/nextcompanion/RequestHandler.java
+++ b/app/src/main/java/com/example/hochi/nextcompanion/RequestHandler.java
@@ -1,9 +1,6 @@
 package com.example.hochi.nextcompanion;
 
-import android.content.Context;
-import android.content.res.Resources;
 import android.os.AsyncTask;
-import android.util.Log;
 
 import java.io.BufferedReader;
 import java.io.DataOutputStream;
@@ -20,7 +17,8 @@ public class RequestHandler extends AsyncTask<Void, Void, String> {
     private AsyncTaskCallbacks<String> callback;
     private String[] mCredentials;
 
-    RequestHandler(AsyncTaskCallbacks<String> act, String HTTPmethod, String endpoint, String[] credentials) {
+    RequestHandler(AsyncTaskCallbacks<String> act, String HTTPmethod,
+                   String endpoint, String[] credentials) {
         mHTTPmethod = HTTPmethod;
         mEndpoint = endpoint;
         mCredentials = credentials;
@@ -33,12 +31,14 @@ public class RequestHandler extends AsyncTask<Void, Void, String> {
         StringBuilder urlParameters = new StringBuilder();
         int i=0;
         while (i<mCredentials.length) {
-            urlParameters.append("&").append(mCredentials[i]).append(URLEncoder.encode(mCredentials[i+1]));
+            urlParameters.append("&").append(mCredentials[i])
+                    .append(URLEncoder.encode(mCredentials[i+1]));
             i=i+2;
         }
 
         HttpURLConnection connection = null;
         try {
+
             //Create connection
             URL url = new URL("https://api.nextbike.net/" + mEndpoint);
             connection = (HttpURLConnection) url.openConnection();
@@ -55,6 +55,7 @@ public class RequestHandler extends AsyncTask<Void, Void, String> {
                 connection.setDoInput(true);
                 connection.setDoOutput(true);
             }
+
             //Send request
             DataOutputStream wr = new DataOutputStream (
                     connection.getOutputStream ());
@@ -71,30 +72,27 @@ public class RequestHandler extends AsyncTask<Void, Void, String> {
                 response.append('\r');
             }
             rd.close();
-
         } catch (Exception e) {
 
             e.printStackTrace();
 
         } finally {
-
             if(connection != null) {
                 connection.disconnect();
             }
         }
+
         return response.toString();
     }
 
     @Override
     protected void onPostExecute(final String response) {
-        //mAuthTask = null;
-        //showProgress(false);
+        //TODO: reimplement progress or remove support for it
         callback.onTaskComplete(response);
     }
 
     @Override
     protected void onCancelled() {
-        //mAuthTask = null;
-        //showProgress(false);
+        //TODO: proper handling if needed
     }
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/example/hochi/nextcompanion/ReturnActivity.java b/app/src/main/java/com/example/hochi/nextcompanion/ReturnActivity.java
index 58cf5de..c542f02 100644
--- a/app/src/main/java/com/example/hochi/nextcompanion/ReturnActivity.java
+++ b/app/src/main/java/com/example/hochi/nextcompanion/ReturnActivity.java
@@ -4,15 +4,11 @@ import android.content.Intent;
 import android.content.SharedPreferences;
 import android.support.v7.app.AppCompatActivity;
 import android.os.Bundle;
-import android.util.Log;
 import android.view.View;
 import android.widget.Button;
 import android.widget.TextView;
 
-import java.util.Arrays;
-
 public class ReturnActivity extends AppCompatActivity implements AsyncTaskCallbacks<String> {
-    private RequestHandler returnRequestTask = null;
     private String[] bikeArray;
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -48,14 +44,15 @@ public class ReturnActivity extends AppCompatActivity implements AsyncTaskCallba
                 "station=", stationID,
                 "comment=", "return bike"
         };
-        returnRequestTask = new RequestHandler(this, "POST",
+        RequestHandler returnRequestTask = new RequestHandler(this, "POST",
                 "api/return.json", params);
         returnRequestTask.execute((Void) null);
     }
 
     @Override
     public void onTaskComplete(String response) {
-        Log.d("DEBUG", response);
+        //get back to main activity
+        //TODO: *any* response handling
         finish();
     }
 }
