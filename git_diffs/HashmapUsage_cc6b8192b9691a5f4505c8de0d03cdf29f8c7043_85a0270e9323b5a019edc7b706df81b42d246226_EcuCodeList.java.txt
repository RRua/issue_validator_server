diff --git a/src/com/fr3ts0n/ecu/BitmapConversion.java b/src/com/fr3ts0n/ecu/BitmapConversion.java
index b31a272..887a613 100644
--- a/src/com/fr3ts0n/ecu/BitmapConversion.java
+++ b/src/com/fr3ts0n/ecu/BitmapConversion.java
@@ -18,7 +18,7 @@
 
 package com.fr3ts0n.ecu;
 
-import com.fr3ts0n.ecu.prot.obd.res.Messages;
+import com.fr3ts0n.ecu.prot.obd.Messages;
 
 import java.util.Map;
 import java.util.TreeMap;
diff --git a/src/com/fr3ts0n/ecu/EcuCodeList.java b/src/com/fr3ts0n/ecu/EcuCodeList.java
index f097ac5..7ea39a5 100644
--- a/src/com/fr3ts0n/ecu/EcuCodeList.java
+++ b/src/com/fr3ts0n/ecu/EcuCodeList.java
@@ -18,156 +18,113 @@
 
 package com.fr3ts0n.ecu;
 
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.util.HashMap;
+import com.fr3ts0n.ecu.prot.obd.Messages;
+
+import java.util.HashSet;
+import java.util.MissingResourceException;
+import java.util.ResourceBundle;
+import java.util.Set;
 
 /**
  * Vehicle fault code list
  *
  * @author erwin
  */
-public class EcuCodeList extends HashMap<Integer, EcuCodeItem>
+public class EcuCodeList
 	implements Conversion
 {
 	private static final long serialVersionUID = 219865459629423028L;
+	protected transient ResourceBundle codes;
+	protected transient int radix = 10;
 
 	/**
 	 * construct a new code list
 	 */
 	public EcuCodeList()
 	{
+		this("com.fr3ts0n.ecu.prot.obd.res.codes");
 	}
 
 	/**
 	 * Construct a new code list and initialize it with ressources files
 	 *
-	 * @param ressources Array of ressources file names
+	 * @param resourceBundleName name of used resource bundle
 	 */
-	public EcuCodeList(String[] ressources)
+	public EcuCodeList(String resourceBundleName)
 	{
-		// init from ressources list
-		for (String ressource : ressources)
-		{
-			loadFromResource(ressource);
-		}
+		codes = ResourceBundle.getBundle(resourceBundleName);
 	}
 
 	/**
 	 * Construct a new code list and initialize it with ressources files
 	 *
-	 * @param ressources Array of ressources file names
+	 * @param resourceBundleName name of used resource bundle
 	 * @param idRadix    radix of numeric code id
 	 */
-	public EcuCodeList(String[] ressources, int idRadix)
+	public EcuCodeList(String resourceBundleName, int idRadix)
 	{
-		// init from ressources list
-		for (String ressource : ressources)
-		{
-			loadFromResource(ressource, idRadix);
-		}
+		this(resourceBundleName);
+		radix = idRadix;
 	}
 
-	public String getUnits()
+	protected String getCode(Number value)
 	{
-		return "";
+		return(Long.toString(value.longValue(),radix));
 	}
 
-	/**
-	 * initialize list from resource file (tab delimited)
-	 *
-	 * @param resource name of resource to be loaded
-	 */
-	protected void loadFromResource(String resource)
+	public EcuCodeItem get(Number value)
 	{
-		try
-		{
-			loadFromStream(getClass().getResource(resource).openStream());
-		}
-		catch (IOException e)
+		EcuCodeItem result = null;
+		if (codes != null)
 		{
-			e.printStackTrace();
+			String key = getCode(value);
+			try
+			{
+				result = new EcuCodeItem(key, codes.getString(key));
+			} catch (MissingResourceException e)
+			{
+				result = new EcuCodeItem(key,
+				                         Messages.getString(
+					                         "customer.specific.trouble.code.see.manual"));
+			}
 		}
+		return result;
 	}
 
 	/**
-	 * initialize list from resource file (tab delimited)
-	 *
-	 * @param resource name of resource to be loaded
-	 * @param idRadix   radix of numeric code id
+	 * return all known values
+	 * @return all known ressource values
 	 */
-	protected void loadFromResource(String resource, int idRadix)
+	public Set<String> values()
 	{
-		try
+		Set<String> values = new HashSet<String>();
+		for( String key : codes.keySet())
 		{
-			loadFromStream(getClass().getResource(resource).openStream(), idRadix);
+			values.add(codes.getString(key));
 		}
-		catch (IOException e)
-		{
-			e.printStackTrace();
-		}
-	}
-
-	/**
-	 * initialize list from stream (tab delimited)
-	 *
-	 * @param inStr Input stream to be loaded
-	 */
-	public void loadFromStream(InputStream inStr)
-	{
-		loadFromStream(inStr, 10);
+		return values;
 	}
 
-	/**
-	 * initialize list from stream (tab delimited)
-	 *
-	 * @param inStr Input stream to be loaded
-	 * @param idRadix   radix of numeric code id
-	 */
-	protected void loadFromStream(InputStream inStr, int idRadix)
+	@Override
+	public String getUnits()
 	{
-		BufferedReader rdr;
-		String currLine;
-		String[] params;
-
-		try
-		{
-			rdr = new BufferedReader(new InputStreamReader(inStr));
-			// loop through all lines of the file ...
-			while ((currLine = rdr.readLine()) != null)
-			{
-				// if line is not empty and is not a remark
-				if (currLine.trim().length() > 0 && !currLine.startsWith("#") && !currLine.startsWith("//"))
-				{
-					// repalce all optional quotes from CSV code list
-					currLine = currLine.replaceAll("\"", "");
-					// split CSV line into parameters
-					params = currLine.split("\t");
-					// insert fault code element
-					put(Integer.valueOf(params[0], idRadix), new EcuCodeItem(params[0], params[1]));
-				}
-			}
-			rdr.close();
-		} catch (IOException e)
-		{
-			e.printStackTrace();
-		}
+		return "";
 	}
 
-
+	@Override
 	public Number memToPhys(long value)
 	{
 		return (float) value;
 	}
 
+	@Override
 	public String memToString(Number value, int numDecimals)
 	{
 		String fmt = "%." + numDecimals + "f";
 		return physToPhysFmtString(memToPhys(value.longValue()), fmt);
 	}
 
+	@Override
 	public Number physToMem(Number value)
 	{
 		return value;
@@ -176,18 +133,6 @@ public class EcuCodeList extends HashMap<Integer, EcuCodeItem>
 	@Override
 	public String physToPhysFmtString(Number value, String format)
 	{
-		String result;
-		EcuCodeItem code = get(value.intValue());
-		if (code != null)
-		{
-			result = code.get(EcuCodeItem.FID_CODE).toString()
-				+ " - "
-				+ code.get(EcuCodeItem.FID_DESCRIPT).toString();
-		} else
-		{
-			result = value.toString() + " - Fault code unknown";
-		}
-		return (result);
+		return (get(value).toString());
 	}
-
 }
diff --git a/src/com/fr3ts0n/ecu/EcuConversions.java b/src/com/fr3ts0n/ecu/EcuConversions.java
index edb50a0..cb51f91 100644
--- a/src/com/fr3ts0n/ecu/EcuConversions.java
+++ b/src/com/fr3ts0n/ecu/EcuConversions.java
@@ -136,14 +136,14 @@ public class EcuConversions extends HashMap<String, Conversion[]>
 				}
 				else if (params[FLD_TYPE].equals(CNV_TYPE_CODELIST))
 				{
-					// create BitmapConversion based on CSV parameters
-					codeList = new EcuCodeList( String.valueOf(params[FLD_PARAMETERS]).split(";") );
+					// create ECU code list based on ResourceBundle
+					codeList = new EcuCodeList( String.valueOf(params[FLD_PARAMETERS]));
 					newCnv = codeList;
 				}
 				else if (params[FLD_TYPE].equals(CNV_TYPE_PCODELIST))
 				{
-					// create BitmapConversion based on CSV parameters
-					codeList = new ObdCodeList( String.valueOf(params[FLD_PARAMETERS]).split(";") );
+					// create OBD code list based on ResourceBundle
+					codeList = new ObdCodeList( String.valueOf(params[FLD_PARAMETERS]));
 					newCnv = codeList;
 				}
 				else if (params[FLD_TYPE].equals(CNV_TYPE_VAG))
diff --git a/src/com/fr3ts0n/ecu/EcuDataItems.java b/src/com/fr3ts0n/ecu/EcuDataItems.java
index 00b6c25..5059511 100644
--- a/src/com/fr3ts0n/ecu/EcuDataItems.java
+++ b/src/com/fr3ts0n/ecu/EcuDataItems.java
@@ -18,7 +18,7 @@
 
 package com.fr3ts0n.ecu;
 
-import com.fr3ts0n.ecu.prot.obd.res.Messages;
+import com.fr3ts0n.ecu.prot.obd.Messages;
 
 import org.apache.log4j.Logger;
 
diff --git a/src/com/fr3ts0n/ecu/HashConversion.java b/src/com/fr3ts0n/ecu/HashConversion.java
index 0789bf3..a5a641e 100755
--- a/src/com/fr3ts0n/ecu/HashConversion.java
+++ b/src/com/fr3ts0n/ecu/HashConversion.java
@@ -18,7 +18,7 @@
 
 package com.fr3ts0n.ecu;
 
-import com.fr3ts0n.ecu.prot.obd.res.Messages;
+import com.fr3ts0n.ecu.prot.obd.Messages;
 
 import java.util.HashMap;
 import java.util.Map;
diff --git a/src/com/fr3ts0n/ecu/ObdCodeList.java b/src/com/fr3ts0n/ecu/ObdCodeList.java
index a42ccde..fc452d4 100755
--- a/src/com/fr3ts0n/ecu/ObdCodeList.java
+++ b/src/com/fr3ts0n/ecu/ObdCodeList.java
@@ -18,12 +18,6 @@
 
 package com.fr3ts0n.ecu;
 
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-
-
 /**
  * List of all known OBD failure codes
  * This list is initialized by reading data files 'res/pcodes' and 'res/ucodes'
@@ -42,67 +36,22 @@ public class ObdCodeList
 	/** Creates a new instance of ObdCodeList */
 	public ObdCodeList()
 	{
-		// load code list from text files
-		loadFromResource("prot/obd/res/pcodes");
-		loadFromResource("prot/obd/res/ucodes");
+		super("com.fr3ts0n.ecu.prot.obd.res.codes");
 	}
 
 	/**
 	 * Construct a new code list and initialize it with ressources files
 	 *
-	 * @param ressources Array of ressources file names
-	 */
-	public ObdCodeList(String[] ressources)
-	{
-		// init from ressources list
-		for (String ressource : ressources)
-		{
-			loadFromResource(ressource);
-		}
-	}
-
-	/**
-	 * load code list from stream (tab delimited)
-	 *
-	 * @param inStr Input stream to be loaded
+	 * @param resourceBundleName name of used resource bundle
 	 */
-	@Override
-	public void loadFromStream(InputStream inStr)
+	public ObdCodeList(String resourceBundleName)
 	{
-		BufferedReader rdr;
-		String currLine;
-		String[] params;
-
-		try
-		{
-			rdr = new BufferedReader(new InputStreamReader(inStr));
-			// loop through all lines of the file ...
-			while ((currLine = rdr.readLine()) != null)
-			{
-				// replace all optional quotes from CSV code list
-				currLine = currLine.replaceAll("\"", "");
-				// split CSV line into parameters
-				params = currLine.split("\t");
-				// insert fault code element
-				put(ObdCodeItem.getNumericCode(params[0]), new ObdCodeItem(params[0], params[1]));
-			}
-			rdr.close();
-		} catch (IOException e)
-		{
-			e.printStackTrace();
-		}
+		super(resourceBundleName);
 	}
 
 	@Override
-	public String physToPhysFmtString(Number value, String format)
+	protected String getCode(Number value)
 	{
-		String result = "Fault code unknown";
-		EcuCodeItem code = get(value.intValue());
-		if (code != null)
-		{
-			result = code.get(ObdCodeItem.FID_DESCRIPT).toString();
-		}
-		result = ObdCodeItem.getPCode(value.intValue()) + " - " + result;
-		return (result);
+		return ObdCodeItem.getPCode(value.intValue());
 	}
 }
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/MainActivity.java b/src/com/fr3ts0n/ecu/gui/androbd/MainActivity.java
index ee734b4..b818abc 100644
--- a/src/com/fr3ts0n/ecu/gui/androbd/MainActivity.java
+++ b/src/com/fr3ts0n/ecu/gui/androbd/MainActivity.java
@@ -46,7 +46,6 @@ import android.widget.Spinner;
 import android.widget.Toast;
 
 import com.fr3ts0n.ecu.EcuCodeItem;
-import com.fr3ts0n.ecu.EcuConversions;
 import com.fr3ts0n.ecu.EcuDataItem;
 import com.fr3ts0n.ecu.EcuDataItems;
 import com.fr3ts0n.ecu.EcuDataPv;
@@ -882,24 +881,6 @@ public class MainActivity extends ListActivity
 	{
 		String errors = "";
 
-		// custom code list
-		try
-		{
-			String filePath = prefs.getString(SettingsActivity.extKeys[2], null);
-			if (filePath != null)
-			{
-				log.info("Load ext. codelist: " + filePath);
-				Uri uri = Uri.parse(filePath);
-				InputStream inStr = getContentResolver().openInputStream(uri);
-				EcuConversions.codeList.loadFromStream(inStr);
-			}
-		} catch (Exception e)
-		{
-			log.error("Load ext. codelist: ", e);
-			e.printStackTrace();
-			errors += e.getLocalizedMessage() + "\n";
-		}
-
 		// custom conversions
 		try
 		{
diff --git a/src/com/fr3ts0n/ecu/gui/application/VagTestFrame.java b/src/com/fr3ts0n/ecu/gui/application/VagTestFrame.java
index fcc1c53..3728faf 100644
--- a/src/com/fr3ts0n/ecu/gui/application/VagTestFrame.java
+++ b/src/com/fr3ts0n/ecu/gui/application/VagTestFrame.java
@@ -88,7 +88,7 @@ public class VagTestFrame extends javax.swing.JFrame
 	/** is this a simulation, or the real world? */
 	static boolean isSimulation = false;
 	/** ECU addresses */
-	static EcuCodeList AddressList = new EcuCodeList(new String[]{"/com/fr3ts0n/ecu/prot/vag/res/ecuadr"}, 16);
+	static EcuCodeList AddressList = new EcuCodeList("com.fr3ts0n.ecu.prot.vag.res.ecuadr", 16);
 	/**
 	 * Action listener to handle read/clear code actions
 	 */
diff --git a/src/com/fr3ts0n/ecu/prot/obd/res/Messages.java b/src/com/fr3ts0n/ecu/prot/obd/Messages.java
similarity index 68%
rename from src/com/fr3ts0n/ecu/prot/obd/res/Messages.java
rename to src/com/fr3ts0n/ecu/prot/obd/Messages.java
index 6979e82..0ac6cd7 100644
--- a/src/com/fr3ts0n/ecu/prot/obd/res/Messages.java
+++ b/src/com/fr3ts0n/ecu/prot/obd/Messages.java
@@ -1,4 +1,4 @@
-package com.fr3ts0n.ecu.prot.obd.res;
+package com.fr3ts0n.ecu.prot.obd;
 
 import java.util.MissingResourceException;
 import java.util.ResourceBundle;
@@ -6,13 +6,17 @@ import java.util.ResourceBundle;
 public class Messages
 {
 	private static final String BUNDLE_NAME = "com.fr3ts0n.ecu.prot.obd.res.messages"; //$NON-NLS-1$
-	
-	private static final ResourceBundle RESOURCE_BUNDLE = ResourceBundle.getBundle(BUNDLE_NAME);
+	private static ResourceBundle RESOURCE_BUNDLE = ResourceBundle.getBundle(BUNDLE_NAME);
 	
 	private Messages()
 	{
+		this(BUNDLE_NAME);
+	}
+
+	private Messages(String bundleName)
+	{
+		RESOURCE_BUNDLE = ResourceBundle.getBundle(bundleName);
 	}
-	
 
 	public static String getString(String key, String defaultString)
 	{
diff --git a/src/com/fr3ts0n/ecu/prot/obd/ObdProt.java b/src/com/fr3ts0n/ecu/prot/obd/ObdProt.java
index c6def52..4070264 100755
--- a/src/com/fr3ts0n/ecu/prot/obd/ObdProt.java
+++ b/src/com/fr3ts0n/ecu/prot/obd/ObdProt.java
@@ -20,13 +20,13 @@
 package com.fr3ts0n.ecu.prot.obd;
 
 import com.fr3ts0n.ecu.Conversion;
+import com.fr3ts0n.ecu.EcuCodeItem;
 import com.fr3ts0n.ecu.EcuCodeList;
 import com.fr3ts0n.ecu.EcuConversions;
 import com.fr3ts0n.ecu.EcuDataItem;
 import com.fr3ts0n.ecu.EcuDataItems;
 import com.fr3ts0n.ecu.EcuDataPv;
 import com.fr3ts0n.ecu.ObdCodeItem;
-import com.fr3ts0n.ecu.prot.obd.res.Messages;
 import com.fr3ts0n.prot.ProtoHeader;
 import com.fr3ts0n.prot.TelegramListener;
 import com.fr3ts0n.prot.TelegramWriter;
@@ -578,7 +578,7 @@ public class ObdProt extends ProtoHeader
           case OBD_SVC_PERMACODES:
             int currCode;
             Integer key;
-            ObdCodeItem code;
+            EcuCodeItem code;
 
             int nCodes = Integer.valueOf(new String(buffer, 2, 2),16);
             setNumCodes(nCodes);
@@ -590,7 +590,7 @@ public class ObdProt extends ProtoHeader
               currCode = key.intValue();
               if(currCode != 0)
               {
-                if((code = (ObdCodeItem)knownCodes.get(key))!=null)
+                if((code = (EcuCodeItem)knownCodes.get(key))!=null)
                 {
                   tCodes.put(key,code);
                 }
diff --git a/src/com/fr3ts0n/ecu/prot/vag/Kw1281Prot.java b/src/com/fr3ts0n/ecu/prot/vag/Kw1281Prot.java
index efd0a5e..9d432a7 100644
--- a/src/com/fr3ts0n/ecu/prot/vag/Kw1281Prot.java
+++ b/src/com/fr3ts0n/ecu/prot/vag/Kw1281Prot.java
@@ -155,12 +155,8 @@ public class Kw1281Prot extends ProtoHeader
 	public static PvList VidPvs = new PvList();
 	/** current fault codes */
 	public static PvList tCodes = new PvList();
-	static final String[] codeListFiles =
-		{
-			"prot/vag/res/vag_codes.csv"
-		};
 	/** list of known fault codes */
-	public static EcuCodeList knownCodes = new EcuCodeList(codeListFiles);
+	public static EcuCodeList knownCodes = new EcuCodeList("com.fr3ts0n.ecu.prot.vag.res.codes");
 	/** running telegram block counter */
 	char blockCounter = 0;
 	/** current data group which was requested */
@@ -876,7 +872,6 @@ public class Kw1281Prot extends ProtoHeader
 						{
 							// create new one and add it to list of known codes
 							code = new EcuCodeItem(dfcNum, "Unknown Fault code");
-							knownCodes.put(dfcNum, code);
 						}
 						code.put(EcuCodeItem.FID_STATUS, Integer.valueOf(dfcStat));
 						tCodes.put(dfcNum, code);
