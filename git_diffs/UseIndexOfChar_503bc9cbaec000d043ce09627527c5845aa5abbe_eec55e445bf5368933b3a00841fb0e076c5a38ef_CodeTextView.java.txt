diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/CommandDetailAdapter.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/CommandDetailAdapter.java
index c90ac4b..ad6a707 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/CommandDetailAdapter.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/CommandDetailAdapter.java
@@ -13,7 +13,7 @@ import com.inspiredandroid.linuxcommandbibliotheca.CommandBibliothecaActivity;
 import com.inspiredandroid.linuxcommandbibliotheca.R;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandChildModel;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandGroupModel;
-import com.inspiredandroid.linuxcommandbibliotheca.view.CodeTextView;
+import com.inspiredandroid.linuxcommandbibliotheca.view.TerminalTextView;
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
@@ -40,7 +40,7 @@ public class CommandDetailAdapter extends RecyclerView.Adapter<CommandDetailAdap
     public CommandDetailAdapter.ViewHolder onCreateViewHolder(ViewGroup parent,
                                                               int viewType) {
         View v = LayoutInflater.from(mContext)
-                .inflate(R.layout.row_scriptdescription_child, parent, false);
+                .inflate(R.layout.row_scriptchild_child, parent, false);
         return new CommandDetailAdapter.ViewHolder(v);
     }
 
@@ -94,7 +94,7 @@ public class CommandDetailAdapter extends RecyclerView.Adapter<CommandDetailAdap
 
     class ViewHolder extends RecyclerView.ViewHolder {
         @BindView(R.id.row_scriptdescription_child_tv_description)
-        CodeTextView command;
+        TerminalTextView command;
         @BindView(R.id.row_scriptdescription_child_iv_share)
         ImageButton share;
 
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ManExpandableListAdapter.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ManExpandableListAdapter.java
index 69481f1..5758449 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ManExpandableListAdapter.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ManExpandableListAdapter.java
@@ -9,7 +9,7 @@ import android.widget.TextView;
 
 import com.inspiredandroid.linuxcommandbibliotheca.R;
 import com.inspiredandroid.linuxcommandbibliotheca.models.Command;
-import com.inspiredandroid.linuxcommandbibliotheca.view.CodeTextView;
+import com.inspiredandroid.linuxcommandbibliotheca.view.TerminalTextView;
 
 import java.util.ArrayList;
 import java.util.regex.Matcher;
@@ -139,7 +139,7 @@ public class ManExpandableListAdapter extends BaseExpandableListAdapter {
         ArrayList<String> tmp = new ArrayList<>();
         while (m.find()) {
             String extractedCommand = m.group(0).substring(0, m.group(0).length() - 3).trim();
-            Command command = realm.where(Command.class).equalTo("name", extractedCommand).findFirst();
+            Command command = realm.where(Command.class).equalTo(Command.NAME, extractedCommand).findFirst();
             if (command != null) {
                 tmp.add(extractedCommand);
             }
@@ -157,20 +157,20 @@ public class ManExpandableListAdapter extends BaseExpandableListAdapter {
         return commands;
     }
 
-    public class CommandViewHolder {
+    class CommandViewHolder {
         @BindView(R.id.row_man_child_tv_description)
-        CodeTextView desc;
+        TerminalTextView desc;
 
-        public CommandViewHolder(View view) {
+        CommandViewHolder(View view) {
             ButterKnife.bind(this, view);
         }
     }
 
-    public class CommandGroupViewHolder {
+    class CommandGroupViewHolder {
         @BindView(R.id.row_man_group_tv_title)
         TextView title;
 
-        public CommandGroupViewHolder(View view) {
+        CommandGroupViewHolder(View view) {
             ButterKnife.bind(this, view);
         }
     }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ScriptChildrenAdapter.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ScriptChildrenAdapter.java
index 6dbf4c1..627f264 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ScriptChildrenAdapter.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ScriptChildrenAdapter.java
@@ -1,18 +1,24 @@
 package com.inspiredandroid.linuxcommandbibliotheca.adapter;
 
 import android.content.Context;
+import android.content.Intent;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.ImageButton;
 import android.widget.ImageView;
+import android.widget.LinearLayout;
 import android.widget.TextView;
 
 import com.inspiredandroid.linuxcommandbibliotheca.R;
-import com.inspiredandroid.linuxcommandbibliotheca.interfaces.OnListClickListener;
+import com.inspiredandroid.linuxcommandbibliotheca.models.CommandChildModel;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandGroupModel;
+import com.inspiredandroid.linuxcommandbibliotheca.view.TerminalTextView;
+
+import java.util.HashMap;
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
@@ -24,21 +30,17 @@ import io.realm.RealmRecyclerViewAdapter;
  */
 public class ScriptChildrenAdapter extends RealmRecyclerViewAdapter<CommandGroupModel, ScriptChildrenAdapter.ViewHolder> {
 
-    private OnListClickListener mOnListClickListener;
-
+    private HashMap<Integer,Boolean> expanded;
     public ScriptChildrenAdapter(@NonNull Context context, @Nullable OrderedRealmCollection<CommandGroupModel> data, boolean autoUpdate) {
         super(context, data, autoUpdate);
-    }
-
-    public void setOnListClickListener(OnListClickListener listener) {
-        mOnListClickListener = listener;
+        expanded = new HashMap<>();
     }
 
     @Override
     public ScriptChildrenAdapter.ViewHolder onCreateViewHolder(ViewGroup parent,
                                                                int viewType) {
         View v = LayoutInflater.from(parent.getContext())
-                .inflate(R.layout.row_scriptgroup, parent, false);
+                .inflate(R.layout.row_scriptchild, parent, false);
         return new ScriptChildrenAdapter.ViewHolder(v);
     }
 
@@ -48,25 +50,53 @@ public class ScriptChildrenAdapter extends RealmRecyclerViewAdapter<CommandGroup
 
         viewHolder.name.setText(CommandGroupModel.getDescResourceId(item));
         viewHolder.icon.setImageResource(CommandGroupModel.getImageResourceId(item));
+        viewHolder.details.removeAllViews();
+        for(CommandChildModel command : item.getCommands()) {
+            View v = LayoutInflater.from(viewHolder.itemView.getContext()).inflate(R.layout.row_scriptchild_child, viewHolder.details, false);
+
+            TerminalTextView tv = ((TerminalTextView) v.findViewById(R.id.row_scriptdescription_child_tv_description));
+            tv.setText(command.getCommand());
+            tv.setCommands(CommandChildModel.getMans(command));
+
+            ImageButton btn = (ImageButton) v.findViewById(R.id.row_scriptdescription_child_iv_share);
+            btn.setOnClickListener(view -> startShareActivity(view.getContext(), command));
+
+            viewHolder.details.addView(v);
+        }
+        viewHolder.details.setVisibility(isExpanded(position) ? View.VISIBLE : View.GONE);
+        viewHolder.itemView.setOnClickListener(view -> {
+            expanded.put(position, !isExpanded(position));
+            notifyItemChanged(position);
+        });
+    }
+
+    private boolean isExpanded(int position) {
+        return expanded.containsKey(position) && expanded.get(position);
     }
 
-    class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
+    class ViewHolder extends RecyclerView.ViewHolder {
         @BindView(R.id.row_scriptgroup_tv_title)
         TextView name;
         @BindView(R.id.row_scriptgroup_iv_icon)
         ImageView icon;
+        @BindView(R.id.row_scriptgroup_ll_detail)
+        LinearLayout details;
 
         ViewHolder(View view) {
             super(view);
             ButterKnife.bind(this, view);
-            view.setOnClickListener(this);
         }
+    }
 
-        @Override
-        public void onClick(View view) {
-            if (mOnListClickListener != null) {
-                mOnListClickListener.onClick(getData().get(getAdapterPosition()).getId());
-            }
-        }
+    /**
+     * let user share the command with any compatible app
+     *
+     * @param command
+     */
+    private void startShareActivity(Context context, CommandChildModel command) {
+        Intent intent = new Intent(Intent.ACTION_SEND);
+        intent.setType("text/plain");
+        intent.putExtra(android.content.Intent.EXTRA_TEXT, command.getCommand());
+        context.startActivity(intent);
     }
 }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/LoadDatabaseAsyncTask.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/LoadDatabaseAsyncTask.java
index aa93c34..4573c56 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/LoadDatabaseAsyncTask.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/LoadDatabaseAsyncTask.java
@@ -32,11 +32,6 @@ public class LoadDatabaseAsyncTask extends AsyncTask<Boolean, Void, Boolean> {
         mCallback = callback;
     }
 
-    @Override
-    protected void onPreExecute() {
-        super.onPreExecute();
-    }
-
     @Override
     protected Boolean doInBackground(Boolean... contexts) {
         File oldDatabase = mContext.getDatabasePath("commands.db");
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandManFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandManFragment.java
index 0466e37..9457505 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandManFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandManFragment.java
@@ -71,7 +71,7 @@ public class CommandManFragment extends AppIndexFragment implements OnConvertFro
     }
 
     @SuppressWarnings("deprecation")
-    public static CharSequence fromHtml(String html) {
+    private static CharSequence fromHtml(String html) {
         CharSequence result;
         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {
             result = Html.fromHtml(html, Html.FROM_HTML_MODE_LEGACY);
@@ -191,7 +191,7 @@ public class CommandManFragment extends AppIndexFragment implements OnConvertFro
     }
 
     /**
-     * Split long page text into child mList views
+     * Split long page text into child mRecyclerView views
      *
      * @return
      */
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizFragment.java
index 588544d..698b95c 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizFragment.java
@@ -426,7 +426,7 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
     /**
      * Get answers from database
      *
-     * @param count size of string array mList size
+     * @param count size of string array mRecyclerView size
      * @return
      */
     private ArrayList<String> getAnswers(int count) {
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/ScriptChildrenFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/ScriptChildrenFragment.java
index 82b0bc2..ebb20fe 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/ScriptChildrenFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/ScriptChildrenFragment.java
@@ -11,8 +11,6 @@ import android.view.ViewGroup;
 import com.inspiredandroid.linuxcommandbibliotheca.R;
 import com.inspiredandroid.linuxcommandbibliotheca.ScriptChildrenActivity;
 import com.inspiredandroid.linuxcommandbibliotheca.adapter.ScriptChildrenAdapter;
-import com.inspiredandroid.linuxcommandbibliotheca.fragments.dialogs.ScriptDetailDialogFragment;
-import com.inspiredandroid.linuxcommandbibliotheca.interfaces.OnListClickListener;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandGroupModel;
 
 import butterknife.BindView;
@@ -23,11 +21,11 @@ import io.realm.Sort;
 /**
  * Created by Simon Schubert
  */
-public class ScriptChildrenFragment extends SuperFragment implements OnListClickListener {
+public class ScriptChildrenFragment extends SuperFragment {
 
     @BindView(R.id.fragment_scriptchildren_rv)
-    RecyclerView mList;
-    Realm mRealm;
+    RecyclerView mRecyclerView;
+    private Realm mRealm;
 
     public ScriptChildrenFragment() {
     }
@@ -48,19 +46,12 @@ public class ScriptChildrenFragment extends SuperFragment implements OnListClick
         int categoryId = getActivity().getIntent().getIntExtra(ScriptChildrenActivity.EXTRA_CATEGORY_ID, 0);
 
         ScriptChildrenAdapter adapter = new ScriptChildrenAdapter(getContext(), mRealm.where(CommandGroupModel.class).equalTo(CommandGroupModel.COLUMN_CATEGORY, categoryId).findAllSorted("votes", Sort.DESCENDING), false);
-        adapter.setOnListClickListener(this);
-        mList.setAdapter(adapter);
-        mList.setLayoutManager(new LinearLayoutManager(getContext()));
+        mRecyclerView.setAdapter(adapter);
+        mRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
 
         return view;
     }
 
-    @Override
-    public void onClick(int id) {
-        ScriptDetailDialogFragment fragment = ScriptDetailDialogFragment.getInstance(id);
-        fragment.show(getChildFragmentManager(), ScriptDetailDialogFragment.class.getName());
-    }
-
     @Override
     public void onDestroy() {
         super.onDestroy();
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/SuperFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/SuperFragment.java
index 2ee88cd..2f6cbe2 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/SuperFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/SuperFragment.java
@@ -21,7 +21,7 @@ public class SuperFragment extends Fragment {
     /**
      * cancel all asynctasks
      */
-    public void cancelAsyncTasks() {
+    private void cancelAsyncTasks() {
         for (AsyncTask task : mAsyncTasks) {
             if (task != null) {
                 task.cancel(true);
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/dialogs/ScriptDetailDialogFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/dialogs/ScriptDetailDialogFragment.java
deleted file mode 100644
index a134e16..0000000
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/dialogs/ScriptDetailDialogFragment.java
+++ /dev/null
@@ -1,89 +0,0 @@
-package com.inspiredandroid.linuxcommandbibliotheca.fragments.dialogs;
-
-import android.app.Dialog;
-import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.v4.app.DialogFragment;
-import android.support.v7.widget.LinearLayoutManager;
-import android.support.v7.widget.RecyclerView;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.Window;
-import android.widget.TextView;
-
-import com.inspiredandroid.linuxcommandbibliotheca.R;
-import com.inspiredandroid.linuxcommandbibliotheca.adapter.CommandDetailAdapter;
-import com.inspiredandroid.linuxcommandbibliotheca.models.CommandGroupModel;
-
-import butterknife.BindView;
-import butterknife.ButterKnife;
-import io.realm.Realm;
-
-/**
- * Created by Simon Schubert
- */
-public class ScriptDetailDialogFragment extends DialogFragment {
-
-    private final static String EXTRA_KEY_ID = "EXTRA_KEY_ID";
-
-    @BindView(R.id.fragment_scriptdetail_tv_title)
-    TextView tvTitle;
-    @BindView(R.id.fragment_scriptdetail_lv_list)
-    RecyclerView listView;
-
-    private Realm mRealm;
-
-    public static ScriptDetailDialogFragment getInstance(int id) {
-        ScriptDetailDialogFragment fragment = new ScriptDetailDialogFragment();
-
-        Bundle arguments = new Bundle();
-        arguments.putInt(EXTRA_KEY_ID, id);
-        fragment.setArguments(arguments);
-
-        return fragment;
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        mRealm = Realm.getDefaultInstance();
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_scriptdetail, container, false);
-
-        ButterKnife.bind(this, view);
-
-        int id = getArguments().getInt(EXTRA_KEY_ID, -1);
-
-        CommandGroupModel commandGroupModel = mRealm.where(CommandGroupModel.class).equalTo(CommandGroupModel.COLUMN_ID, id).findFirst();
-
-        CommandDetailAdapter adapter = new CommandDetailAdapter(getActivity(), commandGroupModel);
-        listView.setAdapter(adapter);
-        listView.setLayoutManager(new LinearLayoutManager(getContext()));
-
-        int descriptionRes = CommandGroupModel.getDescResourceId(commandGroupModel);
-        tvTitle.setText(descriptionRes);
-
-        return view;
-    }
-
-    @NonNull
-    @Override
-    public Dialog onCreateDialog(Bundle savedInstanceState) {
-        Dialog dialog = super.onCreateDialog(savedInstanceState);
-        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
-        return dialog;
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-
-        mRealm.close();
-    }
-}
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/misc/AppManager.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/misc/AppManager.java
index 33dd085..b594e30 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/misc/AppManager.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/misc/AppManager.java
@@ -76,7 +76,7 @@ public class AppManager {
      * @param context
      * @return
      */
-    public static String getBookmarkIdsChain(Context context) {
+    private static String getBookmarkIdsChain(Context context) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         String bookmarksChain = prefs.getString(KEY_BOOKMARKS, "");
         if (!bookmarksChain.isEmpty()) {
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/misc/TypefaceUtils.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/misc/TypefaceUtils.java
new file mode 100644
index 0000000..76a5af1
--- /dev/null
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/misc/TypefaceUtils.java
@@ -0,0 +1,22 @@
+package com.inspiredandroid.linuxcommandbibliotheca.misc;
+
+import android.content.Context;
+import android.graphics.Typeface;
+
+public class TypefaceUtils {
+
+    private static Typeface typeface;
+
+    /**
+     * Get typeface by filename from assets main directory
+     *
+     * @param context
+     * @return
+     */
+    public static Typeface getTypeFace(final Context context) {
+        if (typeface == null) {
+            typeface = Typeface.createFromAsset(context.getAssets(), "ShareTechMono-Regular.ttf");
+        }
+        return typeface;
+    }
+}
\ No newline at end of file
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/AdView.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/AdView.java
index d58a595..bafbd8a 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/AdView.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/AdView.java
@@ -38,7 +38,7 @@ public class AdView extends ImageView {
         }
     }
 
-    public void startRemoteControl() {
+    private void startRemoteControl() {
         final String appPackageName = Utils.PACKAGE_LINUXREMOTE;
         try {
             getContext().startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("market://details?id=" + appPackageName)));
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/CodeTextView.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/TerminalTextView.java
similarity index 59%
rename from app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/CodeTextView.java
rename to app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/TerminalTextView.java
index b2ae363..66fa3b0 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/CodeTextView.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/TerminalTextView.java
@@ -5,14 +5,18 @@ import android.content.res.TypedArray;
 import android.graphics.Color;
 import android.graphics.Typeface;
 import android.support.v4.app.FragmentActivity;
+import android.support.v4.content.ContextCompat;
 import android.text.SpannableString;
 import android.text.method.LinkMovementMethod;
+import android.text.style.ForegroundColorSpan;
 import android.text.style.StyleSpan;
 import android.util.AttributeSet;
+import android.util.Log;
 import android.widget.TextView;
 
 import com.inspiredandroid.linuxcommandbibliotheca.R;
 import com.inspiredandroid.linuxcommandbibliotheca.misc.FragmentCoordinator;
+import com.inspiredandroid.linuxcommandbibliotheca.misc.TypefaceUtils;
 
 /**
  * Created by Simon Schubert
@@ -21,16 +25,20 @@ import com.inspiredandroid.linuxcommandbibliotheca.misc.FragmentCoordinator;
  * mCommands which should be highlighted in an string array and link it in the layout resource as
  * "command".
  */
-public class CodeTextView extends TextView {
+public class TerminalTextView extends TextView {
 
     private String[] mCommands;
+    private int[] mOutputRows;
 
-    public CodeTextView(Context context, AttributeSet attrs) {
+    public TerminalTextView(Context context, AttributeSet attrs) {
         super(context, attrs);
 
-        TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.CodeTextView);
-        int resID = ta.getResourceId(R.styleable.CodeTextView_commands, R.array.default_codetextview_commands);
+        TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.TerminalTextView);
+        int resID = ta.getResourceId(R.styleable.TerminalTextView_commands, R.array.default_codetextview_commands);
+        int outputRowsResID = ta.getResourceId(R.styleable.TerminalTextView_outputRows, R.array.default_codetextview_commands);
         mCommands = context.getResources().getStringArray(resID);
+        mOutputRows = context.getResources().getIntArray(outputRowsResID);
+        boolean mIgnoreTerminalStyle = ta.getBoolean(R.styleable.TerminalTextView_ignoreTerminalStyle, false);
         ta.recycle();
 
         if (isInEditMode()) {
@@ -40,6 +48,11 @@ public class CodeTextView extends TextView {
         updateLinks();
         setMovementMethod(LinkMovementMethod.getInstance());
         setHighlightColor(Color.TRANSPARENT);
+
+        if(!mIgnoreTerminalStyle) {
+            Typeface typeface = TypefaceUtils.getTypeFace(getContext());
+            setTypeface(typeface);
+        }
     }
 
     /**
@@ -74,11 +87,52 @@ public class CodeTextView extends TextView {
                     FragmentCoordinator.startCommandManActivity((FragmentActivity) getContext(), command));
         }
 
+
         addItalicSpans(ss, text);
+        addOutputSpans(ss, text);
 
         return ss;
     }
 
+    /**
+     *
+     * @param ss
+     * @param text
+     */
+    private void addOutputSpans(SpannableString ss, String text) {
+        if(mOutputRows.length == 0) {
+            return;
+        }
+
+        String lines[] = text.split("\\r?\\n");
+        int start = 0;
+        int end = 0;
+
+        for (int i = 0; i < lines.length; i++) {
+            end += lines[i].length();
+            if(doesArrayContainsInt(mOutputRows, i)) {
+                ss.setSpan(new ForegroundColorSpan(ContextCompat.getColor(getContext(), R.color.grey)), start, end, 0);
+            }
+            end+=1;
+            start = end;
+        }
+    }
+
+    /**
+     *
+     * @param array
+     * @param value
+     * @return
+     */
+    private boolean doesArrayContainsInt(int[] array, int value) {
+        for (int anArray : array) {
+            if (anArray == value) {
+                return true;
+            }
+        }
+        return false;
+    }
+
     /**
      * Make placeholder text italic
      *
