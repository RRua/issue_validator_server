diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsActivity.java
index 40749e05..1350da05 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsActivity.java
@@ -4,6 +4,8 @@ import android.app.Activity;
 import android.os.Bundle;
 
 import ch.bailu.aat.preferences.PreferenceLoadDefaults;
+import ch.bailu.aat.preferences.SolidDataDirectoryDefault;
+import ch.bailu.aat.util.AppPermission;
 import ch.bailu.aat.util.ui.AppLog;
 
 public abstract class AbsActivity extends Activity {
@@ -18,6 +20,7 @@ public abstract class AbsActivity extends Activity {
     }
 
 
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -26,6 +29,14 @@ public abstract class AbsActivity extends Activity {
     }
 
 
+    @Override
+    public void onRequestPermissionsResult (int requestCode,
+                                            String[] permissions,
+                                            int[] grantResults) {
+        AppPermission.onRequestPermissionsResult(this, requestCode);
+    }
+
+
     @Override
     public void onDestroy() {
         created--;
diff --git a/app/src/main/java/ch/bailu/aat/activities/MainActivity.java b/app/src/main/java/ch/bailu/aat/activities/MainActivity.java
index 2d15dd6f..4c7f8db1 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MainActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MainActivity.java
@@ -34,6 +34,7 @@ public class MainActivity extends AbsDispatcher {
     }
 
 
+
     private void createViews() {
 
         LinearLayout contentView = new ContentView(this);
@@ -110,6 +111,7 @@ public class MainActivity extends AbsDispatcher {
 
     }
 
+
     private class ExternalDirectoryLabel extends ActivityLabel implements SharedPreferences.OnSharedPreferenceChangeListener {
         private final SolidExternalDirectory sdirectory;
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java b/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java
index 7dac5018..eb995d96 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java
@@ -3,6 +3,7 @@ package ch.bailu.aat.preferences;
 import android.content.Context;
 import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
 
+import ch.bailu.util_java.util.Objects;
 
 
 public abstract class AbsSolidType implements SolidTypeInterface {
@@ -21,7 +22,7 @@ public abstract class AbsSolidType implements SolidTypeInterface {
 
     @Override
     public boolean hasKey(String s) {
-        return s.equals(getKey());
+        return Objects.equals(s, getKey());
     }    
     
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/OldSolidDataDirectory.java b/app/src/main/java/ch/bailu/aat/preferences/OldSolidDataDirectory.java
deleted file mode 100644
index 4d09de68..00000000
--- a/app/src/main/java/ch/bailu/aat/preferences/OldSolidDataDirectory.java
+++ /dev/null
@@ -1,30 +0,0 @@
-package ch.bailu.aat.preferences;
-
-import android.content.Context;
-
-import java.util.ArrayList;
-
-import ch.bailu.aat.R;
-
-public class OldSolidDataDirectory extends OldSolidDirectoryList {
-    private static final String KEY="TILE_DATA_DIR";
-    private static final String[] POSTFIX={"aat_data"};
-
-    public OldSolidDataDirectory(Context c) {
-        super(c, KEY);
-    }
-
-    @Override
-    public String getLabel() {
-        return getContext().getString(R.string.p_directory_data);
-    }
-    
-    
-    @Override
-    public void initList(ArrayList<String> list) {
-        OldSolidDataDirectory.fillDirectoryList(list, POSTFIX);
-        OldSolidDataDirectory.addFileToList(list, getContext().getFilesDir());
-    }
-
-
-}
diff --git a/app/src/main/java/ch/bailu/aat/preferences/OldSolidDirectoryList.java b/app/src/main/java/ch/bailu/aat/preferences/OldSolidDirectoryList.java
deleted file mode 100644
index c15e1e33..00000000
--- a/app/src/main/java/ch/bailu/aat/preferences/OldSolidDirectoryList.java
+++ /dev/null
@@ -1,76 +0,0 @@
-package ch.bailu.aat.preferences;
-
-import android.content.Context;
-import android.os.Environment;
-
-import java.io.File;
-import java.util.ArrayList;
-
-import ch.bailu.aat.util.fs.foc.FocAndroid;
-import ch.bailu.util_java.foc.Foc;
-
-public abstract class OldSolidDirectoryList extends SolidIndexList {
-
-
-    private final ArrayList<String> list = new ArrayList<>(10);
-
-
-
-
-    public OldSolidDirectoryList(Context c, String k) {
-        super(Storage.preset(c), k);
-        initList(list);
-    }
-
-    public abstract void initList(ArrayList<String> list);
-    
-    @Override
-    public int length() {
-        return list.size();
-    }
-
-    @Override
-    public String getValueAsString(int i) {
-        return list.get(i);
-    }
-    
-    
-    @Override
-    public String toString() {
-        return getValueAsString();
-    }
-
-    public Foc toFile() {
-        return FocAndroid.factory(getContext(), getValueAsString());
-    }
-    
-
-
-    public static void fillDirectoryList(ArrayList<String> list, String[] pf) {
-        for (String aPf : pf) fillList(list, aPf);
-    }
-
-
-    public static void  fillList(ArrayList<String> list, String pf) {
-        addFileToList(list, Environment.getExternalStorageDirectory(), pf);
-        addFileToList(list, Environment.getDataDirectory(), pf);
-        addPathToList(list, "/mnt", pf);
-    }
-
-
-    public static void addPathToList(ArrayList<String> l, String p, String pf) {
-        File files[] = new File(p).listFiles();
-        if (files != null) {
-            for (File file : files) addFileToList(l, file, pf);
-        }
-    }
-
-
-    public static void addFileToList(ArrayList<String> l, File f, String pf) {
-        if (f.exists()) l.add(f.getAbsolutePath() + "/" + pf);
-    }
-    
-    public static void addFileToList(ArrayList<String> l, File f) {
-        if (f.exists()) l.add(f.getAbsolutePath());
-    }
-}
diff --git a/app/src/main/java/ch/bailu/aat/preferences/OldSolidTileCacheDirectory.java b/app/src/main/java/ch/bailu/aat/preferences/OldSolidTileCacheDirectory.java
deleted file mode 100644
index c77c9562..00000000
--- a/app/src/main/java/ch/bailu/aat/preferences/OldSolidTileCacheDirectory.java
+++ /dev/null
@@ -1,29 +0,0 @@
-package ch.bailu.aat.preferences;
-
-import android.content.Context;
-
-import java.util.ArrayList;
-
-import ch.bailu.aat.R;
-
-public class OldSolidTileCacheDirectory extends OldSolidDirectoryList {
-    private static final String KEY="TILE_CACHE_DIR";
-    private static final String[] POSTFIX={"osmdroid/tiles", "aat_data/tiles"};
-
-    public OldSolidTileCacheDirectory(Context c) {
-        super(c, KEY);
-    }
-
-
-    @Override
-    public String getLabel() {
-        return getContext().getString(R.string.p_directory_tiles); 
-    }
-
-
-    @Override
-    public void initList(ArrayList<String> list) {
-        OldSolidDataDirectory.fillDirectoryList(list, POSTFIX);
-        OldSolidDataDirectory.addFileToList(list, getContext().getCacheDir());
-    }
-}
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidDataDirectory.java b/app/src/main/java/ch/bailu/aat/preferences/SolidDataDirectory.java
index fc3bd3aa..1c589ecf 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidDataDirectory.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidDataDirectory.java
@@ -7,12 +7,17 @@ import java.util.ArrayList;
 import ch.bailu.aat.R;
 import ch.bailu.aat.util.fs.AppDirectory;
 import ch.bailu.aat.util.fs.AndroidVolumes;
+import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.util_java.foc.Foc;
+import ch.bailu.util_java.util.Objects;
 
 public class SolidDataDirectory extends SolidFile {
 
+    private final SolidDataDirectoryDefault defaultDirectory;
+
     public SolidDataDirectory(Context c) {
         super(Storage.global(c), SolidDataDirectory.class.getSimpleName());
+        defaultDirectory = new SolidDataDirectoryDefault(getContext());
     }
 
 
@@ -27,65 +32,22 @@ public class SolidDataDirectory extends SolidFile {
         String r = super.getValueAsString();
 
 
-        if (r.equals(Storage.DEF_VALUE)) {
-            r = getDefaultValue();
+        if (Objects.equals(r,Storage.DEF_VALUE))
+            return defaultDirectory.getValueAsString();
 
-            setValue(r);
-        }
         return r;
     }
 
-    private String getDefaultValue() {
-        final Foc f = new OldSolidDataDirectory(getContext()).toFile();
-
-        ArrayList<String> list = new ArrayList<>(5);
-
-        add_w(list, f);
-
-        if (list.size()==0)
-            list = buildSelection(list);
-
-        if (list.size()==0)
-            list.add(f.toString());
-
-        return list.get(0);
+    @Override
+    public boolean hasKey(String s) {
+        return super.hasKey(s) || defaultDirectory.hasKey(s);
     }
 
 
     @Override
     public ArrayList<String> buildSelection(ArrayList<String> list) {
-
-        AndroidVolumes volumes = new AndroidVolumes(getContext());
-
-        for (Foc vol : volumes.getVolumes()) {
-            Foc aat_data = vol.child(AppDirectory.DIR_AAT_DATA);
-            add_w(list, aat_data);
-        }
-
-        for (Foc vol : volumes.getVolumes()) {
-            Foc aat_data = vol.child(AppDirectory.DIR_AAT_DATA);
-            if (aat_data.exists()==false)
-                add_w(list, vol, aat_data);
-        }
-
-        Foc[] files = volumes.getFiles();
-        for (int i=1; i<files.length; i++) {
-            add_w(list, files[i]);
-        }
-
-        for (int i=1; i<files.length; i++) {
-            add_ro(list, files[i]);
-        }
-
-        for (Foc vol : volumes.getVolumes()) {
-            Foc aat_data = vol.child(AppDirectory.DIR_AAT_DATA);
-            add_ro(list, vol, aat_data);
-        }
-
-        if (files.length>0) add_w(list, files[0]);
-        return list;
+        return defaultDirectory.buildSelection(list);
     }
 
-
 }
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidDataDirectoryDefault.java b/app/src/main/java/ch/bailu/aat/preferences/SolidDataDirectoryDefault.java
new file mode 100644
index 00000000..db4f0ba4
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidDataDirectoryDefault.java
@@ -0,0 +1,88 @@
+package ch.bailu.aat.preferences;
+
+
+import android.content.Context;
+
+import java.util.ArrayList;
+
+import ch.bailu.aat.util.fs.AndroidVolumes;
+import ch.bailu.aat.util.fs.AppDirectory;
+import ch.bailu.util_java.foc.Foc;
+import ch.bailu.util_java.util.Objects;
+
+public class SolidDataDirectoryDefault extends SolidFile {
+    private static final String[] POSTFIX={"aat_data"};
+
+    public SolidDataDirectoryDefault(Context c) {
+        super(Storage.global(c), SolidDataDirectoryDefault.class.getSimpleName());
+    }
+
+
+    @Override
+    public String getValueAsString() {
+        String r = super.getValueAsString();
+
+          if (Objects.equals(r,Storage.DEF_VALUE))
+            return setDefaultValue();
+
+        return r;
+    }
+
+
+    public String setDefaultValue() {
+        String r = getDefaultValue();
+        setValue(r);
+        return r;
+    }
+
+    private String getDefaultValue() {
+        ArrayList<String> list = new ArrayList<>(5);
+        list = buildSelection(list);
+        list.add(Storage.DEF_VALUE);  // failsave
+        return list.get(0);
+    }
+
+
+    @Override
+    public ArrayList<String> buildSelection(ArrayList<String> list) {
+
+        AndroidVolumes volumes = new AndroidVolumes(getContext());
+
+
+        // volume/aat_data (exists and is writeable)
+        for (Foc vol : volumes.getVolumes()) {
+            Foc aat_data = vol.child(AppDirectory.DIR_AAT_DATA);
+            add_w(list, aat_data);
+        }
+
+        // volume/aat_data (does not exist but can be created)
+        for (Foc vol : volumes.getVolumes()) {
+            Foc aat_data = vol.child(AppDirectory.DIR_AAT_DATA);
+            if (aat_data.exists()==false)
+                add_w(list, vol, aat_data);
+        }
+
+        // app_private/files (writeable and on external medium)
+        Foc[] files = volumes.getFiles();
+        for (int i=1; i<files.length; i++) {
+            add_w(list, files[i]);
+        }
+
+        // app_private/files (read only and on external medium)
+        for (int i=1; i<files.length; i++) {
+            add_ro(list, files[i]);
+        }
+
+        // volume/aat_data (read only)
+        for (Foc vol : volumes.getVolumes()) {
+            Foc aat_data = vol.child(AppDirectory.DIR_AAT_DATA);
+            add_ro(list, vol, aat_data);
+        }
+
+        // app_private/files (readable and internal)
+        if (files.length>0) add_r(list, files[0]);
+
+        return list;
+    }
+
+}
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidTileCacheDirectory.java b/app/src/main/java/ch/bailu/aat/preferences/SolidTileCacheDirectory.java
index 5fa634b9..f37024ad 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidTileCacheDirectory.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidTileCacheDirectory.java
@@ -38,17 +38,13 @@ public class SolidTileCacheDirectory extends SolidFile {
 
 
     private String getDefaultValue() {
-        final Foc f = new OldSolidTileCacheDirectory(getContext()).toFile();
 
         ArrayList<String> list = new ArrayList<>(5);
 
-        add_w(list, f);
-
         if (list.size()==0)
             list = buildSelection(list);
 
-        if (list.size()==0)
-            list.add(f.toString());
+        list.add(Storage.DEF_VALUE);
 
         return list.get(0);
     }
diff --git a/app/src/main/java/ch/bailu/aat/util/AppPermission.java b/app/src/main/java/ch/bailu/aat/util/AppPermission.java
index 53e15e66..146518c7 100644
--- a/app/src/main/java/ch/bailu/aat/util/AppPermission.java
+++ b/app/src/main/java/ch/bailu/aat/util/AppPermission.java
@@ -7,6 +7,8 @@ import android.content.Context;
 import android.content.pm.PackageManager;
 import android.os.Build;
 
+import ch.bailu.aat.preferences.SolidDataDirectoryDefault;
+
 public class AppPermission {
     public static void requestFromUser(Activity activity) {
         if (Build.VERSION.SDK_INT >= 23) {
@@ -15,6 +17,8 @@ public class AppPermission {
 
     }
 
+    private final static int APP_PERMISSION=99;
+
     @TargetApi(23)
     private static void requestFromUserSdk23(Activity activity) {
         activity.requestPermissions(
@@ -23,7 +27,14 @@ public class AppPermission {
                         Manifest.permission.ACCESS_FINE_LOCATION,
                         Manifest.permission.READ_EXTERNAL_STORAGE,
                         Manifest.permission.WRITE_EXTERNAL_STORAGE},
-                99);
+                APP_PERMISSION);
+    }
+
+
+    public static void onRequestPermissionsResult (Context c, int requestCode) {
+        if (requestCode == AppPermission.APP_PERMISSION) {
+            new SolidDataDirectoryDefault(c).setDefaultValue();
+        }
     }
 
 
