diff --git a/app/src/main/java/be/brunoparmentier/dnssetter/DNSManager.java b/app/src/main/java/be/brunoparmentier/dnssetter/DNSManager.java
new file mode 100644
index 0000000..7b45262
--- /dev/null
+++ b/app/src/main/java/be/brunoparmentier/dnssetter/DNSManager.java
@@ -0,0 +1,50 @@
+/*
+ * Copyright (c) 2015 Bruno Parmentier. This file is part of DNSSetter.
+ *
+ * DNSSetter is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * DNSSetter is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with DNSSetter.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package be.brunoparmentier.dnssetter;
+
+import android.util.Log;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import eu.chainfire.libsuperuser.Shell;
+
+public class DNSManager {
+    private static final String TAG = DNSManager.class.getSimpleName();
+
+    public static void setDNS(String dns[]) {
+        if (Shell.SU.available()) {
+            List<String> cmds = new ArrayList<>();
+            for (int i = 1; i <= 2; i++) {
+                cmds.add("setprop net.dns" + i + " " + dns[i - 1]);
+            }
+
+            if (Shell.SU.run(cmds) == null) {
+                Log.e(TAG, "Root command failed");
+            }
+        }
+    }
+
+    public static List<String> getDNS() {
+        List<String> cmds = new ArrayList<>();
+        for (int i = 1; i <= 2; i++) {
+            cmds.add("getprop net.dns" + i);
+        }
+        return Shell.SH.run(cmds);
+    }
+}
diff --git a/app/src/main/java/be/brunoparmentier/dnssetter/MainActivity.java b/app/src/main/java/be/brunoparmentier/dnssetter/MainActivity.java
index fc2bfb8..801515d 100644
--- a/app/src/main/java/be/brunoparmentier/dnssetter/MainActivity.java
+++ b/app/src/main/java/be/brunoparmentier/dnssetter/MainActivity.java
@@ -25,7 +25,6 @@ import android.content.SharedPreferences;
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
@@ -34,11 +33,8 @@ import android.widget.EditText;
 import android.widget.TextView;
 import android.widget.Toast;
 
-import java.util.ArrayList;
 import java.util.List;
 
-import eu.chainfire.libsuperuser.Shell;
-
 public class MainActivity extends Activity {
     private static final String TAG = "MainActivity";
     private static final String PREF_KEY_IS_FIRST_RUN = "is_first_run";
@@ -115,11 +111,7 @@ public class MainActivity extends Activity {
 
         @Override
         protected List<String> doInBackground(Void... voids) {
-            List<String> cmds = new ArrayList<>();
-            for (int i = 1; i <= 2; i++) {
-                cmds.add("getprop net.dns" + i);
-            }
-            return Shell.SH.run(cmds);
+            return DNSManager.getDNS();
         }
 
         @Override
@@ -138,21 +130,13 @@ public class MainActivity extends Activity {
     private class SetDNSTask extends AsyncTask<String, Void, Void> {
         @Override
         protected Void doInBackground(String... dns) {
-            if (Shell.SU.available()) {
-                List<String> cmds = new ArrayList<>();
-                for (int i = 1; i <= 2; i++) {
-                    cmds.add("setprop net.dns" + i + " " + dns[i - 1]);
-                }
-
-                SharedPreferences.Editor settingsEditor = settings.edit();
-                settingsEditor.putString(PREF_KEY_DNS1, dns[0]);
-                settingsEditor.putString(PREF_KEY_DNS2, dns[1]);
-                settingsEditor.apply();
-
-                if (Shell.SU.run(cmds) == null) {
-                    Log.e(TAG, "Root command failed");
-                }
-            }
+            DNSManager.setDNS(dns);
+
+            SharedPreferences.Editor settingsEditor = settings.edit();
+            settingsEditor.putString(PREF_KEY_DNS1, dns[0]);
+            settingsEditor.putString(PREF_KEY_DNS2, dns[1]);
+            settingsEditor.apply();
+
             return null;
         }
 
