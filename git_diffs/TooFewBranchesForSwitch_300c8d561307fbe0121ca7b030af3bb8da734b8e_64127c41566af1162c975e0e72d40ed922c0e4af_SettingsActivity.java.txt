diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppChoicesActivity.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppChoicesActivity.java
index 943bc21..8c57bea 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppChoicesActivity.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppChoicesActivity.java
@@ -27,7 +27,8 @@ import android.os.AsyncTask;
 import android.os.Bundle;
 import android.os.Parcelable;
 import android.preference.PreferenceManager;
-import androidx.core.view.MenuItemCompat;
+
+import androidx.annotation.NonNull;
 import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.recyclerview.widget.LinearLayoutManager;
@@ -116,7 +117,6 @@ public class AppChoicesActivity extends AppCompatActivity {
 
         if (savedInstanceState != null && getSetupStatus(savedInstanceState)) {
             mAppSelections = savedInstanceState.getParcelableArrayList(STATE_APP_SELECTIONS);
-            Parcelable listState = savedInstanceState.getParcelable(STATE_RECYCLER_VIEW);
 
             if (mShowOnlyEnabledApps) {
                 List<AppSelection> appSelectionsSubList = new ArrayList<>();
@@ -131,7 +131,11 @@ public class AppChoicesActivity extends AppCompatActivity {
                 mAdapter = new ActivityAdapter(mAppSelections);
             }
             mRecyclerView.setAdapter(mAdapter);
-            mRecyclerView.getLayoutManager().onRestoreInstanceState(listState);
+
+            Parcelable listState = savedInstanceState.getParcelable(STATE_RECYCLER_VIEW);
+            if (listState != null && mRecyclerView.getLayoutManager() != null) {
+                mRecyclerView.getLayoutManager().onRestoreInstanceState(listState);
+            }
             mSetupComplete = getSetupStatus(savedInstanceState);
 
             DebugLog log = DebugLog.get(getApplicationContext());
@@ -155,8 +159,10 @@ public class AppChoicesActivity extends AppCompatActivity {
     public void onSaveInstanceState(Bundle savedInstanceState) {
         savedInstanceState.putParcelableArrayList(STATE_APP_SELECTIONS, mAppSelections);
         savedInstanceState.putBoolean(STATE_SETUP_COMPLETE, mSetupComplete);
-        Parcelable listState = mRecyclerView.getLayoutManager().onSaveInstanceState();
-        savedInstanceState.putParcelable(STATE_RECYCLER_VIEW, listState);
+        if (mRecyclerView.getLayoutManager() != null) {
+            Parcelable listState = mRecyclerView.getLayoutManager().onSaveInstanceState();
+            savedInstanceState.putParcelable(STATE_RECYCLER_VIEW, listState);
+        }
 
         super.onSaveInstanceState(savedInstanceState);
     }
@@ -168,7 +174,7 @@ public class AppChoicesActivity extends AppCompatActivity {
         MenuItem searchItem = menu.findItem(R.id.menu_app_search);
         MenuItem filterEnabledAppsItem = menu.findItem(R.id.menu_filter_enabled);
 
-        SearchView searchView = (SearchView) MenuItemCompat.getActionView(searchItem);
+        SearchView searchView = (SearchView) searchItem.getActionView();
         searchView.setQueryHint(getString(R.string.search_query_hint));
         searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override
@@ -207,19 +213,19 @@ public class AppChoicesActivity extends AppCompatActivity {
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            case android.R.id.home:
-                onBackPressed();
-                return true;
-            case R.id.menu_filter_enabled:
-                mShowOnlyEnabledApps = !mShowOnlyEnabledApps; // toggles the state of the filter
-                mPreferences.edit().putBoolean(getString(R.string.show_enabled_apps_key), mShowOnlyEnabledApps).apply();
-                item.setChecked(mShowOnlyEnabledApps);
-                recyclerViewShowEnabled();
-                return true;
-            default:
-                return super.onOptionsItemSelected(item);
+        int id = item.getItemId();
+        if (id == android.R.id.home) {
+            onBackPressed();
+            return true;
+        } else if (id == R.id.menu_filter_enabled) {
+            mShowOnlyEnabledApps = !mShowOnlyEnabledApps; // toggles the state of the filter
+            mPreferences.edit().putBoolean(getString(R.string.show_enabled_apps_key), mShowOnlyEnabledApps).apply();
+            item.setChecked(mShowOnlyEnabledApps);
+            recyclerViewShowEnabled();
+            return true;
         }
+
+        return super.onOptionsItemSelected(item);
     }
 
     @Override
@@ -236,19 +242,15 @@ public class AppChoicesActivity extends AppCompatActivity {
 
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        switch (requestCode) {
-            case APP_SELECTIONS_REQUEST:
-                if (resultCode == RESULT_OK) {
-                    AppSelection appSelection = data.getParcelableExtra(
-                            AppSettingsActivity.APP_SELECTION_EXTRA);
-
-                    if (appSelection != null) {
-                        mAppSelectionsStore.updateAppSelection(appSelection);
-                        updateAppSelections(appSelection);
-                    }
-                }
-                break;
-            default:
+        super.onActivityResult(requestCode, resultCode, data);
+        if (requestCode == APP_SELECTIONS_REQUEST && resultCode == RESULT_OK) {
+            AppSelection appSelection = data.getParcelableExtra(
+                    AppSettingsActivity.APP_SELECTION_EXTRA);
+
+            if (appSelection != null) {
+                mAppSelectionsStore.updateAppSelection(appSelection);
+                updateAppSelections(appSelection);
+            }
         }
     }
 
@@ -432,11 +434,11 @@ public class AppChoicesActivity extends AppCompatActivity {
 
     private class ActivityHolder extends RecyclerView.ViewHolder
             implements View.OnClickListener {
+        private final TextView mAppNameTB;
+        private final ImageView mImageView;
+        private final CheckBox mAppSelectCB;
+
         private AppSelection mAppSelection;
-        private TextView mAppNameTB;
-        private ImageView mImageView;
-        private ImageButton mSettingsIB;
-        private CheckBox mAppSelectCB;
 
         public ActivityHolder(View itemView) {
             super(itemView);
@@ -444,10 +446,10 @@ public class AppChoicesActivity extends AppCompatActivity {
             mAppNameTB = (TextView) itemView.findViewById(R.id.appNameTextBox);
             mAppSelectCB = (CheckBox) itemView.findViewById(R.id.appSelectCheckBox);
             mImageView = (ImageView) itemView.findViewById(R.id.appIconImageView);
-            mSettingsIB = (ImageButton) itemView.findViewById(R.id.appSettingsIcon);
+            ImageButton settingsIB = (ImageButton) itemView.findViewById(R.id.appSettingsIcon);
 
             mAppSelectCB.setOnClickListener(this);
-            mSettingsIB.setOnClickListener(new View.OnClickListener() {
+            settingsIB.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
                     Intent intent = new Intent(getApplicationContext(), AppSettingsActivity.class);
@@ -493,8 +495,9 @@ public class AppChoicesActivity extends AppCompatActivity {
             mAppSelectionsSubList = appSelectionsSubList;
         }
 
+        @NonNull
         @Override
-        public ActivityHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        public ActivityHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
             LayoutInflater inflater = LayoutInflater.from(AppChoicesActivity.this);
             View view = inflater.inflate(R.layout.app_select_list_item, parent, false);
             return new ActivityHolder(view);
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppSettingsActivity.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppSettingsActivity.java
index d53a8de..39ef177 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppSettingsActivity.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppSettingsActivity.java
@@ -18,6 +18,8 @@ package com.abhijitvalluri.android.fitnotifications;
 
 import android.content.Intent;
 import android.os.Bundle;
+
+import androidx.appcompat.widget.SwitchCompat;
 import androidx.fragment.app.FragmentManager;
 import androidx.core.content.ContextCompat;
 import androidx.appcompat.app.AlertDialog;
@@ -29,7 +31,6 @@ import android.widget.Button;
 import android.widget.CompoundButton;
 import android.widget.EditText;
 import android.widget.ImageButton;
-import android.widget.Switch;
 import android.widget.TextView;
 
 import com.abhijitvalluri.android.fitnotifications.models.AppSelection;
@@ -92,9 +93,9 @@ public class AppSettingsActivity extends AppCompatActivity implements TimePicker
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_app_settings);
 
-        Switch discardEmptySwitch;
-        Switch discardOngoingSwitch;
-        Switch allDaySwitch;
+        SwitchCompat discardEmptySwitch;
+        SwitchCompat discardOngoingSwitch;
+        SwitchCompat allDaySwitch;
         ImageButton filterTextInfo;
         TextView filterTextDescription;
 
@@ -102,9 +103,9 @@ public class AppSettingsActivity extends AppCompatActivity implements TimePicker
         mStartTimeButton = (Button) findViewById(R.id.start_time);
         mStopTimeButton = (Button) findViewById(R.id.stop_time);
         mNextDay = (TextView) findViewById(R.id.next_day);
-        discardEmptySwitch = (Switch) findViewById(R.id.discard_empty);
-        discardOngoingSwitch = (Switch) findViewById(R.id.discard_ongoing);
-        allDaySwitch = (Switch) findViewById(R.id.all_day);
+        discardEmptySwitch = (SwitchCompat) findViewById(R.id.discard_empty);
+        discardOngoingSwitch = (SwitchCompat) findViewById(R.id.discard_ongoing);
+        allDaySwitch = (SwitchCompat) findViewById(R.id.all_day);
         filterTextInfo = findViewById(R.id.filter_text_info);
         filterTextDescription = findViewById(R.id.filter_text_desc);
 
@@ -135,6 +136,7 @@ public class AppSettingsActivity extends AppCompatActivity implements TimePicker
 
         if (savedInstanceState == null) {
             mAppSelection = getIntent().getParcelableExtra(APP_SELECTION_EXTRA);
+            assert mAppSelection != null; // Should always be true.
             mStartTimeHour = mAppSelection.getStartTimeHour();
             mStartTimeMinute = mAppSelection.getStartTimeMinute();
             mStopTimeHour = mAppSelection.getStopTimeHour();
@@ -414,13 +416,11 @@ public class AppSettingsActivity extends AppCompatActivity implements TimePicker
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            case android.R.id.home:
-                onBackPressed();
-                return true;
-            default:
-                return super.onOptionsItemSelected(item);
+        if (item.getItemId() == android.R.id.home) {
+            onBackPressed();
+            return true;
         }
+        return super.onOptionsItemSelected(item);
     }
 
     @Override
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/HomeActivity.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/HomeActivity.java
index 1954a41..3b2d55b 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/HomeActivity.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/HomeActivity.java
@@ -16,6 +16,7 @@
 
 package com.abhijitvalluri.android.fitnotifications;
 
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.app.ActivityOptions;
 import android.app.NotificationChannel;
@@ -106,7 +107,7 @@ public class HomeActivity extends AppCompatActivity {
         if (mPreferences.getInt(getString(R.string.version_key), 0) < Constants.VERSION_CODE
                 && mPreferences.getBoolean(getString(R.string.done_first_launch_key), false)) {
             // App has been updated
-            // TODO: For version 2.9.18 - Update Android SDK to latest version & work on improved schedule feature
+            // TODO: May be work on improved schedule feature
 
             mPreferences.edit().putInt(getString(R.string.version_key), Constants.VERSION_CODE).apply();
 
@@ -125,6 +126,7 @@ public class HomeActivity extends AppCompatActivity {
 
             // Open the database to update it in case the version is incremented.
             AppSelectionsStore store = AppSelectionsStore.get(this);
+            Log.i("FitNotificationInfo", "Checking db in case version is incremented: " + store.toString());
         }
 
         if (!mPreferences.getBoolean(getString(R.string.done_first_launch_key), false)) { // This is the first launch
@@ -256,6 +258,7 @@ public class HomeActivity extends AppCompatActivity {
         return i;
     }
 
+    @SuppressLint("NonConstantResourceId")
     private void selectDrawerItem(MenuItem menuItem) {
         // Create a new fragment and specify the fragment to show based on nav item clicked
         final Fragment frag;
@@ -363,7 +366,7 @@ public class HomeActivity extends AppCompatActivity {
     }
 
     @Override
-    public void onConfigurationChanged(Configuration newConfig) {
+    public void onConfigurationChanged(@NonNull Configuration newConfig) {
         super.onConfigurationChanged(newConfig);
         // Pass any configuration change to the drawer toggles
         mDrawerToggle.onConfigurationChanged(newConfig);
@@ -377,52 +380,46 @@ public class HomeActivity extends AppCompatActivity {
     }
 
     @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
+    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
 
         if (mDrawerToggle.onOptionsItemSelected(item)) {
             return true;
         }
 
-        switch (item.getItemId()) {
-            case R.id.menu_main_settings:
-                startActivity(SettingsActivity.newIntent(this), LAUNCH_ACTIVITY_ANIM_BUNDLE);
-                return true;
-            default:
-                return super.onOptionsItemSelected(item);
+        if (item.getItemId() == R.id.menu_main_settings) {
+            startActivity(SettingsActivity.newIntent(this), LAUNCH_ACTIVITY_ANIM_BUNDLE);
+            return true;
         }
+        return super.onOptionsItemSelected(item);
     }
 
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        switch (requestCode) {
-            case APP_INTRO_FIRST_LAUNCH_INTENT:
-                if (resultCode == Activity.RESULT_OK) {
-                    mPreferences.edit().putBoolean(getString(R.string.done_first_launch_key), true).apply();
-                } else {
-                    new AlertDialog.Builder(HomeActivity.this)
-                            .setMessage(getString(R.string.setup_incomplete))
-                            .setTitle(getString(R.string.setup_incomplete_title))
-                            .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
-                                @Override
-                                public void onClick(DialogInterface dialog, int which) {
-                                    startActivityForResult(new Intent(HomeActivity.this, AppIntroActivity.class), APP_INTRO_FIRST_LAUNCH_INTENT, LAUNCH_ACTIVITY_ANIM_BUNDLE);
-                                }
-                            })
-                            .setNegativeButton(android.R.string.cancel, new DialogInterface.OnClickListener() {
-                                @Override
-                                public void onClick(DialogInterface dialog, int which) {
-                                    mPreferences.edit().putBoolean(getString(R.string.done_first_launch_key), true).apply();
-                                    Toast.makeText(HomeActivity.this, R.string.setup_incomplete_cancel, Toast.LENGTH_LONG).show();
-                                }
-                            })
-                            .create()
-                            .show();
-                }
-                return;
-            default:
-        }
-
         super.onActivityResult(requestCode, resultCode, data);
+        if (requestCode == APP_INTRO_FIRST_LAUNCH_INTENT) {
+            if (resultCode == Activity.RESULT_OK) {
+                mPreferences.edit().putBoolean(getString(R.string.done_first_launch_key), true).apply();
+            } else {
+                new AlertDialog.Builder(HomeActivity.this)
+                        .setMessage(getString(R.string.setup_incomplete))
+                        .setTitle(getString(R.string.setup_incomplete_title))
+                        .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                startActivityForResult(new Intent(HomeActivity.this, AppIntroActivity.class), APP_INTRO_FIRST_LAUNCH_INTENT, LAUNCH_ACTIVITY_ANIM_BUNDLE);
+                            }
+                        })
+                        .setNegativeButton(android.R.string.cancel, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                mPreferences.edit().putBoolean(getString(R.string.done_first_launch_key), true).apply();
+                                Toast.makeText(HomeActivity.this, R.string.setup_incomplete_cancel, Toast.LENGTH_LONG).show();
+                            }
+                        })
+                        .create()
+                        .show();
+            }
+        }
     }
 
     private class SmoothDrawerToggle extends ActionBarDrawerToggle {
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/HomeFragment.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/HomeFragment.java
index 7024ce6..ea82825 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/HomeFragment.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/HomeFragment.java
@@ -16,6 +16,7 @@
 
 package com.abhijitvalluri.android.fitnotifications;
 
+import android.annotation.SuppressLint;
 import android.app.ActivityOptions;
 import android.app.NotificationManager;
 import android.app.PendingIntent;
@@ -29,10 +30,13 @@ import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
 import android.net.Uri;
-import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.preference.PreferenceManager;
+
+import androidx.annotation.NonNull;
+import androidx.appcompat.widget.SwitchCompat;
 import androidx.fragment.app.Fragment;
 import androidx.core.app.NotificationManagerCompat;
 import androidx.core.content.ContextCompat;
@@ -46,7 +50,6 @@ import android.widget.CompoundButton;
 import android.widget.EditText;
 import android.widget.LinearLayout;
 import android.widget.RemoteViews;
-import android.widget.Switch;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -65,7 +68,7 @@ import java.util.Set;
  */
 public class HomeFragment extends Fragment {
 
-    private final Handler mHandler = new Handler();
+    private final Handler mHandler = new Handler(Looper.getMainLooper());
 
     public static final String STATE_IS_DONATE_BANNER = "donateBanner";
 
@@ -79,7 +82,7 @@ public class HomeFragment extends Fragment {
     private TextView mNotificationAccessTV;
     private TextView mServiceStateTV;
     private TextView mBannerTV;
-    private Switch mEnableLogs;
+    private SwitchCompat mEnableLogs;
     private Button mSendLogs;
     private TextView mLogStatus;
 
@@ -89,6 +92,18 @@ public class HomeFragment extends Fragment {
     private Bundle LAUNCH_ACTIVITY_ANIM_BUNDLE;
     private Context mContext;
 
+    @Override
+    public void onAttach(@NonNull Context context) {
+        super.onAttach(context);
+        mContext = context;
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        mContext = null;
+    }
+
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
@@ -106,11 +121,10 @@ public class HomeFragment extends Fragment {
         mNotificationAccessTV = (TextView) v.findViewById(R.id.notificationAccessTV);
         mServiceStateTV = (TextView) v.findViewById(R.id.serviceStateText);
         mBannerTV = (TextView) v.findViewById(R.id.rate_app);
-        mEnableLogs = (Switch) v.findViewById(R.id.enableLogSwitch);
+        mEnableLogs = (SwitchCompat) v.findViewById(R.id.enableLogSwitch);
         mSendLogs = (Button) v.findViewById(R.id.sendLogsButton);
         mLogStatus = (TextView) v.findViewById(R.id.logStatus);
 
-        mContext = getContext();
         mPreferences = PreferenceManager.getDefaultSharedPreferences(mContext);
         if (!mIsDonateBanner && Math.random() < 0.5) {
             mIsDonateBanner = true;
@@ -154,7 +168,7 @@ public class HomeFragment extends Fragment {
                 int status = isChecked ? log.enable() : log.disable();
                 updateLogStatus(status);
                 if (isChecked) {
-                    new AlertDialog.Builder(getActivity())
+                    new AlertDialog.Builder(mContext)
                             .setTitle("Warning: Storage Usage!")
                             .setMessage("Please note that enabling logging will use storage space on your phone. We will limit log file size to 10 MB.\n\n" +
                                     "If you enable logging for too long, then old log contents will be over-written to stay within the 10 MB file size limit. " +
@@ -168,7 +182,7 @@ public class HomeFragment extends Fragment {
         mSendLogs.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                new AlertDialog.Builder(getActivity())
+                new AlertDialog.Builder(mContext)
                         .setTitle("Send logs to developer?")
                         .setMessage("If you send logs to the developer now, the app will stop collecting logs immediately and send whatever logs are present. It will then delete the logs from your phone. Do you want to proceed?")
                         .setPositiveButton("SEND", new DialogInterface.OnClickListener() {
@@ -217,20 +231,21 @@ public class HomeFragment extends Fragment {
         return v;
     }
 
+    @SuppressLint("SetTextI18n")
     private void sendDebugLogEmail(final StringBuilder body) {
-        final LinearLayout layout = new LinearLayout(getContext());
+        final LinearLayout layout = new LinearLayout(mContext);
         layout.setOrientation(LinearLayout.VERTICAL);
         layout.setPadding(32,16,32,16);
 
 
-        final TextView title = new TextView(getContext());
+        final TextView title = new TextView(mContext);
         title.setText("Explain the problem below:");
         title.setTextSize(18);
-        final EditText input = new EditText(getContext());
+        final EditText input = new EditText(mContext);
         layout.addView(title);
         layout.addView(input);
 
-        final AlertDialog dialog = new AlertDialog.Builder(getContext())
+        final AlertDialog dialog = new AlertDialog.Builder(mContext)
                 .setTitle("Send Logs: Step 1")
                 .setView(layout)
                 .setPositiveButton(android.R.string.ok, null)
@@ -250,13 +265,13 @@ public class HomeFragment extends Fragment {
                         String issue = input.getText().toString();
                         issue = issue.trim();
                         if (issue.isEmpty()) {
-                            Toast.makeText(getContext(), "You must describe the problem you are facing to proceed!", Toast.LENGTH_SHORT).show();
+                            Toast.makeText(mContext, "You must describe the problem you are facing to proceed!", Toast.LENGTH_SHORT).show();
                         } else {
                             body.insert(0, "\n\n------\n\n");
                             body.insert(0, issue);
 
                             DebugLog log = DebugLog.get(getActivity());
-                            startActivity(log.emailLogIntent(getContext(), body.toString()));
+                            startActivity(log.emailLogIntent(mContext, body.toString()));
 
                             mEnableLogs.setChecked(false);
                             dialog.dismiss();
@@ -269,6 +284,7 @@ public class HomeFragment extends Fragment {
         dialog.show();
     }
 
+    @SuppressLint("SetTextI18n")
     private void updateLogStatus(int status) {
         switch (status) {
             case DebugLog.STATUS_LOG_OPENED:
@@ -379,29 +395,19 @@ public class HomeFragment extends Fragment {
             public void onClick(View v) {
                 Bundle newExtra = new Bundle();
 
-                NotificationCompat.Builder builder = new NotificationCompat.Builder(mContext);
+                NotificationCompat.Builder builder = new NotificationCompat.Builder(mContext, Constants.NOTIFICATION_CHANNEL_ID_CURRENT);
                 String notificationText = "Sample notification subject";
                 String notificationBigText = "Sample notification body. This is where the details of the notification will be shown.";
 
-                StringBuilder sb = new StringBuilder();
-                sb.append("[").append("example").append("] ");
-                sb.append(notificationText);
-                if (notificationBigText.length() > 0) {
-                    sb.append(" -- ").append(notificationBigText);
-                }
-
                 RemoteViews contentView = new RemoteViews(mContext.getPackageName(), R.layout.custom_notification);
                 contentView.setTextViewText(R.id.customNotificationText, getString(R.string.placeholder_notification_text));
+                String content = "[" + "example" + "] " + notificationText + " -- " + notificationBigText;
                 builder.setSmallIcon(R.drawable.ic_sms_white_24dp)
-                        .setContentText(sb.toString())
+                        .setContentText(content)
                         .setExtras(newExtra)
                         .setContentTitle("Sample Notification Title")
                         .setContent(contentView);
 
-                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                    builder.setChannelId(Constants.NOTIFICATION_CHANNEL_ID_CURRENT);
-                }
-
                 // Creates an explicit intent for the SettingsActivity in the app
                 Intent settingsIntent = new Intent(mContext, SettingsActivity.class);
 
@@ -442,7 +448,7 @@ public class HomeFragment extends Fragment {
 
     private void updateNotificationAccessText() {
         Set<String> EnabledListenerPackagesSet = NotificationManagerCompat.
-                getEnabledListenerPackages(getContext());
+                getEnabledListenerPackages(mContext);
         if (EnabledListenerPackagesSet.contains(Constants.PACKAGE_NAME)
                 && EnabledListenerPackagesSet.contains(Constants.FITBIT_PACKAGE_NAME)) {
             mNotificationAccessTV.setText(getString(R.string.notification_access_disable_textView));
@@ -452,11 +458,11 @@ public class HomeFragment extends Fragment {
     }
 
     private void updateWidget() {
-        Intent i = new Intent(getActivity(), ServiceToggle.class);
+        Intent i = new Intent(mContext, ServiceToggle.class);
         i.setAction(AppWidgetManager.ACTION_APPWIDGET_UPDATE);
-        int[] ids = AppWidgetManager.getInstance(getContext()).getAppWidgetIds(new ComponentName(getContext(), ServiceToggle.class));
+        int[] ids = AppWidgetManager.getInstance(mContext).getAppWidgetIds(new ComponentName(mContext, ServiceToggle.class));
         i.putExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS, ids);
-        getActivity().sendBroadcast(i);
+        mContext.sendBroadcast(i);
     }
 
     private void initializeServiceButtons() {
@@ -465,7 +471,7 @@ public class HomeFragment extends Fragment {
         if(serviceEnabled) {
             mServiceButton.setText(R.string.turn_off_service);
             mServiceStateTV.setText(R.string.service_on);
-            mServiceStateTV.setTextColor(ContextCompat.getColor(getContext(), R.color.brightGreen));
+            mServiceStateTV.setTextColor(ContextCompat.getColor(mContext, R.color.brightGreen));
             mServiceButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
@@ -479,7 +485,7 @@ public class HomeFragment extends Fragment {
         } else {
             mServiceButton.setText(R.string.turn_on_service);
             mServiceStateTV.setText(R.string.service_off);
-            mServiceStateTV.setTextColor(ContextCompat.getColor(getContext(), R.color.red));
+            mServiceStateTV.setTextColor(ContextCompat.getColor(mContext, R.color.red));
             mServiceButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/InfoFragment.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/InfoFragment.java
index 4eb23b1..b11f005 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/InfoFragment.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/InfoFragment.java
@@ -17,6 +17,8 @@
 package com.abhijitvalluri.android.fitnotifications;
 
 import android.os.Bundle;
+
+import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -38,19 +40,23 @@ public class InfoFragment extends Fragment {
         // Inflate the layout for this fragment
         View v = inflater.inflate(R.layout.fragment_info, container, false);
 
-        String webViewHtml = getArguments().getString(WEBVIEW_HTML);
         mWebView = (WebView) v.findViewById(R.id.infoActivityWV);
 
-        mWebView.loadDataWithBaseURL(null, webViewHtml, "text/html", "utf-8", null);
+        if (getArguments() != null) {
+            String webViewHtml = getArguments().getString(WEBVIEW_HTML);
+            if (webViewHtml != null) {
+                mWebView.loadDataWithBaseURL(null, webViewHtml, "text/html", "utf-8", null);
+            }
+        }
 
         return v;
     }
 
-    public void updateWebViewContent(String webViewHtml) {
+    public void updateWebViewContent(@NonNull String webViewHtml) {
         mWebView.loadDataWithBaseURL(null, webViewHtml, "text/html", "utf-8", null);
     }
 
-    public static Fragment newInstance(String webViewHtml) {
+    public static Fragment newInstance(@NonNull String webViewHtml) {
         Fragment frag = new InfoFragment();
         Bundle b = new Bundle();
         b.putString(WEBVIEW_HTML, webViewHtml);
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/SettingsActivity.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/SettingsActivity.java
index 7761c99..fa80b2a 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/SettingsActivity.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/SettingsActivity.java
@@ -49,8 +49,9 @@ public class SettingsActivity extends AppCompatActivity {
 
     }
 
+    //
     public static class SettingsFragment extends PreferenceFragment
-            implements SharedPreferences.OnSharedPreferenceChangeListener {
+    implements SharedPreferences.OnSharedPreferenceChangeListener {
 
         private SharedPreferences mPreferences;
 
@@ -263,13 +264,11 @@ public class SettingsActivity extends AppCompatActivity {
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            case android.R.id.home:
-                onBackPressed();
-                return true;
-            default:
-                return super.onOptionsItemSelected(item);
+        if (item.getItemId() == android.R.id.home) {
+            onBackPressed();
+            return true;
         }
+        return super.onOptionsItemSelected(item);
     }
 
 }
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/TimePickerFragment.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/TimePickerFragment.java
index d583b3a..d5e7d70 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/TimePickerFragment.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/TimePickerFragment.java
@@ -18,6 +18,7 @@ package com.abhijitvalluri.android.fitnotifications;
 
 import android.app.AlertDialog;
 import android.app.Dialog;
+import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Build;
@@ -32,8 +33,6 @@ import android.widget.Button;
 import android.widget.TimePicker;
 import android.widget.Toast;
 
-import com.abhijitvalluri.android.fitnotifications.utils.Func;
-
 /**
  * TimePickerFragment hosts the time picker dialog.
  */
@@ -52,38 +51,48 @@ public class TimePickerFragment extends DialogFragment {
     private TimePicker mTimePicker;
     private int mOtherHour;
     private int mOtherMinute;
-    private String mOtherTimeFormatted;
     private int mRequestCode;
 
+    private Context mContext;
+
+    @Override
+    public void onAttach(@NonNull Context context) {
+        super.onAttach(context);
+        mContext = context;
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        mContext = null;
+    }
+
     @Override
     @NonNull
     public Dialog onCreateDialog(Bundle savedInstanceState) {
+        assert getArguments() != null; // Should never be null if created via newInstance
         int hour = getArguments().getInt(ARG_HOUR);
         int minute = getArguments().getInt(ARG_MINUTE);
         mOtherHour = getArguments().getInt(ARG_OTHER_HOUR);
         mOtherMinute = getArguments().getInt(ARG_OTHER_MINUTE);
-        mOtherTimeFormatted = DateFormat.getTimeFormat(getActivity()).format(
-                Func.convertHourMinute2Date(mOtherHour, mOtherMinute));
         mRequestCode = getArguments().getInt(ARG_REQUEST_CODE);
 
-        View v = LayoutInflater.from(getActivity()).inflate(R.layout.dialog_time, null);
+        View v = LayoutInflater.from(mContext).inflate(R.layout.dialog_time, null);
 
         mTimePicker = (TimePicker) v.findViewById(R.id.dialog_time_time_picker);
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             mTimePicker.setHour(hour);
             mTimePicker.setMinute(minute);
         } else {
-            //noinspection deprecation
             mTimePicker.setCurrentHour(hour);
-            //noinspection deprecation
             mTimePicker.setCurrentMinute(minute);
         }
-        mTimePicker.setIs24HourView(DateFormat.is24HourFormat(getActivity()));
+        mTimePicker.setIs24HourView(DateFormat.is24HourFormat(mContext));
 
         @StringRes int titleStringId = mRequestCode == AppSettingsActivity.START_TIME_REQUEST ?
                 R.string.start_time_heading : R.string.stop_time_heading;
 
-        final AlertDialog dialog = new AlertDialog.Builder(getActivity())
+        final AlertDialog dialog = new AlertDialog.Builder(mContext)
                 .setView(v)
                 .setTitle(titleStringId)
                 .setNegativeButton(android.R.string.cancel, null)
@@ -95,9 +104,7 @@ public class TimePickerFragment extends DialogFragment {
                             hour = mTimePicker.getHour();
                             minute = mTimePicker.getMinute();
                         } else {
-                            //noinspection deprecation
                             hour = mTimePicker.getCurrentHour();
-                            //noinspection deprecation
                             minute = mTimePicker.getCurrentMinute();
                         }
                         sendResult(mRequestCode, hour, minute);
@@ -113,9 +120,7 @@ public class TimePickerFragment extends DialogFragment {
                     hour = mTimePicker.getHour();
                     minute = mTimePicker.getMinute();
                 } else {
-                    //noinspection deprecation
                     hour = mTimePicker.getCurrentHour();
-                    //noinspection deprecation
                     minute = mTimePicker.getCurrentMinute();
                 }
                 Button positiveButton = ((AlertDialog)dialog).getButton(DialogInterface.BUTTON_POSITIVE);
@@ -147,7 +152,7 @@ public class TimePickerFragment extends DialogFragment {
             } else {
                 errToast = getString(R.string.stop_time_error);
             }
-            Toast.makeText(getContext(), errToast, Toast.LENGTH_SHORT).show();
+            Toast.makeText(mContext, errToast, Toast.LENGTH_SHORT).show();
         } else {
             positiveButton.setEnabled(true);
         }
@@ -158,7 +163,7 @@ public class TimePickerFragment extends DialogFragment {
         intent.putExtra(EXTRA_HOUR, hour);
         intent.putExtra(EXTRA_MINUTE, minute);
 
-        TimePickerListener listener = (TimePickerListener) getContext();
+        TimePickerListener listener = (TimePickerListener) mContext;
         listener.onActivityResult2(requestCode, intent);
     }
 
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/alobar/preference/NumberPickerPreference.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/alobar/preference/NumberPickerPreference.java
index d5ae103..439f04b 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/alobar/preference/NumberPickerPreference.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/alobar/preference/NumberPickerPreference.java
@@ -52,8 +52,8 @@ public class NumberPickerPreference extends DialogPreference {
     private final boolean wrapSelectorWheel;
 
     private NumberPicker picker;
-    private TextView beforeTV, afterTV;
-    private String beforeText, afterText;
+    private final String beforeText;
+    private final String afterText;
     private int value;
 
     public NumberPickerPreference(Context context, AttributeSet attrs) {
@@ -81,14 +81,14 @@ public class NumberPickerPreference extends DialogPreference {
         picker = new NumberPicker(getContext());
         picker.setLayoutParams(layoutParams);
 
-        beforeTV = new TextView(getContext());
+        TextView beforeTV = new TextView(getContext());
         beforeTV.setText(beforeText);
         beforeTV.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18.0f);
         beforeTV.setPadding(0,20,0,0);
         beforeTV.setGravity(Gravity.END);
         beforeTV.setTypeface(Typeface.DEFAULT_BOLD);
 
-        afterTV = new TextView(getContext());
+        TextView afterTV = new TextView(getContext());
         afterTV.setText(afterText);
         afterTV.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18.0f);
         afterTV.setPadding(0,0,0,20);
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/database/AppSelectionDbHelper.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/database/AppSelectionDbHelper.java
index 95abb4d..39aaf9c 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/database/AppSelectionDbHelper.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/database/AppSelectionDbHelper.java
@@ -35,8 +35,8 @@ import java.util.HashMap;
 public class AppSelectionDbHelper extends SQLiteOpenHelper {
     private static final int VERSION = 7;
     private static final String DATABASE_NAME = "fitNotificationAppSelection.db";
-    private HashMap<String, String> mDbAlterCommands;
-    private Context mContext;
+    private final HashMap<String, String> mDbAlterCommands;
+    private final Context mContext;
 
     public AppSelectionDbHelper(Context context) {
         super(context, DATABASE_NAME, null, VERSION);
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/database/AppSelectionDbSchema.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/database/AppSelectionDbSchema.java
index 7677ba2..ddfddd3 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/database/AppSelectionDbSchema.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/database/AppSelectionDbSchema.java
@@ -18,7 +18,6 @@ package com.abhijitvalluri.android.fitnotifications.database;
 
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.List;
 
 /**
  * Database Schema to store the Fit Notification app's app selection choices.
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/models/AppSelection.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/models/AppSelection.java
index 8a7bfeb..7800ad8 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/models/AppSelection.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/models/AppSelection.java
@@ -24,7 +24,7 @@ import android.os.Parcelable;
  */
 public class AppSelection implements Parcelable {
 
-    private String mAppPackageName;
+    private final String mAppPackageName;
     private String mAppName;
     private boolean mIsSelected;
     private String mFilterText;
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/BasicMessageExtractor.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/BasicMessageExtractor.java
index d3b3e23..b96eda6 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/BasicMessageExtractor.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/BasicMessageExtractor.java
@@ -55,9 +55,9 @@ class BasicMessageExtractor extends MessageExtractor {
     }
 
 
-    protected static boolean endsWith(CharSequence big, CharSequence small) {
-        return big != null && small != null && big.length() >= small.length()
-                && big.subSequence(big.length() - small.length(), big.length()).toString().contentEquals(small);
+    protected static boolean notEndsWith(CharSequence big, CharSequence small) {
+        return big == null || small == null || big.length() < small.length()
+                || !big.subSequence(big.length() - small.length(), big.length()).toString().contentEquals(small);
     }
 
 
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/GenericMessageExtractor.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/GenericMessageExtractor.java
index c6cef0e..6488074 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/GenericMessageExtractor.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/GenericMessageExtractor.java
@@ -14,7 +14,7 @@ import java.util.Map;
  */
 class GenericMessageExtractor extends BasicMessageExtractor {
 
-    private Map<String, String> mNotificationStringMap = new HashMap<>();
+    private final Map<String, String> mNotificationStringMap = new HashMap<>();
 
 
     @Override
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/GroupSummaryMessageExtractor.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/GroupSummaryMessageExtractor.java
index c70fb33..69d22a1 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/GroupSummaryMessageExtractor.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/GroupSummaryMessageExtractor.java
@@ -238,7 +238,7 @@ class GroupSummaryMessageExtractor extends BasicMessageExtractor {
         StringBuilder sb = new StringBuilder();
         for (; 0 <= pos && pos < lines.length; pos += step) {
             CharSequence message = senderPrefixPresent ? stripSender(lines[pos]) : lines[pos];
-            if (!matchesAnyPattern(message, mPhotoMessagePatterns) || !endsWith(sb, message)) {
+            if (!matchesAnyPattern(message, mPhotoMessagePatterns) || notEndsWith(sb, message)) {
                 if (sb.length() > 0) {
                     sb.append(' ');
                 }
@@ -274,7 +274,7 @@ class GroupSummaryMessageExtractor extends BasicMessageExtractor {
             }
 
             CharSequence message = stripSender(lines[pos]);
-            if (!matchesAnyPattern(message, mPhotoMessagePatterns) || !endsWith(senderMessages, message)) {
+            if (!matchesAnyPattern(message, mPhotoMessagePatterns) || notEndsWith(senderMessages, message)) {
                 senderMessages.append(' ').append(message);
             }
         }
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/NLService.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/NLService.java
index 588ac3d..52a22f9 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/NLService.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/NLService.java
@@ -28,6 +28,7 @@ import android.content.res.Resources;
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.os.PowerManager;
 import android.preference.PreferenceManager;
 import android.service.notification.NotificationListenerService;
@@ -63,7 +64,7 @@ public class NLService extends NotificationListenerService {
     private static final MessageExtractor sDefaultExtractor = new GenericMessageExtractor();
     private final Map<String, MessageExtractor> mMessageExtractors = new TreeMap<>();
 
-    private final Handler mHandler = new Handler();
+    private final Handler mHandler = new Handler(Looper.getMainLooper());
 
     private static List<String> mSelectedAppsPackageNames;
     private static boolean mIsServiceEnabled;
@@ -289,11 +290,11 @@ public class NLService extends NotificationListenerService {
         }
 
         if (mDebugLog.isEnabled()) {
-            mDebugLog.writeLog("Unfiltered and undiscarded");
+            mDebugLog.writeLog("Unfiltered and retained (not discarded)");
         }
 
         if (mLimitNotifications) {
-            Long currentTimeMillis = System.currentTimeMillis();
+            long currentTimeMillis = System.currentTimeMillis();
             Long lastNotificationTime = mLastNotificationTimeMap.get(appPackageName);
             if (lastNotificationTime != null && currentTimeMillis < lastNotificationTime + mNotifLimitDurationMillis) {
                 return;
@@ -325,7 +326,7 @@ public class NLService extends NotificationListenerService {
             mDebugLog.writeLog("Constructing notification");
         }
 
-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this);
+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, Constants.NOTIFICATION_CHANNEL_ID_CURRENT);
         builder.setSmallIcon(R.drawable.ic_sms_white_24dp)
                 .setContent(contentView)
                 .setContentTitle(notificationTitle)
@@ -335,11 +336,7 @@ public class NLService extends NotificationListenerService {
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
             // prevent notification from appearing on the lock screen
-            builder.setVisibility(Notification.VISIBILITY_SECRET);
-        }
-
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-            builder.setChannelId(Constants.NOTIFICATION_CHANNEL_ID_CURRENT);
+            builder.setVisibility(NotificationCompat.VISIBILITY_SECRET);
         }
 
         if (mSplitNotification && notificationText.length() > mFitbitNotifCharLimit) {
@@ -381,7 +378,6 @@ public class NLService extends NotificationListenerService {
                     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                         cancelNotification(sbn.getKey());
                     } else {
-                        //noinspection deprecation
                         cancelNotification(appPackageName, sbn.getTag(), sbn.getId());
                     }
                 }
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/setup/AppIntroActivity.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/setup/AppIntroActivity.java
index b6731ec..339978f 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/setup/AppIntroActivity.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/setup/AppIntroActivity.java
@@ -30,6 +30,7 @@ import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.preference.PreferenceManager;
 import android.provider.Settings;
 import androidx.core.app.NotificationManagerCompat;
@@ -110,9 +111,9 @@ public class AppIntroActivity extends IntroActivity {
     private void addEnableNotificationAccessSlide() {
         Set<String> EnabledListenerPackagesSet = NotificationManagerCompat.
                 getEnabledListenerPackages(this);
+        CustomSlideFragment fragment = new CustomSlideFragment();
         if (EnabledListenerPackagesSet.contains(Constants.PACKAGE_NAME)
                 && EnabledListenerPackagesSet.contains(Constants.FITBIT_PACKAGE_NAME)) {
-            CustomSlideFragment fragment = new CustomSlideFragment();
             fragment.setCanGoForward(true)
                     .setCanGoBackward(true)
                     .setTitleText(R.string.intro_enable_access_success_title)
@@ -125,7 +126,6 @@ public class AppIntroActivity extends IntroActivity {
                     .backgroundDark(R.color.purpleDark_intro)
                     .build();
         } else {
-            CustomSlideFragment fragment = new CustomSlideFragment();
             fragment.setCanGoForward(false)
                     .setCanGoBackward(true)
                     .setTitleText(R.string.intro_enable_access_title)
@@ -163,7 +163,7 @@ public class AppIntroActivity extends IntroActivity {
         final int placeholderNotifDismissDelayMillis = preferences.getInt(
                 getString(R.string.placeholder_dismiss_delay_key), Constants.DEFAULT_DELAY_SECONDS)
                 *1000;
-        final Handler handler = new Handler();
+        final Handler handler = new Handler(Looper.getMainLooper());
 
         // Demo
         addSlide(new SimpleSlide.Builder()
@@ -179,30 +179,22 @@ public class AppIntroActivity extends IntroActivity {
                     public void onClick(View v) {
                         Bundle newExtra = new Bundle();
 
-                        NotificationCompat.Builder builder = new NotificationCompat.Builder(AppIntroActivity.this);
+                        NotificationCompat.Builder builder = new NotificationCompat.Builder(AppIntroActivity.this, Constants.NOTIFICATION_CHANNEL_ID_CURRENT);
                         String notificationText = "Sample notification subject";
                         String notificationBigText = "Sample notification body. This is where the details of the notification will be shown.";
 
 
-                        StringBuilder sb = new StringBuilder();
-                        sb.append("[").append("example").append("] ");
-                        sb.append(notificationText);
-                        if (notificationBigText.length() > 0) {
-                            sb.append(" -- ").append(notificationBigText);
-                        }
-
                         RemoteViews contentView = new RemoteViews(getPackageName(), R.layout.custom_notification);
                         contentView.setTextViewText(R.id.customNotificationText, getString(R.string.placeholder_notification_text));
+                        String content = "[" + "example" + "] " +
+                                notificationText +
+                                " -- " + notificationBigText;
                         builder.setSmallIcon(R.drawable.ic_sms_white_24dp)
-                                .setContentText(sb.toString())
+                                .setContentText(content)
                                 .setExtras(newExtra)
                                 .setContentTitle("Sample Notification Title")
                                 .setContent(contentView);
 
-                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                            builder.setChannelId(Constants.NOTIFICATION_CHANNEL_ID_CURRENT);
-                        }
-
                         // Creates an explicit intent for the SettingsActivity in the app
                         Intent settingsIntent = new Intent(AppIntroActivity.this, SettingsActivity.class);
 
@@ -389,7 +381,8 @@ public class AppIntroActivity extends IntroActivity {
 
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        switch(requestCode) {
+        super.onActivityResult(requestCode, resultCode, data);
+        switch (requestCode) {
             case ENABLE_NOTIFICATION_ACCESS_INTENT: {
                 Set<String> EnabledListenerPackagesSet = NotificationManagerCompat.
                         getEnabledListenerPackages(this);
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/setup/CustomSlideFragment.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/setup/CustomSlideFragment.java
index 5b953a0..fc6ee49 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/setup/CustomSlideFragment.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/setup/CustomSlideFragment.java
@@ -16,8 +16,10 @@
 
 package com.abhijitvalluri.android.fitnotifications.setup;
 
+import android.content.Context;
 import android.os.Bundle;
 import androidx.annotation.DrawableRes;
+import androidx.annotation.NonNull;
 import androidx.annotation.StringRes;
 import androidx.core.content.ContextCompat;
 import android.view.LayoutInflater;
@@ -45,6 +47,20 @@ public class CustomSlideFragment extends SlideFragment {
     private int mDescResId;
     private int mImageResId;
 
+    private Context mContext;
+
+    @Override
+    public void onAttach(@NonNull Context context) {
+        super.onAttach(context);
+        mContext = context;
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        mContext = null;
+    }
+
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
@@ -80,13 +96,13 @@ public class CustomSlideFragment extends SlideFragment {
 
         if (mTitleResId != 0) {
             mTitleTV.setText(mTitleResId);
-            mTitleTV.setTextColor(ContextCompat.getColor(this.getContext(),
+            mTitleTV.setTextColor(ContextCompat.getColor(mContext,
                     com.heinrichreimersoftware.materialintro.R.color.mi_text_color_primary_dark));
         }
 
         if (mDescResId != 0) {
             mDescriptionTV.setText(mDescResId);
-            mDescriptionTV.setTextColor(ContextCompat.getColor(this.getContext(),
+            mDescriptionTV.setTextColor(ContextCompat.getColor(mContext,
                     com.heinrichreimersoftware.materialintro.R.color.mi_text_color_secondary_dark));
         }
     }
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/AppSelectionsStore.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/AppSelectionsStore.java
index 74ef543..eeb7e5a 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/AppSelectionsStore.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/AppSelectionsStore.java
@@ -67,11 +67,9 @@ public class AppSelectionsStore {
         mPackageToAppName = new HashMap<>();
         mSelectedAppsPackageNames = new ArrayList<>();
 
-        AppSelectionCursorWrapper cursor = queryAppSelections(null, null);
-
-        try {
+        try (AppSelectionCursorWrapper cursor = queryAppSelections(null, null)) {
             cursor.moveToFirst();
-            while(!cursor.isAfterLast()) {
+            while (!cursor.isAfterLast()) {
                 AppSelection appSelection = cursor.getAppSelection();
                 appSelections.add(appSelection);
                 mPackageToAppName.put(appSelection.getAppPackageName(), appSelection.getAppName());
@@ -80,8 +78,6 @@ public class AppSelectionsStore {
                 }
                 cursor.moveToNext();
             }
-        } finally {
-            cursor.close();
         }
 
         Collections.sort(appSelections, new Comparator<AppSelection>() {
@@ -125,19 +121,16 @@ public class AppSelectionsStore {
     }
 
     public AppSelection getAppSelection(String appPackageName) {
-        AppSelectionCursorWrapper cursor = queryAppSelections(
-                AppChoiceTable.Cols.APP_PACKAGE_NAME + " = ?",
-                new String[]{appPackageName});
 
-        try {
+        try (AppSelectionCursorWrapper cursor = queryAppSelections(
+                AppChoiceTable.Cols.APP_PACKAGE_NAME + " = ?",
+                new String[]{appPackageName})) {
             if (cursor.getCount() == 0) {
                 return null;
             }
 
             cursor.moveToFirst();
             return cursor.getAppSelection();
-        } finally {
-            cursor.close();
         }
     }
 
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/Constants.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/Constants.java
index 19a619c..4befe07 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/Constants.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/Constants.java
@@ -35,5 +35,4 @@ public class Constants {
     public static final String NOTIFICATION_CHANNEL_ID_005 = "fitNotifications_channel_005";
     public static final String NOTIFICATION_CHANNEL_ID_007 = "fitNotifications_channel_007";
     public static final String NOTIFICATION_CHANNEL_ID_CURRENT = "fitNotifications_channel_009";
-    public static final Date TODAY = new Date();
 }
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/DebugLog.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/DebugLog.java
index 9140b34..2fd7b85 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/DebugLog.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/DebugLog.java
@@ -14,6 +14,7 @@ import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Date;
+import java.util.Locale;
 
 /**
  * Created by Abhijit Valluri on 6/14/2017.
@@ -30,11 +31,12 @@ public class DebugLog {
     public static final int STATUS_IO_EXCEPTION = -2;
 
 
-    private File mLogFile;
+    private final File mLogFile;
+    private final DateFormat mDateFormat;
+
     private FileOutputStream mLog;
     private int mFileStatus;
     private int mWriteStatus;
-    private DateFormat mDateFormat;
     private boolean mEnabled;
 
 
@@ -49,7 +51,7 @@ public class DebugLog {
         mLogFile = new File(context.getExternalFilesDir(null), LOG_FILENAME);
         mFileStatus = STATUS_UNINITIALIZED;
         mWriteStatus = STATUS_UNINITIALIZED;
-        mDateFormat  = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
+        mDateFormat  = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss", Locale.US);
     }
 
     public int getFileStatus() {
@@ -106,7 +108,7 @@ public class DebugLog {
         return mWriteStatus;
     }
 
-    public int writeLog(String string) {
+    public void writeLog(String string) {
         if (mFileStatus == STATUS_LOG_OPENED) {
             try {
                 if (mLogFile.length() >= Math.pow(10, 7)) {
@@ -117,7 +119,7 @@ public class DebugLog {
             } catch (SecurityException e) {
                 Log.e(LOG_FILENAME, "Unable to reset Fit Notifications Log: " + e.getMessage());
                 mWriteStatus = STATUS_IO_EXCEPTION;
-                return mWriteStatus;
+                return;
             }
 
             try {
@@ -130,11 +132,7 @@ public class DebugLog {
                 Log.e(LOG_FILENAME, "Unable to write to Fit Notifications Log: " + e.getMessage());
                 mWriteStatus = STATUS_IO_EXCEPTION;
             }
-
-            return mWriteStatus;
         }
-
-        return mFileStatus;
     }
 
     private int deInit() {
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/TranslitUtil.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/TranslitUtil.java
index 0360e6b..c24edb4 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/TranslitUtil.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/TranslitUtil.java
@@ -11,6 +11,7 @@ import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
+import java.nio.charset.StandardCharsets;
 import java.util.Arrays;
 import java.util.SortedSet;
 import java.util.TreeSet;
@@ -59,7 +60,7 @@ public class TranslitUtil {
         SortedSet<SymbolReplacement> replacements = new TreeSet<>();
 
         // load the symbols and their replacements
-        try (BufferedReader br = new BufferedReader(new InputStreamReader(is, "UTF-8"))) {
+        try (BufferedReader br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8))) {
             String line;
             while ((line = br.readLine()) != null) {
                 if (line.length() == 0 || line.charAt(0) == '#' || line.trim().length() == 0) {
@@ -84,15 +85,15 @@ public class TranslitUtil {
             Log.e(TAG, "Error loading transliteration replacements", e);
         }
 
-        try { is.close(); } catch (IOException e) { }
+        try { is.close(); } catch (IOException ignored) { }
 
         return replacements;
     }
 
 
     private static class SymbolReplacement implements Comparable<SymbolReplacement> {
-        private int symbol;
-        private String replacement;
+        private final int symbol;
+        private final String replacement;
 
 
         public SymbolReplacement(int symbol, String replacement) {
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/widget/ServiceToggle.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/widget/ServiceToggle.java
index fe84432..10a402b 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/widget/ServiceToggle.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/widget/ServiceToggle.java
@@ -59,7 +59,7 @@ public class ServiceToggle extends AppWidgetProvider {
 
             views.setOnClickPendingIntent(
                                     R.id.widgetToggleButton,
-                                    getPendingSelfIntent(context, appWidgetId, TOGGLE_CLICKED));
+                                    getPendingSelfIntent(context, appWidgetId));
 
             // Tell the AppWidgetManager to perform an update on the current app widget
             appWidgetManager.updateAppWidget(appWidgetId, views);
@@ -92,16 +92,16 @@ public class ServiceToggle extends AppWidgetProvider {
 
             views.setOnClickPendingIntent(
                     R.id.widgetToggleButton,
-                    getPendingSelfIntent(context, 0, TOGGLE_CLICKED));
+                    getPendingSelfIntent(context, 0));
 
             ComponentName componentName = new ComponentName(context, ServiceToggle.class);
             appWidgetManager.updateAppWidget(componentName, views);
         }
     }
 
-    private PendingIntent getPendingSelfIntent(Context context, int appWidgetId, String action) {
+    private PendingIntent getPendingSelfIntent(Context context, int appWidgetId) {
         Intent intent = new Intent(context, getClass());
-        intent.setAction(action);
+        intent.setAction(ServiceToggle.TOGGLE_CLICKED);
         return PendingIntent.getBroadcast(context, appWidgetId, intent, 0);
     }
 }
