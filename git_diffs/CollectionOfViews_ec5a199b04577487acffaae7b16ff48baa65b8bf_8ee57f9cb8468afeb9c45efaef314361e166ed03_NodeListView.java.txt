diff --git a/app/src/main/java/ch/bailu/aat/activities/AboutActivity.java b/app/src/main/java/ch/bailu/aat/activities/AboutActivity.java
index 406dbfd2..be3ecddf 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AboutActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AboutActivity.java
@@ -4,7 +4,6 @@ import android.os.Bundle;
 import android.widget.LinearLayout;
 
 import ch.bailu.aat.R;
-import ch.bailu.aat.gpx.InfoID;
 import ch.bailu.aat.views.ContentView;
 import ch.bailu.aat.views.HtmlScrollTextView;
 import ch.bailu.aat.views.MainControlBar;
@@ -43,9 +42,7 @@ public class AboutActivity extends AbsDispatcher {
 
 
     private MultiView createMultiView() {
-        MultiView mv = new MultiView(this,
-                SOLID_KEY,
-                InfoID.ALL);
+        MultiView mv = new MultiView(this, SOLID_KEY);
         mv.add(new HtmlScrollTextView(this, R.string.README_about_html),
                 getString(R.string.intro_about));
         mv.add(new HtmlScrollTextView(this, R.string.README_enduser_html),
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java
index 4d6ba1f2..132dfa40 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java
@@ -9,18 +9,6 @@ import android.widget.ImageButton;
 import java.io.File;
 
 import ch.bailu.aat.R;
-import ch.bailu.aat.description.AverageSpeedDescription;
-import ch.bailu.aat.description.CaloriesDescription;
-import ch.bailu.aat.description.ContentDescription;
-import ch.bailu.aat.description.DateDescription;
-import ch.bailu.aat.description.DistanceDescription;
-import ch.bailu.aat.description.EndDateDescription;
-import ch.bailu.aat.description.MaximumSpeedDescription;
-import ch.bailu.aat.description.NameDescription;
-import ch.bailu.aat.description.PathDescription;
-import ch.bailu.aat.description.PauseDescription;
-import ch.bailu.aat.description.TimeDescription;
-import ch.bailu.aat.description.TrackSizeDescription;
 import ch.bailu.aat.dispatcher.CurrentLocationSource;
 import ch.bailu.aat.dispatcher.EditorSource;
 import ch.bailu.aat.dispatcher.IteratorSource;
@@ -36,13 +24,7 @@ import ch.bailu.aat.views.ContentView;
 import ch.bailu.aat.views.ControlBar;
 import ch.bailu.aat.views.MainControlBar;
 import ch.bailu.aat.views.description.MultiView;
-import ch.bailu.aat.views.description.TrackDescriptionView;
-import ch.bailu.aat.views.description.VerticalView;
-import ch.bailu.aat.views.graph.DistanceAltitudeGraphView;
-import ch.bailu.aat.views.graph.DistanceSpeedGraphView;
-import ch.bailu.aat.views.map.MapFactory;
 import ch.bailu.aat.views.map.OsmInteractiveView;
-import ch.bailu.aat.views.preferences.VerticalScrollView;
 
 public abstract class AbsFileContentActivity extends AbsDispatcher implements OnClickListener {
 
@@ -124,7 +106,6 @@ public abstract class AbsFileContentActivity extends AbsDispatcher implements On
         addSource(currentFile);
         addSource(editor_source);
 
-        addTarget(multiView);
         addTarget(busyButton.getBusyControl(InfoID.FILEVIEW), InfoID.FILEVIEW);
 
     }
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
index 91281807..0ae7cecd 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
@@ -110,23 +110,19 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
         listView.setOnItemClickListener(this);
         registerForContextMenu(listView);
 
-
         filter.add(new TitleView(this, getLabel()+ " - " + filter_label));
         filter.addAllFilterViews(map.map);
-
+        filter.addAllContent(this, filter_content, InfoID.LIST_SUMMARY);
 
         summary.add(new TitleView(this, getLabel() + " - " + summary_label));
+        summary.addAllContent(this, summary_content, InfoID.LIST_SUMMARY);
 
-        multiView = new MultiView(this, solid_key, InfoID.ALL);
+        multiView = new MultiView(this, solid_key);
 
         multiView.add(listView, list_label);
-        multiView.add(map, map, map_label);
-        multiView.add(filter,
-                filter.addAllContent(filter_content, InfoID.LIST_SUMMARY),
-                filter_label);
-        multiView.add(summary, summary.addAllContent(summary_content,
-                InfoID.LIST_SUMMARY),
-                summary_label);
+        multiView.add(map, map_label);
+        multiView.add(filter, filter_label);
+        multiView.add(summary, summary_label);
 
         return multiView;
     }
@@ -135,9 +131,6 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
 
 
     private void createDispatcher() {
-
-        addTarget(multiView);
-
         addSource(new IteratorSource.Summary(getServiceContext()));
         addSource(new OverlaySource(getServiceContext()));
         addSource(new CurrentLocationSource(getServiceContext()));
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
index 73641df5..c05079a1 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
@@ -71,7 +71,7 @@ public abstract class AbsOsmApiActivity extends AbsDispatcher implements OnClick
         setContentView(createContentView());
 
         addSource(new CustomFileSource(getServiceContext(),osmApi.getResultFile().toString()));
-        addTarget(list);
+        addTarget(list, InfoID.FILEVIEW);
 
         setQueryTextFromIntent();
     }  
@@ -128,10 +128,7 @@ public abstract class AbsOsmApiActivity extends AbsDispatcher implements OnClick
         view.addView(postLabel, layout);
         AppTheme.themify(postLabel);
 
-        list = new NodeListView(getServiceContext(),SOLID_KEY,
-                InfoID.FILEVIEW);
-
-
+        list = new NodeListView(getServiceContext());
         view.addView(list,layout);
 
         return view;
diff --git a/app/src/main/java/ch/bailu/aat/activities/FileContentActivity.java b/app/src/main/java/ch/bailu/aat/activities/FileContentActivity.java
index c1da32d6..6bc4472f 100644
--- a/app/src/main/java/ch/bailu/aat/activities/FileContentActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/FileContentActivity.java
@@ -1,6 +1,7 @@
 package ch.bailu.aat.activities;
 
 import android.os.Bundle;
+import android.view.View;
 
 import ch.bailu.aat.description.AverageSpeedDescription;
 import ch.bailu.aat.description.CaloriesDescription;
@@ -17,7 +18,6 @@ import ch.bailu.aat.description.TrackSizeDescription;
 import ch.bailu.aat.gpx.InfoID;
 import ch.bailu.aat.services.editor.EditorHelper;
 import ch.bailu.aat.views.description.MultiView;
-import ch.bailu.aat.views.description.TrackDescriptionView;
 import ch.bailu.aat.views.description.VerticalView;
 import ch.bailu.aat.views.graph.DistanceAltitudeGraphView;
 import ch.bailu.aat.views.graph.DistanceSpeedGraphView;
@@ -57,17 +57,16 @@ public class FileContentActivity extends AbsFileContentActivity{
         };
 
         VerticalScrollView summary = new VerticalScrollView(this);
-        VerticalView graph = new VerticalView(this, SOLID_KEY,
-                InfoID.FILEVIEW,
-                new TrackDescriptionView[] {
-                        new DistanceAltitudeGraphView(this, SOLID_KEY),
-                        new DistanceSpeedGraphView(this, SOLID_KEY)});
+        summary.addAllContent(this, summaryData, InfoID.FILEVIEW);
 
+        View graph = new VerticalView(this, new View[] {
+                        new DistanceAltitudeGraphView(this, this, InfoID.FILEVIEW),
+                        new DistanceSpeedGraphView(this, this, InfoID.FILEVIEW)});
 
-        MultiView mv = new MultiView(this, SOLID_KEY, InfoID.ALL);
-        mv.add(summary, summary.addAllContent(summaryData, InfoID.FILEVIEW));
+        MultiView mv = new MultiView(this, SOLID_KEY);
+        mv.add(summary);
         mv.add(map);
-        mv.addT(graph);
+        mv.add(graph);
         return mv;
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java b/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java
index 1fd2756a..91be05c3 100644
--- a/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java
@@ -57,25 +57,21 @@ public class GpxEditorActivity extends AbsFileContentActivity
         };
 
 
-        NodeListView wayList = new NodeListView(getServiceContext(),
-                SOLID_KEY,
-                InfoID.EDITOR_OVERLAY
-                );
+        NodeListView nodeList = new NodeListView(getServiceContext());
+        addTarget(nodeList, InfoID.EDITOR_OVERLAY);
 
         VerticalScrollView summary = new VerticalScrollView(this);
-        DistanceAltitudeGraphView graph =new DistanceAltitudeGraphView(this, SOLID_KEY);
+        summary.addAllContent(this, summaryData, InfoID.EDITOR_OVERLAY);
 
+        DistanceAltitudeGraphView graph = new DistanceAltitudeGraphView(this, this, InfoID.EDITOR_OVERLAY);
 
-        MultiView mv = new MultiView(this, SOLID_KEY, InfoID.ALL);
+        MultiView multiView = new MultiView(this, SOLID_KEY);
 
-        mv.addT(wayList);
-        mv.add(map);
-        mv.addT(new VerticalView(this, SOLID_KEY, InfoID.EDITOR_OVERLAY,
-                new View[] {summary, graph},
-                new OnContentUpdatedInterface[]
-                        {summary.addAllContent(summaryData, InfoID.EDITOR_OVERLAY), graph}
-        ));
-        return mv;
+        multiView.add(nodeList);
+        multiView.add(map);
+        multiView.add(new VerticalView(this, new View[] {summary, graph}));
+
+        return multiView;
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/GpxViewActivity.java b/app/src/main/java/ch/bailu/aat/activities/GpxViewActivity.java
index 804e1b09..cb1b3383 100644
--- a/app/src/main/java/ch/bailu/aat/activities/GpxViewActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/GpxViewActivity.java
@@ -29,21 +29,19 @@ import ch.bailu.aat.dispatcher.TrackerSource;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.gpx.InfoID;
 import ch.bailu.aat.helpers.AppLayout;
-import ch.bailu.aat.helpers.file.FileAction;
 import ch.bailu.aat.helpers.ToolTip;
+import ch.bailu.aat.helpers.file.FileAction;
 import ch.bailu.aat.menus.ContentMenu;
 import ch.bailu.aat.views.BusyButton;
 import ch.bailu.aat.views.ContentView;
 import ch.bailu.aat.views.ControlBar;
 import ch.bailu.aat.views.MainControlBar;
 import ch.bailu.aat.views.description.MultiView;
-import ch.bailu.aat.views.description.TrackDescriptionView;
 import ch.bailu.aat.views.description.VerticalView;
 import ch.bailu.aat.views.graph.DistanceAltitudeGraphView;
 import ch.bailu.aat.views.graph.DistanceSpeedGraphView;
 import ch.bailu.aat.views.map.OsmInteractiveView;
 import ch.bailu.aat.views.map.overlay.CurrentLocationOverlay;
-import ch.bailu.aat.views.map.overlay.OsmOverlay;
 import ch.bailu.aat.views.map.overlay.control.InformationBarOverlay;
 import ch.bailu.aat.views.map.overlay.control.NavigationBarOverlay;
 import ch.bailu.aat.views.map.overlay.gpx.GpxDynOverlay;
@@ -122,7 +120,6 @@ public class GpxViewActivity extends AbsDispatcher
     private MultiView createMultiView() {
         map = new OsmInteractiveView(getServiceContext(), this, SOLID_KEY);
 
-
         map.add(new GpxOverlayListOverlay(map, this, getServiceContext()));
         map.add(new GpxDynOverlay(map, getServiceContext(), InfoID.FILEVIEW));
         map.add(new CurrentLocationOverlay(map, this));
@@ -131,7 +128,6 @@ public class GpxViewActivity extends AbsDispatcher
         map.add(new InformationBarOverlay(map, this));
 
 
-
         final ContentDescription summaryData[] = {
                 new NameDescription(this),
                 new PathDescription(this),
@@ -145,21 +141,20 @@ public class GpxViewActivity extends AbsDispatcher
                 new CaloriesDescription(this),
                 new TrackSizeDescription(this),
         };
-
         VerticalScrollView summary = new VerticalScrollView(this);
-        VerticalView graph = new VerticalView(this, SOLID_KEY, InfoID.FILEVIEW,
-                new TrackDescriptionView[] {
-                        new DistanceAltitudeGraphView(this, SOLID_KEY),
-                        new DistanceSpeedGraphView(this, SOLID_KEY)
-                });
+        summary.addAllContent(this, summaryData, InfoID.FILEVIEW);
 
+        View graph = new VerticalView(this, new View[] {
+                new DistanceAltitudeGraphView(this, this, InfoID.FILEVIEW),
+                new DistanceSpeedGraphView(this, this, InfoID.FILEVIEW)
+        });
 
-        MultiView mv = new MultiView(this, SOLID_KEY, InfoID.ALL);
-        mv.add(summary, summary.addAllContent(summaryData, InfoID.FILEVIEW));
-        mv.add(map);
-        mv.addT(graph);
+        multiView = new MultiView(this, SOLID_KEY);
+        multiView.add(summary);
+        multiView.add(map);
+        multiView.add(graph);
 
-        return mv;
+        return multiView;
     }
 
 
@@ -169,7 +164,6 @@ public class GpxViewActivity extends AbsDispatcher
         addSource(new OverlaySource(getServiceContext()));
         addSource(new CustomFileSource(getServiceContext(), fileID));
 
-        addTarget(multiView);
         addTarget(this, InfoID.FILEVIEW);
         addTarget(busyButton.getBusyControl(InfoID.FILEVIEW), InfoID.FILEVIEW);
     }
diff --git a/app/src/main/java/ch/bailu/aat/activities/MapActivity.java b/app/src/main/java/ch/bailu/aat/activities/MapActivity.java
index 4173afa9..57d274ff 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MapActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MapActivity.java
@@ -109,7 +109,6 @@ public class MapActivity extends AbsDispatcher implements OnClickListener{
 
 
     private void createDispatcher() {
-        addTarget(map);
         addTarget(trackerState, InfoID.TRACKER);
         addTarget(gpsState, InfoID.LOCATION);
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/NodeDetailActivity.java b/app/src/main/java/ch/bailu/aat/activities/NodeDetailActivity.java
index 310b7c21..bf4078fe 100644
--- a/app/src/main/java/ch/bailu/aat/activities/NodeDetailActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/NodeDetailActivity.java
@@ -22,13 +22,8 @@ import ch.bailu.aat.views.ControlBar;
 import ch.bailu.aat.views.HtmlScrollTextView;
 import ch.bailu.aat.views.MainControlBar;
 import ch.bailu.aat.views.description.VerticalView;
+import ch.bailu.aat.views.map.MapFactory;
 import ch.bailu.aat.views.map.OsmInteractiveView;
-import ch.bailu.aat.views.map.overlay.CurrentLocationOverlay;
-import ch.bailu.aat.views.map.overlay.OsmOverlay;
-import ch.bailu.aat.views.map.overlay.control.InformationBarOverlay;
-import ch.bailu.aat.views.map.overlay.control.NavigationBarOverlay;
-import ch.bailu.aat.views.map.overlay.gpx.GpxDynOverlay;
-import ch.bailu.aat.views.map.overlay.grid.GridDynOverlay;
 
 public class NodeDetailActivity extends AbsDispatcher
         implements OnClickListener, OnContentUpdatedInterface {
@@ -82,41 +77,17 @@ public class NodeDetailActivity extends AbsDispatcher
 
 
     private VerticalView createVerticalView() {
-        map = new OsmInteractiveView(getServiceContext(), this, SOLID_KEY);
-
+        map = new MapFactory(this, SOLID_KEY).node();
 
         text=new HtmlScrollTextView(this);
         text.enableAutoLink();
 
-        View views[] = {
-                text,
-                map,
-        };
-
-        OnContentUpdatedInterface targets[]  = {
-                OnContentUpdatedInterface.NULL,
-                map
-        };
-
-        return new VerticalView(this, SOLID_KEY, InfoID.ALL, views, targets);
+        return new VerticalView(this, new View[] {text, map});
     }
 
 
     private void createDispatcher() {
-        OsmOverlay overlayList[] = {
-                new GpxDynOverlay(map, getServiceContext(), InfoID.TRACKER),
-                new GpxDynOverlay(map, getServiceContext(), InfoID.FILEVIEW),
-                new CurrentLocationOverlay(map, this),
-                new GridDynOverlay(map, getServiceContext()),
-                new NavigationBarOverlay(map, this),
-                new InformationBarOverlay(map, this),
-
-        };
-        map.add(overlayList);
-
-        addTarget(verticalView);
         addTarget(this, InfoID.FILEVIEW);
-        addTarget(map);
         addSource(new CurrentLocationSource(getServiceContext()));
         addSource(new CustomFileSource(getServiceContext(), fileID));
     }
diff --git a/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java b/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java
index 5a82e18c..832b0073 100644
--- a/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java
@@ -4,7 +4,6 @@ import android.os.Bundle;
 import android.widget.LinearLayout;
 
 import ch.bailu.aat.R;
-import ch.bailu.aat.gpx.InfoID;
 import ch.bailu.aat.preferences.SolidPreset;
 import ch.bailu.aat.views.ContentView;
 import ch.bailu.aat.views.MainControlBar;
@@ -41,7 +40,7 @@ public class PreferencesActivity extends AbsDispatcher {
 
 
     private MultiView createMultiView() {
-        MultiView mv = new MultiView(this, SOLID_KEY, InfoID.ALL);
+        MultiView mv = new MultiView(this, SOLID_KEY);
 
         final int l = new SolidPreset(this).length();
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/SplitViewActivity.java b/app/src/main/java/ch/bailu/aat/activities/SplitViewActivity.java
index d843acbf..916b843c 100644
--- a/app/src/main/java/ch/bailu/aat/activities/SplitViewActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/SplitViewActivity.java
@@ -26,7 +26,6 @@ import ch.bailu.aat.views.ControlBar;
 import ch.bailu.aat.views.MainControlBar;
 import ch.bailu.aat.views.description.CockpitView;
 import ch.bailu.aat.views.description.MultiView;
-import ch.bailu.aat.views.description.TrackDescriptionView;
 import ch.bailu.aat.views.description.TrackerStateButton;
 import ch.bailu.aat.views.graph.DistanceAltitudeGraphView;
 import ch.bailu.aat.views.graph.DistanceSpeedGraphView;
@@ -75,7 +74,7 @@ public class SplitViewActivity extends AbsDispatcher implements OnClickListener{
     }
 
 
-    private TrackDescriptionView createMultiView() {
+    private View createMultiView() {
         ContentDescription[] cockpitA = new ContentDescription[] {
                 new DistanceDescription(this),
                 new AltitudeDescription(this),
@@ -90,11 +89,12 @@ public class SplitViewActivity extends AbsDispatcher implements OnClickListener{
 
         final OsmInteractiveView mapViewAlt = new MapFactory(this, SOLID_KEY).split();
 
-        multiView = new MultiView(this, SOLID_KEY, InfoID.TRACKER);
-        multiView.addT(new CockpitView(this, SOLID_KEY, InfoID.TRACKER, cockpitA));
-        multiView.addT(new CockpitView(this, SOLID_KEY, InfoID.TRACKER, cockpitB));
-        multiView.addT(new DistanceAltitudeGraphView(this, SOLID_KEY));
-        multiView.addT(new DistanceSpeedGraphView(this, SOLID_KEY));
+        multiView = new MultiView(this, SOLID_KEY);
+
+        multiView.add(new CockpitView(this, this, cockpitA));
+        multiView.add(new CockpitView(this, this, cockpitB));
+        multiView.add(new DistanceAltitudeGraphView(this, this, InfoID.TRACKER));
+        multiView.add(new DistanceSpeedGraphView(this, this, InfoID.TRACKER));
         multiView.add(mapViewAlt);
 
         return multiView;
@@ -111,15 +111,14 @@ public class SplitViewActivity extends AbsDispatcher implements OnClickListener{
         bar.addView(trackerState);
         bar.setOnClickListener1(this);
 
+        addTarget(trackerState, InfoID.TRACKER);
+
+
         return bar;
     }
 
 
     private void createDispatcher() {
-        addTarget(multiView);
-        addTarget(trackerState, InfoID.TRACKER);
-        addTarget(mapView);
-
         addSource(new EditorSource(getServiceContext(),edit));
         addSource(new TrackerSource(getServiceContext()));
         addSource(new CurrentLocationSource(getServiceContext()));
diff --git a/app/src/main/java/ch/bailu/aat/activities/TestActivity.java b/app/src/main/java/ch/bailu/aat/activities/TestActivity.java
index a77d3615..b2ffd937 100644
--- a/app/src/main/java/ch/bailu/aat/activities/TestActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/TestActivity.java
@@ -47,7 +47,6 @@ import ch.bailu.aat.views.MainControlBar;
 import ch.bailu.aat.views.StatusTextView;
 import ch.bailu.aat.views.description.MultiView;
 import ch.bailu.aat.views.map.OsmInteractiveView;
-import ch.bailu.aat.views.map.overlay.CurrentLocationOverlay;
 import ch.bailu.aat.views.map.overlay.Dem3NameOverlay;
 import ch.bailu.aat.views.map.overlay.EndLogOverlay;
 import ch.bailu.aat.views.map.overlay.StartLogOverlay;
@@ -120,7 +119,11 @@ public class TestActivity extends AbsDispatcher {
 
 
         VerticalScrollView locationView = new VerticalScrollView(this);
+        locationView.addAllContent(this, locationDescription, InfoID.LOCATION);
+
         VerticalScrollView trackerView = new VerticalScrollView(this);
+        trackerView.addAllContent(this, trackerDescription, InfoID.TRACKER);
+
         VerticalScrollView testsView = new VerticalScrollView(this);
 
         testsView.add(new TestEntryView(new TestCoordinates(this)));
@@ -133,15 +136,12 @@ public class TestActivity extends AbsDispatcher {
 
         statusTextView = new StatusTextView(this);
 
-
-        MultiView mv = new MultiView(this, SOLID_KEY, InfoID.ALL);
+        MultiView mv = new MultiView(this, SOLID_KEY);
 
         mv.add(map,getString(R.string.intro_map));
-        mv.add(locationView, locationView.addAllContent(
-                locationDescription, InfoID.LOCATION), getString(R.string.gps));
+        mv.add(locationView, getString(R.string.gps));
 
-        mv.add(trackerView, trackerView.addAllContent(
-                trackerDescription, InfoID.TRACKER), getString(R.string.tracker));
+        mv.add(trackerView, getString(R.string.tracker));
         mv.add(testsView, "Tests*");
         mv.add(statusTextView, getString(R.string.intro_status));
         return mv;
@@ -175,7 +175,6 @@ public class TestActivity extends AbsDispatcher {
         map.add(new ZoomLevelOverlay(map));
         map.add(new Dem3NameOverlay(map));
 
-        addTarget(multiView);
 
         addSource(new TrackerSource(getServiceContext()));
         addSource(new CurrentLocationSource(getServiceContext()));
diff --git a/app/src/main/java/ch/bailu/aat/activities/TrackerActivity.java b/app/src/main/java/ch/bailu/aat/activities/TrackerActivity.java
index 78f1d295..52c07dac 100644
--- a/app/src/main/java/ch/bailu/aat/activities/TrackerActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/TrackerActivity.java
@@ -26,21 +26,12 @@ import ch.bailu.aat.views.MainControlBar;
 import ch.bailu.aat.views.MvNextButton;
 import ch.bailu.aat.views.description.CockpitView;
 import ch.bailu.aat.views.description.MultiView;
-import ch.bailu.aat.views.description.TrackDescriptionView;
 import ch.bailu.aat.views.description.TrackerStateButton;
 import ch.bailu.aat.views.description.VerticalView;
 import ch.bailu.aat.views.graph.DistanceAltitudeGraphView;
 import ch.bailu.aat.views.graph.DistanceSpeedGraphView;
 import ch.bailu.aat.views.map.MapFactory;
 import ch.bailu.aat.views.map.OsmInteractiveView;
-import ch.bailu.aat.views.map.overlay.CurrentLocationOverlay;
-import ch.bailu.aat.views.map.overlay.OsmOverlay;
-import ch.bailu.aat.views.map.overlay.control.EditorOverlay;
-import ch.bailu.aat.views.map.overlay.control.InformationBarOverlay;
-import ch.bailu.aat.views.map.overlay.control.NavigationBarOverlay;
-import ch.bailu.aat.views.map.overlay.gpx.GpxDynOverlay;
-import ch.bailu.aat.views.map.overlay.gpx.GpxOverlayListOverlay;
-import ch.bailu.aat.views.map.overlay.grid.GridDynOverlay;
 
 public class TrackerActivity extends AbsDispatcher implements OnClickListener{
 
@@ -63,8 +54,10 @@ public class TrackerActivity extends AbsDispatcher implements OnClickListener{
         ViewGroup contentView = new ContentView(this);
 
         multiView = createMultiView();
+
         contentView.addView(createButtonBar(multiView));
         contentView.addView(multiView);
+
         setContentView(contentView);
 
         createDispatcher();
@@ -72,7 +65,23 @@ public class TrackerActivity extends AbsDispatcher implements OnClickListener{
 
 
     private MultiView createMultiView() {
-        ContentDescription[] data = new ContentDescription[] {
+        map = new MapFactory(this, SOLID_KEY).tracker(edit);
+
+        multiView = new MultiView(this, SOLID_KEY);
+        multiView.add(createCockpit());
+        multiView.add(map);
+        multiView.add(new VerticalView(this,
+                new View[] {
+                    new DistanceAltitudeGraphView(this, this, InfoID.TRACKER),
+                    new DistanceSpeedGraphView(this, this, InfoID.TRACKER)
+                }));
+
+        return multiView;
+    }
+
+
+    private CockpitView createCockpit() {
+        final ContentDescription[] data = new ContentDescription[] {
                 new CurrentSpeedDescription(this),
                 new AltitudeDescription(this),
                 new TimeDescription(this),
@@ -81,19 +90,10 @@ public class TrackerActivity extends AbsDispatcher implements OnClickListener{
                 new MaximumSpeedDescription(this),
         };
 
-        CockpitView cockpit = new CockpitView(this, SOLID_KEY, InfoID.TRACKER, data);
-
-        map = new MapFactory(this, SOLID_KEY).tracker(edit);
-
-        MultiView mv = new MultiView(this, SOLID_KEY, InfoID.ALL);
-        mv.addT(cockpit);
-        mv.add(map);
-        mv.addT(new VerticalView(this, SOLID_KEY, InfoID.TRACKER, new TrackDescriptionView[] {
-                new DistanceAltitudeGraphView(this, SOLID_KEY),
-                new DistanceSpeedGraphView(this, SOLID_KEY)}));
-        return mv;
+        return new CockpitView(this, this, data);
     }
 
+
     private ControlBar createButtonBar(MultiView mv) {
         ControlBar bar = new MainControlBar(getServiceContext());
 
@@ -107,23 +107,13 @@ public class TrackerActivity extends AbsDispatcher implements OnClickListener{
 
         trackerState.setOnClickListener(trackerState);
 
-        return bar;
-    }
-
-
 
 
-    @Override
-    public void onClick(View v) {
-        if (v == activityCycle) {
-            ActivitySwitcher.cycle(this);
-
-        }
+        return bar;
     }
 
 
     private void createDispatcher() {
-        addTarget(multiView);
         addTarget(trackerState, InfoID.TRACKER);
 
         addSource(new EditorSource(getServiceContext(), edit));
@@ -131,4 +121,13 @@ public class TrackerActivity extends AbsDispatcher implements OnClickListener{
         addSource(new CurrentLocationSource(getServiceContext()));
         addSource(new OverlaySource(getServiceContext()));
     }
+
+
+    @Override
+    public void onClick(View v) {
+        if (v == activityCycle) {
+            ActivitySwitcher.cycle(this);
+
+        }
+    }
 }
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/DispatcherInterface.java b/app/src/main/java/ch/bailu/aat/dispatcher/DispatcherInterface.java
index 51663ca1..6ac170b9 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/DispatcherInterface.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/DispatcherInterface.java
@@ -1,7 +1,6 @@
 package ch.bailu.aat.dispatcher;
 
 public interface DispatcherInterface {
-
     void addTarget(OnContentUpdatedInterface t, int iid);
     void addSource(ContentSource s);
 }
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/SubDispatcher.java b/app/src/main/java/ch/bailu/aat/dispatcher/SubDispatcher.java
deleted file mode 100644
index 4bae8335..00000000
--- a/app/src/main/java/ch/bailu/aat/dispatcher/SubDispatcher.java
+++ /dev/null
@@ -1,26 +0,0 @@
-package ch.bailu.aat.dispatcher;
-
-
-import ch.bailu.aat.gpx.GpxInformation;
-import ch.bailu.aat.views.description.TrackDescriptionView;
-
-public class SubDispatcher implements OnContentUpdatedInterface {
-
-    private final TrackDescriptionView.Filter filter;
-    private final OnContentUpdatedInterface targetList[];
-
-
-    public SubDispatcher(OnContentUpdatedInterface t[], int f) {
-        filter = new TrackDescriptionView.Filter(f);
-        targetList = t;
-    }
-
-
-    @Override
-    public void onContentUpdated(GpxInformation info) {
-        if (filter.pass(info)) {
-            for (OnContentUpdatedInterface target : targetList)
-                target.onContentUpdated(info);
-        }
-    }
-}
diff --git a/app/src/main/java/ch/bailu/aat/views/NodeEntryView.java b/app/src/main/java/ch/bailu/aat/views/NodeEntryView.java
index e367dfd3..5eff1307 100644
--- a/app/src/main/java/ch/bailu/aat/views/NodeEntryView.java
+++ b/app/src/main/java/ch/bailu/aat/views/NodeEntryView.java
@@ -1,7 +1,8 @@
 package ch.bailu.aat.views;
 
 import android.graphics.Color;
-import android.view.ViewGroup;
+import android.view.View;
+import android.widget.LinearLayout;
 import android.widget.TextView;
 
 import ch.bailu.aat.coordinates.BoundingBox;
@@ -10,69 +11,55 @@ import ch.bailu.aat.gpx.GpxPointNode;
 import ch.bailu.aat.helpers.AppHtml;
 import ch.bailu.aat.helpers.AppTheme;
 import ch.bailu.aat.services.ServiceContext;
-import ch.bailu.aat.views.map.AbsOsmTileProvider;
 import ch.bailu.aat.views.map.CachedTileProvider;
 import ch.bailu.aat.views.map.MapDensity;
 import ch.bailu.aat.views.map.OsmViewStatic;
-import ch.bailu.aat.views.map.overlay.OsmOverlay;
 import ch.bailu.aat.views.map.overlay.gpx.GpxDynOverlay;
 
-public class NodeEntryView extends ViewGroup {
+public class NodeEntryView extends LinearLayout {
 
     private final OsmViewStatic map;
     private final TextView text;
 
+    private final GpxDynOverlay gpxOverlay;
+
     private final int previewSize;
 
-    public NodeEntryView(ServiceContext sc, int id) {
+    public NodeEntryView(ServiceContext sc) {
         super(sc.getContext());
+        setOrientation(HORIZONTAL);
 
         previewSize = AppTheme.getBigButtonSize(sc.getContext());
 
-        AbsOsmTileProvider provider = new CachedTileProvider(sc);
-        map = new OsmViewStatic(sc.getContext(), provider, new MapDensity(sc.getContext()));
-        
-        map.add(new GpxDynOverlay(map, sc ,id));
+
+        map = new OsmViewStatic(sc.getContext(),
+                new CachedTileProvider(sc),
+                new MapDensity(sc.getContext()));
+        gpxOverlay = new GpxDynOverlay(map, sc ,-1);
+        map.add(gpxOverlay);
 
         text=new TextView(sc.getContext());
         text.setTextColor(Color.WHITE);
 
-        addView(map);
-        addView(text);
-    }
-
-
-    @Override
-    protected void onMeasure(int wspec, int hspec) {
-        final int width  = MeasureSpec.getSize(wspec);
-        final int height = previewSize;
+        addViewWeight(text);
+        addView(map, previewSize, previewSize);
 
-        final int wspecText = MeasureSpec.makeMeasureSpec(
-                width-previewSize, MeasureSpec.EXACTLY);
+    }
 
-        hspec = MeasureSpec.makeMeasureSpec(previewSize, MeasureSpec.EXACTLY);
 
-        map.measure(hspec, hspec);
-        text.measure(wspecText, hspec);
+    private void addViewWeight(View v) {
+        addView(v);
 
-        //super.onMeasure(wspec, hspec);
-        setMeasuredDimension(width, height);
+        LinearLayout.LayoutParams l = (LinearLayout.LayoutParams) v.getLayoutParams();
+        l.weight = 1;
+        v.setLayoutParams(l);
     }
 
 
-    @Override
-    protected void onLayout(boolean changed, int l, int t, int r, int b) {
-        text.layout(0, 0, text.getMeasuredWidth(), text.getMeasuredHeight());
-        map.layout(text.getMeasuredWidth(), 0, text.getMeasuredWidth()+map.getMeasuredHeight(), map.getMeasuredHeight());
-        
-    }
-
-    
     public void update(GpxInformation info, GpxPointNode node) {
         text.setText(AppHtml.fromHtml(node.toHtml(getContext(), new StringBuilder()).toString()));
         final BoundingBox bounding = node.getBoundingBox();
         map.frameBoundingBox(bounding);
-        // TODO send update to gpx overlay .onContentUpdated(info);
-
+        gpxOverlay.onContentUpdated(info);
     }
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/NodeListView.java b/app/src/main/java/ch/bailu/aat/views/NodeListView.java
index 41eae39c..e177085b 100644
--- a/app/src/main/java/ch/bailu/aat/views/NodeListView.java
+++ b/app/src/main/java/ch/bailu/aat/views/NodeListView.java
@@ -11,172 +11,134 @@ import android.widget.ListView;
 
 import ch.bailu.aat.activities.ActivitySwitcher;
 import ch.bailu.aat.activities.NodeDetailActivity;
+import ch.bailu.aat.dispatcher.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.gpx.GpxList;
 import ch.bailu.aat.gpx.GpxListArray;
 import ch.bailu.aat.helpers.AppTheme;
 import ch.bailu.aat.services.ServiceContext;
-import ch.bailu.aat.views.description.TrackDescriptionView;
 
-public class NodeListView extends TrackDescriptionView {
+public class NodeListView extends ListView implements
+        OnContentUpdatedInterface,
+        ListAdapter,
+        android.widget.AdapterView.OnItemClickListener
+{
 
+    private final SparseArray<DataSetObserver> observer= new SparseArray<>(5);
 
-    private final MyWayListView list;
+    private GpxListArray array = new GpxListArray(GpxList.NULL_ROUTE);
+    private GpxInformation cachedInfo = GpxInformation.NULL;
 
+    private final ServiceContext scontext;
 
-    public NodeListView(ServiceContext scontext, String key, int infoID) {
-        super(scontext.getContext(), key, infoID);
 
-        list = new MyWayListView(scontext);
-        AppTheme.themify(list, AppTheme.getHighlightColor());
+    public NodeListView(ServiceContext sc) {
+        super(sc.getContext());
+        scontext = sc;
 
-        addView(list);
-    }
-
-
-    @Override
-    protected void onMeasure(int wSpec, int hSpec) {
-        // As big as possible
-        wSpec  = MeasureSpec.makeMeasureSpec (MeasureSpec.getSize(wSpec),  MeasureSpec.EXACTLY);
-        hSpec  = MeasureSpec.makeMeasureSpec (MeasureSpec.getSize(hSpec),  MeasureSpec.EXACTLY);
+        AppTheme.themify(this, AppTheme.getHighlightColor());
 
-        list.measure(wSpec, hSpec);
-        setMeasuredDimension(MeasureSpec.getSize(wSpec), MeasureSpec.getSize(hSpec));
-    }
+        setAdapter(this);
+        setOnItemClickListener(this);
 
-    @Override
-    protected void onLayout(boolean changed, int l, int t, int r, int b) {
-        list.layout(0, 0, r-l, b-t);
     }
 
-
     @Override
     public void onContentUpdated(GpxInformation info) {
-        list.update(info);
-    }
-
-
-
-    private class MyWayListView extends ListView
-    implements ListAdapter, android.widget.AdapterView.OnItemClickListener {
-        private final SparseArray<DataSetObserver> observer= new SparseArray<>(5);
-
-        private GpxListArray array = new GpxListArray(GpxList.NULL_ROUTE);
-        private GpxInformation info = GpxInformation.NULL;
-        
-        private final ServiceContext scontext;
-
-        
-        public MyWayListView(ServiceContext sc) {
-            super(sc.getContext());
-            
-            scontext=sc;
-            setAdapter(this);
-            setOnItemClickListener(this);
-        }
+        array = new GpxListArray(info.getGpxList());
+        cachedInfo = info;
+        notifyDataSetChanged();
 
+    }
 
 
-        public void update(final GpxInformation info) {
-            if (filter.pass(info)) {
-                this.array = new GpxListArray(info.getGpxList());
-                this.info = info;
-                notifyDataSetChanged();
-            }
-            
+    private void notifyDataSetChanged() {
+        for (int i=0; i<observer.size(); i++) {
+            observer.valueAt(i).onChanged();
         }
+    }
 
-
-        private void notifyDataSetChanged() {
-            for (int i=0; i<observer.size(); i++) {
-                observer.valueAt(i).onChanged();
-            }
-        }
+    @Override
+    public int getCount() {
+        return array.size();
+    }
 
 
+    @Override
+    public View getView(int position, View recycle, ViewGroup parent) {
 
+        NodeEntryView entry = (NodeEntryView) recycle;
 
-        @Override
-        public int getCount() {
-            return array.size();
+        if (entry == null) {
+            entry = new NodeEntryView(scontext);
         }
 
-
-        @Override
-        public View getView(int position, View recycle, ViewGroup parent) {
-
-            NodeEntryView entry = (NodeEntryView) recycle;
-
-            if (entry == null) {
-                entry = new NodeEntryView(scontext, filter.id);
-            } 
-
-            entry.update(info, array.get(position));
-            return entry;
-        }
+        entry.update(cachedInfo, array.get(position));
+        return entry;
+    }
 
 
 
 
-        @Override
-        public Object getItem(int position) {
-            return array.get(position);
-        }
+    @Override
+    public Object getItem(int position) {
+        return array.get(position);
+    }
 
 
-        @Override
-        public long getItemId(int position) {
-            return position;
-        }
+    @Override
+    public long getItemId(int position) {
+        return position;
+    }
 
-        @Override
-        public void onItemClick(AdapterView<?> arg0, View arg1, int pos, long arg3) {
-            final Intent intent = new Intent();
-            intent.putExtra("I", pos);
-            intent.putExtra("ID", info.getPath());
-            ActivitySwitcher.start(getContext(), NodeDetailActivity.class, intent);
+    @Override
+    public void onItemClick(AdapterView<?> arg0, View arg1, int pos, long arg3) {
+        final Intent intent = new Intent();
+        intent.putExtra("I", pos);
+        intent.putExtra("ID", cachedInfo.getPath());
+        ActivitySwitcher.start(getContext(), NodeDetailActivity.class, intent);
 
-        }
+    }
 
-        @Override
-        public int getItemViewType(int position) {
-            return 0;
-        }
+    @Override
+    public int getItemViewType(int position) {
+        return 0;
+    }
 
-        @Override
-        public int getViewTypeCount() {
-            return 1;
-        }
+    @Override
+    public int getViewTypeCount() {
+        return 1;
+    }
 
-        @Override
-        public boolean hasStableIds() {
-            return false;
-        }
+    @Override
+    public boolean hasStableIds() {
+        return false;
+    }
 
-        @Override
-        public boolean isEmpty() {
-            return getCount()==0;
-        }
+    @Override
+    public boolean isEmpty() {
+        return getCount()==0;
+    }
 
-        @Override
-        public void registerDataSetObserver(DataSetObserver o) {
-            observer.put(o.hashCode(), o);
-            notifyDataSetChanged();
-        }
+    @Override
+    public void registerDataSetObserver(DataSetObserver o) {
+        observer.put(o.hashCode(), o);
+        notifyDataSetChanged();
+    }
 
-        @Override
-        public void unregisterDataSetObserver(DataSetObserver o) {
-            observer.delete(o.hashCode());
-        }
+    @Override
+    public void unregisterDataSetObserver(DataSetObserver o) {
+        observer.delete(o.hashCode());
+    }
 
-        @Override
-        public boolean areAllItemsEnabled() {
-            return true;
-        }
+    @Override
+    public boolean areAllItemsEnabled() {
+        return true;
+    }
 
-        @Override
-        public boolean isEnabled(int position) {
-            return true;
-        }
+    @Override
+    public boolean isEnabled(int position) {
+        return true;
     }
 }
+
diff --git a/app/src/main/java/ch/bailu/aat/views/description/CockpitView.java b/app/src/main/java/ch/bailu/aat/views/description/CockpitView.java
index beb3ff52..fbe443c1 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/CockpitView.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/CockpitView.java
@@ -2,33 +2,49 @@ package ch.bailu.aat.views.description;
 
 
 import android.content.Context;
+import android.view.View;
+import android.view.ViewGroup;
 
 import ch.bailu.aat.description.ContentDescription;
+import ch.bailu.aat.dispatcher.DispatcherInterface;
 import ch.bailu.aat.gpx.InfoID;
 
 
-public class CockpitView extends DescriptionViewGroup {
+public class CockpitView extends ViewGroup {
 
     private final Layouter layouter = new Layouter();
 
-    public CockpitView(Context context, String key,  ContentDescription d[]) {
-        this(context, key, InfoID.ALL, d);
+
+    public CockpitView(Context context) {
+        super(context);
     }
 
-    public CockpitView(Context context, String key, int filter, ContentDescription d[]) {
-        super(context, key, filter);
 
-        TrackDescriptionView v[] = new TrackDescriptionView[d.length];
+    public CockpitView(Context c, DispatcherInterface di, ContentDescription[] des) {
+        super(c);
+        addAll(di, des);
+    }
+
 
-        for (int i=0; i<d.length; i++) {
-            v[i] = new NumberView(d[i]);
-            addView(v[i]);
+    public void addAll(DispatcherInterface di, ContentDescription[] des) {
+        for (ContentDescription de : des) {
+            add(di, de);
         }
+    }
+
+    public void add(DispatcherInterface di, ContentDescription de) {
+        add(di, de, InfoID.TRACKER);
+    }
 
-        init(d,v);
 
+    public void add(DispatcherInterface di, ContentDescription de, int iid) {
+        final NumberView v = new NumberView(de);
+
+        addView(v);
+        di.addTarget(v, iid);
     }
 
+
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
         if (changed) {
@@ -76,7 +92,8 @@ public class CockpitView extends DescriptionViewGroup {
         private boolean placeItems(Placer p) {
             boolean works=true;
 
-            for (int i=0; i<getDescriptionCount() && works; i++) {
+            final int size = getChildCount();
+            for (int i=0; i< size && works; i++) {
                 works = p.placeItem(i);
             }
             return works;
@@ -131,8 +148,11 @@ public class CockpitView extends DescriptionViewGroup {
                 return ((char_height + ypos) <= parent_height);
             }
 
+
             private int getWidthOfView(int index) {
-                int len= getDescription(index).getValue().length();
+                final NumberView child = (NumberView) getChildAt(index);
+
+                int len= child.getDescription().getValue().length();
                 len = Math.max(len, MIN_CHARS);
                 return len*char_width;
             }
@@ -144,7 +164,9 @@ public class CockpitView extends DescriptionViewGroup {
 
             @Override
             protected void setGeometry(int index, int width, int height) {
-                getDescriptionView(index).layout(getXPos(),getYPos(), getXPos()+width, getYPos()+height);
+                final View child = getChildAt(index);
+
+                child.layout(getXPos(),getYPos(), getXPos()+width, getYPos()+height);
             }
         }
 
diff --git a/app/src/main/java/ch/bailu/aat/views/description/DescriptionViewGroup.java b/app/src/main/java/ch/bailu/aat/views/description/DescriptionViewGroup.java
deleted file mode 100644
index 78f2d8e7..00000000
--- a/app/src/main/java/ch/bailu/aat/views/description/DescriptionViewGroup.java
+++ /dev/null
@@ -1,53 +0,0 @@
-package ch.bailu.aat.views.description;
-
-import android.content.Context;
-
-import ch.bailu.aat.description.ContentDescription;
-import ch.bailu.aat.gpx.GpxInformation;
-
-public abstract class DescriptionViewGroup extends TrackDescriptionView {
-
-    private ContentDescription[] data;
-    private TrackDescriptionView[] view;
-
-    
-    public DescriptionViewGroup(Context context, String key, int filter) {
-        super(context,key, filter);
-    }
-    
-    public void init(ContentDescription[]d, TrackDescriptionView[] v) {
-        data=d; view=v;
-    }
-    
-    public void init(TrackDescriptionView[] v) {
-        view=v;
-    }
-    
-    protected int getDescriptionCount() {
-        return view.length;
-    }
-    
-    protected ContentDescription getDescription(int index) {
-        return data[index];
-    }
-    
-    protected TrackDescriptionView getDescriptionView(int index) {
-        return view[index];
-    }
-    
-    @Override
-    protected void onMeasure(int w, int h) {
-        for (TrackDescriptionView child: view) {
-            child.measure(w, h);
-        }
-        setMeasuredDimension(MeasureSpec.getSize(w),MeasureSpec.getSize(h));
-    }
-    
-    
-    @Override
-    public void onContentUpdated(GpxInformation info) {
-        if (filter.pass(info)) {
-            for (TrackDescriptionView aView : view) aView.onContentUpdated(info);
-        }   
-    }
-}
diff --git a/app/src/main/java/ch/bailu/aat/views/description/GPSStateButton.java b/app/src/main/java/ch/bailu/aat/views/description/GPSStateButton.java
index 30dfd30f..d06a2a02 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/GPSStateButton.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/GPSStateButton.java
@@ -18,7 +18,7 @@ public class GPSStateButton extends NumberButton implements OnClickListener, OnS
     private final SolidGPSLock slock;
     
     public GPSStateButton(Context c) {
-        super(new GpsStateDescription(c), InfoID.LOCATION);
+        super(new GpsStateDescription(c));
         
         
         storage=Storage.global(c);
diff --git a/app/src/main/java/ch/bailu/aat/views/description/MultiView.java b/app/src/main/java/ch/bailu/aat/views/description/MultiView.java
index 369a5414..92929640 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/MultiView.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/MultiView.java
@@ -4,6 +4,7 @@ import android.content.Context;
 import android.util.SparseArray;
 import android.view.Menu;
 import android.view.View;
+import android.view.ViewGroup;
 
 import java.util.ArrayList;
 
@@ -12,8 +13,9 @@ import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.preferences.Storage;
 
 
-public class MultiView extends TrackDescriptionView {
+public class MultiView extends ViewGroup {
 
+    private final String solidKey;
 
     private final SparseArray<GpxInformation> informationMap =
             new SparseArray<>(5);
@@ -21,12 +23,11 @@ public class MultiView extends TrackDescriptionView {
 
 
     public class Page {
-        final public OnContentUpdatedInterface target;
         final public View view;
         final public String label;
 
-        public Page(View v, OnContentUpdatedInterface t, String l) {
-            target = t; view = v; label = l;
+        public Page(View v, String l) {
+            view = v; label = l;
 
             view.setVisibility(GONE);
             addView(view);
@@ -39,8 +40,9 @@ public class MultiView extends TrackDescriptionView {
     private int active=0;
 
 
-    public MultiView(Context context, String key, int infoID) {
-        super(context, key, infoID);
+    public MultiView(Context context, String key) {
+        super(context);
+        solidKey = key;
     }
 
 
@@ -50,34 +52,16 @@ public class MultiView extends TrackDescriptionView {
         }
     }
 
-    public void add(View view, OnContentUpdatedInterface target, String label) {
-        pages.add(new Page(view, target, label));
-    }
-
-
-    public void add(View view, OnContentUpdatedInterface target) {
-        pages.add(new Page(view, target, ""));
-    }
-
-
     public void add(View view, String label) {
-        pages.add(new Page(view, OnContentUpdatedInterface.NULL, label));
+        pages.add(new Page(view, label));
     }
 
 
-    public void add(View view) {
-        pages.add(new Page(view, OnContentUpdatedInterface.NULL, ""));
+    public void add(View view ) {
+        pages.add(new Page(view, ""));
     }
 
 
-    public void addT(TrackDescriptionView view) {
-        add(view, view);
-    }
-
-    public void addT(TrackDescriptionView view, String s) {
-        add(view, view, s);
-    }
-
     public void setNext() {
         setActive(active+1);
     }
@@ -103,20 +87,9 @@ public class MultiView extends TrackDescriptionView {
         
         pages.get(active).view.setVisibility(VISIBLE);
         pages.get(active).view.bringToFront();
-        
-        for (int i=0; i< informationMap.size(); i++) 
-            pages.get(active).target.onContentUpdated(informationMap.valueAt(i));
     }
     
     
-    @Override
-    public void onContentUpdated(GpxInformation info) {
-        if (filter.pass(info)) {
-            informationMap.put(info.getID(), info);
-            pages.get(active).target.onContentUpdated(info);
-        }
-    }
-
     @Override
     protected void onMeasure(int wSpec, int hSpec) {
         int width = MeasureSpec.getSize(wSpec);
diff --git a/app/src/main/java/ch/bailu/aat/views/description/NumberButton.java b/app/src/main/java/ch/bailu/aat/views/description/NumberButton.java
index 31644085..3733a42d 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/NumberButton.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/NumberButton.java
@@ -5,8 +5,8 @@ import ch.bailu.aat.description.ContentDescription;
 public class NumberButton extends NumberView {
     
     
-    public NumberButton(ContentDescription data, int filter) {
-        super(data, filter);
+    public NumberButton(ContentDescription data) {
+        super(data);
         setBackgroundResource(ch.bailu.aat.R.drawable.button);
         setPadding(0, 0, 0, 0);
         setFocusable(true);
diff --git a/app/src/main/java/ch/bailu/aat/views/description/NumberView.java b/app/src/main/java/ch/bailu/aat/views/description/NumberView.java
index b8e4763a..968eddf2 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/NumberView.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/NumberView.java
@@ -3,13 +3,14 @@ package ch.bailu.aat.views.description;
 import android.graphics.Color;
 import android.graphics.Typeface;
 import android.util.TypedValue;
+import android.view.ViewGroup;
 import android.widget.TextView;
 
 import ch.bailu.aat.description.ContentDescription;
+import ch.bailu.aat.dispatcher.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
-import ch.bailu.aat.gpx.InfoID;
 
-public class NumberView extends TrackDescriptionView {
+public class NumberView extends ViewGroup implements OnContentUpdatedInterface {
 
     private final TextView    label, number, unit;
     private final ContentDescription description;
@@ -17,9 +18,8 @@ public class NumberView extends TrackDescriptionView {
     private final float defaultTextSize;
 
 
-    public NumberView(ContentDescription data, int filter) {
-        super(data, TrackDescriptionView.DEFAULT_SOLID_KEY,filter);
-
+    public NumberView(ContentDescription data) {
+        super(data);
 
         number = createLabel();
         number.setIncludeFontPadding(false);
@@ -40,12 +40,10 @@ public class NumberView extends TrackDescriptionView {
         updateAllText();
     }
 
-    
-    public NumberView(ContentDescription data) {
-        this(data, InfoID.ALL);
-    }
-
 
+    public ContentDescription getDescription() {
+        return description;
+    }
 
 
     private TextView createLabel() {
@@ -105,10 +103,8 @@ public class NumberView extends TrackDescriptionView {
 
     @Override
     public void onContentUpdated(GpxInformation info) {
-        if (filter.pass(info)) {
-            description.onContentUpdated(info);
-            updateAllText();
-        }
+        description.onContentUpdated(info);
+        updateAllText();
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/views/description/TrackDescriptionView.java b/app/src/main/java/ch/bailu/aat/views/description/TrackDescriptionView.java
deleted file mode 100644
index 8dbcc554..00000000
--- a/app/src/main/java/ch/bailu/aat/views/description/TrackDescriptionView.java
+++ /dev/null
@@ -1,37 +0,0 @@
-package ch.bailu.aat.views.description;
-
-import android.content.Context;
-import android.view.ViewGroup;
-
-import ch.bailu.aat.dispatcher.OnContentUpdatedInterface;
-import ch.bailu.aat.gpx.GpxInformation;
-import ch.bailu.aat.gpx.InfoID;
-
-public abstract class TrackDescriptionView extends ViewGroup 
-implements OnContentUpdatedInterface {
-    public static final String DEFAULT_SOLID_KEY=TrackDescriptionView.class.getSimpleName();
-    
-    
-    public final Filter filter;
-    public final String solidKey;
-
-    public TrackDescriptionView(Context context, String key, int infoID) {
-        super(context);
-        filter = new Filter(infoID);
-        solidKey=key;
-    }
-
-    public static class Filter {
-        public final int id;
-        
-        public Filter(int f) {
-            id = f;
-        }
-        
-        public boolean pass(GpxInformation info) {
-            return (id== InfoID.ALL || id==info.getID());
-        }
-    }
-    
-    
-}
diff --git a/app/src/main/java/ch/bailu/aat/views/description/TrackerStateButton.java b/app/src/main/java/ch/bailu/aat/views/description/TrackerStateButton.java
index 29fac5de..45462ed4 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/TrackerStateButton.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/TrackerStateButton.java
@@ -4,9 +4,7 @@ import android.view.View;
 import android.view.View.OnClickListener;
 
 import ch.bailu.aat.description.TrackerStateDescription;
-import ch.bailu.aat.gpx.InfoID;
 import ch.bailu.aat.services.ServiceContext;
-import ch.bailu.aat.views.description.NumberButton;
 
 public class TrackerStateButton extends NumberButton implements OnClickListener {
 
@@ -14,8 +12,7 @@ public class TrackerStateButton extends NumberButton implements OnClickListener
     
     
     public TrackerStateButton(ServiceContext c) {
-        super(new TrackerStateDescription(c.getContext()),
-                InfoID.TRACKER);
+        super(new TrackerStateDescription(c.getContext()));
         
         scontext=c;
 
diff --git a/app/src/main/java/ch/bailu/aat/views/description/VerticalView.java b/app/src/main/java/ch/bailu/aat/views/description/VerticalView.java
index 6ba6a8b1..4aefc399 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/VerticalView.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/VerticalView.java
@@ -2,36 +2,25 @@ package ch.bailu.aat.views.description;
 
 import android.content.Context;
 import android.view.View;
+import android.view.ViewGroup;
 
-import ch.bailu.aat.dispatcher.OnContentUpdatedInterface;
-import ch.bailu.aat.gpx.GpxInformation;
-
-public class VerticalView extends TrackDescriptionView {
+public class VerticalView extends ViewGroup {
 
     private final View[] views;
-    private final OnContentUpdatedInterface[] targets;
 
 
-    public VerticalView(Context context, String key, int filter, TrackDescriptionView[] vl) {
-        this(context, key, filter, vl, vl);
-    }
 
-    public VerticalView(Context context,
-                        String key,
-                        int filter,
-                        View[] v,
-                        OnContentUpdatedInterface[] t) {
-        super(context, key, filter);
-        views = v;
-        targets = t;
+    public VerticalView(Context context, View[] children) {
+        super(context);
+        views = children;
 
         for (View view: views) {
             addView(view);
         }
-
     }
 
 
+
     @Override
     protected void onMeasure(int wSpec, int hSpec) {
         final int width = MeasureSpec.getSize(wSpec);
@@ -68,12 +57,4 @@ public class VerticalView extends TrackDescriptionView {
             }
         }
     }
-
-
-    @Override
-    public void onContentUpdated(GpxInformation info) {
-        if (filter.pass(info)) {
-            for (OnContentUpdatedInterface target : targets) target.onContentUpdated(info);
-        }
-    }
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/graph/AbsGraphView.java b/app/src/main/java/ch/bailu/aat/views/graph/AbsGraphView.java
index 98327c47..17ea7d1e 100644
--- a/app/src/main/java/ch/bailu/aat/views/graph/AbsGraphView.java
+++ b/app/src/main/java/ch/bailu/aat/views/graph/AbsGraphView.java
@@ -2,14 +2,15 @@ package ch.bailu.aat.views.graph;
 
 import android.content.Context;
 import android.graphics.Canvas;
+import android.view.ViewGroup;
 
+import ch.bailu.aat.dispatcher.DispatcherInterface;
+import ch.bailu.aat.dispatcher.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.gpx.GpxList;
-import ch.bailu.aat.gpx.InfoID;
 import ch.bailu.aat.preferences.SolidUnit;
-import ch.bailu.aat.views.description.TrackDescriptionView;
 
-public abstract class AbsGraphView extends TrackDescriptionView {
+public abstract class AbsGraphView extends ViewGroup implements OnContentUpdatedInterface {
     
     public final static int SAMPLE_WIDTH_PIXEL=5;
     
@@ -18,10 +19,11 @@ public abstract class AbsGraphView extends TrackDescriptionView {
     
     private boolean markerMode=false;
     
-    private GpxList gpxList = GpxList.NULL_TRACK;
+    private GpxList gpxCache = GpxList.NULL_TRACK;
     
-    public AbsGraphView(Context context, String key) {
-        super(context, key, InfoID.ALL);
+    public AbsGraphView(Context context, DispatcherInterface di, int iid) {
+        super(context);
+        di.addTarget(this, iid);
         setWillNotDraw(false);
         sunit = new SolidUnit(context);
     }
@@ -32,10 +34,8 @@ public abstract class AbsGraphView extends TrackDescriptionView {
     
     @Override
     public void onContentUpdated(GpxInformation info) {
-        if (filter.pass(info)) {
-            gpxList = info.getGpxList();
-            invalidate();
-        }
+        gpxCache = info.getGpxList();
+        invalidate();
     }
     
     
@@ -46,8 +46,8 @@ public abstract class AbsGraphView extends TrackDescriptionView {
     @Override
     public void onDraw(Canvas c) {
         if (getWidth() > 0 && getHeight() > 0) {
-            markerMode = gpxList.getMarkerList().size() > getWidth() / SAMPLE_WIDTH_PIXEL;
-            plot(c, gpxList, sunit, markerMode);
+            markerMode = gpxCache.getMarkerList().size() > getWidth() / SAMPLE_WIDTH_PIXEL;
+            plot(c, gpxCache, sunit, markerMode);
         }
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/views/graph/DistanceAltitudeGraphView.java b/app/src/main/java/ch/bailu/aat/views/graph/DistanceAltitudeGraphView.java
index abcbbef2..e57285f4 100644
--- a/app/src/main/java/ch/bailu/aat/views/graph/DistanceAltitudeGraphView.java
+++ b/app/src/main/java/ch/bailu/aat/views/graph/DistanceAltitudeGraphView.java
@@ -4,6 +4,7 @@ import android.content.Context;
 import android.graphics.Canvas;
 
 import ch.bailu.aat.R;
+import ch.bailu.aat.dispatcher.DispatcherInterface;
 import ch.bailu.aat.gpx.GpxList;
 import ch.bailu.aat.gpx.GpxListWalker;
 import ch.bailu.aat.gpx.GpxPointNode;
@@ -14,8 +15,8 @@ import ch.bailu.aat.preferences.SolidUnit;
 public class DistanceAltitudeGraphView extends AbsGraphView {
 
     
-    public DistanceAltitudeGraphView(Context context, String key) {
-        super(context, key);
+    public DistanceAltitudeGraphView(Context context, DispatcherInterface di, int iid) {
+        super(context, di, iid);
     }
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/views/graph/DistanceSpeedGraphView.java b/app/src/main/java/ch/bailu/aat/views/graph/DistanceSpeedGraphView.java
index 258cc240..58e18bf1 100644
--- a/app/src/main/java/ch/bailu/aat/views/graph/DistanceSpeedGraphView.java
+++ b/app/src/main/java/ch/bailu/aat/views/graph/DistanceSpeedGraphView.java
@@ -4,6 +4,7 @@ import android.content.Context;
 import android.graphics.Canvas;
 
 import ch.bailu.aat.R;
+import ch.bailu.aat.dispatcher.DispatcherInterface;
 import ch.bailu.aat.gpx.GpxList;
 import ch.bailu.aat.gpx.GpxListWalker;
 import ch.bailu.aat.gpx.GpxPointNode;
@@ -15,8 +16,8 @@ import ch.bailu.aat.preferences.SolidUnit;
 
 public class DistanceSpeedGraphView extends AbsGraphView {
 
-    public DistanceSpeedGraphView(Context context, String key) {
-        super(context, key);
+    public DistanceSpeedGraphView(Context context, DispatcherInterface di, int iid) {
+        super(context, di, iid);
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/views/map/MapFactory.java b/app/src/main/java/ch/bailu/aat/views/map/MapFactory.java
index 2c33d6fc..89036aba 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/MapFactory.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/MapFactory.java
@@ -8,7 +8,6 @@ import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.editor.EditorHelper;
 import ch.bailu.aat.views.ControlBar;
 import ch.bailu.aat.views.map.overlay.CurrentLocationOverlay;
-import ch.bailu.aat.views.map.overlay.OsmOverlay;
 import ch.bailu.aat.views.map.overlay.control.CustomBarOverlay;
 import ch.bailu.aat.views.map.overlay.control.EditorOverlay;
 import ch.bailu.aat.views.map.overlay.control.FileControlBar;
@@ -45,7 +44,7 @@ public class MapFactory {
     private OsmInteractiveView split(int size) {
         base(size);
         m.add(new GpxOverlayListOverlay(m,d, sc));
-        m.add(new GpxDynOverlay(m, sc, InfoID.TRACKER));
+        m.add(new GpxDynOverlay(m, sc, d, InfoID.TRACKER));
 
         return m;
     }
@@ -99,4 +98,16 @@ public class MapFactory {
 
         return m;
     }
+
+    public OsmInteractiveView node() {
+        base(4);
+
+        m.add(new GpxDynOverlay(m, sc, InfoID.TRACKER));
+        m.add(new GpxDynOverlay(m, sc, InfoID.FILEVIEW));
+        m.add(new GridDynOverlay(m, sc));
+        m.add(new NavigationBarOverlay(m, d));
+
+        return m;
+    }
+
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/VerticalScrollView.java b/app/src/main/java/ch/bailu/aat/views/preferences/VerticalScrollView.java
index f3071abd..9f6edf3e 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/VerticalScrollView.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/VerticalScrollView.java
@@ -8,7 +8,7 @@ import android.widget.ScrollView;
 import org.osmdroid.views.MapView;
 
 import ch.bailu.aat.description.ContentDescription;
-import ch.bailu.aat.dispatcher.SubDispatcher;
+import ch.bailu.aat.dispatcher.DispatcherInterface;
 import ch.bailu.aat.preferences.SolidDirectoryQuery;
 import ch.bailu.aat.views.description.LabelTextView;
 
@@ -30,13 +30,16 @@ public class VerticalScrollView extends ScrollView {
     }
 
 
-    public SubDispatcher addAllContent(ContentDescription[] content, int id) {
-        final LabelTextView views[] = new LabelTextView[content.length];
-        for (int i=0; i< content.length; i++) {
-            views[i] = new LabelTextView(getContext(),content[i]);
+    public void addAllContent(DispatcherInterface di,
+                              ContentDescription[] descriptions,
+                              int iid) {
+        final LabelTextView views[] = new LabelTextView[descriptions.length];
+        for (int i=0; i< descriptions.length; i++) {
+            views[i] = new LabelTextView(getContext(),descriptions[i]);
             add(views[i]);
+
+            di.addTarget(views[i], iid);
         }
-        return new SubDispatcher(views, id);
     }
 
 
