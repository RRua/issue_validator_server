diff --git a/app/src/main/java/com/commit451/gitlab/adapter/FilesAdapter.java b/app/src/main/java/com/commit451/gitlab/adapter/FilesAdapter.java
deleted file mode 100644
index 06b8a42f..00000000
--- a/app/src/main/java/com/commit451/gitlab/adapter/FilesAdapter.java
+++ /dev/null
@@ -1,66 +0,0 @@
-package com.commit451.gitlab.adapter;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.BaseAdapter;
-import android.widget.TextView;
-
-import com.commit451.gitlab.R;
-import com.commit451.gitlab.model.TreeItem;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class FilesAdapter extends BaseAdapter {
-	
-	private ArrayList<TreeItem> treeItems;
-	private LayoutInflater inflater;
-
-	public FilesAdapter(Context context, List<TreeItem> treeItems) {
-		this.treeItems = new ArrayList<TreeItem>(treeItems);
-		
-		if(context != null) {
-			inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-		}
-	}
-	
-	@Override
-	public int getCount() {
-		return treeItems.size();
-	}
-
-	@Override
-	public TreeItem getItem(int position) {
-		return treeItems.get(position);
-	}
-
-	@Override
-	public long getItemId(int position) {
-		return position;
-	}
-
-	@Override
-	public View getView(int position, View convertView, ViewGroup parent) {
-		if(convertView == null) {
-			convertView = inflater.inflate(R.layout.simple_list_item, parent, false);
-		}
-
-		final TextView text = (TextView) convertView.findViewById(R.id.text);
-        text.setText(treeItems.get(position).getName());
-
-		if(treeItems.get(position).getType().equals("tree")) {
-			text.setCompoundDrawablesWithIntrinsicBounds(convertView.getResources().getDrawable(R.drawable.ic_folder), null, null, null);
-		}
-		else if(treeItems.get(position).getType().equals("submodule")) {
-			text.setCompoundDrawablesWithIntrinsicBounds(convertView.getResources().getDrawable(R.drawable.ic_repo), null, null, null);
-		}
-		else {
-			text.setCompoundDrawablesWithIntrinsicBounds(convertView.getResources().getDrawable(R.drawable.ic_doc), null, null, null);
-		}
-
-		return convertView;
-	}
-
-}
diff --git a/app/src/main/java/com/commit451/gitlab/fragments/FilesFragment.java b/app/src/main/java/com/commit451/gitlab/fragments/FilesFragment.java
index 9025e7ed..61684fcc 100644
--- a/app/src/main/java/com/commit451/gitlab/fragments/FilesFragment.java
+++ b/app/src/main/java/com/commit451/gitlab/fragments/FilesFragment.java
@@ -5,20 +5,19 @@ import android.os.Bundle;
 import android.support.design.widget.Snackbar;
 import android.support.v4.app.Fragment;
 import android.support.v4.widget.SwipeRefreshLayout;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ListView;
 import android.widget.TextView;
 
 import com.commit451.gitlab.FileActivity;
 import com.commit451.gitlab.R;
-import com.commit451.gitlab.adapter.FilesAdapter;
 import com.commit451.gitlab.model.TreeItem;
 import com.commit451.gitlab.tools.Repository;
 import com.commit451.gitlab.tools.RetrofitHelper;
+import com.commit451.gitlab.viewHolders.FileViewHolder;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -29,13 +28,13 @@ import retrofit.Callback;
 import retrofit.RetrofitError;
 import retrofit.client.Response;
 
-public class FilesFragment extends Fragment implements OnItemClickListener, SwipeRefreshLayout.OnRefreshListener {
+public class FilesFragment extends Fragment implements SwipeRefreshLayout.OnRefreshListener {
 	
 	private ArrayList<String> path;
-	
-	@Bind(R.id.fragmentList) ListView listView;
+
 	@Bind(R.id.error_text) TextView errorText;
     @Bind(R.id.swipe_layout) SwipeRefreshLayout swipeLayout;
+	@Bind(R.id.list) RecyclerView list;
 	
 	public FilesFragment() {}
 	
@@ -43,15 +42,17 @@ public class FilesFragment extends Fragment implements OnItemClickListener, Swip
 	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
 		View view = inflater.inflate(R.layout.fragment_files, container, false);
 		ButterKnife.bind(this, view);
-		
-		listView.setOnItemClickListener(this);
+
+
+		list.setLayoutManager(new LinearLayoutManager(getActivity()));
 
         swipeLayout.setOnRefreshListener(this);
 
-		path = new ArrayList<String>();
+		path = new ArrayList<>();
 		
-		if(Repository.selectedProject != null)
+		if(Repository.selectedProject != null) {
 			loadData();
+		}
 		
 		return view;
 	}
@@ -63,7 +64,7 @@ public class FilesFragment extends Fragment implements OnItemClickListener, Swip
 	}
 	
 	public void loadData() {
-		path = new ArrayList<String>();
+		path = new ArrayList<>();
 		loadFiles();
 	}
 	
@@ -92,11 +93,10 @@ public class FilesFragment extends Fragment implements OnItemClickListener, Swip
 		
 		@Override
 		public void success(List<TreeItem> files, Response resp) {
-            if(swipeLayout != null && swipeLayout.isRefreshing())
-                swipeLayout.setRefreshing(false);
-			
-			FilesAdapter filesAdapter = new FilesAdapter(getActivity(), files);
-			listView.setAdapter(filesAdapter);
+            if(swipeLayout != null && swipeLayout.isRefreshing()) {
+				swipeLayout.setRefreshing(false);
+			}
+			list.setAdapter(new FilesAdapter(files));
 		}
 		
 		@Override
@@ -106,13 +106,13 @@ public class FilesFragment extends Fragment implements OnItemClickListener, Swip
 			
 			if(e.getResponse().getStatus() == 404) {
 				errorText.setVisibility(View.VISIBLE);
-				listView.setVisibility(View.GONE);
+				list.setVisibility(View.GONE);
 			}
 			else {
-				if(path.size() > 0)
+				if(path.size() > 0) {
 					path.remove(path.size() - 1);
-				
-				listView.setAdapter(null);
+				}
+				list.setAdapter(null);
 				
 				if(e.getResponse().getStatus() != 500) {
                     RetrofitHelper.printDebugInfo(getActivity(), e);
@@ -132,24 +132,59 @@ public class FilesFragment extends Fragment implements OnItemClickListener, Swip
 		
 		return false;
 	}
-	
-	@Override
-	public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-		Repository.selectedFile = ((FilesAdapter) listView.getAdapter()).getItem(position);
-		
-		if(Repository.selectedFile.getType().equals("tree")) {
-			path.add(Repository.selectedFile.getName() + "/");
-			loadFiles();
+
+	public class FilesAdapter extends RecyclerView.Adapter<FileViewHolder> {
+
+		private List<TreeItem> mValues;
+
+		public TreeItem getValueAt(int position) {
+			return mValues.get(position);
 		}
-		else if(Repository.selectedFile.getType().equals("blob")) {
-			String pathExtra = "";
-			for(String p : path) {
-                pathExtra += p;
-            }
-			
-			Intent i = new Intent(getActivity(), FileActivity.class);
-			i.putExtra("path", pathExtra);
-			startActivity(i);
+
+		public FilesAdapter(List<TreeItem> items) {
+			mValues = items;
+		}
+
+		private final View.OnClickListener onProjectClickListener = new View.OnClickListener() {
+			@Override
+			public void onClick(View v) {
+				int position = (int) v.getTag(R.id.list_position);
+				Repository.selectedFile = getValueAt(position);
+
+				if(Repository.selectedFile.getType().equals("tree")) {
+					path.add(Repository.selectedFile.getName() + "/");
+					loadFiles();
+				}
+				else if(Repository.selectedFile.getType().equals("blob")) {
+					String pathExtra = "";
+					for(String p : path) {
+						pathExtra += p;
+					}
+
+					Intent i = new Intent(getActivity(), FileActivity.class);
+					i.putExtra("path", pathExtra);
+					startActivity(i);
+				}
+			}
+		};
+
+		@Override
+		public FileViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+			FileViewHolder holder = FileViewHolder.create(parent);
+			holder.itemView.setOnClickListener(onProjectClickListener);
+			return holder;
+		}
+
+		@Override
+		public void onBindViewHolder(final FileViewHolder holder, int position) {
+			TreeItem treeItem = getValueAt(position);
+			holder.bind(treeItem);
+			holder.itemView.setTag(R.id.list_position, position);
+		}
+
+		@Override
+		public int getItemCount() {
+			return mValues.size();
 		}
 	}
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/commit451/gitlab/viewHolders/FileViewHolder.java b/app/src/main/java/com/commit451/gitlab/viewHolders/FileViewHolder.java
new file mode 100644
index 00000000..6659c0fd
--- /dev/null
+++ b/app/src/main/java/com/commit451/gitlab/viewHolders/FileViewHolder.java
@@ -0,0 +1,48 @@
+package com.commit451.gitlab.viewHolders;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import com.commit451.gitlab.R;
+import com.commit451.gitlab.model.TreeItem;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
+/**
+ * Files, yay!
+ * Created by Jawn on 6/11/2015.
+ */
+public class FileViewHolder extends RecyclerView.ViewHolder {
+
+    public static FileViewHolder create(ViewGroup parent) {
+        View view = LayoutInflater.from(parent.getContext())
+                .inflate(R.layout.item_file, parent, false);
+        return new FileViewHolder(view);
+    }
+
+    @Bind(R.id.file_title) TextView title;
+    @Bind(R.id.file_image) ImageView image;
+
+    public FileViewHolder(View view) {
+        super(view);
+        ButterKnife.bind(this, view);
+    }
+
+    public void bind(TreeItem treeItem) {
+        title.setText(treeItem.getName());
+        if(treeItem.getType().equals("tree")) {
+            image.setImageResource(R.drawable.ic_folder);
+        }
+        else if(treeItem.getType().equals("submodule")) {
+            image.setImageResource(R.drawable.ic_repo);
+        }
+        else {
+            image.setImageResource(R.drawable.ic_doc);
+        }
+    }
+}
