diff --git a/app/src/main/java/ch/bailu/aat/services/cache/ImageObject.java b/app/src/main/java/ch/bailu/aat/services/cache/ImageObject.java
index 31a24447..6e78e907 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/ImageObject.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/ImageObject.java
@@ -11,6 +11,7 @@ import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.background.FileHandle;
 import ch.bailu.aat.util.AppBroadcaster;
 import ch.bailu.aat.util.graphic.SyncBitmap;
+import ch.bailu.simpleio.foc.Foc;
 
 public class ImageObject extends ImageObjectAbstract {
     public final static ImageObject NULL=new ImageObject();
@@ -41,16 +42,32 @@ public class ImageObject extends ImageObjectAbstract {
 
 
 
-    private void load(ServiceContext sc) {
+    private void load(final ServiceContext sc) {
         FileHandle l=new FileHandle(toString()) {
 
             @Override
             public long bgOnProcess() {
-                File file = new File(toString());
+                long size = 0;
 
-                if (file.canRead())
-                    bitmap.set(new File(toString()));
-                return bitmap.getSize();
+                if (sc.lock()) {
+                    ObjectHandle handle = sc.getCacheService().getObject(toString());
+
+                    if (handle != null) {
+
+                        if (handle instanceof ImageObject) {
+                            ImageObject self = (ImageObject) handle;
+
+                            Foc file = self.toFile(sc.getContext());
+
+                            bitmap.set(file);
+                            size =  bitmap.getSize();
+                        }
+                        handle.free();
+                    }
+
+                    sc.free();
+                }
+                return size;
             }
 
             @Override
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/foc/FocTest.java b/app/src/main/java/ch/bailu/aat/util/fs/foc/FocTest.java
index 2bde67ad..e16b4668 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/foc/FocTest.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/foc/FocTest.java
@@ -48,8 +48,7 @@ public class FocTest {
             b.append("e");
 
         if (file.canWrite()) {
-            if (write()) b.append("W");
-            else b.append("w");
+            b.append("w");
         }
 
         if (file.canRead()) {
@@ -62,23 +61,10 @@ public class FocTest {
     }
 
 
-    public boolean write() {
-        Closeable c=null;
-        try {
-            c = file.openR();
-            return true;
-        } catch (Exception e) {
-            return false;
-        } finally {
-            Foc.close(c);
-        }
-    }
-
-
     public boolean read() {
         Closeable c=null;
         try {
-            c = file.openW();
+            c = file.openR();
             return true;
         } catch (Exception e) {
             return false;
diff --git a/app/src/main/java/ch/bailu/aat/util/graphic/SyncBitmap.java b/app/src/main/java/ch/bailu/aat/util/graphic/SyncBitmap.java
index b1f4ee71..7cb9a927 100644
--- a/app/src/main/java/ch/bailu/aat/util/graphic/SyncBitmap.java
+++ b/app/src/main/java/ch/bailu/aat/util/graphic/SyncBitmap.java
@@ -13,8 +13,11 @@ import org.mapsforge.map.android.graphics.AndroidGraphicFactory;
 
 import java.io.Closeable;
 import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
 
 import ch.bailu.aat.services.cache.ObjectHandle;
+import ch.bailu.simpleio.foc.Foc;
 
 public class SyncBitmap implements Closeable {
     private Bitmap bitmap = null;
@@ -53,15 +56,26 @@ public class SyncBitmap implements Closeable {
 
 
 
-    private static Bitmap load(File file) {
-        android.graphics.Bitmap b =
-                android.graphics.BitmapFactory.decodeFile(file.toString());
+    private static Bitmap load(Foc file) {
+        android.graphics.Bitmap bitmap = null;
+        InputStream in = null;
 
-        return new AndroidBitmap(b);
+        try {
+            in = file.openR();
+            bitmap = android.graphics.BitmapFactory.decodeStream(in);
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            Foc.close(in);
+        }
 
+        if (bitmap != null) {
+            return new AndroidBitmap(bitmap);
+        }
+        return null;
     }
 
-    public synchronized void set(File file) {
+    public synchronized void set(Foc file) {
         set(load(file));
     }
 
