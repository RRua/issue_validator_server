diff --git a/src/com/fr3ts0n/ecu/gui/androbd/AutoHider.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/AutoHider.java
similarity index 89%
rename from src/com/fr3ts0n/ecu/gui/androbd/AutoHider.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/AutoHider.java
index de0a8a4..5e0868e 100644
--- a/src/com/fr3ts0n/ecu/gui/androbd/AutoHider.java
+++ b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/AutoHider.java
@@ -20,7 +20,6 @@
 package com.fr3ts0n.ecu.gui.androbd;
 
 import android.app.Activity;
-import android.app.ListActivity;
 import android.os.Handler;
 import android.os.Message;
 import android.view.MotionEvent;
@@ -30,14 +29,12 @@ import android.view.View.OnTouchListener;
 import java.util.Timer;
 import java.util.TimerTask;
 
-import static android.view.View.OnClickListener;
-
 /**
  * Automatically hide components after timeout and show again on touch action
  */
 public class AutoHider
 	extends TimerTask
-	implements OnTouchListener, OnClickListener
+	implements OnTouchListener
 {
 	/** parent activity */
 	private Activity mActivity;
@@ -68,6 +65,7 @@ public class AutoHider
 		mMessageId = hideMessageId;
 		mActivity = activity;
 		mHandler  = handler;
+		activity.getWindow().getDecorView().setOnTouchListener(this);
 	}
 
 	@Override
@@ -85,12 +83,6 @@ public class AutoHider
 		return false;
 	}
 
-	@Override
-	public void onClick(View v)
-	{
-		showComponent();
-	}
-
 	@Override
 	public void run()
 	{
@@ -114,13 +106,6 @@ public class AutoHider
 	 */
 	private void setComponentVisibility(boolean visible)
 	{
-		if(mActivity instanceof ListActivity)
-		{
-			// set OnTouch listener to current view to allow wakeup
-			View cntView = ((ListActivity)mActivity).getListView();
-			cntView.setOnTouchListener(this);
-		}
-
 		// if visibility changed ...
 		if(this.visible != visible)
 		{
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/BtCommService.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/BtCommService.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/BtCommService.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/BtCommService.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/BtDeviceListActivity.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/BtDeviceListActivity.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/BtDeviceListActivity.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/BtDeviceListActivity.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/ChartActivity.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/ChartActivity.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/ChartActivity.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/ChartActivity.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/CheckableRelativeLayout.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/CheckableRelativeLayout.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/CheckableRelativeLayout.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/CheckableRelativeLayout.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/CommService.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/CommService.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/CommService.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/CommService.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/DashBoardActivity.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/DashBoardActivity.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/DashBoardActivity.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/DashBoardActivity.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/DfcItemAdapter.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/DfcItemAdapter.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/DfcItemAdapter.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/DfcItemAdapter.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/ExportTask.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/ExportTask.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/ExportTask.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/ExportTask.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/FileHelper.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/FileHelper.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/FileHelper.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/FileHelper.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/MainActivity.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/MainActivity.java
similarity index 80%
rename from src/com/fr3ts0n/ecu/gui/androbd/MainActivity.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/MainActivity.java
index f27499f..e75959d 100644
--- a/src/com/fr3ts0n/ecu/gui/androbd/MainActivity.java
+++ b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/MainActivity.java
@@ -22,7 +22,6 @@ import android.Manifest;
 import android.app.ActionBar;
 import android.app.Activity;
 import android.app.AlertDialog;
-import android.app.ListActivity;
 import android.app.SearchManager;
 import android.bluetooth.BluetoothAdapter;
 import android.bluetooth.BluetoothDevice;
@@ -39,16 +38,20 @@ import android.os.Message;
 import android.os.StrictMode;
 import android.preference.PreferenceManager;
 import android.util.SparseBooleanArray;
+import android.view.ActionMode;
 import android.view.Menu;
+import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.Window;
 import android.view.WindowManager;
+import android.widget.AbsListView;
 import android.widget.AdapterView;
 import android.widget.ListView;
 import android.widget.Spinner;
 import android.widget.Toast;
 
+import com.fr3ts0n.androbd.plugin.mgr.PluginManager;
 import com.fr3ts0n.ecu.EcuCodeItem;
 import com.fr3ts0n.ecu.EcuDataItem;
 import com.fr3ts0n.ecu.EcuDataItems;
@@ -82,21 +85,22 @@ import static com.fr3ts0n.ecu.gui.androbd.SettingsActivity.ELM_TIMING_SELECT;
 /**
  * Main Activity for AndrOBD app
  */
-public class MainActivity extends ListActivity
+public class MainActivity extends PluginManager
 	implements PvChangeListener,
 	AdapterView.OnItemLongClickListener,
 	PropertyChangeListener,
-	SharedPreferences.OnSharedPreferenceChangeListener
+	SharedPreferences.OnSharedPreferenceChangeListener,
+	AbsListView.MultiChoiceModeListener
 {
 	/**
 	 * operating modes
 	 */
 	public enum MODE
 	{
-		OFFLINE,
-		ONLINE,
-		DEMO,
-		FILE
+		OFFLINE,//< OFFLINE mode
+		ONLINE,	//< ONLINE mode
+		DEMO,	//< DEMO mode
+		FILE,   //< FILE mode
 	}
 
 	/**
@@ -108,7 +112,7 @@ public class MainActivity extends ListActivity
 		FILTERED,   //< data list (filtered)
 		DASHBOARD,  //< dashboard
 		HEADUP,     //< Head up display
-		CHART       //< chart display
+		CHART,		//< Chart display
 	}
 
 	/**
@@ -136,6 +140,7 @@ public class MainActivity extends ListActivity
 	public static final String ELM_RESET_ON_NRC = "elm_reset_on_nrc";
 	public static final String PREF_USE_LAST = "USE_LAST_SETTINGS";
 	public static final String PREF_AUTOHIDE = "autohide_toolbar";
+	public static final String PREF_OVERLAY = "toolbar_overlay";
 	public static final String PREF_AUTOHIDE_DELAY = "autohide_delay";
 	public static final String PREF_DATA_DISABLE_MAX = "data_disable_max";
 
@@ -200,7 +205,7 @@ public class MainActivity extends ListActivity
 	 */
 	private static String mConnectedDeviceName = null;
 	/**
-	 * log4j configurator
+	 * menu object
 	 */
 	private static Menu menu;
 	/**
@@ -237,7 +242,6 @@ public class MainActivity extends ListActivity
     /** log file handler */
     private FileHandler logFileHandler;
 
-
 	/** handler for freeze frame selection */
 	AdapterView.OnItemSelectedListener ff_selected = new AdapterView.OnItemSelectedListener()
 	{
@@ -254,20 +258,844 @@ public class MainActivity extends ListActivity
 		}
 	};
 
-	/**
-	 * activation of night mode
-	 */
-	private boolean nightMode = false;
-	/** current OBD service */
-	private int obdService = ElmProt.OBD_SVC_NONE;
-	/**
-	 * current operating mode
-	 */
-	private MODE mode = MODE.OFFLINE;
-
-	/** empty string set as default parameter*/
-	static final Set<String> emptyStringSet = new HashSet<String>();
-
+	/**
+	 * activation of night mode
+	 */
+	private boolean nightMode = false;
+	/** current OBD service */
+	private int obdService = ElmProt.OBD_SVC_NONE;
+	/**
+	 * current operating mode
+	 */
+	private MODE mode = MODE.OFFLINE;
+
+	/** empty string set as default parameter*/
+	static final Set<String> emptyStringSet = new HashSet<String>();
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState)
+	{
+		// instantiate superclass
+		super.onCreate(savedInstanceState);
+
+		// requestWindowFeature(Window.FEATURE_NO_TITLE);
+		getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
+		                     WindowManager.LayoutParams.FLAG_FULLSCREEN);
+		requestWindowFeature(Window.FEATURE_PROGRESS);
+
+		// get additional permissions
+		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
+		{
+			// Storage Permissions
+			final int REQUEST_EXTERNAL_STORAGE = 1;
+			final String[] PERMISSIONS_STORAGE = {
+					Manifest.permission.READ_EXTERNAL_STORAGE,
+					Manifest.permission.WRITE_EXTERNAL_STORAGE
+			};
+			requestPermissions(PERMISSIONS_STORAGE, REQUEST_EXTERNAL_STORAGE);
+			// Workaround for FileUriExposedException in Android >= M
+			StrictMode.VmPolicy.Builder builder = new StrictMode.VmPolicy.Builder();
+			StrictMode.setVmPolicy(builder.build());
+		}
+
+		dlgBuilder = new AlertDialog.Builder(this);
+
+		// get preferences
+		prefs = PreferenceManager.getDefaultSharedPreferences(this);
+		// register for later changes
+		prefs.registerOnSharedPreferenceChangeListener(this);
+
+		// Overlay feature has to be set before window content is set
+		if( prefs.getBoolean(PREF_AUTOHIDE, false)
+		    && prefs.getBoolean(PREF_OVERLAY, false))
+			getWindow().requestFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
+
+		// Set up all data adapters
+		mPidAdapter = new ObdItemAdapter(this, R.layout.obd_item, ObdProt.PidPvs);
+		mVidAdapter = new VidItemAdapter(this, R.layout.obd_item, ObdProt.VidPvs);
+		mDfcAdapter = new DfcItemAdapter(this, R.layout.obd_item, ObdProt.tCodes);
+		currDataAdapter = mPidAdapter;
+
+		// get list view
+		mListView = getWindow().getLayoutInflater().inflate(R.layout.obd_list, null);
+
+		// update all settings from preferences
+		onSharedPreferenceChanged(prefs, null);
+
+		// set up logging ...
+        String logFileName = FileHelper.getPath(this).concat(File.separator).concat("log");
+        try
+		{
+            // ensure log directory is available
+            new File(logFileName).mkdirs();
+			// Create new log file handler (max. 250 MB, 5 files rotated, non appending)
+            logFileHandler = new FileHandler( logFileName.concat("/AndrOBD.log.%g.txt"),
+                                              250*1024*1024,
+                                              5,
+                                              false);
+            // Set log message formatter
+            logFileHandler.setFormatter(new SimpleFormatter() {
+                String format = "%1$tF\t%1$tT.%1$tL\t%4$s\t%3$s\t%5$s%n";
+
+                @Override
+                public synchronized String format(LogRecord lr) {
+                    return String.format(format,
+                                         new Date(lr.getMillis()),
+                                         lr.getSourceClassName(),
+                                         lr.getLoggerName(),
+                                         lr.getLevel().getLocalizedName(),
+                                         lr.getMessage()
+                    );
+                }
+            });
+            // add file logging ...
+            Logger.getLogger("").addHandler(logFileHandler);
+			// set
+            setLogLevels();
+		}
+		catch(IOException e)
+		{
+			// try to log error (at least with system logging)
+			log.log(Level.SEVERE, logFileName, e);
+		}
+        // Log program startup
+		log.info(String.format("%s %s starting",
+		                       getString(R.string.app_name),
+		                       getString(R.string.app_version)));
+
+		// create file helper instance
+		fileHelper = new FileHelper(this, CommService.elm);
+		// set listeners for data structure changes
+		setDataListeners();
+		// automate elm status display
+		CommService.elm.addPropertyChangeListener(this);
+
+		// set up action bar
+		ActionBar actionBar = getActionBar();
+		if (actionBar != null)
+		{
+			actionBar.setDisplayShowTitleEnabled(true);
+		}
+		// start automatic toolbar hider
+		setAutoHider(prefs.getBoolean(PREF_AUTOHIDE,false));
+
+		// set content view
+		setContentView(R.layout.startup_layout);
+
+		// override comm medium with USB connect intent
+		if ("android.hardware.usb.action.USB_DEVICE_ATTACHED".equals(getIntent().getAction()))
+		{
+			CommService.medium = CommService.MEDIUM.USB;
+		}
+
+		switch (CommService.medium)
+		{
+			case BLUETOOTH:
+				// Get local Bluetooth adapter
+				mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
+				log.fine("Adapter: " + mBluetoothAdapter);
+				// If BT is not on, request that it be enabled.
+				if (getMode() != MODE.DEMO && mBluetoothAdapter != null)
+				{
+					// remember initial bluetooth state
+					initialBtStateEnabled = mBluetoothAdapter.isEnabled();
+					if (!initialBtStateEnabled)
+					{
+						Intent enableIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
+						startActivityForResult(enableIntent, REQUEST_ENABLE_BT);
+					}
+				}
+				break;
+
+			case USB:
+			case NETWORK:
+				setMode(MODE.ONLINE);
+				break;
+		}
+	}
+
+	/**
+	 * Handler for application start event
+	 */
+	@Override
+	public void onStart()
+	{
+		super.onStart();
+
+		// If the adapter is null, then Bluetooth is not supported
+		if (CommService.medium == CommService.MEDIUM.BLUETOOTH && mBluetoothAdapter == null)
+		{
+			// start ELM protocol demo loop
+			setMode(MODE.DEMO);
+		}
+	}
+
+	/*
+	 * (non-Javadoc)
+	 *
+	 * @see android.app.Activity#onDestroy()
+	 */
+	@Override
+	protected void onDestroy()
+	{
+		// Stop toolbar hider thread
+		setAutoHider(false);
+
+		try
+		{
+			// Reduce ELM power consumption by setting it to sleep
+			CommService.elm.goToSleep();
+			// wait until message is out ...
+			Thread.sleep(100, 0);
+		} catch (InterruptedException e)
+		{
+			// do nothing
+			log.log(Level.FINER, e.getLocalizedMessage());
+		}
+
+		/* don't listen to ELM data changes any more */
+		removeDataListeners();
+		// don't listen to ELM property changes any more
+		CommService.elm.removePropertyChangeListener(this);
+
+		// stop demo service if it was started
+		setMode(MODE.OFFLINE);
+
+		// stop communication service
+		if (mCommService != null) mCommService.stop();
+
+		// if bluetooth adapter was switched OFF before ...
+		if (mBluetoothAdapter != null && !initialBtStateEnabled)
+		{
+			// ... turn it OFF again
+			mBluetoothAdapter.disable();
+		}
+
+		log.info(String.format("%s %s finished",
+			getString(R.string.app_name),
+			getString(R.string.app_version)));
+
+		/* remove log file handler */
+		logFileHandler.close();
+		Logger.getLogger("").removeHandler(logFileHandler);
+
+		super.onDestroy();
+	}
+
+	@Override
+	public void setContentView(int layoutResID)
+	{
+		setContentView(getLayoutInflater().inflate(layoutResID, null));
+	}
+
+	@Override
+	public void setContentView(View view)
+	{
+		super.setContentView(view);
+		getListView().setOnTouchListener(toolbarAutoHider);
+	}
+
+	/**
+	 * handle pressing of the BACK-KEY
+	 */
+	@Override
+	public void onBackPressed()
+	{
+		if(getListAdapter() == pluginHandler)
+		{
+			setObdService(obdService, null);
+		}
+		else
+			if (CommService.elm.getService() != ObdProt.OBD_SVC_NONE)
+			{
+				if(dataViewMode != DATA_VIEW_MODE.LIST)
+				{
+					setDataViewMode(DATA_VIEW_MODE.LIST, false);
+					checkToRestoreLastDataSelection();
+				}
+				else
+				{
+					setObdService(ObdProt.OBD_SVC_NONE, null);
+				}
+			}
+			else
+			{
+				if (lastBackPressTime < System.currentTimeMillis() - EXIT_TIMEOUT)
+				{
+					exitToast = Toast.makeText(this, R.string.back_again_to_exit, Toast.LENGTH_SHORT);
+					exitToast.show();
+					lastBackPressTime = System.currentTimeMillis();
+				} else
+				{
+					if (exitToast != null)
+					{
+						exitToast.cancel();
+					}
+					super.onBackPressed();
+				}
+			}
+	}
+
+	/**
+	 * Handler for options menu creation event
+	 */
+	@Override
+	public boolean onCreateOptionsMenu(Menu menu)
+	{
+		// Inflate the menu; this adds items to the action bar if it is present.
+		getMenuInflater().inflate(R.menu.main, menu);
+		MainActivity.menu = menu;
+		// update menu item status for current conversion
+		setConversionSystem(EcuDataItem.cnvSystem);
+		return true;
+	}
+
+
+	/**
+	 * Handler for Options menu selection
+	 */
+	@Override
+	public boolean onOptionsItemSelected(MenuItem item)
+	{
+		// Handle presses on the action bar items
+		updateTimer.purge();
+
+		switch (item.getItemId())
+		{
+			case R.id.day_night_mode:
+				// toggle night mode setting
+				prefs.edit().putBoolean(NIGHT_MODE, !isNightMode()).apply();
+				return true;
+
+			case R.id.secure_connect_scan:
+				setMode(MODE.ONLINE);
+				return true;
+
+			case R.id.reset_preselections:
+				clearPreselections();
+				recreate();
+				return true;
+
+			case R.id.disconnect:
+				// stop communication service
+				if (mCommService != null) mCommService.stop();
+				setMode(MODE.OFFLINE);
+				return true;
+
+			case R.id.settings:
+				// Launch the BtDeviceListActivity to see devices and do scan
+				Intent settingsIntent = new Intent(this, SettingsActivity.class);
+				startActivityForResult(settingsIntent, REQUEST_SETTINGS);
+				return true;
+
+			case R.id.plugin_manager:
+				setManagerView();
+				return true;
+
+			case R.id.save:
+				// save recorded data (threaded)
+				fileHelper.saveDataThreaded();
+				return true;
+
+			case R.id.load:
+				setMode(MODE.FILE);
+				return true;
+
+			case R.id.service_none:
+				setObdService(ObdProt.OBD_SVC_NONE, item.getTitle());
+				return true;
+
+			case R.id.service_data:
+				setObdService(ObdProt.OBD_SVC_DATA, item.getTitle());
+				return true;
+
+			case R.id.service_vid_data:
+				setObdService(ObdProt.OBD_SVC_VEH_INFO, item.getTitle());
+				return true;
+
+			case R.id.service_freezeframes:
+				setObdService(ObdProt.OBD_SVC_FREEZEFRAME, item.getTitle());
+				return true;
+
+			case R.id.service_codes:
+				setObdService(ObdProt.OBD_SVC_READ_CODES, item.getTitle());
+				return true;
+
+			case R.id.service_permacodes:
+				setObdService(ObdProt.OBD_SVC_PERMACODES, item.getTitle());
+				return true;
+
+			case R.id.service_pendingcodes:
+				setObdService(ObdProt.OBD_SVC_PENDINGCODES, item.getTitle());
+				return true;
+
+			case R.id.service_clearcodes:
+				clearObdFaultCodes();
+				setObdService(ObdProt.OBD_SVC_READ_CODES, item.getTitle());
+				return true;
+		}
+
+		return super.onOptionsItemSelected(item);
+	}
+
+	@Override
+	public void onItemCheckedStateChanged(ActionMode mode, int position, long id, boolean checked)
+	{
+		// Intentionally do nothing
+	}
+
+	@Override
+	public boolean onCreateActionMode(ActionMode mode, Menu menu)
+	{
+		MenuInflater inflater = mode.getMenuInflater();
+		inflater.inflate(R.menu.context_graph, menu);
+		return true;
+	}
+
+	@Override
+	public boolean onPrepareActionMode(ActionMode mode, Menu menu)
+	{
+		return false;
+	}
+
+	@Override
+	public boolean onActionItemClicked(ActionMode mode, MenuItem item)
+	{
+		switch(item.getItemId())
+		{
+			case R.id.chart_selected:
+				setDataViewMode(DATA_VIEW_MODE.CHART, false);
+				return true;
+
+			case R.id.hud_selected:
+				setDataViewMode(DATA_VIEW_MODE.HEADUP, false);
+				return true;
+
+			case R.id.dashboard_selected:
+				setDataViewMode(DATA_VIEW_MODE.DASHBOARD, false);
+				return true;
+
+			case R.id.filter_selected:
+				setDataViewMode(DATA_VIEW_MODE.FILTERED, false);
+				return true;
+		}
+		return false;
+	}
+
+	@Override
+	public void onDestroyActionMode(ActionMode mode)
+	{
+
+	}
+
+	/**
+	 * Handler for result messages from other activities
+	 */
+	@Override
+	public void onActivityResult(int requestCode, int resultCode, Intent data)
+	{
+		boolean secureConnection = false;
+
+		switch (requestCode)
+		{
+			// device is connected
+			case REQUEST_CONNECT_DEVICE_SECURE:
+				secureConnection = true;
+				// no break here ...
+			case REQUEST_CONNECT_DEVICE_INSECURE:
+				// When BtDeviceListActivity returns with a device to connect
+				if (resultCode == Activity.RESULT_OK)
+				{
+					// Get the device MAC address
+					String address = data.getExtras().getString(
+						BtDeviceListActivity.EXTRA_DEVICE_ADDRESS);
+					// save reported address as last setting
+					prefs.edit().putString(PRESELECT.LAST_DEV_ADDRESS.toString(), address).apply();
+					connectBtDevice(address, secureConnection);
+				} else
+				{
+					setMode(MODE.OFFLINE);
+				}
+				break;
+
+			// USB device selected
+			case REQUEST_CONNECT_DEVICE_USB:
+				// DeviceListActivity returns with a device to connect
+				if (resultCode == Activity.RESULT_OK)
+				{
+					mCommService = new UsbCommService(this, mHandler);
+					mCommService.connect(UsbDeviceListActivity.selectedPort, true);
+				} else
+				{
+					setMode(MODE.OFFLINE);
+				}
+				break;
+
+			// bluetooth enabled
+			case REQUEST_ENABLE_BT:
+				// When the request to enable Bluetooth returns
+				if (resultCode == Activity.RESULT_OK)
+				{
+					// Start online mode
+					setMode(MODE.ONLINE);
+				} else
+				{
+					// Start demo service Thread
+					setMode(MODE.DEMO);
+				}
+				break;
+
+			// file selected
+			case REQUEST_SELECT_FILE:
+				if (resultCode == RESULT_OK)
+				{
+					// Get the Uri of the selected file
+					Uri uri = data.getData();
+					log.info("Load content: " + uri);
+					// load data ...
+					fileHelper.loadDataThreaded(uri, mHandler, MESSAGE_FILE_READ);
+					// don't allow saving it again
+					setMenuItemEnable(R.id.save, false);
+					setMenuItemEnable(R.id.obd_services, true);
+				}
+				break;
+
+			// settings finished
+			case REQUEST_SETTINGS:
+			{
+				// change handling done by callbacks
+			}
+			break;
+
+			// graphical data view finished
+			case REQUEST_GRAPH_DISPLAY_DONE:
+				// let context know that we are in list mode again ...
+				dataViewMode = DATA_VIEW_MODE.LIST;
+				break;
+		}
+	}
+
+	@Override
+	public void onSharedPreferenceChanged(SharedPreferences prefs, String key)
+	{
+		// keep main display on?
+		if (key==null || KEEP_SCREEN_ON.equals(key))
+		{
+			getWindow().addFlags(prefs.getBoolean(KEEP_SCREEN_ON, false)
+								 ? WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON
+								 : 0);
+		}
+
+		// night mode
+		if(key==null || NIGHT_MODE.equals(key))
+			setNightMode(prefs.getBoolean(NIGHT_MODE, false));
+
+		// set default comm medium
+		if(key==null || SettingsActivity.KEY_COMM_MEDIUM.equals(key))
+			CommService.medium =
+				CommService.MEDIUM.values()[
+					getPrefsInt(SettingsActivity.KEY_COMM_MEDIUM, 0)];
+
+		// enable/disable ELM adaptive timing
+		if(key==null || ELM_ADAPTIVE_TIMING.equals(key))
+			CommService.elm.mAdaptiveTiming.setMode(
+				ElmProt.AdaptTimingMode.valueOf(
+					prefs.getString(ELM_ADAPTIVE_TIMING,
+						ElmProt.AdaptTimingMode.OFF.toString())));
+
+		// set protocol flag to initiate immediate reset on NRC reception
+		if(key==null || ELM_RESET_ON_NRC.equals(key))
+			CommService.elm.setResetOnNrc(prefs.getBoolean(ELM_RESET_ON_NRC, false));
+
+		// set custom ELM init commands
+		if(key==null || ELM_CUSTOM_INIT_CMDS.equals(key))
+		{
+			String value = prefs.getString(ELM_CUSTOM_INIT_CMDS, null);
+			if(value != null && value.length() > 0)
+				CommService.elm.setCustomInitCommands(value.split("\n"));
+		}
+
+		// ELM timeout
+		if(key==null || SettingsActivity.ELM_MIN_TIMEOUT.equals(key))
+			CommService.elm.mAdaptiveTiming.setElmTimeoutMin(
+				getPrefsInt(SettingsActivity.ELM_MIN_TIMEOUT,
+					CommService.elm.mAdaptiveTiming.getElmTimeoutMin()));
+
+		// ... measurement system
+		if(key==null || MEASURE_SYSTEM.equals(key))
+			setConversionSystem(getPrefsInt(MEASURE_SYSTEM, EcuDataItem.SYSTEM_METRIC));
+
+		// ... preferred protocol
+		if(key==null || SettingsActivity.KEY_PROT_SELECT.equals(key))
+			ElmProt.setPreferredProtocol(getPrefsInt(SettingsActivity.KEY_PROT_SELECT, 0));
+
+		// log levels
+		if(key==null || LOG_MASTER.equals(key))
+			setLogLevels();
+
+		// update from protocol extensions
+		if(key==null || key.startsWith("ext_file-"))
+			loadPreferredExtensions();
+
+		// set disabled ELM commands
+		if(key==null || SettingsActivity.ELM_CMD_DISABLE.equals(key))
+		{
+			ElmProt.disableCommands(prefs.getStringSet(SettingsActivity.ELM_CMD_DISABLE, null));
+		}
+
+		// AutoHide ToolBar
+		if(key==null || PREF_AUTOHIDE.equals(key) || PREF_AUTOHIDE_DELAY.equals(key))
+			setAutoHider(prefs.getBoolean(PREF_AUTOHIDE,false));
+
+		// Max. data disabling debounce counter
+		if(key==null || PREF_DATA_DISABLE_MAX.equals(key))
+			EcuDataItem.MAX_ERROR_COUNT = getPrefsInt(PREF_DATA_DISABLE_MAX, 3);
+	}
+
+	/**
+	 * Handle long licks on OBD data list items
+	 */
+	@Override
+	public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id)
+	{
+		Intent intent;
+
+		switch (CommService.elm.getService())
+		{
+		    /* if we are in OBD data mode:
+		     * ->Long click on an item starts the single item dashboard activity
+		     */
+			case ObdProt.OBD_SVC_DATA:
+				EcuDataPv pv = (EcuDataPv) getListAdapter().getItem(position);
+				/* only numeric values may be shown as graph/dashboard */
+				if (pv.get(EcuDataPv.FID_VALUE) instanceof Number)
+				{
+					DashBoardActivity.setAdapter(getListAdapter());
+					intent = new Intent(this, DashBoardActivity.class);
+					intent.putExtra(DashBoardActivity.POSITIONS, new int[]{position});
+					startActivity(intent);
+				}
+				break;
+
+			/* If we are in DFC mode of any kind
+			 * -> Long click leads to a web search for selected DFC
+			 */
+			case ObdProt.OBD_SVC_READ_CODES:
+			case ObdProt.OBD_SVC_PERMACODES:
+			case ObdProt.OBD_SVC_PENDINGCODES:
+				try
+				{
+					intent = new Intent(Intent.ACTION_WEB_SEARCH);
+					EcuCodeItem dfc = (EcuCodeItem) getListAdapter().getItem(position);
+					intent.putExtra(SearchManager.QUERY,
+						"OBD " + String.valueOf(dfc.get(EcuCodeItem.FID_CODE)));
+					startActivity(intent);
+				}
+				catch(Exception e)
+				{
+					log.log(Level.SEVERE,"WebSearch DFC", e);
+					Toast.makeText(this, e.getMessage(), Toast.LENGTH_LONG).show();
+				}
+				break;
+		}
+		return true;
+	}
+
+	/**
+	 * Handler for PV change events This handler just forwards the PV change
+	 * events to the android handler, since all adapter / GUI actions have to be
+	 * performed from the main handler
+	 *
+	 * @param event PvChangeEvent which is reported
+	 */
+	@Override
+	public synchronized void pvChanged(PvChangeEvent event)
+	{
+		// forward PV change to the UI Activity
+		Message msg = mHandler.obtainMessage(MainActivity.MESSAGE_DATA_ITEMS_CHANGED);
+		if(!event.isChildEvent())
+		{
+			msg.obj = event;
+			mHandler.sendMessage(msg);
+		}
+	}
+
+	/**
+	 * Handle message requests
+	 */
+	private transient final Handler mHandler = new Handler()
+	{
+		@Override
+		public void handleMessage(Message msg)
+		{
+			try
+			{
+				PropertyChangeEvent evt;
+
+				// log trace message for received handler notification event
+				log.log(Level.FINEST, String.format("Handler notification: %s", msg.toString()));
+
+				switch (msg.what)
+				{
+					case MESSAGE_STATE_CHANGE:
+						// log trace message for received handler notification event
+						log.log(Level.FINEST, String.format("State change: %s", msg.toString()));
+						switch ((CommService.STATE) msg.obj)
+						{
+							case CONNECTED:
+								onConnect();
+								break;
+
+							case CONNECTING:
+								setStatus(R.string.title_connecting);
+								break;
+
+							default:
+								onDisconnect();
+								break;
+						}
+						break;
+
+					case MESSAGE_FILE_WRITTEN:
+						break;
+
+					// data has been read - finish up
+					case MESSAGE_FILE_READ:
+						// set listeners for data structure changes
+						setDataListeners();
+						// set adapters data source to loaded list instances
+						mPidAdapter.setPvList(ObdProt.PidPvs);
+						mVidAdapter.setPvList(ObdProt.VidPvs);
+						mDfcAdapter.setPvList(ObdProt.tCodes);
+						// set OBD data mode to the one selected by input file
+						setObdService(CommService.elm.getService(), getString(R.string.saved_data));
+						// Check if last data selection shall be restored
+						if(obdService == ObdProt.OBD_SVC_DATA)
+						{
+							checkToRestoreLastDataSelection();
+							checkToRestoreLastViewMode();
+						}
+						break;
+
+					case MESSAGE_DEVICE_NAME:
+						// save the connected device's name
+						mConnectedDeviceName = msg.getData().getString(DEVICE_NAME);
+						Toast.makeText(getApplicationContext(),
+							getString(R.string.connected_to) + mConnectedDeviceName,
+							Toast.LENGTH_SHORT).show();
+						break;
+
+					case MESSAGE_TOAST:
+						Toast.makeText(getApplicationContext(),
+							msg.getData().getString(TOAST),
+							Toast.LENGTH_SHORT).show();
+						break;
+
+					case MESSAGE_DATA_ITEMS_CHANGED:
+						PvChangeEvent event = (PvChangeEvent) msg.obj;
+						switch (event.getType())
+						{
+							case PvChangeEvent.PV_ADDED:
+								currDataAdapter.setPvList(currDataAdapter.pvs);
+								try
+								{
+									if(event.getSource() == ObdProt.PidPvs)
+									{
+										// Check if last data selection shall be restored
+										checkToRestoreLastDataSelection();
+										checkToRestoreLastViewMode();
+									}
+									// set up data update timer
+									updateTimer.schedule(updateTask, 0, DISPLAY_UPDATE_TIME);
+								} catch (Exception ignored)
+								{
+									log.log(Level.FINER, "Error adding PV", ignored);
+								}
+								break;
+
+							case PvChangeEvent.PV_CLEARED:
+								currDataAdapter.clear();
+								break;
+						}
+						break;
+
+					case MESSAGE_UPDATE_VIEW:
+						getListView().invalidateViews();
+						break;
+
+					// handle state change in OBD protocol
+					case MESSAGE_OBD_STATE_CHANGED:
+						evt = (PropertyChangeEvent) msg.obj;
+						ElmProt.STAT state = (ElmProt.STAT)evt.getNewValue();
+                        /* Show ELM status only in ONLINE mode */
+						if (getMode() != MODE.DEMO)
+						{
+							setStatus(getResources().getStringArray(R.array.elmcomm_states)[state.ordinal()]);
+						}
+						// if last selection shall be restored ...
+						if(istRestoreWanted(PRESELECT.LAST_SERVICE))
+						{
+							if(state == ElmProt.STAT.ECU_DETECTED)
+							{
+								setObdService(prefs.getInt(PRESELECT.LAST_SERVICE.toString(),0), null);
+							}
+						}
+						break;
+
+					// handle change in number of fault codes
+					case MESSAGE_OBD_NUMCODES:
+						evt = (PropertyChangeEvent) msg.obj;
+						setNumCodes((Integer) evt.getNewValue());
+						break;
+
+					// handle ECU detection event
+					case MESSAGE_OBD_ECUS:
+						evt = (PropertyChangeEvent) msg.obj;
+						selectEcu((Set<Integer>) evt.getNewValue());
+						break;
+
+					// handle negative result code from OBD protocol
+					case MESSAGE_OBD_NRC:
+						// reset OBD mode to prevent infinite error loop
+						setObdService(ObdProt.OBD_SVC_NONE, getText(R.string.obd_error));
+						// show error dialog ...
+						evt = (PropertyChangeEvent) msg.obj;
+						String nrcMessage = (String)evt.getNewValue();
+						dlgBuilder
+							.setIcon(android.R.drawable.ic_dialog_alert)
+							.setTitle(R.string.obd_error)
+							.setMessage(nrcMessage)
+							.setPositiveButton(null,null)
+							.show();
+						break;
+
+					// set toolbar visibility
+					case MESSAGE_TOOLBAR_VISIBLE:
+						Boolean visible = (Boolean)msg.obj;
+						// log action
+						log.fine(String.format("ActionBar: %s", visible ? "show" : "hide"));
+						// set action bar visibility
+						ActionBar ab = getActionBar();
+						if(ab != null)
+						{
+							if(visible)
+							{
+								ab.show();
+							} else
+							{
+								ab.hide();
+							}
+						}
+						break;
+				}
+			}
+			catch(Exception ex)
+			{
+				log.log(Level.SEVERE, "Error in mHandler", ex);
+			}
+		}
+	};
+
 	/**
 	 * Check if restore of specified preselection is wanted from settings
 	 * @param preselect specified preselect
@@ -280,7 +1108,8 @@ public class MainActivity extends ListActivity
 
 	/**
 	 * Check if last data selection shall be restored
-	 * * check if previously selected items shall be re-selected
+	 *
+	 * If previously selected items shall be re-selected, then re-select them
 	 */
 	public void checkToRestoreLastDataSelection()
 	{
@@ -298,189 +1127,29 @@ public class MainActivity extends ListActivity
 					// remove invalid preselection
 					prefs.edit().remove(PRESELECT.LAST_ITEMS.toString()).apply();
 					log.warning(String.format("Invalid preselection: %s",
-					                       Arrays.toString(lastSelectedItems)));
+						Arrays.toString(lastSelectedItems)));
 				}
 			}
 		}
+	}
+
+	/**
+	 * Check if last view mode shall be restored
+	 *
+	 * If last view mode shall be restored by user settings,
+	 * then restore the last selected view mode
+	 */
+	void checkToRestoreLastViewMode()
+	{
 		// if last view mode shall be restored
 		if(istRestoreWanted(PRESELECT.LAST_VIEW_MODE))
 		{
 			// set last data view mode
 			DATA_VIEW_MODE lastMode =
 				DATA_VIEW_MODE.valueOf(prefs.getString(PRESELECT.LAST_VIEW_MODE.toString(),DATA_VIEW_MODE.LIST.toString()));
-			setDataViewMode(lastMode);
+			setDataViewMode(lastMode, false);
 		}
 	}
-	/**
-	 * Handle message requests
-	 */
-	private transient final Handler mHandler = new Handler()
-	{
-		@Override
-		public void handleMessage(Message msg)
-		{
-			try
-            {
-                PropertyChangeEvent evt;
-
-                // log trace message for received handler notification event
-                log.log(Level.FINEST, String.format("Handler notification: %s", msg.toString()));
-
-                switch (msg.what)
-                {
-                    case MESSAGE_STATE_CHANGE:
-                        // log trace message for received handler notification event
-                        log.log(Level.FINEST, String.format("State change: %s", msg.toString()));
-                        switch ((CommService.STATE) msg.obj)
-                        {
-                            case CONNECTED:
-                                onConnect();
-                                break;
-
-                            case CONNECTING:
-                                setStatus(R.string.title_connecting);
-                                break;
-
-                            default:
-                                onDisconnect();
-                                break;
-                        }
-                        break;
-
-                    case MESSAGE_FILE_WRITTEN:
-                        break;
-
-                    // data has been read - finish up
-                    case MESSAGE_FILE_READ:
-                        // set listeners for data structure changes
-                        setDataListeners();
-                        // set adapters data source to loaded list instances
-                        mPidAdapter.setPvList(ObdProt.PidPvs);
-                        mVidAdapter.setPvList(ObdProt.VidPvs);
-                        mDfcAdapter.setPvList(ObdProt.tCodes);
-                        // set OBD data mode to the one selected by input file
-                        setObdService(CommService.elm.getService(), getString(R.string.saved_data));
-                        // Check if last data selection shall be restored
-                        if(obdService == ObdProt.OBD_SVC_DATA) checkToRestoreLastDataSelection();
-                        break;
-
-                    case MESSAGE_DEVICE_NAME:
-                        // save the connected device's name
-                        mConnectedDeviceName = msg.getData().getString(DEVICE_NAME);
-                        Toast.makeText(getApplicationContext(),
-                                       getString(R.string.connected_to) + mConnectedDeviceName,
-                                       Toast.LENGTH_SHORT).show();
-                        break;
-
-                    case MESSAGE_TOAST:
-                        Toast.makeText(getApplicationContext(),
-                                       msg.getData().getString(TOAST),
-                                       Toast.LENGTH_SHORT).show();
-                        break;
-
-                    case MESSAGE_DATA_ITEMS_CHANGED:
-                        PvChangeEvent event = (PvChangeEvent) msg.obj;
-                        switch (event.getType())
-                        {
-                            case PvChangeEvent.PV_ADDED:
-                                currDataAdapter.setPvList(currDataAdapter.pvs);
-                                try
-                                {
-                                    if(event.getSource() == ObdProt.PidPvs)
-                                    {
-                                        // Check if last data selection shall be restored
-                                        checkToRestoreLastDataSelection();
-                                    }
-                                    // set up data update timer
-                                    updateTimer.schedule(updateTask, 0, DISPLAY_UPDATE_TIME);
-                                } catch (Exception ignored)
-                                {
-                                    log.log(Level.FINER, "Error adding PV", ignored);
-                                }
-                                break;
-
-                            case PvChangeEvent.PV_CLEARED:
-                                currDataAdapter.clear();
-                                break;
-                        }
-                        break;
-
-                    case MESSAGE_UPDATE_VIEW:
-                        getListView().invalidateViews();
-                        break;
-
-                    // handle state change in OBD protocol
-                    case MESSAGE_OBD_STATE_CHANGED:
-                        evt = (PropertyChangeEvent) msg.obj;
-                        ElmProt.STAT state = (ElmProt.STAT)evt.getNewValue();
-                        /* Show ELM status only in ONLINE mode */
-                        if (getMode() != MODE.DEMO)
-                        {
-                            setStatus(getResources().getStringArray(R.array.elmcomm_states)[state.ordinal()]);
-                        }
-                        // if last selection shall be restored ...
-                        if(istRestoreWanted(PRESELECT.LAST_SERVICE))
-                        {
-                            if(state == ElmProt.STAT.ECU_DETECTED)
-                            {
-                                setObdService(prefs.getInt(PRESELECT.LAST_SERVICE.toString(),0), null);
-                            }
-                        }
-                        break;
-
-                    // handle change in number of fault codes
-                    case MESSAGE_OBD_NUMCODES:
-                        evt = (PropertyChangeEvent) msg.obj;
-                        setNumCodes((Integer) evt.getNewValue());
-                        break;
-
-                    // handle ECU detection event
-                    case MESSAGE_OBD_ECUS:
-                        evt = (PropertyChangeEvent) msg.obj;
-                        selectEcu((Set<Integer>) evt.getNewValue());
-                        break;
-
-                    // handle negative result code from OBD protocol
-                    case MESSAGE_OBD_NRC:
-                        // reset OBD mode to prevent infinite error loop
-                        setObdService(ObdProt.OBD_SVC_NONE, getText(R.string.obd_error));
-                        // show error dialog ...
-                        evt = (PropertyChangeEvent) msg.obj;
-                        String nrcMessage = (String)evt.getNewValue();
-                        dlgBuilder
-                            .setIcon(android.R.drawable.ic_dialog_alert)
-                            .setTitle(R.string.obd_error)
-                            .setMessage(nrcMessage)
-                            .setPositiveButton(null,null)
-                            .show();
-                        break;
-
-                    // set toolbar visibility
-                    case MESSAGE_TOOLBAR_VISIBLE:
-                        Boolean visible = (Boolean)msg.obj;
-                        // log action
-                        log.fine(String.format("ActionBar: %s", visible ? "show" : "hide"));
-                        // set action bar visibility
-                        ActionBar ab = getActionBar();
-                        if(ab != null)
-                        {
-                            if(visible)
-                            {
-                                ab.show();
-                            } else
-                            {
-                                ab.hide();
-                            }
-                        }
-                        break;
-                }
-            }
-            catch(Exception ex)
-            {
-                log.log(Level.SEVERE, "Error in mHandler", ex);
-            }
-		}
-	};
 
 	/**
 	 * convert result of Arrays.toString(int[]) back into int[]
@@ -606,8 +1275,8 @@ public class MainActivity extends ListActivity
 		if(list != null)
 		{
 			list.setBackgroundResource((newNumCodes & 0x80) != 0
-				                           ? R.drawable.mil_on
-				                           : R.drawable.mil_off);
+									   ? R.drawable.mil_on
+									   : R.drawable.mil_off);
 		}
 		// enable / disable freeze frames based on number of codes
 		setMenuItemEnable(R.id.service_freezeframes, (newNumCodes != 0));
@@ -659,270 +1328,56 @@ public class MainActivity extends ListActivity
 		}
 	}
 
-	@Override
-	protected void onCreate(Bundle savedInstanceState)
-	{
-		super.onCreate(savedInstanceState);
-
-		// requestWindowFeature(Window.FEATURE_NO_TITLE);
-		getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
-		                     WindowManager.LayoutParams.FLAG_FULLSCREEN);
-		requestWindowFeature(Window.FEATURE_PROGRESS);
-
-		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
-		{
-			// Storage Permissions
-			final int REQUEST_EXTERNAL_STORAGE = 1;
-			final String[] PERMISSIONS_STORAGE = {
-					Manifest.permission.READ_EXTERNAL_STORAGE,
-					Manifest.permission.WRITE_EXTERNAL_STORAGE
-			};
-			requestPermissions(PERMISSIONS_STORAGE, REQUEST_EXTERNAL_STORAGE);
-			// Workaround for FileUriExposedException in Android >= M
-			StrictMode.VmPolicy.Builder builder = new StrictMode.VmPolicy.Builder();
-			StrictMode.setVmPolicy(builder.build());
-		}
-
-		dlgBuilder = new AlertDialog.Builder(this);
-
-		// get preferences
-		prefs = PreferenceManager.getDefaultSharedPreferences(this);
-		// register for later changes
-		prefs.registerOnSharedPreferenceChangeListener(this);
-		// Overlay feature has to be set before window content is set
-		if(prefs.getBoolean(PREF_AUTOHIDE,false))
-			getWindow().requestFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
-
-		// set up logging ...
-        String logFileName = FileHelper.getPath(this).concat(File.separator).concat("log");
-        try
-		{
-            // ensure log directory is available
-            new File(logFileName).mkdirs();
-			// Create new log file handler (max. 250 MB, 5 files rotated, non appending)
-            logFileHandler = new FileHandler( logFileName.concat("/AndrOBD.log.%g.txt"),
-                                              250*1024*1024,
-                                              5,
-                                              false);
-            // Set log message formatter
-            logFileHandler.setFormatter(new SimpleFormatter() {
-                String format = "%1$tF\t%1$tT.%1$tL\t%4$s\t%3$s\t%5$s%n";
-
-                @Override
-                public synchronized String format(LogRecord lr) {
-                    return String.format(format,
-                                         new Date(lr.getMillis()),
-                                         lr.getSourceClassName(),
-                                         lr.getLoggerName(),
-                                         lr.getLevel().getLocalizedName(),
-                                         lr.getMessage()
-                    );
-                }
-            });
-            // add file logging ...
-            Logger.getLogger("").addHandler(logFileHandler);
-			// set
-            setLogLevels();
-		}
-		catch(IOException e)
-		{
-			// try to log error (at least with system logging)
-			log.log(Level.SEVERE, logFileName, e);
-		}
-        // Log program startup
-		log.info(String.format("%s %s starting",
-		                       getString(R.string.app_name),
-		                       getString(R.string.app_version)));
-
-		// Set up all data adapters
-		mPidAdapter = new ObdItemAdapter(this, R.layout.obd_item, ObdProt.PidPvs);
-		mVidAdapter = new VidItemAdapter(this, R.layout.obd_item, ObdProt.VidPvs);
-		mDfcAdapter = new DfcItemAdapter(this, R.layout.obd_item, ObdProt.tCodes);
-		currDataAdapter = mPidAdapter;
-
-		// get list view
-		mListView = getWindow().getLayoutInflater().inflate(R.layout.obd_list, null);
-
-		// update all settings from preferences
-		onSharedPreferenceChanged(prefs, null);
-
-		// set up action bar
-		ActionBar actionBar = getActionBar();
-		if (actionBar != null)
-		{
-			actionBar.setDisplayShowTitleEnabled(true);
-		}
-
-		setContentView(R.layout.startup_layout);
-
-		// create file helper instance
-		fileHelper = new FileHelper(this, CommService.elm);
-		// set listeners for data structure changes
-		setDataListeners();
-		// automate elm status display
-		CommService.elm.addPropertyChangeListener(this);
-
-		// override comm medium with USB connect intent
-		if ("android.hardware.usb.action.USB_DEVICE_ATTACHED".equals(getIntent().getAction()))
-		{
-			CommService.medium = CommService.MEDIUM.USB;
-		}
-
-		switch (CommService.medium)
-		{
-			case BLUETOOTH:
-				// Get local Bluetooth adapter
-				mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
-				log.fine("Adapter: " + mBluetoothAdapter);
-				// If BT is not on, request that it be enabled.
-				if (getMode() != MODE.DEMO && mBluetoothAdapter != null)
-				{
-					// remember initial bluetooth state
-					initialBtStateEnabled = mBluetoothAdapter.isEnabled();
-					if (!initialBtStateEnabled)
-					{
-						Intent enableIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
-						startActivityForResult(enableIntent, REQUEST_ENABLE_BT);
-					}
-				}
-				break;
-
-			case USB:
-			case NETWORK:
-				setMode(MODE.ONLINE);
-				break;
-		}
-		// start automatich toolbar hider
-		setAutoHider(prefs.getBoolean(PREF_AUTOHIDE,false));
-	}
-
 	/**
 	 * start/stop the autmatic toolbar hider
 	 */
 	void setAutoHider(boolean active)
 	{
 		// disable existing hider
-		if(toolbarAutoHider != null)
-		{
-			// cancel auto hider
-			toolbarAutoHider.cancel();
-			// forget about it
-			toolbarAutoHider = null;
-		}
-
-		// if new hider shall be activated
-		if(active)
-		{
-			int timeout = getPrefsInt(MainActivity.PREF_AUTOHIDE_DELAY, 15);
-			toolbarAutoHider = new AutoHider( this,
-			                                  mHandler,
-			                                  MESSAGE_TOOLBAR_VISIBLE,
-			                                  timeout * 1000);
-			// start with update resolution of 1 second
-			toolbarAutoHider.start(1000);
-		}
-	}
-
-	/**
-	 * Get preference int value
-	 *
-	 * @param key preference key name
-	 * @param defaultValue numeric default value
-	 *
-	 * @return preference int value
-	 */
-	private int getPrefsInt(String key, int defaultValue)
-	{
-		int result = defaultValue;
-
-		try
-		{
-			result = Integer.valueOf(prefs.getString(key, String.valueOf(defaultValue)));
-		}
-		catch( Exception ex)
-		{
-			// log error message
-			log.severe(String.format("Preference '%s'(%d): %s", key, result, ex.toString()));
-		}
-
-		return result;
-	}
-
-	@Override
-	public void onSharedPreferenceChanged(SharedPreferences prefs, String key)
-	{
-		// keep main display on?
-		if (key==null || KEEP_SCREEN_ON.equals(key))
-		{
-			getWindow().addFlags(prefs.getBoolean(KEEP_SCREEN_ON, false)
-			                     ? WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON
-		                         : 0);
-		}
-
-		// night mode
-		if(key==null || NIGHT_MODE.equals(key))
-			setNightMode(prefs.getBoolean(NIGHT_MODE, false));
-
-		// set default comm medium
-		if(key==null || SettingsActivity.KEY_COMM_MEDIUM.equals(key))
-			CommService.medium =
-				CommService.MEDIUM.values()[
-					getPrefsInt(SettingsActivity.KEY_COMM_MEDIUM, 0)];
-
-		// enable/disable ELM adaptive timing
-		if(key==null || ELM_ADAPTIVE_TIMING.equals(key))
-			CommService.elm.mAdaptiveTiming.setMode(
-			    ElmProt.AdaptTimingMode.valueOf(
-			        prefs.getString(ELM_ADAPTIVE_TIMING,
-                                    ElmProt.AdaptTimingMode.OFF.toString())));
-
-		// set protocol flag to initiate immediate reset on NRC reception
-		if(key==null || ELM_RESET_ON_NRC.equals(key))
-			CommService.elm.setResetOnNrc(prefs.getBoolean(ELM_RESET_ON_NRC, false));
-
-		// set custom ELM init commands
-		if(key==null || ELM_CUSTOM_INIT_CMDS.equals(key))
+		if(toolbarAutoHider != null)
 		{
-			String value = prefs.getString(ELM_CUSTOM_INIT_CMDS, null);
-			if(value != null && value.length() > 0)
-				CommService.elm.setCustomInitCommands(value.split("\n"));
+			// cancel auto hider
+			toolbarAutoHider.cancel();
+			// forget about it
+			toolbarAutoHider = null;
 		}
 
-		// ELM timeout
-		if(key==null || SettingsActivity.ELM_MIN_TIMEOUT.equals(key))
-			CommService.elm.mAdaptiveTiming.setElmTimeoutMin(
-				getPrefsInt(SettingsActivity.ELM_MIN_TIMEOUT,
-				            CommService.elm.mAdaptiveTiming.getElmTimeoutMin()));
-
-		// ... measurement system
-		if(key==null || MEASURE_SYSTEM.equals(key))
-			setConversionSystem(getPrefsInt(MEASURE_SYSTEM, EcuDataItem.SYSTEM_METRIC));
-
-		// ... preferred protocol
-		if(key==null || SettingsActivity.KEY_PROT_SELECT.equals(key))
-			ElmProt.setPreferredProtocol(getPrefsInt(SettingsActivity.KEY_PROT_SELECT, 0));
-
-		// log levels
-		if(key==null || LOG_MASTER.equals(key))
-			setLogLevels();
+		// if new hider shall be activated
+		if(active)
+		{
+			int timeout = getPrefsInt(MainActivity.PREF_AUTOHIDE_DELAY, 15);
+			toolbarAutoHider = new AutoHider( this,
+			                                  mHandler,
+			                                  MESSAGE_TOOLBAR_VISIBLE,
+			                                  timeout * 1000);
+			// start with update resolution of 1 second
+			toolbarAutoHider.start(1000);
+		}
+	}
 
-		// update from protocol extensions
-		if(key==null || key.startsWith("ext_file-"))
-			loadPreferredExtensions();
+	/**
+	 * Get preference int value
+	 *
+	 * @param key preference key name
+	 * @param defaultValue numeric default value
+	 *
+	 * @return preference int value
+	 */
+	private int getPrefsInt(String key, int defaultValue)
+	{
+		int result = defaultValue;
 
-		// set disabled ELM commands
-		if(key==null || SettingsActivity.ELM_CMD_DISABLE.equals(key))
+		try
 		{
-			ElmProt.disableCommands(prefs.getStringSet(SettingsActivity.ELM_CMD_DISABLE, null));
+			result = Integer.valueOf(prefs.getString(key, String.valueOf(defaultValue)));
+		}
+		catch( Exception ex)
+		{
+			// log error message
+			log.severe(String.format("Preference '%s'(%d): %s", key, result, ex.toString()));
 		}
 
-		// AutoHide ToolBar
-		if(key==null || PREF_AUTOHIDE.equals(key) || PREF_AUTOHIDE_DELAY.equals(key))
-			setAutoHider(prefs.getBoolean(PREF_AUTOHIDE,false));
-
-        // Max. data disabling debounce counter
-        if(key==null || PREF_DATA_DISABLE_MAX.equals(key))
-            EcuDataItem.MAX_ERROR_COUNT = getPrefsInt(PREF_DATA_DISABLE_MAX, 3);
+		return result;
 	}
 
 	/**
@@ -956,6 +1411,8 @@ public class MainActivity extends ListActivity
 		ObdProt.tCodes.removePvChangeListener(this);
 	}
 
+	MODE previousMode;
+
 	/**
 	 * get current operating mode
 	 */
@@ -983,7 +1440,6 @@ public class MainActivity extends ListActivity
 					setMenuItemVisible(R.id.disconnect, false);
 					setMenuItemVisible(R.id.secure_connect_scan, true);
 					setMenuItemEnable(R.id.obd_services, false);
-					setMenuItemEnable(R.id.graph_actions, false);
 					break;
 
 				case ONLINE:
@@ -1029,7 +1485,10 @@ public class MainActivity extends ListActivity
 					setStatus(R.string.saved_data);
 					selectFileToLoad();
 					break;
+
 			}
+			// remember previous mode
+			previousMode = this.mode;
 			// set new mode
 			this.mode = mode;
 			setStatus(mode.toString());
@@ -1144,320 +1603,65 @@ public class MainActivity extends ListActivity
 			setStatus(getString(R.string.demo));
 			Toast.makeText(this, getString(R.string.demo_started), Toast.LENGTH_SHORT).show();
 
-			boolean allowConnect = mBluetoothAdapter != null
-															&& mBluetoothAdapter.isEnabled();
-			setMenuItemVisible(R.id.secure_connect_scan, allowConnect);
-			setMenuItemVisible(R.id.disconnect, !allowConnect);
-
-			setMenuItemEnable(R.id.obd_services, true);
-			setMenuItemEnable(R.id.graph_actions, false);
-			/* The Thread object for processing the demo mode loop */
-			Thread demoThread = new Thread(CommService.elm);
-			demoThread.start();
-		}
-	}
-
-	/**
-	 * set status message in status bar
-	 *
-	 * @param resId Resource ID of the text to be displayed
-	 */
-	private void setStatus(int resId)
-	{
-		setStatus(getString(resId));
-	}
-
-	/**
-	 * set status message in status bar
-	 *
-	 * @param subTitle status text to be set
-	 */
-	private void setStatus(CharSequence subTitle)
-	{
-		final ActionBar actionBar = getActionBar();
-		if (actionBar != null)
-		{
-			actionBar.setSubtitle(subTitle);
-			// show action bar to make state change visible
-			unHideActionBar(getListView());
-		}
-	}
-
-	/**
-	 * Select file to be loaded
-	 */
-	public void selectFileToLoad()
-	{
-		File file = new File(FileHelper.getPath(this));
-		Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
-		intent.addCategory(Intent.CATEGORY_OPENABLE);
-		Uri data = Uri.fromFile(file);
-		String type = "*/*";
-		intent.setDataAndType(data, type);
-		startActivityForResult(intent, REQUEST_SELECT_FILE);
-	}
-
-	/**
-	 * Handler for application start event
-	 */
-	@Override
-	public void onStart()
-	{
-		super.onStart();
-		// If the adapter is null, then Bluetooth is not supported
-		if (CommService.medium == CommService.MEDIUM.BLUETOOTH && mBluetoothAdapter == null)
-		{
-			// start ELM protocol demo loop
-			setMode(MODE.DEMO);
-		}
-	}
-
-	/**
-	 * handle pressing of the BACK-KEY
-	 */
-	@Override
-	public void onBackPressed()
-	{
-		if (CommService.elm.getService() != ObdProt.OBD_SVC_NONE)
-		{
-			if(dataViewMode == DATA_VIEW_MODE.FILTERED)
-			{
-				setDataViewMode(DATA_VIEW_MODE.LIST);
-			}
-			else
-			{
-				setObdService(ObdProt.OBD_SVC_NONE, null);
-			}
-		} else
-		{
-			if (lastBackPressTime < System.currentTimeMillis() - EXIT_TIMEOUT)
-			{
-				exitToast = Toast.makeText(this, R.string.back_again_to_exit, Toast.LENGTH_SHORT);
-				exitToast.show();
-				lastBackPressTime = System.currentTimeMillis();
-			} else
-			{
-				if (exitToast != null)
-				{
-					exitToast.cancel();
-				}
-				super.onBackPressed();
-			}
-		}
-	}
-
-	/**
-	 * Handler for options menu creation event
-	 */
-	@Override
-	public boolean onCreateOptionsMenu(Menu menu)
-	{
-		// Inflate the menu; this adds items to the action bar if it is present.
-		getMenuInflater().inflate(R.menu.main, menu);
-		MainActivity.menu = menu;
-		// update menu item status for current conversion
-		setConversionSystem(EcuDataItem.cnvSystem);
-		return true;
-	}
-
-
-	/**
-	 * Handler for Options menu selection
-	 */
-	@Override
-	public boolean onOptionsItemSelected(MenuItem item)
-	{
-		// Handle presses on the action bar items
-		updateTimer.purge();
-
-		switch (item.getItemId())
-		{
-			case R.id.day_night_mode:
-				// toggle night mode setting
-				prefs.edit().putBoolean(NIGHT_MODE, !isNightMode()).apply();
-				return true;
-
-			case R.id.secure_connect_scan:
-				setMode(MODE.ONLINE);
-				return true;
-
-			case R.id.reset_preselections:
-				clearPreselections();
-				recreate();
-				return true;
-
-			case R.id.disconnect:
-				// stop communication service
-				if (mCommService != null) mCommService.stop();
-				setMode(MODE.OFFLINE);
-				return true;
-
-			case R.id.settings:
-				// Launch the BtDeviceListActivity to see devices and do scan
-				Intent settingsIntent = new Intent(this, SettingsActivity.class);
-				startActivityForResult(settingsIntent, REQUEST_SETTINGS);
-				return true;
-
-			case R.id.chart_selected:
-				setDataViewMode(DATA_VIEW_MODE.CHART);
-				return true;
-
-			case R.id.hud_selected:
-				setDataViewMode(DATA_VIEW_MODE.HEADUP);
-				return true;
-
-			case R.id.dashboard_selected:
-				setDataViewMode(DATA_VIEW_MODE.DASHBOARD);
-				return true;
-
-			case R.id.filter_selected:
-				setDataViewMode(DATA_VIEW_MODE.FILTERED);
-				return true;
-
-			case R.id.unfilter_selected:
-				setDataViewMode(DATA_VIEW_MODE.LIST);
-				return true;
-
-			case R.id.save:
-				// save recorded data (threaded)
-				fileHelper.saveDataThreaded();
-				return true;
-
-			case R.id.load:
-				setMode(MODE.FILE);
-				return true;
-
-			case R.id.service_none:
-				setObdService(ObdProt.OBD_SVC_NONE, item.getTitle());
-				return true;
-
-			case R.id.service_data:
-				setObdService(ObdProt.OBD_SVC_DATA, item.getTitle());
-				return true;
-
-			case R.id.service_vid_data:
-				setObdService(ObdProt.OBD_SVC_VEH_INFO, item.getTitle());
-				return true;
-
-			case R.id.service_freezeframes:
-				setObdService(ObdProt.OBD_SVC_FREEZEFRAME, item.getTitle());
-				return true;
-
-			case R.id.service_codes:
-				setObdService(ObdProt.OBD_SVC_READ_CODES, item.getTitle());
-				return true;
-
-			case R.id.service_permacodes:
-				setObdService(ObdProt.OBD_SVC_PERMACODES, item.getTitle());
-				return true;
-
-			case R.id.service_pendingcodes:
-				setObdService(ObdProt.OBD_SVC_PENDINGCODES, item.getTitle());
-				return true;
+			boolean allowConnect = mBluetoothAdapter != null
+															&& mBluetoothAdapter.isEnabled();
+			setMenuItemVisible(R.id.secure_connect_scan, allowConnect);
+			setMenuItemVisible(R.id.disconnect, !allowConnect);
 
-			case R.id.service_clearcodes:
-				clearObdFaultCodes();
-				setObdService(ObdProt.OBD_SVC_READ_CODES, item.getTitle());
-				return true;
+			setMenuItemEnable(R.id.obd_services, true);
+			/* The Thread object for processing the demo mode loop */
+			Thread demoThread = new Thread(CommService.elm);
+			demoThread.start();
 		}
-
-		return super.onOptionsItemSelected(item);
 	}
 
 	/**
-	 * clear all preselections
+	 * set status message in status bar
+	 *
+	 * @param resId Resource ID of the text to be displayed
 	 */
-	private void clearPreselections()
+	private void setStatus(int resId)
 	{
-		for(PRESELECT selection : PRESELECT.values())
-			prefs.edit().remove(selection.toString()).apply();
+		setStatus(getString(resId));
 	}
 
 	/**
-	 * Handler for result messages from other activities
+	 * set status message in status bar
+	 *
+	 * @param subTitle status text to be set
 	 */
-	@Override
-	public void onActivityResult(int requestCode, int resultCode, Intent data)
+	private void setStatus(CharSequence subTitle)
 	{
-		boolean secureConnection = false;
-
-		switch (requestCode)
+		final ActionBar actionBar = getActionBar();
+		if (actionBar != null)
 		{
-			// device is connected
-			case REQUEST_CONNECT_DEVICE_SECURE:
-				secureConnection = true;
-				// no break here ...
-			case REQUEST_CONNECT_DEVICE_INSECURE:
-				// When BtDeviceListActivity returns with a device to connect
-				if (resultCode == Activity.RESULT_OK)
-				{
-					// Get the device MAC address
-					String address = data.getExtras().getString(
-						BtDeviceListActivity.EXTRA_DEVICE_ADDRESS);
-					// save reported address as last setting
-					prefs.edit().putString(PRESELECT.LAST_DEV_ADDRESS.toString(), address).apply();
-					connectBtDevice(address, secureConnection);
-				} else
-				{
-					setMode(MODE.OFFLINE);
-				}
-				break;
-
-			// USB device selected
-			case REQUEST_CONNECT_DEVICE_USB:
-				// DeviceListActivity returns with a device to connect
-				if (resultCode == Activity.RESULT_OK)
-				{
-					mCommService = new UsbCommService(this, mHandler);
-					mCommService.connect(UsbDeviceListActivity.selectedPort, true);
-				} else
-				{
-					setMode(MODE.OFFLINE);
-				}
-				break;
-
-			// bluetooth enabled
-			case REQUEST_ENABLE_BT:
-				// When the request to enable Bluetooth returns
-				if (resultCode == Activity.RESULT_OK)
-				{
-					// Start online mode
-					setMode(MODE.ONLINE);
-				} else
-				{
-					// Start demo service Thread
-					setMode(MODE.DEMO);
-				}
-				break;
-
-			// file selected
-			case REQUEST_SELECT_FILE:
-				if (resultCode == RESULT_OK)
-				{
-					// Get the Uri of the selected file
-					Uri uri = data.getData();
-					log.info("Load content: " + uri);
-					// load data ...
-					fileHelper.loadDataThreaded(uri, mHandler, MESSAGE_FILE_READ);
-					// don't allow saving it again
-					setMenuItemEnable(R.id.save, false);
-					setMenuItemEnable(R.id.obd_services, true);
-				}
-				break;
+			actionBar.setSubtitle(subTitle);
+			// show action bar to make state change visible
+			unHideActionBar(getListView());
+		}
+	}
 
-			// settings finished
-			case REQUEST_SETTINGS:
-			{
-				// change handling done by callbacks
-			}
-			break;
+	/**
+	 * Select file to be loaded
+	 */
+	public void selectFileToLoad()
+	{
+		File file = new File(FileHelper.getPath(this));
+		Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
+		intent.addCategory(Intent.CATEGORY_OPENABLE);
+		Uri data = Uri.fromFile(file);
+		String type = "*/*";
+		intent.setDataAndType(data, type);
+		startActivityForResult(intent, REQUEST_SELECT_FILE);
+	}
 
-			// graphical data view finished
-			case REQUEST_GRAPH_DISPLAY_DONE:
-				// let context know that we are in list mode again ...
-				dataViewMode = DATA_VIEW_MODE.LIST;
-				break;
-		}
+	/**
+	 * clear all preselections
+	 */
+	private void clearPreselections()
+	{
+		for(PRESELECT selection : PRESELECT.values())
+			prefs.edit().remove(selection.toString()).apply();
 	}
 
 	/**
@@ -1499,8 +1703,13 @@ public class MainActivity extends ListActivity
 		obdService = newObdService;
 		// set list view
 		setContentView(mListView);
+		getListView().setOnItemLongClickListener(this);
+		getListView().setMultiChoiceModeListener(this);
+		getListView().setChoiceMode(ListView.CHOICE_MODE_SINGLE);
+
 		// un-filter display
 		setFiltered(false);
+
 		// set title
 		ActionBar ab = getActionBar();
 		if (ab != null)
@@ -1518,9 +1727,6 @@ public class MainActivity extends ListActivity
 				}
 			}
 		}
-		// update controls
-		setMenuItemEnable(R.id.graph_actions, false);
-		getListView().setOnItemLongClickListener(this);
 		// set protocol service
 		CommService.elm.setService(newObdService, (getMode() != MODE.FILE));
 		// show / hide freeze frame selector */
@@ -1533,6 +1739,8 @@ public class MainActivity extends ListActivity
 		switch (newObdService)
 		{
 			case ObdProt.OBD_SVC_DATA:
+				getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);
+				// no break here
 			case ObdProt.OBD_SVC_FREEZEFRAME:
 				currDataAdapter = mPidAdapter;
 				break;
@@ -1552,7 +1760,7 @@ public class MainActivity extends ListActivity
 		}
 		setListAdapter(currDataAdapter);
 		// remember this as last selected service
-		if(newObdService > 0)
+		if(newObdService > ObdProt.OBD_SVC_NONE)
 			prefs.edit().putInt(PRESELECT.LAST_SERVICE.toString(), newObdService).apply();
 	}
 
@@ -1578,12 +1786,6 @@ public class MainActivity extends ListActivity
 			ObdProt.resetFixedPid();
 			mPidAdapter.setPvList(ObdProt.PidPvs);
 		}
-
-		setMenuItemEnable(R.id.filter_selected, !filtered);
-		setMenuItemEnable(R.id.unfilter_selected, filtered);
-		setMenuItemEnable(R.id.chart_selected, !filtered);
-		setMenuItemEnable(R.id.dashboard_selected, !filtered);
-		setMenuItemEnable(R.id.hud_selected, !filtered);
 	}
 
 	/**
@@ -1645,8 +1847,6 @@ public class MainActivity extends ListActivity
 				getListView().setItemChecked(i, selectionStatus);
 			}
 		}
-		// enable graphic actions only on DATA service if min 1 item selected
-		setMenuItemEnable(R.id.graph_actions, positions.length > 0 && selectionStatus);
 
 		// return validity of positions
 		return positionsValid;
@@ -1667,118 +1867,6 @@ public class MainActivity extends ListActivity
 		ObdProt.setFixedPid(pids);
 	}
 
-	/**
-	 * Handle short clicks in OBD data list items
-	 */
-	@Override
-	public void onListItemClick(ListView l, View v, int position, long id)
-	{
-		if(DATA_VIEW_MODE.LIST == dataViewMode
-			 && ObdProt.OBD_SVC_DATA == CommService.elm.getService())
-		{
-			super.onListItemClick(l, v, position, id);
-		}
-		// enable graphic actions only on DATA service if min 1 item selected
-		setMenuItemEnable(R.id.graph_actions,
-		                  ((CommService.elm.getService() == ObdProt.OBD_SVC_DATA)
-			                  && (getListView().getCheckedItemCount() > 0)
-		                  )
-		);
-	}
-
-	/*
-	 * (non-Javadoc)
-	 *
-	 * @see android.app.Activity#onDestroy()
-	 */
-	@Override
-	protected void onDestroy()
-	{
-		// Stop toolbar hider thread
-		setAutoHider(false);
-
-		try
-		{
-			// Reduce ELM power consumption by setting it to sleep
-			CommService.elm.goToSleep();
-			// wait until message is out ...
-			Thread.sleep(100, 0);
-		} catch (InterruptedException e)
-		{
-			// do nothing
-            log.log(Level.FINER, e.getLocalizedMessage());
-		}
-
-		/* don't listen to ELM data changes any more */
-		removeDataListeners();
-		// don't listen to ELM property changes any more
-		CommService.elm.removePropertyChangeListener(this);
-
-		// stop demo service if it was started
-		setMode(MODE.OFFLINE);
-
-		// stop communication service
-		if (mCommService != null) mCommService.stop();
-
-		// if bluetooth adapter was switched OFF before ...
-		if (mBluetoothAdapter != null && !initialBtStateEnabled)
-		{
-			// ... turn it OFF again
-			mBluetoothAdapter.disable();
-		}
-
-		log.info(String.format("%s %s finished",
-		                       getString(R.string.app_name),
-		                       getString(R.string.app_version)));
-
-		/* remove log file handler */
-        Logger.getLogger("").removeHandler(logFileHandler);
-        logFileHandler.close();
-
-        super.onDestroy();
-	}
-
-	/**
-	 * Handle long licks on OBD data list items
-	 */
-	@Override
-	public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id)
-	{
-		Intent intent;
-
-		switch (CommService.elm.getService())
-		{
-		    /* if we are in OBD data mode:
-		     * ->Long click on an item starts the single item dashboard activity
-		     */
-			case ObdProt.OBD_SVC_DATA:
-				EcuDataPv pv = (EcuDataPv) getListAdapter().getItem(position);
-				/* only numeric values may be shown as graph/dashboard */
-				if (pv.get(EcuDataPv.FID_VALUE) instanceof Number)
-				{
-					DashBoardActivity.setAdapter(getListAdapter());
-					intent = new Intent(this, DashBoardActivity.class);
-					intent.putExtra(DashBoardActivity.POSITIONS, new int[]{position});
-					startActivity(intent);
-				}
-				break;
-
-			/* If we are in DFC mode of any kind
-			 * -> Long click leads to a web search for selected DFC
-			 */
-			case ObdProt.OBD_SVC_READ_CODES:
-			case ObdProt.OBD_SVC_PERMACODES:
-			case ObdProt.OBD_SVC_PENDINGCODES:
-				intent = new Intent(Intent.ACTION_WEB_SEARCH);
-				EcuCodeItem dfc = (EcuCodeItem) getListAdapter().getItem(position);
-				intent.putExtra(SearchManager.QUERY,
-				                "OBD " + String.valueOf(dfc.get(EcuCodeItem.FID_CODE)));
-				startActivity(intent);
-				break;
-		}
-		return true;
-	}
-
 	/**
 	 * Handle bluetooth connection established ...
 	 */
@@ -1792,7 +1880,6 @@ public class MainActivity extends ListActivity
 		setMenuItemVisible(R.id.disconnect, true);
 
 		setMenuItemEnable(R.id.obd_services, true);
-		setMenuItemEnable(R.id.graph_actions, false);
 		// display connection status
 		setStatus(getString(R.string.title_connected_to, mConnectedDeviceName));
 		// send RESET to Elm adapter
@@ -1808,25 +1895,6 @@ public class MainActivity extends ListActivity
 		setMode(MODE.OFFLINE);
 	}
 
-	/**
-	 * Handler for PV change events This handler just forwards the PV change
-	 * events to the android handler, since all adapter / GUI actions have to be
-	 * performed from the main handler
-	 *
-	 * @param event PvChangeEvent which is reported
-	 */
-	@Override
-	public synchronized void pvChanged(PvChangeEvent event)
-	{
-		// forward PV change to the UI Activity
-		Message msg = mHandler.obtainMessage(MainActivity.MESSAGE_DATA_ITEMS_CHANGED);
-		if(!event.isChildEvent())
-		{
-			msg.obj = event;
-			mHandler.sendMessage(msg);
-		}
-	}
-
 	/**
 	 * Property change listener to ELM-Protocol
 	 *
@@ -1892,10 +1960,10 @@ public class MainActivity extends ListActivity
 	 * Set new data view mode
 	 * @param dataViewMode new data view mode
 	 */
-	private void setDataViewMode(DATA_VIEW_MODE dataViewMode)
+	private void setDataViewMode(DATA_VIEW_MODE dataViewMode, boolean force)
 	{
 		// if this is a real change ...
-		if(dataViewMode != this.dataViewMode)
+		if(force || dataViewMode != this.dataViewMode)
 		{
 			log.info(String.format("Set view mode: %s -> %s", this.dataViewMode, dataViewMode));
 
@@ -1903,10 +1971,12 @@ public class MainActivity extends ListActivity
 			{
 				case LIST:
 					setFiltered(false);
+					getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);
 					break;
 
 				case FILTERED:
 					setFiltered(true);
+					getListView().setChoiceMode(ListView.CHOICE_MODE_SINGLE);
 					break;
 
 				case HEADUP:
@@ -1926,9 +1996,6 @@ public class MainActivity extends ListActivity
 								                ? R.layout.dashboard
 								                : R.layout.head_up);
 							startActivityForResult(intent, REQUEST_GRAPH_DISPLAY_DONE);
-						} else
-						{
-							setMenuItemEnable(R.id.graph_actions, false);
 						}
 					}
 					break;
@@ -1959,5 +2026,4 @@ public class MainActivity extends ListActivity
 				prefs.edit().putString(PRESELECT.LAST_VIEW_MODE.toString(), dataViewMode.toString()).apply();
 		}
 	}
-
 }
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/MirrorRelativeLayout.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/MirrorRelativeLayout.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/MirrorRelativeLayout.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/MirrorRelativeLayout.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/NetworkCommService.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/NetworkCommService.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/NetworkCommService.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/NetworkCommService.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/ObdGaugeAdapter.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/ObdGaugeAdapter.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/ObdGaugeAdapter.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/ObdGaugeAdapter.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/ObdItemAdapter.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/ObdItemAdapter.java
similarity index 90%
rename from src/com/fr3ts0n/ecu/gui/androbd/ObdItemAdapter.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/ObdItemAdapter.java
index e574c0c..66460be 100644
--- a/src/com/fr3ts0n/ecu/gui/androbd/ObdItemAdapter.java
+++ b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/ObdItemAdapter.java
@@ -26,10 +26,10 @@ import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ArrayAdapter;
-import android.widget.CheckBox;
 import android.widget.ProgressBar;
 import android.widget.TextView;
 
+import com.fr3ts0n.androbd.plugin.mgr.PluginManager;
 import com.fr3ts0n.ecu.Conversion;
 import com.fr3ts0n.ecu.EcuDataItem;
 import com.fr3ts0n.ecu.EcuDataPv;
@@ -64,6 +64,7 @@ public class ObdItemAdapter extends ArrayAdapter<Object>
 	public static boolean allowDataUpdates = true;
 	transient SharedPreferences prefs;
 
+
 	public ObdItemAdapter(Context context, int resource, PvList pvs)
 	{
 		super(context, resource);
@@ -164,16 +165,15 @@ public class ObdItemAdapter extends ArrayAdapter<Object>
 		{
 			convertView = mInflater.inflate(R.layout.obd_item, parent, false);
 		}
+
 		// fill view fields with data
 
 		// description text
 		TextView tvDescr = (TextView) convertView.findViewById(R.id.obd_label);
 		tvDescr.setText(String.valueOf(currPv.get(EcuDataPv.FID_DESCRIPT)));
-		CheckBox cbChecked = (CheckBox) convertView.findViewById(R.id.check);
 		TextView tvValue = (TextView) convertView.findViewById(R.id.obd_value);
 		TextView tvUnits = (TextView) convertView.findViewById(R.id.obd_units);
 		ProgressBar pb = (ProgressBar) convertView.findViewById(R.id.bar);
-		cbChecked.setVisibility(isPidList ? View.VISIBLE : View.GONE);
 
 		// format value string
 		String fmtText;
@@ -228,6 +228,7 @@ public class ObdItemAdapter extends ArrayAdapter<Object>
 	 */
 	protected synchronized void addAllDataSeries()
 	{
+		String pluginStr = "";
 		for (IndexedProcessVar pv : (Iterable<IndexedProcessVar>) pvs.values())
 		{
 			XYSeries series = (XYSeries) pv.get(FID_DATA_SERIES);
@@ -236,6 +237,20 @@ public class ObdItemAdapter extends ArrayAdapter<Object>
 				pv.put(FID_DATA_SERIES, series);
 				pv.addPvChangeListener(this, PvChangeEvent.PV_MODIFIED);
 			}
+
+			// assemble data items for plugin notification
+			pluginStr += String.format( "%s;%s;%s;%s\n",
+				                        pv.get(EcuDataPv.FID_MNEMONIC),
+										pv.get(EcuDataPv.FID_DESCRIPT),
+										String.valueOf(pv.get(EcuDataPv.FID_VALUE)),
+				                        pv.get(EcuDataPv.FID_UNITS)
+			                          );
+		}
+
+		// notify plugins
+		if(PluginManager.pluginHandler != null)
+		{
+			PluginManager.pluginHandler.sendDataList(pluginStr);
 		}
 	}
 
@@ -255,6 +270,14 @@ public class ObdItemAdapter extends ArrayAdapter<Object>
 
 				}
 			}
+
+			// send update to plugin handler
+			if(PluginManager.pluginHandler != null)
+			{
+				PluginManager.pluginHandler.sendDataUpdate(
+					pv.get(EcuDataPv.FID_MNEMONIC).toString(),
+					event.getValue().toString());
+			}
 		}
 	}
 }
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/Screenshot.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/Screenshot.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/Screenshot.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/Screenshot.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/SettingsActivity.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/SettingsActivity.java
similarity index 94%
rename from src/com/fr3ts0n/ecu/gui/androbd/SettingsActivity.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/SettingsActivity.java
index 49538b3..806d228 100644
--- a/src/com/fr3ts0n/ecu/gui/androbd/SettingsActivity.java
+++ b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/SettingsActivity.java
@@ -29,6 +29,8 @@ import android.preference.MultiSelectListPreference;
 import android.preference.Preference;
 import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
+import android.util.Log;
+import android.widget.Toast;
 
 import com.fr3ts0n.ecu.EcuDataItem;
 import com.fr3ts0n.ecu.prot.obd.ElmProt;
@@ -76,6 +78,7 @@ public class SettingsActivity
 	static final String ELM_MIN_TIMEOUT = "elm_min_timeout";
 	static final String ELM_CMD_DISABLE = "elm_cmd_disable";
     static final String ELM_TIMING_SELECT = "adaptive_timing_mode";
+    static final String KEY_BITCOIN = "bitcoin";
 
 	/*
 	 * (non-Javadoc)
@@ -125,7 +128,7 @@ public class SettingsActivity
 			setupPidSelection();
 			// update network selection fields
 			updateNetworkSelections();
-
+			findPreference(KEY_BITCOIN).setOnPreferenceClickListener(this);
 			// add handler for selection update
 			prefs.registerOnSharedPreferenceChangeListener(this);
 		}
@@ -310,8 +313,25 @@ public class SettingsActivity
 		public boolean onPreferenceClick(Preference preference)
 		{
 			Intent intent = preference.getIntent();
-			intent.addCategory(Intent.CATEGORY_OPENABLE);
-			startActivityForResult(intent, preference.hashCode());
+			try
+			{
+				if(KEY_BITCOIN.equals(preference.getKey()))
+				{
+					// special handling for bitcoin VIEW intent
+					startActivity(intent);
+				}
+				else
+				{
+					// OPEN intents require result handling
+					intent.addCategory(Intent.CATEGORY_OPENABLE);
+					startActivityForResult(intent, preference.hashCode());
+				}
+			}
+			catch(Exception e)
+			{
+				Log.e("Settings", e.getMessage());
+				Toast.makeText(getActivity(), e.getMessage(), Toast.LENGTH_LONG).show();
+			}
 			return true;
 		}
 
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/UsbCommService.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/UsbCommService.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/UsbCommService.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/UsbCommService.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/UsbDeviceListActivity.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/UsbDeviceListActivity.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/UsbDeviceListActivity.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/UsbDeviceListActivity.java
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/VidItemAdapter.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/VidItemAdapter.java
similarity index 95%
rename from src/com/fr3ts0n/ecu/gui/androbd/VidItemAdapter.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/VidItemAdapter.java
index eb10f50..b1ced48 100644
--- a/src/com/fr3ts0n/ecu/gui/androbd/VidItemAdapter.java
+++ b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/VidItemAdapter.java
@@ -19,9 +19,6 @@
 package com.fr3ts0n.ecu.gui.androbd;
 
 import android.content.Context;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.CheckBox;
 
 import com.fr3ts0n.pvs.PvList;
 
@@ -47,7 +44,6 @@ public class VidItemAdapter extends ObdItemAdapter
 
 	/* (non-Javadoc)
 	 * @see com.fr3ts0n.ecu.gui.androbd.ObdItemAdapter#getView(int, android.view.View, android.view.ViewGroup)
-   */
 	@Override
 	public View getView(int position, View v, ViewGroup parent)
 	{
@@ -59,4 +55,5 @@ public class VidItemAdapter extends ObdItemAdapter
 
 		return v;
 	}
+   */
 }
diff --git a/src/com/fr3ts0n/ecu/gui/androbd/package-info.java b/androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/package-info.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/androbd/package-info.java
rename to androbd/src/main/java/com/fr3ts0n/ecu/gui/androbd/package-info.java
diff --git a/src/com/fr3ts0n/common/UTF8Bundle.java b/library/src/main/java/com/fr3ts0n/common/UTF8Bundle.java
similarity index 100%
rename from src/com/fr3ts0n/common/UTF8Bundle.java
rename to library/src/main/java/com/fr3ts0n/common/UTF8Bundle.java
diff --git a/src/com/fr3ts0n/common/UTF8Control.java b/library/src/main/java/com/fr3ts0n/common/UTF8Control.java
similarity index 100%
rename from src/com/fr3ts0n/common/UTF8Control.java
rename to library/src/main/java/com/fr3ts0n/common/UTF8Control.java
diff --git a/src/com/fr3ts0n/common/package-info.java b/library/src/main/java/com/fr3ts0n/common/package-info.java
similarity index 100%
rename from src/com/fr3ts0n/common/package-info.java
rename to library/src/main/java/com/fr3ts0n/common/package-info.java
diff --git a/src/com/fr3ts0n/ecu/BitmapConversion.java b/library/src/main/java/com/fr3ts0n/ecu/BitmapConversion.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/BitmapConversion.java
rename to library/src/main/java/com/fr3ts0n/ecu/BitmapConversion.java
diff --git a/src/com/fr3ts0n/ecu/Conversion.java b/library/src/main/java/com/fr3ts0n/ecu/Conversion.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/Conversion.java
rename to library/src/main/java/com/fr3ts0n/ecu/Conversion.java
diff --git a/src/com/fr3ts0n/ecu/Conversions.java b/library/src/main/java/com/fr3ts0n/ecu/Conversions.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/Conversions.java
rename to library/src/main/java/com/fr3ts0n/ecu/Conversions.java
diff --git a/src/com/fr3ts0n/ecu/EcuCodeItem.java b/library/src/main/java/com/fr3ts0n/ecu/EcuCodeItem.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/EcuCodeItem.java
rename to library/src/main/java/com/fr3ts0n/ecu/EcuCodeItem.java
diff --git a/src/com/fr3ts0n/ecu/EcuCodeList.java b/library/src/main/java/com/fr3ts0n/ecu/EcuCodeList.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/EcuCodeList.java
rename to library/src/main/java/com/fr3ts0n/ecu/EcuCodeList.java
diff --git a/src/com/fr3ts0n/ecu/EcuConversions.java b/library/src/main/java/com/fr3ts0n/ecu/EcuConversions.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/EcuConversions.java
rename to library/src/main/java/com/fr3ts0n/ecu/EcuConversions.java
diff --git a/src/com/fr3ts0n/ecu/EcuDataItem.java b/library/src/main/java/com/fr3ts0n/ecu/EcuDataItem.java
similarity index 97%
rename from src/com/fr3ts0n/ecu/EcuDataItem.java
rename to library/src/main/java/com/fr3ts0n/ecu/EcuDataItem.java
index 0f17058..b86367c 100644
--- a/src/com/fr3ts0n/ecu/EcuDataItem.java
+++ b/library/src/main/java/com/fr3ts0n/ecu/EcuDataItem.java
@@ -55,6 +55,7 @@ public class EcuDataItem
 	long bitMask = 0xFFFFFFFF;  ///< mask for relevant bits within extracted long
 	String fmt;                 ///< Format for text output
 	public String label;        ///< text label
+	public String mnemonic;     ///< unique textual mnemonic
 	public EcuDataPv pv;        ///< the process variable for displaying
 	int currErrorCount = 0;     ///< current number of consecutive conversion errors
 
@@ -101,7 +102,8 @@ public class EcuDataItem
 	                    String format,
 	                    Number minValue,
 	                    Number maxValue,
-	                    String labelText)
+	                    String labelText,
+						String _mnemonic)
 	{
 		pid = newPid;
 		ofs = offset;
@@ -112,6 +114,7 @@ public class EcuDataItem
 		cnv = conversions;
 		fmt = format;
 		label = labelText;
+		mnemonic = _mnemonic;
 		pv = new EcuDataPv();
 		Number minVal = minValue;
 		Number maxVal = maxValue;
@@ -121,6 +124,7 @@ public class EcuDataItem
 		pv.put(EcuDataPv.FID_OFS, Integer.valueOf(ofs));
 		pv.put(EcuDataPv.FID_BIT_OFS, Integer.valueOf(bitOffset));
 		pv.put(EcuDataPv.FID_DESCRIPT, label);
+		pv.put(EcuDataPv.FID_MNEMONIC, mnemonic);
 		pv.put(EcuDataPv.FID_UNITS,
 		       (cnv != null && cnv[cnvSystem] != null)
 		       ? cnv[cnvSystem].getUnits()
diff --git a/src/com/fr3ts0n/ecu/EcuDataItems.java b/library/src/main/java/com/fr3ts0n/ecu/EcuDataItems.java
similarity index 93%
rename from src/com/fr3ts0n/ecu/EcuDataItems.java
rename to library/src/main/java/com/fr3ts0n/ecu/EcuDataItems.java
index cdade72..6cd8b8d 100644
--- a/src/com/fr3ts0n/ecu/EcuDataItems.java
+++ b/library/src/main/java/com/fr3ts0n/ecu/EcuDataItems.java
@@ -157,16 +157,17 @@ public class EcuDataItems extends HashMap<Integer, HashMap<Integer, Vector<EcuDa
 				                                  params[FLD.LABEL.ordinal()]);
 				// create linear conversion
 				newItm = new EcuDataItem(Integer.decode(params[FLD.PID.ordinal()]).intValue(),
- 																 Integer.parseInt(params[FLD.OFS.ordinal()]),
-																 Integer.parseInt(params[FLD.LEN.ordinal()]),
-					                       Integer.parseInt(params[FLD.BIT_OFS.ordinal()]),
-					                       Integer.parseInt(params[FLD.BIT_LEN.ordinal()]),
-					                       Long.decode(params[FLD.BIT_MASK.ordinal()]).longValue(),
-					                       currCnvSet,
-																 params[FLD.FORMAT.ordinal()],
-																 minVal,
-																 maxVal,
-																 label);
+										 Integer.parseInt(params[FLD.OFS.ordinal()]),
+										 Integer.parseInt(params[FLD.LEN.ordinal()]),
+									     Integer.parseInt(params[FLD.BIT_OFS.ordinal()]),
+									     Integer.parseInt(params[FLD.BIT_LEN.ordinal()]),
+									     Long.decode(params[FLD.BIT_MASK.ordinal()]).longValue(),
+									     currCnvSet,
+										 params[FLD.FORMAT.ordinal()],
+										 minVal,
+										 maxVal,
+										 label,
+					                     params[FLD.MNEMONIC.ordinal()]);
 
 				// enter data item for all specified services
 				String[] services = params[FLD.SVC.ordinal()].split(","); //$NON-NLS-1$
diff --git a/src/com/fr3ts0n/ecu/EcuDataPv.java b/library/src/main/java/com/fr3ts0n/ecu/EcuDataPv.java
similarity index 97%
rename from src/com/fr3ts0n/ecu/EcuDataPv.java
rename to library/src/main/java/com/fr3ts0n/ecu/EcuDataPv.java
index 3952da3..fbfacff 100755
--- a/src/com/fr3ts0n/ecu/EcuDataPv.java
+++ b/library/src/main/java/com/fr3ts0n/ecu/EcuDataPv.java
@@ -42,6 +42,7 @@ public class EcuDataPv extends IndexedProcessVar
 	public static final String FID_MIN = "MIN";
 	public static final String FID_MAX = "MAX";
 	public static final String FID_BIT_OFS = "BIT_OFS";
+	public static final String FID_MNEMONIC = "MNEMONIC";
 
 	public static final String[] FIELDS =
 		{
diff --git a/src/com/fr3ts0n/ecu/HashConversion.java b/library/src/main/java/com/fr3ts0n/ecu/HashConversion.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/HashConversion.java
rename to library/src/main/java/com/fr3ts0n/ecu/HashConversion.java
diff --git a/src/com/fr3ts0n/ecu/IntConversion.java b/library/src/main/java/com/fr3ts0n/ecu/IntConversion.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/IntConversion.java
rename to library/src/main/java/com/fr3ts0n/ecu/IntConversion.java
diff --git a/src/com/fr3ts0n/ecu/LinearConversion.java b/library/src/main/java/com/fr3ts0n/ecu/LinearConversion.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/LinearConversion.java
rename to library/src/main/java/com/fr3ts0n/ecu/LinearConversion.java
diff --git a/src/com/fr3ts0n/ecu/NumericConversion.java b/library/src/main/java/com/fr3ts0n/ecu/NumericConversion.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/NumericConversion.java
rename to library/src/main/java/com/fr3ts0n/ecu/NumericConversion.java
diff --git a/src/com/fr3ts0n/ecu/ObdCodeItem.java b/library/src/main/java/com/fr3ts0n/ecu/ObdCodeItem.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/ObdCodeItem.java
rename to library/src/main/java/com/fr3ts0n/ecu/ObdCodeItem.java
diff --git a/src/com/fr3ts0n/ecu/ObdCodeList.java b/library/src/main/java/com/fr3ts0n/ecu/ObdCodeList.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/ObdCodeList.java
rename to library/src/main/java/com/fr3ts0n/ecu/ObdCodeList.java
diff --git a/src/com/fr3ts0n/ecu/ObdVidItem.java b/library/src/main/java/com/fr3ts0n/ecu/ObdVidItem.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/ObdVidItem.java
rename to library/src/main/java/com/fr3ts0n/ecu/ObdVidItem.java
diff --git a/src/com/fr3ts0n/ecu/Pid.java b/library/src/main/java/com/fr3ts0n/ecu/Pid.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/Pid.java
rename to library/src/main/java/com/fr3ts0n/ecu/Pid.java
diff --git a/src/com/fr3ts0n/ecu/Pids.java b/library/src/main/java/com/fr3ts0n/ecu/Pids.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/Pids.java
rename to library/src/main/java/com/fr3ts0n/ecu/Pids.java
diff --git a/src/com/fr3ts0n/ecu/VagConversion.java b/library/src/main/java/com/fr3ts0n/ecu/VagConversion.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/VagConversion.java
rename to library/src/main/java/com/fr3ts0n/ecu/VagConversion.java
diff --git a/src/com/fr3ts0n/ecu/gui/application/AboutPanel.java b/library/src/main/java/com/fr3ts0n/ecu/gui/application/AboutPanel.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/application/AboutPanel.java
rename to library/src/main/java/com/fr3ts0n/ecu/gui/application/AboutPanel.java
diff --git a/src/com/fr3ts0n/ecu/gui/application/ObdDataPanel.java b/library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdDataPanel.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/application/ObdDataPanel.java
rename to library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdDataPanel.java
diff --git a/src/com/fr3ts0n/ecu/gui/application/ObdDataPlotter.java b/library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdDataPlotter.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/application/ObdDataPlotter.java
rename to library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdDataPlotter.java
diff --git a/src/com/fr3ts0n/ecu/gui/application/ObdDtcPanel.java b/library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdDtcPanel.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/application/ObdDtcPanel.java
rename to library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdDtcPanel.java
diff --git a/src/com/fr3ts0n/ecu/gui/application/ObdFileFilter.java b/library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdFileFilter.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/application/ObdFileFilter.java
rename to library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdFileFilter.java
diff --git a/src/com/fr3ts0n/ecu/gui/application/ObdItemTableModel.java b/library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdItemTableModel.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/application/ObdItemTableModel.java
rename to library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdItemTableModel.java
diff --git a/src/com/fr3ts0n/ecu/gui/application/ObdItemTableRenderer.java b/library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdItemTableRenderer.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/application/ObdItemTableRenderer.java
rename to library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdItemTableRenderer.java
diff --git a/src/com/fr3ts0n/ecu/gui/application/ObdTestFrame.java b/library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdTestFrame.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/application/ObdTestFrame.java
rename to library/src/main/java/com/fr3ts0n/ecu/gui/application/ObdTestFrame.java
diff --git a/src/com/fr3ts0n/ecu/gui/application/VagCodeStatPanel.java b/library/src/main/java/com/fr3ts0n/ecu/gui/application/VagCodeStatPanel.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/application/VagCodeStatPanel.java
rename to library/src/main/java/com/fr3ts0n/ecu/gui/application/VagCodeStatPanel.java
diff --git a/src/com/fr3ts0n/ecu/gui/application/VagTestFrame.java b/library/src/main/java/com/fr3ts0n/ecu/gui/application/VagTestFrame.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/gui/application/VagTestFrame.java
rename to library/src/main/java/com/fr3ts0n/ecu/gui/application/VagTestFrame.java
diff --git a/src/com/fr3ts0n/ecu/prot/obd/CanProt.java b/library/src/main/java/com/fr3ts0n/ecu/prot/obd/CanProt.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/prot/obd/CanProt.java
rename to library/src/main/java/com/fr3ts0n/ecu/prot/obd/CanProt.java
diff --git a/src/com/fr3ts0n/ecu/prot/obd/CanProtFord.java b/library/src/main/java/com/fr3ts0n/ecu/prot/obd/CanProtFord.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/prot/obd/CanProtFord.java
rename to library/src/main/java/com/fr3ts0n/ecu/prot/obd/CanProtFord.java
diff --git a/src/com/fr3ts0n/ecu/prot/obd/ElmProt.java b/library/src/main/java/com/fr3ts0n/ecu/prot/obd/ElmProt.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/prot/obd/ElmProt.java
rename to library/src/main/java/com/fr3ts0n/ecu/prot/obd/ElmProt.java
diff --git a/src/com/fr3ts0n/ecu/prot/obd/Messages.java b/library/src/main/java/com/fr3ts0n/ecu/prot/obd/Messages.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/prot/obd/Messages.java
rename to library/src/main/java/com/fr3ts0n/ecu/prot/obd/Messages.java
diff --git a/src/com/fr3ts0n/ecu/prot/obd/ObdProt.java b/library/src/main/java/com/fr3ts0n/ecu/prot/obd/ObdProt.java
similarity index 99%
rename from src/com/fr3ts0n/ecu/prot/obd/ObdProt.java
rename to library/src/main/java/com/fr3ts0n/ecu/prot/obd/ObdProt.java
index d730bf4..c7db395 100755
--- a/src/com/fr3ts0n/ecu/prot/obd/ObdProt.java
+++ b/library/src/main/java/com/fr3ts0n/ecu/prot/obd/ObdProt.java
@@ -398,8 +398,9 @@ public class ObdProt extends ProtoHeader
                 Conversion[] dummyCnvs = {EcuConversions.dfltCnv, EcuConversions.dfltCnv};
                 EcuDataItem newItem = new EcuDataItem(currPid, 0, 0, 0, 32, 0xFFFFFFFF, dummyCnvs,
                                                       "%#08x", null, null,
-                                                      String.format("PID %02X", currPid)
-                );
+                                                      String.format("PID %02X", currPid),
+                                                      String.format("PID_%02X", currPid)
+                                                     );
                 dataItems.appendItemToService(obdService, newItem);
 
                 // re-load data items for this PID
diff --git a/src/com/fr3ts0n/ecu/prot/obd/package-info.java b/library/src/main/java/com/fr3ts0n/ecu/prot/obd/package-info.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/prot/obd/package-info.java
rename to library/src/main/java/com/fr3ts0n/ecu/prot/obd/package-info.java
diff --git a/src/com/fr3ts0n/ecu/prot/obd/res/package-info.java b/library/src/main/java/com/fr3ts0n/ecu/prot/obd/res/package-info.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/prot/obd/res/package-info.java
rename to library/src/main/java/com/fr3ts0n/ecu/prot/obd/res/package-info.java
diff --git a/src/com/fr3ts0n/ecu/prot/package-info.java b/library/src/main/java/com/fr3ts0n/ecu/prot/package-info.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/prot/package-info.java
rename to library/src/main/java/com/fr3ts0n/ecu/prot/package-info.java
diff --git a/src/com/fr3ts0n/ecu/prot/vag/Kw1281Prot.java b/library/src/main/java/com/fr3ts0n/ecu/prot/vag/Kw1281Prot.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/prot/vag/Kw1281Prot.java
rename to library/src/main/java/com/fr3ts0n/ecu/prot/vag/Kw1281Prot.java
diff --git a/src/com/fr3ts0n/ecu/prot/vag/package-info.java b/library/src/main/java/com/fr3ts0n/ecu/prot/vag/package-info.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/prot/vag/package-info.java
rename to library/src/main/java/com/fr3ts0n/ecu/prot/vag/package-info.java
diff --git a/src/com/fr3ts0n/ecu/prot/vag/res/package-info.java b/library/src/main/java/com/fr3ts0n/ecu/prot/vag/res/package-info.java
similarity index 100%
rename from src/com/fr3ts0n/ecu/prot/vag/res/package-info.java
rename to library/src/main/java/com/fr3ts0n/ecu/prot/vag/res/package-info.java
diff --git a/src/com/fr3ts0n/prot/FtpLoader.java b/library/src/main/java/com/fr3ts0n/prot/FtpLoader.java
similarity index 100%
rename from src/com/fr3ts0n/prot/FtpLoader.java
rename to library/src/main/java/com/fr3ts0n/prot/FtpLoader.java
diff --git a/src/com/fr3ts0n/prot/ProtUtils.java b/library/src/main/java/com/fr3ts0n/prot/ProtUtils.java
similarity index 100%
rename from src/com/fr3ts0n/prot/ProtUtils.java
rename to library/src/main/java/com/fr3ts0n/prot/ProtUtils.java
diff --git a/src/com/fr3ts0n/prot/ProtoHeader.java b/library/src/main/java/com/fr3ts0n/prot/ProtoHeader.java
similarity index 100%
rename from src/com/fr3ts0n/prot/ProtoHeader.java
rename to library/src/main/java/com/fr3ts0n/prot/ProtoHeader.java
diff --git a/src/com/fr3ts0n/prot/SerialExt.java b/library/src/main/java/com/fr3ts0n/prot/SerialExt.java
similarity index 100%
rename from src/com/fr3ts0n/prot/SerialExt.java
rename to library/src/main/java/com/fr3ts0n/prot/SerialExt.java
diff --git a/src/com/fr3ts0n/prot/StreamHandler.java b/library/src/main/java/com/fr3ts0n/prot/StreamHandler.java
similarity index 100%
rename from src/com/fr3ts0n/prot/StreamHandler.java
rename to library/src/main/java/com/fr3ts0n/prot/StreamHandler.java
diff --git a/src/com/fr3ts0n/prot/TelegramListener.java b/library/src/main/java/com/fr3ts0n/prot/TelegramListener.java
similarity index 100%
rename from src/com/fr3ts0n/prot/TelegramListener.java
rename to library/src/main/java/com/fr3ts0n/prot/TelegramListener.java
diff --git a/src/com/fr3ts0n/prot/TelegramSender.java b/library/src/main/java/com/fr3ts0n/prot/TelegramSender.java
similarity index 100%
rename from src/com/fr3ts0n/prot/TelegramSender.java
rename to library/src/main/java/com/fr3ts0n/prot/TelegramSender.java
diff --git a/src/com/fr3ts0n/prot/TelegramWriter.java b/library/src/main/java/com/fr3ts0n/prot/TelegramWriter.java
similarity index 100%
rename from src/com/fr3ts0n/prot/TelegramWriter.java
rename to library/src/main/java/com/fr3ts0n/prot/TelegramWriter.java
diff --git a/src/com/fr3ts0n/prot/UdpInputStream.java b/library/src/main/java/com/fr3ts0n/prot/UdpInputStream.java
similarity index 100%
rename from src/com/fr3ts0n/prot/UdpInputStream.java
rename to library/src/main/java/com/fr3ts0n/prot/UdpInputStream.java
diff --git a/src/com/fr3ts0n/prot/gui/KLHandler.java b/library/src/main/java/com/fr3ts0n/prot/gui/KLHandler.java
similarity index 100%
rename from src/com/fr3ts0n/prot/gui/KLHandler.java
rename to library/src/main/java/com/fr3ts0n/prot/gui/KLHandler.java
diff --git a/src/com/fr3ts0n/prot/gui/KLHandlerGeneric.java b/library/src/main/java/com/fr3ts0n/prot/gui/KLHandlerGeneric.java
similarity index 100%
rename from src/com/fr3ts0n/prot/gui/KLHandlerGeneric.java
rename to library/src/main/java/com/fr3ts0n/prot/gui/KLHandlerGeneric.java
diff --git a/src/com/fr3ts0n/prot/gui/SerialConfigPanel.java b/library/src/main/java/com/fr3ts0n/prot/gui/SerialConfigPanel.java
similarity index 100%
rename from src/com/fr3ts0n/prot/gui/SerialConfigPanel.java
rename to library/src/main/java/com/fr3ts0n/prot/gui/SerialConfigPanel.java
diff --git a/src/com/fr3ts0n/prot/gui/SerialHandler.java b/library/src/main/java/com/fr3ts0n/prot/gui/SerialHandler.java
similarity index 100%
rename from src/com/fr3ts0n/prot/gui/SerialHandler.java
rename to library/src/main/java/com/fr3ts0n/prot/gui/SerialHandler.java
diff --git a/src/com/fr3ts0n/prot/gui/SerialHandlerGeneric.java b/library/src/main/java/com/fr3ts0n/prot/gui/SerialHandlerGeneric.java
similarity index 100%
rename from src/com/fr3ts0n/prot/gui/SerialHandlerGeneric.java
rename to library/src/main/java/com/fr3ts0n/prot/gui/SerialHandlerGeneric.java
diff --git a/src/com/fr3ts0n/prot/gui/package-info.java b/library/src/main/java/com/fr3ts0n/prot/gui/package-info.java
similarity index 100%
rename from src/com/fr3ts0n/prot/gui/package-info.java
rename to library/src/main/java/com/fr3ts0n/prot/gui/package-info.java
diff --git a/src/com/fr3ts0n/pvs/DataMapHandler.java b/library/src/main/java/com/fr3ts0n/pvs/DataMapHandler.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/DataMapHandler.java
rename to library/src/main/java/com/fr3ts0n/pvs/DataMapHandler.java
diff --git a/src/com/fr3ts0n/pvs/DbProcessVar.java b/library/src/main/java/com/fr3ts0n/pvs/DbProcessVar.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/DbProcessVar.java
rename to library/src/main/java/com/fr3ts0n/pvs/DbProcessVar.java
diff --git a/src/com/fr3ts0n/pvs/IndexedProcessVar.java b/library/src/main/java/com/fr3ts0n/pvs/IndexedProcessVar.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/IndexedProcessVar.java
rename to library/src/main/java/com/fr3ts0n/pvs/IndexedProcessVar.java
diff --git a/src/com/fr3ts0n/pvs/ProcessVar.java b/library/src/main/java/com/fr3ts0n/pvs/ProcessVar.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/ProcessVar.java
rename to library/src/main/java/com/fr3ts0n/pvs/ProcessVar.java
diff --git a/src/com/fr3ts0n/pvs/PvChangeEvent.java b/library/src/main/java/com/fr3ts0n/pvs/PvChangeEvent.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/PvChangeEvent.java
rename to library/src/main/java/com/fr3ts0n/pvs/PvChangeEvent.java
diff --git a/src/com/fr3ts0n/pvs/PvChangeListener.java b/library/src/main/java/com/fr3ts0n/pvs/PvChangeListener.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/PvChangeListener.java
rename to library/src/main/java/com/fr3ts0n/pvs/PvChangeListener.java
diff --git a/src/com/fr3ts0n/pvs/PvLimits.java b/library/src/main/java/com/fr3ts0n/pvs/PvLimits.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/PvLimits.java
rename to library/src/main/java/com/fr3ts0n/pvs/PvLimits.java
diff --git a/src/com/fr3ts0n/pvs/PvList.java b/library/src/main/java/com/fr3ts0n/pvs/PvList.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/PvList.java
rename to library/src/main/java/com/fr3ts0n/pvs/PvList.java
diff --git a/src/com/fr3ts0n/pvs/gui/ProcessVarBeanInfo.java b/library/src/main/java/com/fr3ts0n/pvs/gui/ProcessVarBeanInfo.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/gui/ProcessVarBeanInfo.java
rename to library/src/main/java/com/fr3ts0n/pvs/gui/ProcessVarBeanInfo.java
diff --git a/src/com/fr3ts0n/pvs/gui/PvDataFlavor.java b/library/src/main/java/com/fr3ts0n/pvs/gui/PvDataFlavor.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/gui/PvDataFlavor.java
rename to library/src/main/java/com/fr3ts0n/pvs/gui/PvDataFlavor.java
diff --git a/src/com/fr3ts0n/pvs/gui/PvDetailPanel.java b/library/src/main/java/com/fr3ts0n/pvs/gui/PvDetailPanel.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/gui/PvDetailPanel.java
rename to library/src/main/java/com/fr3ts0n/pvs/gui/PvDetailPanel.java
diff --git a/src/com/fr3ts0n/pvs/gui/PvExplorer.java b/library/src/main/java/com/fr3ts0n/pvs/gui/PvExplorer.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/gui/PvExplorer.java
rename to library/src/main/java/com/fr3ts0n/pvs/gui/PvExplorer.java
diff --git a/src/com/fr3ts0n/pvs/gui/PvTable.java b/library/src/main/java/com/fr3ts0n/pvs/gui/PvTable.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/gui/PvTable.java
rename to library/src/main/java/com/fr3ts0n/pvs/gui/PvTable.java
diff --git a/src/com/fr3ts0n/pvs/gui/PvTableBeanInfo.java b/library/src/main/java/com/fr3ts0n/pvs/gui/PvTableBeanInfo.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/gui/PvTableBeanInfo.java
rename to library/src/main/java/com/fr3ts0n/pvs/gui/PvTableBeanInfo.java
diff --git a/src/com/fr3ts0n/pvs/gui/PvTableCellRenderer.java b/library/src/main/java/com/fr3ts0n/pvs/gui/PvTableCellRenderer.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/gui/PvTableCellRenderer.java
rename to library/src/main/java/com/fr3ts0n/pvs/gui/PvTableCellRenderer.java
diff --git a/src/com/fr3ts0n/pvs/gui/PvTableModel.java b/library/src/main/java/com/fr3ts0n/pvs/gui/PvTableModel.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/gui/PvTableModel.java
rename to library/src/main/java/com/fr3ts0n/pvs/gui/PvTableModel.java
diff --git a/src/com/fr3ts0n/pvs/gui/PvTransferHandler.java b/library/src/main/java/com/fr3ts0n/pvs/gui/PvTransferHandler.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/gui/PvTransferHandler.java
rename to library/src/main/java/com/fr3ts0n/pvs/gui/PvTransferHandler.java
diff --git a/src/com/fr3ts0n/pvs/gui/PvTreeNode.java b/library/src/main/java/com/fr3ts0n/pvs/gui/PvTreeNode.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/gui/PvTreeNode.java
rename to library/src/main/java/com/fr3ts0n/pvs/gui/PvTreeNode.java
diff --git a/src/com/fr3ts0n/pvs/io/PvXMLHandler.java b/library/src/main/java/com/fr3ts0n/pvs/io/PvXMLHandler.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/io/PvXMLHandler.java
rename to library/src/main/java/com/fr3ts0n/pvs/io/PvXMLHandler.java
diff --git a/src/com/fr3ts0n/pvs/io/PvXMLWriter.java b/library/src/main/java/com/fr3ts0n/pvs/io/PvXMLWriter.java
similarity index 100%
rename from src/com/fr3ts0n/pvs/io/PvXMLWriter.java
rename to library/src/main/java/com/fr3ts0n/pvs/io/PvXMLWriter.java
diff --git a/plugin/src/main/gen/com/fr3ts0n/androbd/plugin/BuildConfig.java b/plugin/src/main/gen/com/fr3ts0n/androbd/plugin/BuildConfig.java
new file mode 100644
index 0000000..67f017d
--- /dev/null
+++ b/plugin/src/main/gen/com/fr3ts0n/androbd/plugin/BuildConfig.java
@@ -0,0 +1,8 @@
+/*___Generated_by_IDEA___*/
+
+package com.fr3ts0n.androbd.plugin;
+
+/* This stub is only used by the IDE. It is NOT the BuildConfig class actually packed into the APK */
+public final class BuildConfig {
+  public final static boolean DEBUG = Boolean.parseBoolean(null);
+}
\ No newline at end of file
diff --git a/plugin/src/main/gen/com/fr3ts0n/androbd/plugin/Manifest.java b/plugin/src/main/gen/com/fr3ts0n/androbd/plugin/Manifest.java
new file mode 100644
index 0000000..2e04f64
--- /dev/null
+++ b/plugin/src/main/gen/com/fr3ts0n/androbd/plugin/Manifest.java
@@ -0,0 +1,7 @@
+/*___Generated_by_IDEA___*/
+
+package com.fr3ts0n.androbd.plugin;
+
+/* This stub is only used by the IDE. It is NOT the Manifest class actually packed into the APK */
+public final class Manifest {
+}
\ No newline at end of file
diff --git a/plugin/src/main/gen/com/fr3ts0n/androbd/plugin/R.java b/plugin/src/main/gen/com/fr3ts0n/androbd/plugin/R.java
new file mode 100644
index 0000000..5e19ca0
--- /dev/null
+++ b/plugin/src/main/gen/com/fr3ts0n/androbd/plugin/R.java
@@ -0,0 +1,7 @@
+/*___Generated_by_IDEA___*/
+
+package com.fr3ts0n.androbd.plugin;
+
+/* This stub is only used by the IDE. It is NOT the R class actually packed into the APK */
+public final class R {
+}
\ No newline at end of file
diff --git a/plugin/src/main/java/com/fr3ts0n/androbd/plugin/Plugin.java b/plugin/src/main/java/com/fr3ts0n/androbd/plugin/Plugin.java
new file mode 100644
index 0000000..c7c7193
--- /dev/null
+++ b/plugin/src/main/java/com/fr3ts0n/androbd/plugin/Plugin.java
@@ -0,0 +1,192 @@
+package com.fr3ts0n.androbd.plugin;
+
+import android.app.Service;
+import android.content.Context;
+import android.content.Intent;
+import android.os.IBinder;
+import android.util.Log;
+
+
+/**
+ * Abstract AndrOBD plugin
+ */
+public abstract class Plugin
+    extends Service
+{
+    /** ACTIONS */
+    public static final String IDENTIFY    = "com.fr3ts0n.androbd.plugin.IDENTIFY";
+    public static final String CONFIGURE   = "com.fr3ts0n.androbd.plugin.CONFIGURE";
+    public static final String ACTION      = "com.fr3ts0n.androbd.plugin.ACTION";
+    public static final String DATALIST    = "com.fr3ts0n.androbd.plugin.DATALIST";
+    public static final String DATA        = "com.fr3ts0n.androbd.plugin.DATA";
+
+    /** CATEGORIES */
+    public static final String REQUEST     = "com.fr3ts0n.androbd.plugin.REQUEST";
+    public static final String RESPONSE    = "com.fr3ts0n.androbd.plugin.RESPONSE";
+
+    /** Parameters for DATALIST / DATA (content will be csv encoded) */
+    public static final String EXTRA_DATA  = "com.fr3ts0n.androbd.plugin.extra.DATA";
+
+    /**
+     * Plugin supports configuration requests
+     */
+    public interface ConfigurationHandler
+    {
+        /**
+         * Handle configuration request.
+         * Perform plugin configuration
+         */
+        void performConfigure();
+    }
+
+    /**
+     * Plugin supports Action requests
+     */
+    public interface ActionHandler
+    {
+        /**
+         * Perform intended action of the plugin
+         */
+        void performAction();
+    }
+
+    /**
+     * Plugin supports datalist / data requests
+     */
+    public interface DataReceiver
+    {
+        /**
+         * Handle data list update.
+         *
+         * @param csvString
+         * CSV data string in format key;description;value;units.
+         * One line per data item
+         */
+        void onDataListUpdate(String csvString);
+
+        /**
+         * Handle data update.
+         * @param key Key of data change
+         * @param value New value of data change
+         */
+        void onDataUpdate(String key, String value);
+    }
+
+    /**
+     * Plugin supports data provision interface
+     */
+    public interface DataProvider
+    {
+        /**
+         * Send data item list to all enabled plugins which support DATALIST requests
+         *
+         * @param csvData CSV encoded data list
+         *                mnemonic;description;value;units
+         *                ...
+         *                mnemonic;description;value;units
+         */
+        void sendDataList(String csvData);
+
+        /**
+         * Send data update to all enabled plugins which support DATA requests
+         *
+         * @param key Key of data change
+         * @param value New value of data change
+         */
+        void sendDataUpdate(String key, String value);
+    }
+
+    /**
+     * Host application info
+     */
+    PluginInfo hostInfo;
+
+    @Override
+    public void onCreate()
+    {
+        super.onCreate();
+    }
+
+    /**
+     * Start plugin service
+     *
+     * @param intent Intent to start sevice on
+     * @param flags Additional flags for service
+     * @param startId Start ID for service
+     *
+     * @return Service continuation flags
+     */
+    @Override
+    public int onStartCommand(Intent intent, int flags, int startId)
+    {
+        int result = super.onStartCommand(intent, flags, startId);
+        if (intent != null)
+        {
+            final String action = intent.getAction();
+            if(IDENTIFY.equals(action))
+            {
+                Log.d(toString(), "Identify: " +  intent);
+                handleIdentify(getApplicationContext(),intent);
+            }
+
+            if (ConfigurationHandler.class.isInstance(this) && CONFIGURE.equals(action))
+            {
+                Log.d(toString(), "Configuration: " +  intent);
+                ((ConfigurationHandler)this).performConfigure( );
+            }
+
+            if (ActionHandler.class.isInstance(this) && ACTION.equals(action))
+            {
+                Log.d(toString(), "Action: " + intent);
+                ((ActionHandler)this).performAction( );
+            }
+
+            if(DataReceiver.class.isInstance(this) && DATALIST.equals(action))
+            {
+                Log.v(toString(), "Data list update: " + intent);
+                String dataStr = intent.getStringExtra(EXTRA_DATA);
+                ((DataReceiver)this).onDataListUpdate( dataStr );
+            }
+
+            if(DataReceiver.class.isInstance(this) &&  DATA.equals(action))
+            {
+                Log.v(toString(), "Data update: " + intent);
+                String dataStr = intent.getStringExtra(EXTRA_DATA);
+                String params[] = dataStr.split("=");
+                ((DataReceiver)this).onDataUpdate( params[0], params[1] );
+            }
+        }
+
+        return result;
+    }
+
+    /**
+     * Handle IDENTIFY intent
+     *
+     * @param context Context of intent handler
+     * @param intent Intent object of identify request
+     */
+    private void handleIdentify(Context context, Intent intent)
+    {
+        // remember broadcasting host application
+        hostInfo = new PluginInfo( intent.getExtras());
+
+        // create identify response to broadcast origin
+        Intent identifyIntent = new Intent(IDENTIFY);
+        identifyIntent.addCategory(RESPONSE);
+        identifyIntent.putExtras(getPluginInfo().toBundle());
+        Log.d(toString(), "Sending response: " + identifyIntent);
+        sendBroadcast(identifyIntent);
+    }
+    
+    @Override
+    public IBinder onBind(Intent intent)
+    {
+        return null;
+    }
+    
+    /**
+     * get own plugin info
+     */
+    abstract public PluginInfo getPluginInfo();
+}
diff --git a/plugin/src/main/java/com/fr3ts0n/androbd/plugin/PluginInfo.java b/plugin/src/main/java/com/fr3ts0n/androbd/plugin/PluginInfo.java
new file mode 100644
index 0000000..90dc604
--- /dev/null
+++ b/plugin/src/main/java/com/fr3ts0n/androbd/plugin/PluginInfo.java
@@ -0,0 +1,125 @@
+package com.fr3ts0n.androbd.plugin;
+
+import android.os.Bundle;
+
+/**
+ * Plugin information
+ */
+
+public class PluginInfo
+{
+    /*
+     * Feature bit definitions
+     */
+
+    /** Configuration is supported */
+    public static final int FEATURE_CONFIGURE       = (1 << 0);
+    /** Manual action trigger is supported */
+    public static final int FEATURE_ACTION          = (1 << 1);
+    /** Datalist updates are supported */
+    public static final int FEATURE_DATA            = (1 << 2);
+    /** Data updates are supported */
+    public static final int FEATURE_DATAPROVISION   = (1 << 3);
+    /** NO feature supported */
+    public static final int FEATURE_NONE            = 0x00;
+    /** ALL features supported */
+    public static final int FEATURES_ALL            = FEATURE_CONFIGURE
+                                                      | FEATURE_ACTION
+                                                      | FEATURE_DATA
+                                                      | FEATURE_DATAPROVISION;
+
+    public enum Field
+    {
+        NAME,
+        CLASS,
+        PACKAGE,
+        FEATURES,
+        DESCRIPTION,
+        COPYRIGHT,
+        LICENSE,
+        URL,
+    }
+
+    /** Plugin name */
+    public String  name;
+    /** Plugin package name */
+    public String  packageName;
+    /** Plugin class name */
+    public String  className;
+    /** Bit-masked feature indication */
+    public int     features = FEATURE_NONE;
+    /** Description of plugin */
+    public String  description;
+    /** copyright notice */
+    public String  copyright;
+    /** license information */
+    public String  license;
+    /** URL */
+    public String url;
+    /** enabled */
+    public boolean enabled = true;
+
+    public PluginInfo( String _name,
+                       Class  _class,
+                       String _description,
+                       String _copyright,
+                       String _license,
+                       String _url)
+    {
+        name        = _name;
+        packageName = _class.getPackage().getName();
+        className   = _class.getName();
+        description = _description;
+        copyright   = _copyright;
+        license     = _license;
+        url         = _url;
+
+        // calculate features based on implemented interfaces
+        if(Plugin.ConfigurationHandler.class.isAssignableFrom(_class))
+            features |= FEATURE_CONFIGURE;
+        if(Plugin.ActionHandler.class.isAssignableFrom(_class))
+            features |= FEATURE_ACTION;
+        if(Plugin.DataReceiver.class.isAssignableFrom(_class))
+            features |= FEATURE_DATA;
+    }
+
+    /**
+     * Construct PluginInfo from Bundle data
+     * @param bundle bundle containing Plugin info data
+     */
+    public PluginInfo(Bundle bundle)
+    {
+        name = bundle.getString(Field.NAME.toString());
+        packageName = bundle.getString(Field.PACKAGE.toString());
+        className = bundle.getString(Field.CLASS.toString());
+        features = bundle.getInt(Field.FEATURES.toString(),0);
+        description = bundle.getString(Field.DESCRIPTION.toString());
+        copyright = bundle.getString(Field.COPYRIGHT.toString());
+        license = bundle.getString(Field.LICENSE.toString());
+        url = bundle.getString(Field.URL.toString());
+    }
+
+    /**
+     * get PluginInfo as Bundle
+     * @return @ref Bundle of plugin info data
+     */
+    public Bundle toBundle()
+    {
+        Bundle bundle = new Bundle();
+        bundle.putString(Field.NAME.toString(), name);
+        bundle.putString(Field.PACKAGE.toString(), packageName);
+        bundle.putString(Field.CLASS.toString(), className);
+        bundle.putInt(Field.FEATURES.toString(), features);
+        bundle.putString(Field.DESCRIPTION.toString(), description);
+        bundle.putString(Field.COPYRIGHT.toString(), copyright);
+        bundle.putString(Field.LICENSE.toString(), license);
+        bundle.putString(Field.URL.toString(), url);
+
+        return bundle;
+    }
+
+    public String toString()
+    {
+        return className;
+    }
+}
diff --git a/plugin/src/main/java/com/fr3ts0n/androbd/plugin/PluginReceiver.java b/plugin/src/main/java/com/fr3ts0n/androbd/plugin/PluginReceiver.java
new file mode 100644
index 0000000..e2cf204
--- /dev/null
+++ b/plugin/src/main/java/com/fr3ts0n/androbd/plugin/PluginReceiver.java
@@ -0,0 +1,34 @@
+package com.fr3ts0n.androbd.plugin;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.util.Log;
+
+/**
+ * Plugin broadcast receiver
+ *
+ * This starts a service based on an incoming broadcast message
+ */
+abstract public class PluginReceiver extends BroadcastReceiver
+{
+    public PluginReceiver()
+    {
+        super();
+    }
+
+    @Override
+    public void onReceive(Context context, Intent intent)
+    {
+        Log.d(toString(), "Broadcast received: " + intent);
+        intent.setClass(context, getPluginClass());
+        Log.d(toString(), "Starting service: " + intent);
+        context.startService(intent);
+    }
+
+    /**
+     * Get class of plugin implementation
+     * @return Plugin implementation class
+     */
+    abstract public Class getPluginClass();
+}
diff --git a/plugin/src/main/java/com/fr3ts0n/androbd/plugin/mgr/PluginHandler.java b/plugin/src/main/java/com/fr3ts0n/androbd/plugin/mgr/PluginHandler.java
new file mode 100644
index 0000000..7d03890
--- /dev/null
+++ b/plugin/src/main/java/com/fr3ts0n/androbd/plugin/mgr/PluginHandler.java
@@ -0,0 +1,309 @@
+package com.fr3ts0n.androbd.plugin.mgr;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.SharedPreferences;
+import android.preference.PreferenceManager;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.Switch;
+import android.widget.TextView;
+
+import com.fr3ts0n.androbd.plugin.Plugin;
+import com.fr3ts0n.androbd.plugin.PluginInfo;
+import com.fr3ts0n.androbd.plugin.R;
+
+/**
+ * Plugin handler
+ *
+ * This class handles a list of detected plugins:
+ * - Allow adding / deleting plugin instances
+ * - Handle automatic plugin detection
+ * - Provide display adapter of current plugin list
+ * - Handle sending Intents to individual / all plugins
+ */
+public class PluginHandler extends ArrayAdapter<PluginInfo>
+    implements Plugin.DataProvider
+{
+    static final PluginInfo myInfo = new PluginInfo( "AndrOBD",
+                                                     PluginHandler.class,
+                                                     "AndrOBD host application plugin handler",
+                                                     "Copyright (C) 2017 by fr3ts0n",
+                                                     "GPLV3+",
+                                                     "https://github.com/fr3ts0n/AndrOBD");
+
+    /** layout inflater */
+    transient protected LayoutInflater mInflater;
+
+    /** Application preferences*/
+    SharedPreferences mPrefs;
+
+    /**
+     * the receiver to receive IDENTIFY responses
+     */
+    BroadcastReceiver receiver = new BroadcastReceiver()
+    {
+        @Override
+        public void onReceive(Context context, Intent intent)
+        {
+            if(Plugin.IDENTIFY.equals(intent.getAction()))
+            {
+                PluginInfo plugin = new PluginInfo(intent.getExtras());
+                Log.i(toString(), "Plugin identified: " + plugin.toString());
+                // get preferred enable/disable state from settings
+                plugin.enabled = mPrefs.getBoolean(plugin.className, true);
+                // add plugin to list
+                add(plugin);
+                // set current enabled/disabled state (to stop disabled services)
+                setPluginEnabled(getPosition(plugin), plugin.enabled);
+            }
+        }
+    };
+
+    public PluginHandler(Context context)
+    {
+        this(context, R.layout.plugininfo);
+    }
+
+    /**
+     * Constructor
+     *
+     * @param context  The current context.
+     * @param resource The resource ID for a layout file containing a TextView to use when
+     */
+    public PluginHandler(Context context, int resource)
+    {
+        super(context, resource);
+        // create layout inflater
+        mInflater = (LayoutInflater) context
+            .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+
+        mPrefs = PreferenceManager.getDefaultSharedPreferences(context);
+
+        setup();
+    }
+
+    public void setup()
+    {
+        // register this handler as a receive filter
+        IntentFilter flt = new IntentFilter(Plugin.IDENTIFY);
+        // flt.addCategory(Plugin.REQUEST);
+        flt.addCategory(Plugin.RESPONSE);
+        getContext().registerReceiver(receiver, flt);
+
+        // trigger plugin search
+        identifyPlugins();
+    }
+
+    public void cleanup()
+    {
+        try
+        {
+            getContext().unregisterReceiver(receiver);
+        }
+        catch (Exception e)
+        {
+            Log.e(toString(), e.getMessage());
+        }
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent)
+    {
+        PluginInfo info = getItem(position);
+
+        View infoView;
+        if(convertView != null)
+            infoView = convertView;
+        else
+            infoView = mInflater.inflate(R.layout.plugininfo, parent, false);
+
+        TextView tv;
+        tv = (TextView)infoView.findViewById(R.id.edName);
+        tv.setEnabled(info.enabled);
+        tv.setText(info.name);
+
+        tv = (TextView)infoView.findViewById(R.id.edClass);
+        tv.setEnabled(info.enabled);
+        tv.setText(info.className);
+
+        tv = (TextView)infoView.findViewById(R.id.edDescription);
+        tv.setEnabled(info.enabled);
+        tv.setText(info.description);
+
+        // get feature checkboxes
+        CheckBox[] cb =
+        {
+            (CheckBox)infoView.findViewById(R.id.cbConfig),
+            (CheckBox)infoView.findViewById(R.id.cbAction),
+            (CheckBox)infoView.findViewById(R.id.cbDataList),
+            (CheckBox)infoView.findViewById(R.id.cbData),
+        };
+
+        // set checkbox checked state based on supported features
+        for( int bit = 0; bit < 4; bit++)
+        {
+            cb[bit].setChecked((info.features & (1 << bit)) != 0);
+        }
+
+        // enable / disable buttons based on supported features
+        Button btn;
+        btn = (Button)infoView.findViewById(R.id.btnConfigure);
+        btn.setEnabled(info.enabled && (info.features & PluginInfo.FEATURE_CONFIGURE) != 0);
+
+        btn = (Button)infoView.findViewById(R.id.btnAction);
+        btn.setEnabled(info.enabled && (info.features & PluginInfo.FEATURE_ACTION) != 0);
+
+        infoView.setActivated(info.enabled);
+
+        Switch swEnable = (Switch)infoView.findViewById(R.id.swEnable);
+        swEnable.setChecked(info.enabled);
+
+        return infoView;
+    }
+
+    public void setPluginEnabled(int position, boolean enable)
+    {
+        // actively stop plugin service if switched off
+        if(!enable) stopPlugin(position);
+
+        // set enabled state in plugin info
+        PluginInfo plugin = getItem(position);
+        plugin.enabled = enable;
+        // remember this state in settings
+        mPrefs.edit().putBoolean(plugin.className, enable).apply();
+
+        // notify about changes to re-trigger display
+        notifyDataSetChanged();
+    }
+
+    public void identifyPlugins()
+    {
+        // send broadcast IDENTIFY
+        Intent intent = new Intent(Plugin.IDENTIFY);
+        intent.addCategory(Plugin.REQUEST);
+        intent.putExtras(myInfo.toBundle());
+        Log.i(toString(), "Request IDENTIFY: " + intent);
+        getContext().sendBroadcast(intent);
+    }
+
+    /**
+     * Stop plugin at specified list position
+     *
+     * @param position List position of plugin
+     */
+    public void stopPlugin(int position)
+    {
+        Intent intent = new Intent();
+        PluginInfo plugin = getItem(position);
+        intent.setClassName(plugin.packageName, plugin.className);
+        Log.i(toString(), "Stop service: " + intent);
+        getContext().stopService(intent);
+    }
+
+    public void triggerAction(int position)
+    {
+        PluginInfo plugin = getItem(position);
+        if(plugin.enabled
+           && (plugin.features & PluginInfo.FEATURE_ACTION) != 0)
+        {
+            Intent intent = new Intent(Plugin.ACTION);
+            intent.setClassName(plugin.packageName, plugin.className);
+            intent.putExtra(PluginInfo.Field.CLASS.toString(), plugin.className);
+            Log.i(toString(), "Request ACTION: " + intent);
+            getContext().startService(intent);
+        }
+    }
+
+    public void triggerConfiguration(int position)
+    {
+        PluginInfo plugin = getItem(position);
+        if(plugin.enabled
+           && (plugin.features & PluginInfo.FEATURE_CONFIGURE) != 0)
+        {
+            Intent intent = new Intent(Plugin.CONFIGURE);
+            intent.setClassName(plugin.packageName, plugin.className);
+            intent.putExtra(PluginInfo.Field.CLASS.toString(), plugin.className);
+            Log.i(toString(), "Request CONFIGURE: " + intent);
+            getContext().startService(intent);
+        }
+    }
+
+    /**
+     * Send data item list to all enabled plugins which support DATALIST requests
+     *
+     * @param csvData CSV encoded data list
+     *                mnemonic;description;value;units
+     *                ...
+     *                mnemonic;description;value;units
+     */
+    public void sendDataList(String csvData)
+    {
+        Intent intent = new Intent(Plugin.DATALIST);
+        intent.addCategory(Plugin.REQUEST);
+        // attach data to intent
+        intent.putExtra(Plugin.EXTRA_DATA, csvData);
+        // loop through all identified plugins
+        for (int i=0; i<getCount(); i++ )
+        {
+            PluginInfo plugin = getItem(i);
+            // If plugin is enabled and feature DATALIST is supported
+            if(plugin.enabled
+               && (plugin.features & PluginInfo.FEATURE_DATA) != 0)
+            {
+                intent.setClassName(plugin.packageName, plugin.className);
+                Log.d(toString(), "Send DATALIST: " + intent);
+                getContext().startService(intent);
+            }
+        }
+    }
+
+    /**
+     * Send data update to all enabled plugins which support DATA requests
+     *
+     * @param key Key of data change
+     * @param value New value of data change
+     */
+    public void sendDataUpdate(String key, String value)
+    {
+        Intent intent = new Intent(Plugin.DATA);
+        intent.addCategory(Plugin.REQUEST);
+        // attach data to intent
+        intent.putExtra(Plugin.EXTRA_DATA, String.format("%s=%s", key, value));
+
+        // loop through all identified plugins
+        for (int i=0; i<getCount(); i++ )
+        {
+            PluginInfo plugin = getItem(i);
+            // If plugin is enabled and feature DATA is supported
+            if(plugin.enabled
+               && (plugin.features & PluginInfo.FEATURE_DATA) != 0)
+            {
+                intent.setClassName(plugin.packageName, plugin.className);
+                Log.d(toString(), "Send DATA: " + intent);
+                getContext().startService(intent);
+            }
+        }
+    }
+
+    /**
+     * Close all identified plugins
+     */
+    public void closeAllPlugins()
+    {
+        // loop through all identified plugins
+        for (int i=0; i<getCount(); i++ )
+        {
+            stopPlugin(i);
+        }
+        // clear list of plugins
+        clear();
+    }
+}
diff --git a/plugin/src/main/java/com/fr3ts0n/androbd/plugin/mgr/PluginManager.java b/plugin/src/main/java/com/fr3ts0n/androbd/plugin/mgr/PluginManager.java
new file mode 100644
index 0000000..9887fed
--- /dev/null
+++ b/plugin/src/main/java/com/fr3ts0n/androbd/plugin/mgr/PluginManager.java
@@ -0,0 +1,71 @@
+package com.fr3ts0n.androbd.plugin.mgr;
+
+import android.app.ListActivity;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Switch;
+
+import com.fr3ts0n.androbd.plugin.R;
+
+/**
+ * Plugin manager
+ *
+ * This class visually handles a list of detected plugins:
+ * - Show list if identified plugins
+ * - Allow Enabling/Disabling plugin usage
+ * - Allow trigger configuration of individual plugin
+ * - Allow manual triggering plugin action
+ */
+public class PluginManager extends ListActivity
+{
+    public static PluginHandler pluginHandler = null;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState)
+    {
+        super.onCreate(savedInstanceState);
+        if(pluginHandler == null) pluginHandler = new PluginHandler(this);
+    }
+
+    @Override
+    protected void onDestroy()
+    {
+        pluginHandler.closeAllPlugins();
+        pluginHandler.cleanup();
+        pluginHandler = null;
+        super.onDestroy();
+    }
+
+    /**
+     * Set Plugin manager view
+     */
+    protected void setManagerView()
+    {
+        setContentView(R.layout.content_main);
+        setListAdapter(pluginHandler);
+    }
+
+    public void sendIdentify(View view)
+    {
+        pluginHandler.clear();
+        pluginHandler.identifyPlugins();
+    }
+
+    public void sendConfigure(View view)
+    {
+        int pos = getListView().getPositionForView(view);
+        pluginHandler.triggerConfiguration(pos);
+    }
+
+    public void sendPerformAction(View view)
+    {
+        int pos = getListView().getPositionForView(view);
+        pluginHandler.triggerAction(pos);
+    }
+
+    public void setPluginEnabled(View view)
+    {
+        int pos = getListView().getPositionForView(view);
+        pluginHandler.setPluginEnabled(pos, ((Switch) view).isChecked());
+    }
+}
