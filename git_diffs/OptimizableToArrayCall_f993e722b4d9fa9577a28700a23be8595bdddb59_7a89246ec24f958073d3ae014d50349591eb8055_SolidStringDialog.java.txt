diff --git a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeViewBase.java b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeViewBase.java
index e383c21a..13fb40eb 100644
--- a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeViewBase.java
+++ b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeViewBase.java
@@ -142,20 +142,16 @@ public class MapsForgeViewBase extends MapView implements
     }
 
 
-/*    @Override
-    public void repaint() {
-        postInvalidateDelayed(15);
-    }
-*/
-
     @Override
     public void frameBounding(BoundingBoxE6 boundingBox) {
-        //if (boundingBox.hasBounding())
+        if (boundingBox.hasBounding())
             frameBounding(boundingBox.toBoundingBox());
+
+
     }
 
 
-    public void frameBounding(BoundingBox bounding) {
+    private void frameBounding(BoundingBox bounding) {
         Dimension dimension = getModel().mapViewDimension.getDimension();
 
 
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/AndroidVolumes.java b/app/src/main/java/ch/bailu/aat/util/fs/AndroidVolumes.java
index 94155a15..2bac12a7 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/AndroidVolumes.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/AndroidVolumes.java
@@ -120,13 +120,6 @@ public class AndroidVolumes {
 
 
 
-    private static Foc getParent(Foc file, int i) {
-        while (i > 0) {
-            i--;
-            if (file != null) file = file.parent();
-        }
-        return file;
-    }
 
     private static File getParent(File file, int i) {
         while (i > 0) {
@@ -135,53 +128,5 @@ public class AndroidVolumes {
         }
         return file;
     }
-/*
-    public void askForPermission(Activity c, Foc f) {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
-            askForPermissionSDK24(c, f);
-        }
-    }
-*/
-
-    private static String volumePathFromFile(Foc f) {
-        for (Foc v : volumes) {
-            final String sf = f.toString();
-            final String sv = v.toString();
 
-            if (sf.startsWith(sv)) {
-                return sv;
-            }
-        }
-        return null;
-    }
-
-/*
-    @TargetApi(24)
-    private void askForPermissionSDK24(Activity c, Foc f) {
-        Object s = c.getSystemService(Context.STORAGE_SERVICE);
-
-        if (s != null && s instanceof StorageManager) {
-            StorageManager storage = (StorageManager) s;
-
-            String vol = volumePathFromFile(f);
-            if (vol != null) {
-                List<StorageVolume> storageVolumes = storage.getStorageVolumes();
-
-                for (StorageVolume v : storageVolumes) {
-                    AppLog.d(v, v.getUuid());
-
-                    final String id = v.getUuid();
-                    if (id != null && vol.contains(id)) {
-                        Intent intent = v.createAccessIntent(null);
-                        if (intent != null) {
-                            c.startActivityForResult(intent, DirectoryMenu.PERMISSION);
-                            AppLog.d(this, intent.toString());
-                        }
-                        break;
-                    }
-                }
-            }
-        }
-    }
-*/
 }
diff --git a/app/src/main/java/ch/bailu/aat/util/graphic/SyncBitmap.java b/app/src/main/java/ch/bailu/aat/util/graphic/SyncBitmap.java
index ffee6c5d..9bcaebfb 100644
--- a/app/src/main/java/ch/bailu/aat/util/graphic/SyncBitmap.java
+++ b/app/src/main/java/ch/bailu/aat/util/graphic/SyncBitmap.java
@@ -11,6 +11,7 @@ import org.mapsforge.core.graphics.Bitmap;
 import org.mapsforge.map.android.graphics.AndroidBitmap;
 import org.mapsforge.map.android.graphics.AndroidGraphicFactory;
 
+import java.io.BufferedInputStream;
 import java.io.Closeable;
 import java.io.File;
 import java.io.IOException;
@@ -61,7 +62,7 @@ public class SyncBitmap implements Closeable {
         InputStream in = null;
 
         try {
-            in = file.openRb();
+            in = new BufferedInputStream(file.openR());
             bitmap = android.graphics.BitmapFactory.decodeStream(in);
         } catch (Exception e) {
             e.printStackTrace();
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/AbsSolidStringDialog.java b/app/src/main/java/ch/bailu/aat/views/preferences/AbsSolidStringDialog.java
new file mode 100644
index 00000000..ec7aff40
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/AbsSolidStringDialog.java
@@ -0,0 +1,54 @@
+package ch.bailu.aat.views.preferences;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+
+import java.util.ArrayList;
+
+import ch.bailu.aat.preferences.AbsSolidType;
+import ch.bailu.aat.preferences.SolidString;
+
+public abstract class AbsSolidStringDialog extends AbsSolidDialog
+        implements  DialogInterface.OnClickListener{
+
+    private final AbsSolidType solid;
+    private final String[] selection;
+
+    private final int baseSelectionSize;
+
+
+    public AbsSolidStringDialog(SolidString s)  {
+        solid = s;
+
+        final AlertDialog.Builder dialog;
+        final ArrayList<String> selectionList = s.buildSelection(new ArrayList<String>(10));
+
+        baseSelectionSize = selectionList.size();
+
+        buildExtraSelection(s.getContext(), selectionList);
+
+        selection = selectionList.toArray(new String[selectionList.size()]);
+
+
+        dialog = createDefaultDialog(s);
+        dialog.setItems(selection, this);
+
+        dialog.create();
+        dialog.show();
+    }
+
+    protected abstract void buildExtraSelection(Context c, ArrayList<String> sel);
+    protected abstract void onExtraItemClick(int i);
+
+
+    @Override
+    public void onClick(DialogInterface dialog, int i) {
+        if (i < baseSelectionSize) {
+            solid.setValueFromString(selection[i]);
+        } else {
+            onExtraItemClick(i-baseSelectionSize);
+        }
+        dialog.dismiss();
+    }
+}
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/GeneralPreferencesView.java b/app/src/main/java/ch/bailu/aat/views/preferences/GeneralPreferencesView.java
index ed64087f..f2a93782 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/GeneralPreferencesView.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/GeneralPreferencesView.java
@@ -21,8 +21,8 @@ public class GeneralPreferencesView extends VerticalScrollView {
 
         add(new TitleView(context, R.string.p_system));
         add(new SolidIndexListView(new SolidLocationProvider(context)));
-        add(new SolidExtendetDirectoryView(context, new SolidDataDirectory(context)));
-        add(new SolidExtendetDirectoryView(context, new SolidExternalDirectory(context)));
+        add(new SolidDirectoryView(context, new SolidDataDirectory(context)));
+        add(new SolidDirectoryView(context, new SolidExternalDirectory(context)));
 
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/MapTilePreferencesView.java b/app/src/main/java/ch/bailu/aat/views/preferences/MapTilePreferencesView.java
index 7cd77db0..d6071315 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/MapTilePreferencesView.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/MapTilePreferencesView.java
@@ -28,10 +28,10 @@ public class MapTilePreferencesView extends VerticalScrollView {
 
         add(new TitleView(context, context.getString(R.string.p_tiles)));
         add(new SolidIndexListView(new SolidTileSize(context)));
-        add(new SolidExtendetDirectoryView(acontext, new SolidTileCacheDirectory(context)));
+        add(new SolidDirectoryView(acontext, new SolidTileCacheDirectory(context)));
 
         add(new TitleView(context, MapsForgeSource.NAME));
-        add(new SolidExtendetDirectoryView(acontext, new SolidMapsForgeDirectory(context)));
+        add(new SolidStringView(new SolidMapsForgeDirectory(context)));
         add(new SolidStringView(new SolidRenderTheme(context)));
         add(new SolidCheckBox(new SolidEnableTileCache.MapsForge(context)));
 
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryDialog.java b/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryDialog.java
new file mode 100644
index 00000000..6dc30e2f
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryDialog.java
@@ -0,0 +1,33 @@
+package ch.bailu.aat.views.preferences;
+
+import android.app.Activity;
+import android.content.Context;
+
+import java.util.ArrayList;
+
+import ch.bailu.aat.preferences.SolidFile;
+
+public class SolidDirectoryDialog extends SolidStringDialog {
+
+    private final Activity acontext;
+    private final SolidFile sdirectory;
+
+    public SolidDirectoryDialog(Activity ac, SolidFile s) {
+        super(s);
+        acontext = ac;
+        sdirectory=s;
+    }
+
+
+    @Override
+    protected void buildExtraSelection(Context c, ArrayList<String> sel) {
+        sel.add("Pick...*");
+        super.buildExtraSelection(c, sel);
+    }
+
+    @Override
+    protected void onExtraItemClick(int i) {
+        if (i==0)  sdirectory.setFromPickerActivity(acontext);
+        else super.onExtraItemClick(i);
+    }
+}
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryView.java b/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryView.java
new file mode 100644
index 00000000..487252a6
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryView.java
@@ -0,0 +1,22 @@
+package ch.bailu.aat.views.preferences;
+
+import android.app.Activity;
+
+import ch.bailu.aat.preferences.SolidFile;
+
+public class SolidDirectoryView extends AbsSolidView {
+    private final SolidFile solid;
+    private final Activity acontext;
+
+
+    public SolidDirectoryView(Activity ac, SolidFile s) {
+        super(s);
+        acontext = ac;
+        solid = s;
+    }
+
+    @Override
+    public void onRequestNewValue() {
+        new SolidDirectoryDialog(acontext, solid);
+    }
+}
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/SolidStringDialog.java b/app/src/main/java/ch/bailu/aat/views/preferences/SolidStringDialog.java
index 3de59b57..f8a2f05b 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/SolidStringDialog.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/SolidStringDialog.java
@@ -1,56 +1,31 @@
 package ch.bailu.aat.views.preferences;
 
 
-import android.app.AlertDialog;
-import android.content.DialogInterface;
+import android.content.Context;
 
 import java.util.ArrayList;
 
 import ch.bailu.aat.R;
-import ch.bailu.aat.preferences.AbsSolidType;
 import ch.bailu.aat.preferences.SolidString;
 
-public class SolidStringDialog extends AbsSolidDialog implements  DialogInterface.OnClickListener{
-
-    private final AbsSolidType solid;
-    private final String[] selection;
-
-    private int inputIndex;
-
+public class SolidStringDialog extends AbsSolidStringDialog {
 
+    private final SolidString solid;
 
     public SolidStringDialog (SolidString s) {
-        solid = s;
-
-        final AlertDialog.Builder dialog;
-        final ArrayList<String> selectionList = s.buildSelection(new ArrayList<String>(10));
-
-        buildSelection(selectionList);
-
-        selection = selectionList.toArray(new String[selectionList.size()]);
+        super(s);
 
-
-        dialog = createDefaultDialog(s);
-        dialog.setItems(selection, this);
-
-        dialog.create();
-        dialog.show();
+        solid = s;
     }
 
-    public void buildSelection(ArrayList<String> sel) {
-        sel.add(solid.getContext().getString(R.string.enter));
-        inputIndex = sel.size()-1;
-    }
 
+    @Override
+    protected void buildExtraSelection(Context c, ArrayList<String> sel) {
+        sel.add(c.getString(R.string.enter));
+    }
 
     @Override
-    public void onClick(DialogInterface dialog, int i) {
-        if (i == inputIndex) {
-            new SolidStringInputDialog(solid);
-
-        } else {
-            solid.setValueFromString(selection[i]);
-        }
-        dialog.dismiss();
+    protected void onExtraItemClick(int i) {
+        new SolidStringInputDialog(solid);
     }
 }
\ No newline at end of file
