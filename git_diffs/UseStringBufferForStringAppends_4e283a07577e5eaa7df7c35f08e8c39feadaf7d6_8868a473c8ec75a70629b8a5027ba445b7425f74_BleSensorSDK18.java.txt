diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
index 1d1f0869..888a3f6f 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
@@ -152,13 +152,6 @@ public abstract class AbsGpxListActivity extends ActivityContext implements OnIt
         private final String list_label = getString(R.string.label_list);
 
         private final ContentView contentView = new ContentView(acontext);
-        private final MainControlBar bar = new MainControlBar(acontext);
-
-        private final VerticalScrollView summary = new VerticalScrollView(acontext);
-        private final MapViewInterface map =
-                MapFactory.DEF(AbsGpxListActivity.this, solid_key).list(acontext);
-
-
 
 
         public Layouter() {
@@ -168,9 +161,11 @@ public abstract class AbsGpxListActivity extends ActivityContext implements OnIt
 
             busyControl = new BusyViewControlDbSync(contentView);
 
+            MapViewInterface map = MapFactory.DEF(AbsGpxListActivity.this, solid_key).list(acontext);
             fileControlBar = new FileControlBarLayer(map.getMContext(), acontext);
             map.add(fileControlBar);
 
+            VerticalScrollView summary = new VerticalScrollView(acontext);
             summary.add(new TitleView(acontext, getLabel()));
             summary.add(acontext,new PathDescription(acontext), InfoID.LIST_SUMMARY);
             summary.add(new TitleView(acontext, summary_label));
@@ -183,6 +178,7 @@ public abstract class AbsGpxListActivity extends ActivityContext implements OnIt
             summary.addAllFilterViews(map.getMContext());
 
 
+            MainControlBar bar = new MainControlBar(acontext);
             contentView.add(bar);
             contentView.add(createLayout(map, summary, bar));
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/CockpitActivity.java b/app/src/main/java/ch/bailu/aat/activities/CockpitActivity.java
index 3eb584af..3e9a264b 100644
--- a/app/src/main/java/ch/bailu/aat/activities/CockpitActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/CockpitActivity.java
@@ -4,10 +4,8 @@ import android.os.Bundle;
 import android.view.View;
 
 import ch.bailu.aat.description.AverageSpeedDescriptionAP;
-import ch.bailu.aat.description.CadenceDescription;
 import ch.bailu.aat.description.CurrentSpeedDescription;
 import ch.bailu.aat.description.DistanceDescription;
-import ch.bailu.aat.description.HeartRateDescription;
 import ch.bailu.aat.description.MaximumSpeedDescription;
 import ch.bailu.aat.description.PredictiveTimeDescription;
 import ch.bailu.aat.dispatcher.CurrentLocationSource;
diff --git a/app/src/main/java/ch/bailu/aat/activities/CockpitSplitActivity.java b/app/src/main/java/ch/bailu/aat/activities/CockpitSplitActivity.java
index af912577..e2194c00 100644
--- a/app/src/main/java/ch/bailu/aat/activities/CockpitSplitActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/CockpitSplitActivity.java
@@ -12,7 +12,6 @@ import ch.bailu.aat.description.DescendDescription;
 import ch.bailu.aat.description.DistanceDescription;
 import ch.bailu.aat.description.HeartRateDescription;
 import ch.bailu.aat.description.MaximumSpeedDescription;
-import ch.bailu.aat.description.PaceDescription;
 import ch.bailu.aat.description.PredictiveTimeDescription;
 import ch.bailu.aat.description.SlopeDescription;
 import ch.bailu.aat.description.StepRateDescription;
diff --git a/app/src/main/java/ch/bailu/aat/coordinates/Coordinates.java b/app/src/main/java/ch/bailu/aat/coordinates/Coordinates.java
index 6a1f742a..4528237b 100644
--- a/app/src/main/java/ch/bailu/aat/coordinates/Coordinates.java
+++ b/app/src/main/java/ch/bailu/aat/coordinates/Coordinates.java
@@ -4,8 +4,6 @@ import android.support.annotation.NonNull;
 
 import org.mapsforge.core.model.LatLong;
 
-import ch.bailu.aat.util.ui.AppLog;
-
 public abstract class Coordinates {
 
 
diff --git a/app/src/main/java/ch/bailu/aat/description/CadenceDescription.java b/app/src/main/java/ch/bailu/aat/description/CadenceDescription.java
index 5d2f8c2f..0337d03b 100644
--- a/app/src/main/java/ch/bailu/aat/description/CadenceDescription.java
+++ b/app/src/main/java/ch/bailu/aat/description/CadenceDescription.java
@@ -14,7 +14,6 @@ public class CadenceDescription  extends ContentDescription {
 
 
     private String value = VALUE_DISABLED;
-    private final String unit = UNIT;
     private String label = LABEL;
 
 
@@ -34,7 +33,7 @@ public class CadenceDescription  extends ContentDescription {
 
     @Override
     public String getUnit() {
-        return unit;
+        return UNIT;
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/description/ContentDescriptions.java b/app/src/main/java/ch/bailu/aat/description/ContentDescriptions.java
index 76bed302..2004b309 100644
--- a/app/src/main/java/ch/bailu/aat/description/ContentDescriptions.java
+++ b/app/src/main/java/ch/bailu/aat/description/ContentDescriptions.java
@@ -13,17 +13,17 @@ public class ContentDescriptions extends ContentDescription {
 
     @Override
     public String getValue() {
-        String v="";
+        StringBuilder v= new StringBuilder();
         String u="";
         String s="";
         for (ContentDescription d: descriptions) {
 
-            v = v+ s + d.getValue();
+            v.append(s).append(d.getValue());
             u = d.getUnit();
-            if (u.length() > 0) v+= " " + u;
+            if (u.length() > 0) v.append(" ").append(u);
             s= ", ";
         }
-        return v;
+        return v.toString();
     }
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/description/PaceDescription.java b/app/src/main/java/ch/bailu/aat/description/PaceDescription.java
index 425e645e..0d7ed0a3 100644
--- a/app/src/main/java/ch/bailu/aat/description/PaceDescription.java
+++ b/app/src/main/java/ch/bailu/aat/description/PaceDescription.java
@@ -2,9 +2,7 @@ package ch.bailu.aat.description;
 
 import android.content.Context;
 
-import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.preferences.general.SolidUnit;
-import ch.bailu.aat.util.ToDo;
 
 public abstract class PaceDescription extends FloatDescription {
     private final SolidUnit sunit;
@@ -62,7 +60,7 @@ public abstract class PaceDescription extends FloatDescription {
         int seconds, hours, minutes;
 
         // 1. calculate milliseconds to unit
-        seconds = (int) Math.round(pace);
+        seconds = Math.round(pace);
         minutes = seconds / 60;
         hours = minutes / 60;
 
diff --git a/app/src/main/java/ch/bailu/aat/gpx/attributes/AltitudeDelta.java b/app/src/main/java/ch/bailu/aat/gpx/attributes/AltitudeDelta.java
index 12b09dc8..fb02651e 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/attributes/AltitudeDelta.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/attributes/AltitudeDelta.java
@@ -79,14 +79,16 @@ public abstract class AltitudeDelta extends GpxSubAttributes {
         private float ascend, descend;
 
         private final AverageAltitude average = new AverageAltitude();
-        private float average_a, average_b, distance, delta;
+        private float average_b;
+        private float distance;
+        private float delta;
 
         private int samples;
 
         public void add(float alt, float dist) {
 
             if (average.add(alt, dist)) {
-                average_a = average_b;
+                float average_a = average_b;
                 average_b = average.getAltitude();
                 distance = average.getDistance();
 
diff --git a/app/src/main/java/ch/bailu/aat/gpx/attributes/Keys.java b/app/src/main/java/ch/bailu/aat/gpx/attributes/Keys.java
index ac94b4ec..2de6865b 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/attributes/Keys.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/attributes/Keys.java
@@ -8,8 +8,8 @@ public class Keys {
 
 
 
-    private static final HashMap<String, Integer> indexes = new HashMap();
-    private static final ArrayList<String> strings = new ArrayList(100);
+    private static final HashMap<String, Integer> indexes = new HashMap<>();
+    private static final ArrayList<String> strings = new ArrayList<>(100);
 
 
     private final ArrayList<Integer> keys = new ArrayList<>(10);
diff --git a/app/src/main/java/ch/bailu/aat/map/layer/control/AbsNodeViewLayer.java b/app/src/main/java/ch/bailu/aat/map/layer/control/AbsNodeViewLayer.java
index 3ee2918a..af0959c8 100644
--- a/app/src/main/java/ch/bailu/aat/map/layer/control/AbsNodeViewLayer.java
+++ b/app/src/main/java/ch/bailu/aat/map/layer/control/AbsNodeViewLayer.java
@@ -118,7 +118,7 @@ public abstract class AbsNodeViewLayer extends AbsNodeSelectorLayer implements
 
     private static class Position {
         private int xoffset=0, width, height, right_space;
-        private final int yoffset=0, button_space;
+        private final int button_space;
 
         public Position(Context c) {
             button_space = AppLayout.getBigButtonSize(c);
@@ -145,7 +145,7 @@ public abstract class AbsNodeViewLayer extends AbsNodeSelectorLayer implements
         }
 
         public int y() {
-            return yoffset;
+            return 0;
         }
 
         public int h() {
diff --git a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgePreview.java b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgePreview.java
index 3630cc7d..32b43f68 100644
--- a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgePreview.java
+++ b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgePreview.java
@@ -1,6 +1,7 @@
 package ch.bailu.aat.map.mapsforge;
 
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.Color;
@@ -158,6 +159,7 @@ public class MapsForgePreview extends MapsForgeViewBase {
     }
 
 
+    @SuppressLint("WrongThread")
     public void generateBitmapFile() {
         SyncTileBitmap bitmap = generateBitmap();
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/map/SolidMapGrid.java b/app/src/main/java/ch/bailu/aat/preferences/map/SolidMapGrid.java
index 032c0d7b..fbf6217d 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/map/SolidMapGrid.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/map/SolidMapGrid.java
@@ -2,13 +2,10 @@ package ch.bailu.aat.preferences.map;
 
 import android.content.Context;
 
-import com.google.openlocationcode.OpenLocationCode;
-
 import org.mapsforge.core.model.LatLong;
 
 import ch.bailu.aat.R;
 import ch.bailu.aat.coordinates.CH1903Coordinates;
-import ch.bailu.aat.coordinates.Coordinates;
 import ch.bailu.aat.coordinates.OlcCoordinates;
 import ch.bailu.aat.coordinates.WGS84Coordinates;
 import ch.bailu.aat.map.MapContext;
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/GpxObjectStatic.java b/app/src/main/java/ch/bailu/aat/services/cache/GpxObjectStatic.java
index b2062003..578cb350 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/GpxObjectStatic.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/GpxObjectStatic.java
@@ -146,7 +146,6 @@ public class GpxObjectStatic extends GpxObject implements ElevationUpdaterClient
 
     private class ListUpdater extends GpxListWalker {
         private final Dem3Tile tile;
-        private SrtmCoordinates coordinates=new SrtmCoordinates(0,0);
 
         public ListUpdater(Dem3Tile s) {
             tile=s;
@@ -170,8 +169,8 @@ public class GpxObjectStatic extends GpxObject implements ElevationUpdaterClient
         @Override
         public void doPoint(GpxPointNode point) {
             if (point.getAltitude() == ElevationProvider.NULL_ALTITUDE) {
-                coordinates=new SrtmCoordinates(point.getLatitudeE6(), point.getLongitudeE6());
-                if (tile.hashCode()==coordinates.hashCode()) {
+                SrtmCoordinates coordinates = new SrtmCoordinates(point.getLatitudeE6(), point.getLongitudeE6());
+                if (tile.hashCode()== coordinates.hashCode()) {
                     point.setAltitude(tile.getElevation(point.getLatitudeE6(), point.getLongitudeE6()));
                 }
             }
diff --git a/app/src/main/java/ch/bailu/aat/services/location/Barometer.java b/app/src/main/java/ch/bailu/aat/services/location/Barometer.java
index f0ed9ea0..7b70eeeb 100644
--- a/app/src/main/java/ch/bailu/aat/services/location/Barometer.java
+++ b/app/src/main/java/ch/bailu/aat/services/location/Barometer.java
@@ -24,7 +24,7 @@ public class Barometer{
             if (manager != null) {
                 final Sensor sensor = manager.getDefaultSensor(Sensor.TYPE_PRESSURE);
 
-                if (sensor instanceof  Sensor) {
+                if (sensor != null) {
                     manager.registerListener(listener, sensor, SensorManager.SENSOR_DELAY_NORMAL);
                 }
             }
@@ -36,7 +36,7 @@ public class Barometer{
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             final SensorManager manager = context.getSystemService(SensorManager.class);
 
-            if (manager instanceof SensorManager) {
+            if (manager != null) {
                 manager.unregisterListener(listener);
             }
         }
@@ -47,10 +47,10 @@ public class Barometer{
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             final SensorManager manager = context.getSystemService(SensorManager.class);
 
-            if (manager instanceof SensorManager) {
+            if (manager != null) {
                 final Sensor sensor = manager.getDefaultSensor(Sensor.TYPE_PRESSURE);
 
-                if (sensor instanceof  Sensor) {
+                if (sensor != null) {
                     return sensor.toString();
                 }
             }
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorSDK18.java b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorSDK18.java
index b21dab2b..930b336b 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorSDK18.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorSDK18.java
@@ -235,28 +235,27 @@ public class BleSensorSDK18 extends BluetoothGattCallback implements SensorInter
 
     @Override
     public String getName() {
-        String name = device.getName();
+        final StringBuilder builder = new StringBuilder(20);
 
-        if (name == null) name = "";
+        if (device.getName() != null)
+            builder.append(device.getName());
 
         for (ServiceInterface s : services) {
-            if (s.isValid()) name += " " + s.toString();
+            if (s.isValid()) builder.append(" ").append(s.toString());
         }
 
-        return name + " Sensor";
+        builder.append(" Sensor");
+        return builder.toString();
     }
 
 
-
     public synchronized GpxInformation getInformation(int iid) {
-        GpxInformation i = null;
-
         for (ServiceInterface s : services) {
-            i = s.getInformation(iid);
+            GpxInformation i = s.getInformation(iid);
             if (i != null) return i;
         }
 
-        return i;
+        return null;
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorsSDK18.java b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorsSDK18.java
index 7211baa6..9fa0d31f 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorsSDK18.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorsSDK18.java
@@ -13,7 +13,6 @@ import ch.bailu.aat.services.sensor.list.SensorList;
 import ch.bailu.aat.services.sensor.list.SensorListItem;
 import ch.bailu.aat.util.Timer;
 import ch.bailu.aat.util.ToDo;
-import ch.bailu.aat.util.ui.AppLog;
 
 @RequiresApi(api = 18)
 public class BleSensorsSDK18 extends Sensors {
@@ -21,7 +20,6 @@ public class BleSensorsSDK18 extends Sensors {
     public final static long SCAN_DURATION = 10 * 1000;
     public static final long CONNECTING_DURATION = 60 * 1000;
 
-    private final Context context;
     private final ServiceContext scontext;
 
     private final BluetoothAdapter adapter;
@@ -46,9 +44,8 @@ public class BleSensorsSDK18 extends Sensors {
     public BleSensorsSDK18(ServiceContext sc, SensorList list) {
         sensorList = list;
         scontext = sc;
-        context = sc.getContext();
 
-        adapter = getAdapter(context);
+        adapter = getAdapter(sc.getContext());
         scannerBonded = new BleScannerBonded(this);
         scannerBle = BleScanner.factory(this);
     }
@@ -94,7 +91,7 @@ public class BleSensorsSDK18 extends Sensors {
     private BluetoothAdapter getAdapter(Context context) {
         BluetoothManager bm = (BluetoothManager) context.getSystemService(Context.BLUETOOTH_SERVICE);
 
-        if (bm instanceof  BluetoothManager)
+        if (bm != null)
             return bm.getAdapter();
         return null;
     }
@@ -104,7 +101,7 @@ public class BleSensorsSDK18 extends Sensors {
     }
 
     private boolean isEnabled() {
-        return adapter instanceof  BluetoothAdapter && adapter.isEnabled();
+        return adapter != null && adapter.isEnabled();
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/HeartRateService.java b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/HeartRateService.java
index 4eed1ea2..2acfde42 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/HeartRateService.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/HeartRateService.java
@@ -120,10 +120,6 @@ public class HeartRateService extends HeartRateServiceID implements ServiceInter
 
     private class Attributes extends HeartRateAttributes {
 
-        private final boolean haveSensorContactStatus;
-        private final boolean haveEnergyExpended;
-        private final boolean haveRrIntervall;
-
 
         public Attributes(BluetoothGattCharacteristic c, byte[] v) {
             super(HeartRateService.this.location);
@@ -132,11 +128,11 @@ public class HeartRateService extends HeartRateServiceID implements ServiceInter
 
             boolean bpmUint16 = ID.isBitSet(flags, 0);
 
-            haveSensorContactStatus = ID.isBitSet(flags, 1);
+            boolean haveSensorContactStatus = ID.isBitSet(flags, 1);
             haveSensorContact = ID.isBitSet(flags, 2);
 
-            haveEnergyExpended = ID.isBitSet(flags, 3);
-            haveRrIntervall = ID.isBitSet(flags, 4);
+            boolean haveEnergyExpended = ID.isBitSet(flags, 3);
+            boolean haveRrIntervall = ID.isBitSet(flags, 4);
 
             offset += 1;
 
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/internal/StepCounterSensor.java b/app/src/main/java/ch/bailu/aat/services/sensor/internal/StepCounterSensor.java
index 7d4ef162..e23e8c2c 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/internal/StepCounterSensor.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/internal/StepCounterSensor.java
@@ -96,7 +96,7 @@ public class StepCounterSensor extends InternalSensorSDK23 {
         //AppLog.d(this , "s: " + steps + " t: " + timeDelta);
 
         if (timeDelta > 0 && steps > 0) {
-            return (int) Math.round((steps * 1000 * 60)  / (float)timeDelta);
+            return Math.round((steps * 1000 * 60)  / (float)timeDelta);
         }
         return 0;
     }
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorList.java b/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorList.java
index 895988f5..28461fed 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorList.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorList.java
@@ -109,11 +109,11 @@ public class SensorList extends ArrayList<SensorListItem> implements Closeable {
 
     public class Information extends GpxInformation {
         private int state = StateID.OFF;
-        private int sensorCount = 0;
 
         private final Attributes attributes;
 
         public Information() {
+            int sensorCount = 0;
             for (SensorListItem i : SensorList.this) {
                 if (i.isConnected()) {
                     sensorCount++;
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/StatusIcon.java b/app/src/main/java/ch/bailu/aat/services/tracker/StatusIcon.java
index 8028af26..512a3f5d 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/StatusIcon.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/StatusIcon.java
@@ -57,7 +57,6 @@ public class StatusIcon  {
     }
 
 
-    @SuppressWarnings("deprecation")
     @TargetApi(11)
     private Notification createNotificationSDK11(PendingIntent intent, int status_id) {
         String appName = scontext.getContext().getString(R.string.app_name);
diff --git a/app/src/main/java/ch/bailu/aat/util/Res.java b/app/src/main/java/ch/bailu/aat/util/Res.java
index 7a117f5b..bf25bd20 100644
--- a/app/src/main/java/ch/bailu/aat/util/Res.java
+++ b/app/src/main/java/ch/bailu/aat/util/Res.java
@@ -9,7 +9,6 @@ public class Res {
         return c.getString(r);
     }
 
-    @SuppressWarnings("deprecation")
     public static Drawable d(Context c, int r) {
         Drawable drawable;
         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP) {
diff --git a/app/src/main/java/ch/bailu/aat/views/description/CockpitView.java b/app/src/main/java/ch/bailu/aat/views/description/CockpitView.java
index d81f3caf..7ef1e6ed 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/CockpitView.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/CockpitView.java
@@ -12,9 +12,6 @@ import ch.bailu.aat.description.HeartRateDescription;
 import ch.bailu.aat.dispatcher.DispatcherInterface;
 import ch.bailu.aat.gpx.InfoID;
 import ch.bailu.aat.preferences.location.SolidProvideAltitude;
-import ch.bailu.aat.util.AppBroadcaster;
-import ch.bailu.aat.util.ToDo;
-import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.aat.util.ui.AppTheme;
 
 
diff --git a/app/src/main/java/ch/bailu/aat/views/description/SensorStateButton.java b/app/src/main/java/ch/bailu/aat/views/description/SensorStateButton.java
index c431c1e6..26a2dc05 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/SensorStateButton.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/SensorStateButton.java
@@ -1,22 +1,13 @@
 package ch.bailu.aat.views.description;
 
-import android.view.View;
-
 import ch.bailu.aat.description.SensorStateDescription;
-import ch.bailu.aat.services.InsideContext;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.util.ui.AppTheme;
-import ch.bailu.aat.util.ui.ToolTip;
-import ch.bailu.aat.views.preferences.ConnectToSensorsView;
 
 public class SensorStateButton extends NumberView {
-    private final ServiceContext scontext;
-
 
     public SensorStateButton(ServiceContext c) {
         super(new SensorStateDescription(c.getContext()), AppTheme.bar);
-        scontext = c;
-
         requestOnClickSensorReconect();
     }
 }
