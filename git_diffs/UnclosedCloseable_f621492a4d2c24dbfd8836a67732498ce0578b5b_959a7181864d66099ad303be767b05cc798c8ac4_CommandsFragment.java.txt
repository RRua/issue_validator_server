diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandBibliothecaActivity.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandBibliothecaActivity.java
index 78537fe..6db15ab 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandBibliothecaActivity.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandBibliothecaActivity.java
@@ -1,49 +1,58 @@
 package com.inspiredandroid.linuxcommandbibliotheca;
 
-import android.content.Context;
-import android.content.Intent;
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
-import android.support.v7.app.ActionBarActivity;
-import android.support.v7.app.AppCompatActivity;
 import android.widget.Toast;
 
+import com.inspiredandroid.linuxcommandbibliotheca.asnytasks.LoadDatabaseAsyncTask;
 import com.inspiredandroid.linuxcommandbibliotheca.fragments.BibliothecaFragment;
 import com.inspiredandroid.linuxcommandbibliotheca.fragments.DatabaseLoadingFragment;
 import com.inspiredandroid.linuxcommandbibliotheca.interfaces.CraftDatabaseInterface;
-import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
-
-import java.io.File;
 
 /**
  * Created by Simon Schubert
- * <p/>
+ * <p>
  * This Activity just holds the BibliothecaFragment
  */
-public class CommandBibliothecaActivity extends AppCompatActivity implements CraftDatabaseInterface {
+public class CommandBibliothecaActivity extends BaseActivity implements CraftDatabaseInterface {
 
     public final static String EXTRA_COMMAND = "extra_command"; //NON-NLS
     public static final String EXTRA_ICON = "extra_icon"; //NON-NLS
 
+    LoadDatabaseAsyncTask asyncTask;
+
     @Override
     protected void onCreate(Bundle savedInstanceState)
     {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_commands);
 
-        File database = getDatabasePath(CommandsDbHelper.DATABASE_NAME);
-        if (!database.exists()) {
-            showLoadingFragment();
-            new LoadDatabaseTask(this, this).execute();
-        } else {
-            showBibliothecaFragment();
+        showLoadingFragment();
+
+        asyncTask = new LoadDatabaseAsyncTask(this, this);
+        asyncTask.execute();
+    }
+
+    @Override
+    protected void onDestroy()
+    {
+        super.onDestroy();
+
+        if (isTaskRunning()) {
+            asyncTask.cancel(true);
         }
     }
 
-    private void showBibliothecaFragment() {
+    private boolean isTaskRunning()
+    {
+        return (asyncTask != null) && (asyncTask.getStatus() == AsyncTask.Status.RUNNING);
+    }
+
+    private void showBibliothecaFragment()
+    {
         Fragment fragment = new BibliothecaFragment();
         FragmentManager fragmentManager = getSupportFragmentManager();
         FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
@@ -52,7 +61,8 @@ public class CommandBibliothecaActivity extends AppCompatActivity implements Cra
         fragmentTransaction.commit();
     }
 
-    private void showLoadingFragment() {
+    private void showLoadingFragment()
+    {
         Fragment fragment = new DatabaseLoadingFragment();
         FragmentManager fragmentManager = getSupportFragmentManager();
         FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandManActivity.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandManActivity.java
index 517a9f9..295b132 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandManActivity.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandManActivity.java
@@ -1,57 +1,68 @@
 package com.inspiredandroid.linuxcommandbibliotheca;
 
 import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
+import android.os.AsyncTask;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
-import android.support.v7.app.ActionBarActivity;
-import android.support.v7.app.AppCompatActivity;
 import android.widget.Toast;
 
+import com.inspiredandroid.linuxcommandbibliotheca.asnytasks.LoadDatabaseAsyncTask;
 import com.inspiredandroid.linuxcommandbibliotheca.fragments.CommandManFragment;
 import com.inspiredandroid.linuxcommandbibliotheca.fragments.DatabaseLoadingFragment;
 import com.inspiredandroid.linuxcommandbibliotheca.interfaces.CraftDatabaseInterface;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandsDBTableModel;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
 
-import java.io.File;
-
 /**
  * Created by Simon Schubert
- * <p/>
+ * <p>
  * This Activity just holds the CommandManFragment
  */
-public class CommandManActivity extends AppCompatActivity implements CraftDatabaseInterface {
+public class CommandManActivity extends BaseActivity implements CraftDatabaseInterface {
 
     public final static String EXTRA_COMMAND_ID = "EXTRA_COMMAND_ID"; //NON-NLS
     public final static String EXTRA_COMMAND_NAME = "EXTRA_COMMAND_NAME"; //NON-NLS
 
+    LoadDatabaseAsyncTask asyncTask;
+
     @Override
     protected void onCreate(Bundle savedInstanceState)
     {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_command_man);
 
-        File database = getDatabasePath(CommandsDbHelper.DATABASE_NAME);
-        if (!database.exists()) {
-            showLoadingFragment();
-            new LoadDatabaseTask(this, this).execute();
-        } else {
-            showManFragment();
+        showLoadingFragment();
+
+        asyncTask = new LoadDatabaseAsyncTask(this, this);
+        asyncTask.execute();
+    }
+
+    @Override
+    protected void onDestroy()
+    {
+        super.onDestroy();
+
+        if (isTaskRunning()) {
+            asyncTask.cancel(true);
         }
     }
 
-    private void showManFragment() {
+    private boolean isTaskRunning()
+    {
+        return (asyncTask != null) && (asyncTask.getStatus() == AsyncTask.Status.RUNNING);
+    }
 
+    private void showManFragment()
+    {
         Bundle b = getIntent().getExtras();
         long id = b.getLong(EXTRA_COMMAND_ID, -1);
 
         CommandsDbHelper mDbHelper = new CommandsDbHelper(this);
         Cursor c;
 
-        if(id != -1) {
+        if (id != -1) {
             c = mDbHelper.getCommandFromId(id); //db.rawQuery("SELECT * FROM "+CommandsDBTableModel.TABLE_COMMANDS+" WHERE "+CommandsDBTableModel.COL_ID+" = " + id, null);
         } else {
             String name = b.getString(EXTRA_COMMAND_NAME);
@@ -74,6 +85,7 @@ public class CommandManActivity extends AppCompatActivity implements CraftDataba
         fragment.setArguments(bundle);
 
         c.close();
+        mDbHelper.close();
 
         FragmentManager fragmentManager = getSupportFragmentManager();
         FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
@@ -82,8 +94,8 @@ public class CommandManActivity extends AppCompatActivity implements CraftDataba
         fragmentTransaction.commit();
     }
 
-    private void showLoadingFragment() {
-
+    private void showLoadingFragment()
+    {
         setTitle(R.string.app_lcl_name);
 
         Fragment fragment = new DatabaseLoadingFragment();
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/LoadDatabaseTask.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/LoadDatabaseTask.java
deleted file mode 100644
index 9d3afb3..0000000
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/LoadDatabaseTask.java
+++ /dev/null
@@ -1,50 +0,0 @@
-package com.inspiredandroid.linuxcommandbibliotheca;
-
-import android.content.Context;
-import android.os.AsyncTask;
-import android.widget.Toast;
-
-import com.inspiredandroid.linuxcommandbibliotheca.interfaces.CraftDatabaseInterface;
-import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
-
-public class LoadDatabaseTask extends AsyncTask<Boolean, Void, Boolean> {
-    Context mContext;
-    CraftDatabaseInterface mCallback;
-
-    LoadDatabaseTask(Context context, CraftDatabaseInterface callback)
-    {
-        super();
-        mContext = context;
-        mCallback = callback;
-    }
-
-    @Override
-    protected void onPreExecute()
-    {
-        super.onPreExecute();
-    }
-
-    @Override
-    protected Boolean doInBackground(Boolean... contexts)
-    {
-        try {
-            new CommandsDbHelper(mContext).getReadableDatabase();
-        } catch (Exception e) {
-            e.printStackTrace();
-            return false;
-        }
-        return true;
-    }
-
-    @Override
-    protected void onPostExecute(Boolean success)
-    {
-        super.onPostExecute(success);
-        if (success) {
-            mCallback.onSuccessCraftingDatabase();
-        } else {
-            mCallback.onFailedCraftingDatabase();
-        }
-    }
-
-}
\ No newline at end of file
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/QuizActivity.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/QuizActivity.java
index 6cc29a0..977320c 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/QuizActivity.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/QuizActivity.java
@@ -7,17 +7,15 @@ import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v7.app.AlertDialog;
-import android.support.v7.app.AppCompatActivity;
 
 import com.inspiredandroid.linuxcommandbibliotheca.fragments.QuizFragment;
 
 /**
  * Created by Simon Schubert
- * <p/>
+ * <p>
  * This Activity just holds the CommandManFragment
  */
-public class QuizActivity extends AppCompatActivity {
-
+public class QuizActivity extends BaseActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState)
@@ -25,7 +23,7 @@ public class QuizActivity extends AppCompatActivity {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_command_man);
 
-        if(savedInstanceState == null) {
+        if (savedInstanceState == null) {
             Fragment fragment = new QuizFragment();
 
             FragmentManager fragmentManager = getSupportFragmentManager();
@@ -47,12 +45,14 @@ public class QuizActivity extends AppCompatActivity {
         AlertDialog.Builder builder = new AlertDialog.Builder(this);
         builder.setMessage(R.string.fragment_quiz_quit_dialog_text)
                 .setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
-                    public void onClick(DialogInterface dialog, int id) {
+                    public void onClick(DialogInterface dialog, int id)
+                    {
                         QuizActivity.this.finish();
                     }
                 })
                 .setNegativeButton(R.string.no, new DialogInterface.OnClickListener() {
-                    public void onClick(DialogInterface dialog, int id) {
+                    public void onClick(DialogInterface dialog, int id)
+                    {
                     }
                 });
         Dialog dialog = builder.create();
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/CommandsAdapter.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/CommandsAdapter.java
index 10a9a64..d0a4232 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/CommandsAdapter.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/CommandsAdapter.java
@@ -28,7 +28,7 @@ public class CommandsAdapter extends ResourceCursorAdapter {
     {
         String name = cursor.getString(cursor.getColumnIndex(CommandsDBTableModel.COL_NAME));
         TextView tvName = (TextView) view.findViewById(R.id.row_command_child_tv_title);
-        tvName.setText(Utils.highlight(mContext, query, name));
+        tvName.setText(Utils.highlightQueryInsideText(mContext, query, name));
 
         String description = cursor.getString(cursor.getColumnIndex(CommandsDBTableModel.COL_DESCRIPTION));
         TextView tvDescription = (TextView) view.findViewById(R.id.row_command_child_tv_desc);
@@ -41,12 +41,13 @@ public class CommandsAdapter extends ResourceCursorAdapter {
 
     /**
      * Get section icon
+     *
      * @param section
      * @return
      */
     private int getSectionImageResource(int section)
     {
-        switch(section) {
+        switch (section) {
             case CommandsDBTableModel.SCTION_GAMES:
                 return R.drawable.icon_section_game;
             case CommandsDBTableModel.SCTION_SYSTEMADMINANDDEAMON:
@@ -63,6 +64,7 @@ public class CommandsAdapter extends ResourceCursorAdapter {
 
     /**
      * Swaps cursor and save query for search result highlighting
+     *
      * @param c
      * @param query
      */
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ScriptsExpandableListAdapter.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ScriptsExpandableListAdapter.java
index 2fcecbd..1e7a100 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ScriptsExpandableListAdapter.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ScriptsExpandableListAdapter.java
@@ -15,6 +15,9 @@ import com.inspiredandroid.linuxcommandbibliotheca.models.CommandGroupModel;
 
 import java.util.ArrayList;
 
+/**
+ * Created by Simon Schubert
+ */
 public class ScriptsExpandableListAdapter extends BaseExpandableListAdapter {
 
     public final static int GROUP_INFO = 0;
@@ -85,29 +88,8 @@ public class ScriptsExpandableListAdapter extends BaseExpandableListAdapter {
             holder = (CommandViewHolder) convertView.getTag();
         }
 
-        //holder.command.setText(command.getCommand());//
+        holder.desc.setText(Utils.highlightQueryInsideText(mContext, mQuery, command.getDesc(mContext)));
 
-        holder.desc.setText(Utils.highlight(mContext, mQuery, command.getDesc(mContext)));
-
-//      holder.compatibility.removeAllViews();
-
-        /*
-        for(CommandCompatibilityModel mode : command.getCompatibility()) {
-            ImageView ivIcon = new ImageView(mContext);
-            ivIcon.setMaxWidth(30);
-            ivIcon.setAdjustViewBounds(true);
-
-            if(mode.getSystem() == 0) {
-                ivIcon.setImageResource(R.drawable.icon_linux);
-            } else if(mode.getSystem() == 1) {
-                ivIcon.setImageResource(R.drawable.icon_gnome);
-            } else if(mode.getSystem() == 2) {
-                ivIcon.setImageResource(R.drawable.icon_kde);
-            }
-
-            holder.compatibility.addView(ivIcon);
-        }
-        */
 
         if (!"".equals(command.getIconResource())) {
             int drawableResourceId = mContext.getResources().getIdentifier(command.getIconResource(), "drawable", mContext.getPackageName());
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/FetchCommandlineFuCommandsAsync.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/FetchCommandlineFuCommandsAsync.java
deleted file mode 100644
index 2ba0e82..0000000
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/FetchCommandlineFuCommandsAsync.java
+++ /dev/null
@@ -1,72 +0,0 @@
-package com.inspiredandroid.linuxcommandbibliotheca.asnytasks;
-
-import android.content.Context;
-import android.os.AsyncTask;
-
-import com.google.gson.Gson;
-import com.google.gson.JsonSyntaxException;
-import com.google.gson.reflect.TypeToken;
-import com.inspiredandroid.linuxcommandbibliotheca.interfaces.FetchedCommandlineFuCommandsInterface;
-import com.inspiredandroid.linuxcommandbibliotheca.models.CommandLineFuModel;
-
-import org.apache.http.HttpEntity;
-import org.apache.http.HttpResponse;
-import org.apache.http.client.HttpClient;
-import org.apache.http.client.methods.HttpPost;
-import org.apache.http.impl.client.DefaultHttpClient;
-import org.apache.http.util.EntityUtils;
-
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * Created by simon on 18.06.14.
- */
-public class FetchCommandlineFuCommandsAsync extends AsyncTask<String, String, ArrayList<CommandLineFuModel>> {
-
-    Context mContext;
-    FetchedCommandlineFuCommandsInterface mCallback;
-    int mPage;
-
-    public FetchCommandlineFuCommandsAsync(Context _context, FetchedCommandlineFuCommandsInterface _callback, int _page)
-    {
-        mContext = _context;
-        mCallback = _callback;
-        mPage = _page;
-    }
-
-    @Override
-    protected ArrayList<CommandLineFuModel> doInBackground(String... strings)
-    {
-        ArrayList<CommandLineFuModel> commandLineFuModels = null;
-
-        try {
-            HttpClient httpClient = new DefaultHttpClient();
-            HttpPost httpPost = new HttpPost("http://www.commandlinefu.com/commands/browse/sort-by-votes/json/" + mPage * 25); //NON-NLS
-            HttpResponse response = httpClient.execute(httpPost);
-            HttpEntity entity = response.getEntity();
-
-            if (entity != null) {
-                commandLineFuModels = new Gson().fromJson(EntityUtils.toString(entity), new TypeToken<List<CommandLineFuModel>>() {
-                }.getType());
-            }
-
-        } catch (IOException | JsonSyntaxException e) {
-            e.printStackTrace();
-        }
-        if (commandLineFuModels == null) {
-            commandLineFuModels = new ArrayList<>();
-        }
-
-        return commandLineFuModels;
-    }
-
-    @Override
-    protected void onPostExecute(ArrayList<CommandLineFuModel> commandLineFuModels)
-    {
-        super.onPostExecute(commandLineFuModels);
-
-        mCallback.onFetchedCommandlineFuCommands(commandLineFuModels);
-    }
-}
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/GrepManAsHtml.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/GrepManAsHtml.java
deleted file mode 100644
index 2b82793..0000000
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/GrepManAsHtml.java
+++ /dev/null
@@ -1,55 +0,0 @@
-package com.inspiredandroid.linuxcommandbibliotheca.asnytasks;
-
-import android.content.Context;
-import android.database.Cursor;
-import android.os.AsyncTask;
-import android.text.Html;
-import android.text.Spanned;
-
-import com.inspiredandroid.linuxcommandbibliotheca.interfaces.ConvertManFromHtmlToSpannableInterface;
-import com.inspiredandroid.linuxcommandbibliotheca.models.CommandsDBTableModel;
-import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
-
-/**
- * Created by simon on 09.08.15.
- */
-public class GrepManAsHtml extends AsyncTask<String, Spanned, Spanned> {
-
-    ConvertManFromHtmlToSpannableInterface callback;
-    Context context;
-    long id;
-
-    public GrepManAsHtml(Context context, long id, ConvertManFromHtmlToSpannableInterface callback)
-    {
-        this.context = context;
-        this.id = id;
-        this.callback = callback;
-    }
-
-    @Override
-    protected Spanned doInBackground(String... params)
-    {
-        // Init cursor
-        CommandsDbHelper mDbHelper = new CommandsDbHelper(context);
-        Cursor c = mDbHelper.getCommandFromId(id);
-
-        // Get description
-        c.moveToFirst();
-        String description = c.getString(c.getColumnIndex(CommandsDBTableModel.COL_MANPAGE));
-
-        c.close();
-
-        return Html.fromHtml(description);
-    }
-
-    @Override
-    protected void onPostExecute(Spanned spanned)
-    {
-        super.onPostExecute(spanned);
-
-        callback.onHtmlGraped(spanned);
-    }
-
-}
-
-
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/BibliothecaFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/BibliothecaFragment.java
index 96c95ce..1e231ba 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/BibliothecaFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/BibliothecaFragment.java
@@ -20,6 +20,11 @@ public class BibliothecaFragment extends Fragment {
 
     ScreenSlidePagerAdapter adapter;
 
+    public BibliothecaFragment()
+    {
+
+    }
+
     @Override
     public void onCreate(Bundle savedInstanceState)
     {
@@ -45,6 +50,7 @@ public class BibliothecaFragment extends Fragment {
         // Get total commands count
         CommandsDbHelper mDbHelper = new CommandsDbHelper(getActivity());
         int commandsCount = mDbHelper.getCommandsCount();
+        mDbHelper.close();
 
         // Set PagerTitleStrip titles
         String[] titles = new String[]{String.format(getString(R.string.fragment_bibliotheca_commands), commandsCount),
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandManFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandManFragment.java
index ea3265e..0336f59 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandManFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandManFragment.java
@@ -1,7 +1,6 @@
 package com.inspiredandroid.linuxcommandbibliotheca.fragments;
 
 import android.os.Bundle;
-import android.support.v4.app.Fragment;
 import android.text.Spanned;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -10,26 +9,16 @@ import android.widget.TextView;
 
 import com.inspiredandroid.linuxcommandbibliotheca.CommandManActivity;
 import com.inspiredandroid.linuxcommandbibliotheca.R;
-import com.inspiredandroid.linuxcommandbibliotheca.asnytasks.GrepManAsHtml;
+import com.inspiredandroid.linuxcommandbibliotheca.asnytasks.GrepManAsHtmlAsyncTask;
 import com.inspiredandroid.linuxcommandbibliotheca.interfaces.ConvertManFromHtmlToSpannableInterface;
 
 /**
  * Created by Simon Schubert
  */
-public class CommandManFragment extends Fragment implements ConvertManFromHtmlToSpannableInterface {
+public class CommandManFragment extends SuperFragment implements ConvertManFromHtmlToSpannableInterface {
 
     TextView tvDescription;
-    GrepManAsHtml asyncTask;
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
-    {
-        View view = inflater.inflate(R.layout.fragment_command_man, container, false);
-
-        tvDescription = (TextView) view.findViewById(R.id.fragment_command_man_tv);
-
-        return view;
-    }
+    GrepManAsHtmlAsyncTask asyncTask;
 
     @Override
     public void onCreate(Bundle savedInstanceState)
@@ -41,20 +30,23 @@ public class CommandManFragment extends Fragment implements ConvertManFromHtmlTo
         long id = b.getLong(CommandManActivity.EXTRA_COMMAND_ID);
 
         // load async
-        asyncTask = new GrepManAsHtml(getActivity(), id, this);
+        asyncTask = new GrepManAsHtmlAsyncTask(getActivity(), id, this);
+        asyncTasks.add(asyncTask);
         asyncTask.execute();
     }
 
     @Override
-    public void onPause()
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
     {
-        super.onPause();
+        View view = inflater.inflate(R.layout.fragment_command_man, container, false);
 
-        asyncTask.cancel(true);
+        tvDescription = (TextView) view.findViewById(R.id.fragment_command_man_tv);
+
+        return view;
     }
 
     @Override
-    public void onHtmlGraped(Spanned spannable)
+    public void onConvertedHtmlToSpannable(Spanned spannable)
     {
         tvDescription.setText(spannable);
     }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandsFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandsFragment.java
index ac5a774..751b060 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandsFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandsFragment.java
@@ -4,7 +4,6 @@ import android.app.SearchManager;
 import android.content.Context;
 import android.content.Intent;
 import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
 import android.os.Build;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
@@ -25,7 +24,6 @@ import android.widget.ListView;
 import com.inspiredandroid.linuxcommandbibliotheca.CommandManActivity;
 import com.inspiredandroid.linuxcommandbibliotheca.R;
 import com.inspiredandroid.linuxcommandbibliotheca.adapter.CommandsAdapter;
-import com.inspiredandroid.linuxcommandbibliotheca.models.CommandsDBTableModel;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
 
 import java.text.Normalizer;
@@ -37,7 +35,11 @@ public class CommandsFragment extends Fragment implements AdapterView.OnItemClic
 
     CommandsAdapter adapter;
     ListView list;
-    SQLiteDatabase db;
+    CommandsDbHelper mDbHelper;
+
+    public CommandsFragment()
+    {
+    }
 
     @Override
     public void onCreate(Bundle savedInstanceState)
@@ -46,8 +48,7 @@ public class CommandsFragment extends Fragment implements AdapterView.OnItemClic
 
         setHasOptionsMenu(true);
 
-        CommandsDbHelper mDbHelper = new CommandsDbHelper(getActivity());
-        db = mDbHelper.getReadableDatabase();
+        mDbHelper = new CommandsDbHelper(getActivity());
 
         createAdapter();
     }
@@ -121,6 +122,14 @@ public class CommandsFragment extends Fragment implements AdapterView.OnItemClic
         }
     }
 
+    @Override
+    public void onDestroy()
+    {
+        super.onDestroy();
+
+        mDbHelper.close();
+    }
+
     private void startCommandManActivity(long id)
     {
         Intent intent = new Intent(getActivity(), CommandManActivity.class);
@@ -132,11 +141,7 @@ public class CommandsFragment extends Fragment implements AdapterView.OnItemClic
 
     private void createAdapter()
     {
-        // Init Cursor
-        Cursor c = db.rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS + " ORDER BY "+ CommandsDBTableModel.COL_NAME +" COLLATE NOCASE ASC", null);
-
-        // Init Adapter
-        adapter = new CommandsAdapter(getActivity(), R.layout.row_command_child, c, true);
+        adapter = new CommandsAdapter(getActivity(), R.layout.row_command_child, mDbHelper.getAllCommands(), true);
     }
 
     /**
@@ -144,11 +149,8 @@ public class CommandsFragment extends Fragment implements AdapterView.OnItemClic
      */
     private void resetSearchResults()
     {
-        // Init Cursor
-        Cursor c = db.rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS + " ORDER BY "+ CommandsDBTableModel.COL_NAME +" COLLATE NOCASE ASC", null);
-
         // Update adapter
-        adapter.updateCursor(c, "");
+        adapter.updateCursor(mDbHelper.getAllCommands(), "");
     }
 
     /**
@@ -158,13 +160,8 @@ public class CommandsFragment extends Fragment implements AdapterView.OnItemClic
      */
     private void search(String query)
     {
-        // Init Cursor
-        Cursor c = db.rawQuery("Select * from " + CommandsDBTableModel.TABLE_COMMANDS + " WHERE " + CommandsDBTableModel.COL_NAME + " LIKE '%" + query + "%' "+
-                "ORDER BY " + CommandsDBTableModel.COL_NAME + " = '" + query + "' DESC,"+
-                CommandsDBTableModel.COL_NAME + " LIKE '" + query + "%' DESC", null);
-
         // Update adapter
-        adapter.updateCursor(c, query);
+        adapter.updateCursor(mDbHelper.searchCommands(query), query);
     }
 
     @Override
@@ -175,9 +172,7 @@ public class CommandsFragment extends Fragment implements AdapterView.OnItemClic
             @Override
             public Cursor loadInBackground()
             {
-                Cursor c = db.rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS + " ORDER BY " + CommandsDBTableModel.COL_NAME + " COLLATE NOCASE ASC", null);
-                // You can use any query that returns a cursor.
-                return c;
+                return mDbHelper.getAllCommands();
             }
         };
     }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/DatabaseLoadingFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/DatabaseLoadingFragment.java
index 3601ea9..b1c1d6c 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/DatabaseLoadingFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/DatabaseLoadingFragment.java
@@ -8,11 +8,13 @@ import android.view.ViewGroup;
 
 import com.inspiredandroid.linuxcommandbibliotheca.R;
 
+/**
+ * Created by Simon Schubert
+ */
 public class DatabaseLoadingFragment extends Fragment {
 
     public DatabaseLoadingFragment()
     {
-        // Required empty public constructor
     }
 
     @Override
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizFragment.java
index 90895f2..24bb805 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizFragment.java
@@ -16,6 +16,7 @@ import android.widget.LinearLayout;
 import android.widget.TextView;
 
 import com.inspiredandroid.linuxcommandbibliotheca.R;
+import com.inspiredandroid.linuxcommandbibliotheca.fragments.dialogs.QuizPreviousResultDialogFragment;
 import com.inspiredandroid.linuxcommandbibliotheca.misc.Utils;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandsDBTableModel;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
@@ -54,6 +55,20 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
     // list of used question cmmands
     ArrayList<String> usedCommands;
 
+    CommandsDbHelper databaseHelper;
+
+    public QuizFragment()
+    {
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState)
+    {
+        super.onCreate(savedInstanceState);
+
+        databaseHelper = new CommandsDbHelper(getContext());
+    }
+
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
     {
@@ -83,8 +98,7 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
         ivWrong.setVisibility(View.GONE);
         btnInfo = (ImageButton) view.findViewById(R.id.fragment_quiz_btn_info);
 
-        if(savedInstanceState == null)
-        {
+        if (savedInstanceState == null) {
             initQuiz();
             firstRound();
         } else {
@@ -96,7 +110,7 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
             lastAnswers = savedInstanceState.getStringArrayList("lastAnswers");
             usedCommands = savedInstanceState.getStringArrayList("usedCommands");
 
-            if(answerCounter == maxAnswerCount) {
+            if (answerCounter == maxAnswerCount) {
                 tvQuestion.setVisibility(View.INVISIBLE);
                 llButtons.setVisibility(View.INVISIBLE);
                 llCongratulation.setVisibility(View.VISIBLE);
@@ -153,10 +167,19 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
         }
     }
 
+    @Override
+    public void onDestroy()
+    {
+        super.onDestroy();
+
+        databaseHelper.close();
+    }
+
     /**
      * Initialize/reset variables
      */
-    private void initQuiz() {
+    private void initQuiz()
+    {
         usedCommands = new ArrayList<>();
         currentCorrectAnswerId = -1;
         answerCounter = -1;
@@ -167,7 +190,8 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
     /**
      * The first round has a different animation cycle
      */
-    private void firstRound() {
+    private void firstRound()
+    {
         nextRound();
 
         fillQuestionTextView();
@@ -267,7 +291,8 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
     /**
      * Animate results
      */
-    private void startFinishAnimation() {
+    private void startFinishAnimation()
+    {
         llCongratulation.setVisibility(View.VISIBLE);
 
         Animation scaleAnimation = AnimationUtils.loadAnimation(getContext(), R.anim.scale_up);
@@ -295,7 +320,7 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
      */
     private void updateNextRoundDataAndAnimate()
     {
-        if(answerCounter == maxAnswerCount) {
+        if (answerCounter == maxAnswerCount) {
 
             fillResultView();
             startFinishAnimation();
@@ -311,8 +336,8 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
 
     private void fillResultView()
     {
-        float percentage = (float)correctAnswerCounter / (float)maxAnswerCount * 100f;
-        tvPercentage.setText(String.format(getString(R.string.fragment_quiz_result), (int)percentage));
+        float percentage = (float) correctAnswerCounter / (float) maxAnswerCount * 100f;
+        tvPercentage.setText(String.format(getString(R.string.fragment_quiz_result), (int) percentage));
 
         tvCounter.setVisibility(View.GONE);
     }
@@ -351,13 +376,13 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
 
     /**
      * Get answers from database
+     *
      * @param count size of string array list size
      * @return
      */
     private ArrayList<String> getAnswers(int count)
     {
-        CommandsDbHelper helper = new CommandsDbHelper(getContext());
-        Cursor c = helper.getQuiz(20, usedCommands);
+        Cursor c = databaseHelper.getQuiz(20, usedCommands);
 
         ArrayList<String> commands = new ArrayList<>();
         while (c.moveToNext()) {
@@ -380,7 +405,8 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
     /**
      * Set answers button text
      */
-    private void fillAnswerButtonViews() {
+    private void fillAnswerButtonViews()
+    {
         for (int i = 0; i < currentAnswers.size(); i++) {
             String command = currentAnswers.get(i);
             btnAnswers.get(i).setText(command);
@@ -393,18 +419,18 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
     private void fillQuestionTextView()
     {
         String randomQuestionCommand = currentAnswers.get(currentCorrectAnswerId);
-        tvQuestion.setText(String.format(getString(R.string.fragment_quiz_question),getQuestionText(randomQuestionCommand)));
+        tvQuestion.setText(String.format(getString(R.string.fragment_quiz_question), getQuestionText(randomQuestionCommand)));
     }
 
     /**
      * Fetch question description by cmd name from database
+     *
      * @param command
      * @return
      */
     private String getQuestionText(String command)
     {
-        CommandsDbHelper helper = new CommandsDbHelper(getContext());
-        Cursor c2 = helper.getQuizCommandFromName(command);
+        Cursor c2 = databaseHelper.getQuizCommandFromName(command);
         c2.moveToFirst();
 
         String question = c2.getString(c2.getColumnIndex(CommandsDBTableModel.COL_DESCRIPTION));
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizPreviousResultDialogFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizPreviousResultDialogFragment.java
deleted file mode 100644
index 41df884..0000000
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizPreviousResultDialogFragment.java
+++ /dev/null
@@ -1,126 +0,0 @@
-package com.inspiredandroid.linuxcommandbibliotheca.fragments;
-
-import android.app.Dialog;
-import android.content.Intent;
-import android.database.Cursor;
-import android.graphics.PorterDuff;
-import android.os.Bundle;
-import android.support.v4.app.DialogFragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.Window;
-import android.widget.Button;
-import android.widget.TextView;
-
-import com.inspiredandroid.linuxcommandbibliotheca.CommandManActivity;
-import com.inspiredandroid.linuxcommandbibliotheca.R;
-import com.inspiredandroid.linuxcommandbibliotheca.models.CommandsDBTableModel;
-import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
-
-import java.util.ArrayList;
-
-public class QuizPreviousResultDialogFragment extends DialogFragment implements View.OnClickListener {
-
-    ArrayList<String> answers;
-    int correctAnswer;
-
-    public static QuizPreviousResultDialogFragment getInstance(ArrayList<String> answers, int correctAnswer) {
-        QuizPreviousResultDialogFragment fragment = new QuizPreviousResultDialogFragment();
-
-        Bundle arguments = new Bundle();
-        arguments.putStringArrayList("answers", answers);
-        arguments.putInt("correctAnswer", correctAnswer);
-        fragment.setArguments(arguments);
-
-        return fragment;
-    }
-
-    /** The system calls this to get the DialogFragment's layout, regardless
-        of whether it's being displayed as a dialog or an embedded fragment. */
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-            Bundle savedInstanceState) {
-        // Inflate the layout to use as dialog or embedded fragment
-        View view = inflater.inflate(R.layout.fragment_quiz_result, container, false);
-
-        answers = getArguments().getStringArrayList("answers");
-        correctAnswer = getArguments().getInt("correctAnswer");
-
-
-        int[] CLICKABLES = new int[]{R.id.fragment_quiz_result_btn_answer1, R.id.fragment_quiz_result_btn_answer2,
-        R.id.fragment_quiz_result_btn_answer3, R.id.fragment_quiz_result_btn_answer4};
-
-        for(int i = 0; i < CLICKABLES.length; i++) {
-            int id = CLICKABLES[i];
-
-            Button btnAnswer = (Button) view.findViewById(id);
-            btnAnswer.setOnClickListener(this);
-            btnAnswer.setText(answers.get(i));
-            if(i == correctAnswer) {
-                btnAnswer.getBackground().setColorFilter(0xFF8DCF67, PorterDuff.Mode.MULTIPLY);
-            }
-        }
-
-
-        setCommandDescriptionForTextView(view, R.id.fragment_quiz_result_tv_answer1, answers.get(0));
-        setCommandDescriptionForTextView(view, R.id.fragment_quiz_result_tv_answer2, answers.get(1));
-        setCommandDescriptionForTextView(view, R.id.fragment_quiz_result_tv_answer3, answers.get(2));
-        setCommandDescriptionForTextView(view, R.id.fragment_quiz_result_tv_answer4, answers.get(3));
-
-        setQuestionTextView(view, R.id.fragment_quiz_result_tv_question, answers.get(correctAnswer));
-
-        return view;
-    }
-  
-    /** The system calls this only when creating the layout in a dialog. */
-    @Override
-    public Dialog onCreateDialog(Bundle savedInstanceState) {
-        // The only reason you might override this method when using onCreateView() is
-        // to modify any dialog characteristics. For example, the dialog includes a
-        // title by default, but your custom layout might not need it. So here you can
-        // remove the dialog title, but you must call the superclass to get the Dialog.
-        Dialog dialog = super.onCreateDialog(savedInstanceState);
-        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
-        return dialog;
-    }
-
-    @Override
-    public void onClick(View v)
-    {
-        String command = ((TextView)v).getText().toString();
-        startCommandManActivity(command);
-    }
-
-    private void startCommandManActivity(String command)
-    {
-        Intent intent = new Intent(getActivity(), CommandManActivity.class);
-        Bundle b = new Bundle();
-        b.putString(CommandManActivity.EXTRA_COMMAND_NAME, command);
-        intent.putExtras(b);
-        startActivity(intent);
-    }
-
-    private void setCommandDescriptionForTextView(View view, int id, String command)
-    {
-        CommandsDbHelper helper = new CommandsDbHelper(getContext());
-        Cursor c2 = helper.getQuizCommandFromName(command);
-        c2.moveToFirst();
-
-        String description = c2.getString(c2.getColumnIndex(CommandsDBTableModel.COL_DESCRIPTION));
-        ((TextView)view.findViewById(id)).setText(description);
-
-        c2.close();
-    }
-
-    private void setQuestionTextView(View view, int id, String command)
-    {
-        CommandsDbHelper helper = new CommandsDbHelper(getContext());
-        Cursor c2 = helper.getQuizCommandFromName(command);
-        c2.moveToFirst();
-
-        String question = c2.getString(c2.getColumnIndex(CommandsDBTableModel.COL_DESCRIPTION));
-        ((TextView)view.findViewById(id)).setText(String.format(getString(R.string.fragment_quiz_question),question));
-        c2.close();
-    }
-}
\ No newline at end of file
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/ScriptsFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/ScriptsFragment.java
index 40cb4b6..82f272d 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/ScriptsFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/ScriptsFragment.java
@@ -29,7 +29,7 @@ import com.google.gson.reflect.TypeToken;
 import com.inspiredandroid.linuxcommandbibliotheca.CommandBibliothecaActivity;
 import com.inspiredandroid.linuxcommandbibliotheca.R;
 import com.inspiredandroid.linuxcommandbibliotheca.adapter.ScriptsExpandableListAdapter;
-import com.inspiredandroid.linuxcommandbibliotheca.asnytasks.FetchCommandlineFuCommandsAsync;
+import com.inspiredandroid.linuxcommandbibliotheca.asnytasks.FetchCommandlineFuCommandsAsyncTask;
 import com.inspiredandroid.linuxcommandbibliotheca.interfaces.FetchedCommandlineFuCommandsInterface;
 import com.inspiredandroid.linuxcommandbibliotheca.misc.Utils;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandChildModel;
@@ -41,7 +41,7 @@ import java.util.ArrayList;
 import java.util.List;
 
 /**
- * Created by simon on 13.06.14.
+ * Created by Simon Schubert
  */
 public class ScriptsFragment extends Fragment implements View.OnClickListener, FetchedCommandlineFuCommandsInterface, AbsListView.OnScrollListener, ExpandableListView.OnChildClickListener {
 
@@ -51,12 +51,16 @@ public class ScriptsFragment extends Fragment implements View.OnClickListener, F
     ArrayList<ArrayList<CommandGroupModel>> childs = new ArrayList<>();
     ArrayList<String> group = new ArrayList<>();
 
-    FetchCommandlineFuCommandsAsync async;
+    FetchCommandlineFuCommandsAsyncTask async;
     int fetchedCommandlineFuPages = 0;
 
     boolean isSearching = false;
     ArrayList mSelectedItems;
 
+    public ScriptsFragment()
+    {
+    }
+
     @Override
     public void onCreate(Bundle savedInstanceState)
     {
@@ -64,7 +68,7 @@ public class ScriptsFragment extends Fragment implements View.OnClickListener, F
 
         setHasOptionsMenu(true);
 
-        createAdapter();
+        adapter = createAdapter();
     }
 
     @Override
@@ -189,7 +193,7 @@ public class ScriptsFragment extends Fragment implements View.OnClickListener, F
         }
     }
 
-    private void createAdapter()
+    private ScriptsExpandableListAdapter createAdapter()
     {
         // command categories
         group.add(getString(R.string.system_info));
@@ -219,8 +223,7 @@ public class ScriptsFragment extends Fragment implements View.OnClickListener, F
             }
         }
 
-        // init list adapter
-        adapter = new ScriptsExpandableListAdapter(getActivity(), group, childs);
+        return new ScriptsExpandableListAdapter(getActivity(), group, childs);
     }
 
     private void handleCommandClick(CommandGroupModel commandGroupModel, int position)
@@ -249,7 +252,7 @@ public class ScriptsFragment extends Fragment implements View.OnClickListener, F
         if (async == null
                 || async.getStatus() == AsyncTask.Status.FINISHED) {
             adapter.setLoading();
-            async = new FetchCommandlineFuCommandsAsync(
+            async = new FetchCommandlineFuCommandsAsyncTask(
                     getActivity(), this, fetchedCommandlineFuPages);
             async.execute();
             fetchedCommandlineFuPages++;
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/TipFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/TipFragment.java
index 8ba2c52..c86e94b 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/TipFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/TipFragment.java
@@ -15,6 +15,10 @@ import com.inspiredandroid.linuxcommandbibliotheca.R;
  */
 public class TipFragment extends Fragment implements View.OnClickListener {
 
+    public TipFragment()
+    {
+    }
+
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
     {
@@ -28,7 +32,7 @@ public class TipFragment extends Fragment implements View.OnClickListener {
     @Override
     public void onClick(View v)
     {
-        if(v.getId() == R.id.fragment_tips_btn_quiz) {
+        if (v.getId() == R.id.fragment_tips_btn_quiz) {
             startActivity(new Intent(getContext(), QuizActivity.class));
         }
     }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/ConvertManFromHtmlToSpannableInterface.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/ConvertManFromHtmlToSpannableInterface.java
index 3732f3f..afb7200 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/ConvertManFromHtmlToSpannableInterface.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/ConvertManFromHtmlToSpannableInterface.java
@@ -3,13 +3,12 @@ package com.inspiredandroid.linuxcommandbibliotheca.interfaces;
 import android.text.Spanned;
 
 /**
- * Created by simon on 08.09.14.
+ * Created by Simon Schubert
  */
 public interface ConvertManFromHtmlToSpannableInterface {
 
     /**
-     *
      * @param spannable
      */
-    void onHtmlGraped(Spanned spannable);
+    void onConvertedHtmlToSpannable(Spanned spannable);
 }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/CraftDatabaseInterface.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/CraftDatabaseInterface.java
index c9d6850..aa00551 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/CraftDatabaseInterface.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/CraftDatabaseInterface.java
@@ -1,14 +1,17 @@
 package com.inspiredandroid.linuxcommandbibliotheca.interfaces;
 
-import com.inspiredandroid.linuxcommandbibliotheca.models.CommandLineFuModel;
-
-import java.util.ArrayList;
-
 /**
- * Created by simon on 08.09.14.
+ * Created by Simon Schubert
  */
 public interface CraftDatabaseInterface {
 
+    /**
+     * Successfully created the database
+     */
     void onSuccessCraftingDatabase();
+
+    /**
+     * Failed to create database
+     */
     void onFailedCraftingDatabase();
 }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/FetchedCommandlineFuCommandsInterface.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/FetchedCommandlineFuCommandsInterface.java
index cd8d31d..514db6a 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/FetchedCommandlineFuCommandsInterface.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/FetchedCommandlineFuCommandsInterface.java
@@ -5,11 +5,11 @@ import com.inspiredandroid.linuxcommandbibliotheca.models.CommandLineFuModel;
 import java.util.ArrayList;
 
 /**
- * Created by simon on 08.09.14.
+ * Created by Simon Schubert
  */
 public interface FetchedCommandlineFuCommandsInterface {
     /**
-     * @param commandLineFuModels
+     * @param commandLineFuModels list of commands from commandlinefu
      */
     void onFetchedCommandlineFuCommands(ArrayList<CommandLineFuModel> commandLineFuModels);
 }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/misc/Utils.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/misc/Utils.java
index adfd93c..01e13eb 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/misc/Utils.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/misc/Utils.java
@@ -19,7 +19,7 @@ import java.text.Normalizer;
 import java.util.ArrayList;
 
 /**
- * Created by simon on 08.09.14.
+ * Created by Simon Schubert
  */
 public class Utils {
 
@@ -88,11 +88,13 @@ public class Utils {
 
     /**
      * Clone string array list
+     *
      * @param dogList
      * @return
      */
-    public static ArrayList<String> cloneList(ArrayList<String> dogList) {
-        if(dogList == null) {
+    public static ArrayList<String> cloneList(ArrayList<String> dogList)
+    {
+        if (dogList == null) {
             return null;
         }
         ArrayList<String> clonedList = new ArrayList<>(dogList.size());
@@ -103,15 +105,16 @@ public class Utils {
     }
 
     /**
-     * Highlight the the appereance of search inside originalText
+     * Highlight the the appearance of search query inside originalText
+     *
      * @param context
-     * @param search
+     * @param query
      * @param originalText
      * @return
      */
-    public static CharSequence highlight(Context context, String search, String originalText)
+    public static CharSequence highlightQueryInsideText(Context context, String query, String originalText)
     {
-        if (search.isEmpty() || originalText.isEmpty()) {
+        if (query.isEmpty() || originalText.isEmpty()) {
             return originalText;
         }
 
@@ -119,21 +122,21 @@ public class Utils {
         // the same thing should have been done for the search text
         String normalizedText = Normalizer.normalize(originalText, Normalizer.Form.NFD).replaceAll("\\p{InCombiningDiacriticalMarks}+", "").toLowerCase();
 
-        int start = normalizedText.indexOf(search);
+        int start = normalizedText.indexOf(query);
         if (start < 0) {
             // not found, nothing to to
             return originalText;
         } else {
-            // highlight each appearance in the original text
+            // highlightQueryInsideText each appearance in the original text
             // while searching in normalized text
             Spannable highlighted = new SpannableString(originalText);
             while (start >= 0) {
                 int spanStart = Math.min(start, originalText.length());
-                int spanEnd = Math.min(start + search.length(), originalText.length());
+                int spanEnd = Math.min(start + query.length(), originalText.length());
 
                 highlighted.setSpan(new ForegroundColorSpan(ContextCompat.getColor(context, R.color.ab_primary_dark)), spanStart, spanEnd, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
 
-                start = normalizedText.indexOf(search, spanEnd);
+                start = normalizedText.indexOf(query, spanEnd);
             }
 
             return highlighted;
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandChildModel.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandChildModel.java
index 05d5967..e2586f4 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandChildModel.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandChildModel.java
@@ -3,7 +3,7 @@ package com.inspiredandroid.linuxcommandbibliotheca.models;
 import java.util.ArrayList;
 
 /**
- * Created by simon on 1/2/15.
+ * Created by Simon Schubert
  */
 public class CommandChildModel {
 
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandCompatibilityModel.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandCompatibilityModel.java
index 1cc33fe..6c75e30 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandCompatibilityModel.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandCompatibilityModel.java
@@ -3,7 +3,7 @@ package com.inspiredandroid.linuxcommandbibliotheca.models;
 import java.io.Serializable;
 
 /**
- * Created by simon on 14.06.14.
+ * Created by Simon Schubert
  */
 public class CommandCompatibilityModel implements Serializable {
 
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandGroupModel.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandGroupModel.java
index a6d2b62..f170121 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandGroupModel.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandGroupModel.java
@@ -7,6 +7,9 @@ import com.inspiredandroid.linuxcommandbibliotheca.R;
 import java.io.Serializable;
 import java.util.ArrayList;
 
+/**
+ * Created by Simon Schubert
+ */
 public class CommandGroupModel implements Serializable {
 
     private int category = 0;
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandLineFuModel.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandLineFuModel.java
index 4f08e51..b7133ce 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandLineFuModel.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandLineFuModel.java
@@ -1,7 +1,7 @@
 package com.inspiredandroid.linuxcommandbibliotheca.models;
 
 /**
- * Created by simon on 08.09.14.
+ * Created by Simon Schubert
  */
 public class CommandLineFuModel {
     int id;
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandsDBTableModel.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandsDBTableModel.java
index 494c514..7a76d8c 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandsDBTableModel.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/models/CommandsDBTableModel.java
@@ -1,7 +1,7 @@
 package com.inspiredandroid.linuxcommandbibliotheca.models;
 
 /**
- * Created by simon on 2/5/15.
+ * Created by Simon Schubert
  */
 public class CommandsDBTableModel {
 
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/sql/CommandsDbHelper.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/sql/CommandsDbHelper.java
index 21b75c0..714cec0 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/sql/CommandsDbHelper.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/sql/CommandsDbHelper.java
@@ -2,25 +2,25 @@ package com.inspiredandroid.linuxcommandbibliotheca.sql;
 
 import android.content.Context;
 import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.util.Log;
 
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandsDBTableModel;
 import com.readystatesoftware.sqliteasset.SQLiteAssetHelper;
 
-import java.io.File;
-import java.lang.reflect.Array;
 import java.util.ArrayList;
 
+/**
+ * Created by Simon Schubert
+ */
 public class CommandsDbHelper extends SQLiteAssetHelper {
 
-    // If you change the database schema, you must increment the database version.
+    // Update database version after update/schema change
     public static final int DATABASE_VERSION = 2;
     public static final String DATABASE_NAME = "commands.db";
 
     public CommandsDbHelper(Context context)
     {
         super(context, DATABASE_NAME, null, DATABASE_VERSION);
+        // needs to be set to recreate database after version change
         setForcedUpgrade();
     }
 
@@ -31,36 +31,85 @@ public class CommandsDbHelper extends SQLiteAssetHelper {
      */
     public int getCommandsCount()
     {
-        SQLiteDatabase db = getReadableDatabase();
+        Cursor cursor = getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS, null);
+        int count = cursor.getCount();
+        cursor.close();
 
-        return db.rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS, null).getCount();
+        return count;
     }
 
+    /**
+     * Get all available commands
+     *
+     * @return
+     */
+    public Cursor getAllCommands()
+    {
+        return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS + " ORDER BY " + CommandsDBTableModel.COL_NAME + " COLLATE NOCASE ASC", null);
+    }
+
+    /**
+     * Search commands and sort in a useful way. Example search for "man"
+     * 1. man
+     * 2. manpath
+     * 3. xman
+     *
+     * @param query search
+     * @return
+     */
+    public Cursor searchCommands(String query)
+    {
+        return getReadableDatabase().rawQuery("Select * from " + CommandsDBTableModel.TABLE_COMMANDS + " WHERE " + CommandsDBTableModel.COL_NAME + " LIKE '%" + query + "%' " +
+                "ORDER BY " + CommandsDBTableModel.COL_NAME + " = '" + query + "' DESC," +
+                CommandsDBTableModel.COL_NAME + " LIKE '" + query + "%' DESC", null);
+    }
+
+    /**
+     * Fetch command from name
+     *
+     * @param name command
+     * @return
+     */
     public Cursor getCommandFromName(String name)
     {
         return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS + " WHERE " + CommandsDBTableModel.COL_NAME + " LIKE '" + name + "'", null);
     }
 
+    /**
+     * Fetch command from unique id
+     *
+     * @param id unique id
+     * @return
+     */
     public Cursor getCommandFromId(long id)
     {
         return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS + " WHERE " + CommandsDBTableModel.COL_ID + " = " + id, null);
     }
 
+    /**
+     * @param difficulty maximum difficulty
+     * @param commands   list of commands which shouldn't be fetched because they were already used in the quiz session
+     * @return
+     */
     public Cursor getQuiz(int difficulty, ArrayList<String> commands)
     {
         String wherePart = CommandsDBTableModel.COL_NAME + " NOT LIKE ";
         String whereClause = " AND ";
-        for(String command : commands) {
+        for (String command : commands) {
             whereClause += wherePart + "'" + command + "' AND ";
         }
 
-        whereClause = whereClause.substring(0, whereClause.length()-4);
-
-        Log.e("TAG", "whereClause: " + whereClause);
+        whereClause = whereClause.substring(0, whereClause.length() - 4);
 
         return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_QUIZ + " WHERE " + CommandsDBTableModel.COL_DIFFICULTY + " <= '" + difficulty + "' " + whereClause, null);
     }
 
+    /**
+     * Fetch quiz model from name
+     *
+     * @param name command
+     * @return
+     */
     public Cursor getQuizCommandFromName(String name)
     {
         return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_QUIZ + " WHERE " + CommandsDBTableModel.COL_NAME + " LIKE '" + name + "'", null);
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/CodeTextView.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/CodeTextView.java
index c4d7099..4e35441 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/CodeTextView.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/view/CodeTextView.java
@@ -17,6 +17,13 @@ import android.widget.TextView;
 import com.inspiredandroid.linuxcommandbibliotheca.CommandManActivity;
 import com.inspiredandroid.linuxcommandbibliotheca.R;
 
+/**
+ * Created by Simon Schubert
+ * <p>
+ * This View makes it very easy to highlightQueryInsideText defined commands in an normal textview. Define the
+ * commands which should be highlighted in an string array and link it in the layout resource as
+ * "command".
+ */
 public class CodeTextView extends TextView {
 
     public CodeTextView(Context context, AttributeSet attrs)
@@ -28,14 +35,22 @@ public class CodeTextView extends TextView {
         String[] commands = context.getResources().getStringArray(resID);
         ta.recycle();
 
-        if(isInEditMode())
+        if (isInEditMode()) {
             return;
+        }
 
         setText(createSpannable(getText().toString(), commands));
         setMovementMethod(LinkMovementMethod.getInstance());
         setHighlightColor(Color.TRANSPARENT);
     }
 
+    /**
+     * Highlights commands of the text and make them clickable
+     *
+     * @param text     spannable content
+     * @param commands list of commands to highlightQueryInsideText
+     * @return
+     */
     private SpannableString createSpannable(String text, String[] commands)
     {
         SpannableString ss = new SpannableString(text);
@@ -43,7 +58,7 @@ public class CodeTextView extends TextView {
         for (final String command : commands) {
 
             int indexStart = 0;
-            while(text.indexOf(command, indexStart) != -1) {
+            while (text.indexOf(command, indexStart) != -1) {
 
                 indexStart = text.indexOf(command, indexStart);
                 int indexEnd = indexStart + command.length();
@@ -70,6 +85,11 @@ public class CodeTextView extends TextView {
         return ss;
     }
 
+    /**
+     * Show manual page
+     *
+     * @param command
+     */
     private void startCommandManActivity(String command)
     {
         Intent intent = new Intent(getContext(), CommandManActivity.class);
