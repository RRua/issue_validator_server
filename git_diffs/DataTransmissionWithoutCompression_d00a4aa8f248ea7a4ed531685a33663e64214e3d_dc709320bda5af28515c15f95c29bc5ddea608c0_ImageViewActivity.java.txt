diff --git a/app/src/main/java/com/apk/editor/activities/APKExploreActivity.java b/app/src/main/java/com/apk/editor/activities/APKExploreActivity.java
index e6abcb0..b8a7b05 100644
--- a/app/src/main/java/com/apk/editor/activities/APKExploreActivity.java
+++ b/app/src/main/java/com/apk/editor/activities/APKExploreActivity.java
@@ -1,8 +1,5 @@
 package com.apk.editor.activities;
 
-import android.app.Activity;
-import android.content.Intent;
-import android.net.Uri;
 import android.os.Bundle;
 
 import androidx.annotation.Nullable;
@@ -10,12 +7,6 @@ import androidx.appcompat.app.AppCompatActivity;
 
 import com.apk.editor.R;
 import com.apk.editor.fragments.APKExplorerFragment;
-import com.apk.editor.utils.Common;
-import com.google.android.material.dialog.MaterialAlertDialogBuilder;
-
-import java.io.File;
-
-import in.sunilpaulmathew.sCommon.Utils.sUtils;
 
 /*
  * Created by APK Explorer & Editor <apkeditor@protonmail.com> on March 04, 2021
@@ -31,26 +22,4 @@ public class APKExploreActivity extends AppCompatActivity {
                 new APKExplorerFragment()).commit();
     }
 
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-
-        if (requestCode == 0 && resultCode == Activity.RESULT_OK && data != null) {
-            Uri uriFile = data.getData();
-
-            if (uriFile != null) {
-                new MaterialAlertDialogBuilder(this)
-                        .setIcon(R.mipmap.ic_launcher)
-                        .setTitle(R.string.app_name)
-                        .setMessage(getString(R.string.replace_file_question, new File(Common.getFileToReplace()).getName()))
-                        .setNegativeButton(R.string.cancel, (dialog, id) -> {
-                        })
-                        .setPositiveButton(R.string.replace, (dialog, id) -> {
-                            sUtils.copy(uriFile, new File(Common.getFileToReplace()), this);
-                            recreate();
-                        }).show();
-            }
-        }
-    }
-
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/apk/editor/activities/APKSignActivity.java b/app/src/main/java/com/apk/editor/activities/APKSignActivity.java
index 23e4ff6..9764578 100644
--- a/app/src/main/java/com/apk/editor/activities/APKSignActivity.java
+++ b/app/src/main/java/com/apk/editor/activities/APKSignActivity.java
@@ -10,6 +10,8 @@ import android.os.Bundle;
 import android.view.View;
 import android.widget.FrameLayout;
 
+import androidx.activity.result.ActivityResultLauncher;
+import androidx.activity.result.contract.ActivityResultContracts;
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.AppCompatImageButton;
@@ -54,11 +56,9 @@ public class APKSignActivity extends AppCompatActivity {
 
         mKey.setOnClickListener(v -> {
             if (Build.VERSION.SDK_INT >= 29) {
-                Intent installer = new Intent(Intent.ACTION_GET_CONTENT);
-                installer.setType("*/*");
-                installer.addCategory(Intent.CATEGORY_OPENABLE);
-                installer.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, false);
-                startActivityForResult(installer, 0);
+                Intent keyPicker = new Intent(Intent.ACTION_GET_CONTENT);
+                keyPicker.setType("*/*");
+                keyPickerResultLauncher.launch(keyPicker);
             } else {
                 Common.setPrivateKeyStatus(true);
                 Intent filePicker = new Intent(this, FilePickerActivity.class);
@@ -68,11 +68,9 @@ public class APKSignActivity extends AppCompatActivity {
 
         mCert.setOnClickListener(v -> {
             if (Build.VERSION.SDK_INT >= 29) {
-                Intent installer = new Intent(Intent.ACTION_GET_CONTENT);
-                installer.setType("*/*");
-                installer.addCategory(Intent.CATEGORY_OPENABLE);
-                installer.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, false);
-                startActivityForResult(installer, 1);
+                Intent certPicker = new Intent(Intent.ACTION_GET_CONTENT);
+                certPicker.setType("*/*");
+                certPickerResultLauncher.launch(certPicker);
             } else {
                 Common.setRSATemplateStatus(true);
                 Intent filePicker = new Intent(this, FilePickerActivity.class);
@@ -90,7 +88,7 @@ public class APKSignActivity extends AppCompatActivity {
             mClearKey.setVisibility(View.VISIBLE);
             mClearKey.setOnClickListener(v -> {
                 sUtils.saveString("PrivateKey", null, this);
-                new File(getFilesDir(), "signing/APKEditor.pk8").delete();
+                sUtils.delete(new File(getFilesDir(), "signing/APKEditor.pk8"));
                 mKeySummary.setText(getString(R.string.private_key_summary));
                 mClearKey.setVisibility(View.GONE);
             });
@@ -104,7 +102,7 @@ public class APKSignActivity extends AppCompatActivity {
             mClearCert.setVisibility(View.VISIBLE);
             mClearCert.setOnClickListener(v -> {
                 sUtils.saveString("X509Certificate", null, this);
-                new File(getFilesDir(), "signing/APKEditorCert").delete();
+                sUtils.delete(new File(getFilesDir(), "signing/APKEditorCert"));
                 mCertSummary.setText(getString(R.string.x509_certificate_summary));
                 mClearCert.setVisibility(View.GONE);
             });
@@ -114,31 +112,49 @@ public class APKSignActivity extends AppCompatActivity {
     }
 
     @SuppressLint("StringFormatInvalid")
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-
-        if (resultCode == Activity.RESULT_OK && data != null) {
-            Uri uri = data.getData();
-
-            if (uri != null) {
-                new MaterialAlertDialogBuilder(this)
-                        .setMessage(getString(R.string.signing_select_question, requestCode == 0 ? getString(R.string.private_key) : getString(R.string.x509_certificate)))
-                        .setNegativeButton(R.string.cancel, (dialog, id) -> {
-                        })
-                        .setPositiveButton(R.string.select, (dialog, id) -> {
-                            if (requestCode == 0) {
-                                sUtils.saveString("PrivateKey", new File(getFilesDir(), "signing/APKEditor.pk8").getAbsolutePath(), this);
-                                sUtils.copy(uri, new File(getFilesDir(), "signing/APKEditor.pk8"), this);
-                            } else if (requestCode == 1) {
-                                sUtils.saveString("X509Certificate", new File(getFilesDir(), "signing/APKEditorCert").getAbsolutePath(), this);
-                                sUtils.copy(uri, new File(getFilesDir(), "signing/APKEditorCert"), this);
-                            }
-                            setStatus();
-                        }).show();
+    ActivityResultLauncher<Intent> certPickerResultLauncher = registerForActivityResult(
+            new ActivityResultContracts.StartActivityForResult(),
+            result -> {
+                if (result.getResultCode() == Activity.RESULT_OK && result.getData() != null) {
+                    Intent data = result.getData();
+                    Uri uriFile = data.getData();
+
+                    if (uriFile != null) {
+                        new MaterialAlertDialogBuilder(this)
+                                .setMessage(getString(R.string.signing_select_question, getString(R.string.x509_certificate)))
+                                .setNegativeButton(R.string.cancel, (dialog, id) -> {
+                                })
+                                .setPositiveButton(R.string.select, (dialog, id) -> {
+                                    sUtils.saveString("X509Certificate", new File(getFilesDir(), "signing/APKEditorCert").getAbsolutePath(), this);
+                                    sUtils.copy(uriFile, new File(getFilesDir(), "signing/APKEditorCert"), this);
+                                    setStatus();
+                                }).show();
+                    }
+                }
             }
-        }
-    }
+    );
+
+    ActivityResultLauncher<Intent> keyPickerResultLauncher = registerForActivityResult(
+            new ActivityResultContracts.StartActivityForResult(),
+            result -> {
+                if (result.getResultCode() == Activity.RESULT_OK && result.getData() != null) {
+                    Intent data = result.getData();
+                    Uri uriFile = data.getData();
+
+                    if (uriFile != null) {
+                        new MaterialAlertDialogBuilder(this)
+                                .setMessage(getString(R.string.signing_select_question, getString(R.string.private_key)))
+                                .setNegativeButton(R.string.cancel, (dialog, id) -> {
+                                })
+                                .setPositiveButton(R.string.select, (dialog, id) -> {
+                                    sUtils.saveString("PrivateKey", new File(getFilesDir(), "signing/APKEditor.pk8").getAbsolutePath(), this);
+                                    sUtils.copy(uriFile, new File(getFilesDir(), "signing/APKEditor.pk8"), this);
+                                    setStatus();
+                                }).show();
+                    }
+                }
+            }
+    );
 
     @Override
     public void onResume() {
diff --git a/app/src/main/java/com/apk/editor/activities/FilePickerActivity.java b/app/src/main/java/com/apk/editor/activities/FilePickerActivity.java
index 3869624..643f9c0 100644
--- a/app/src/main/java/com/apk/editor/activities/FilePickerActivity.java
+++ b/app/src/main/java/com/apk/editor/activities/FilePickerActivity.java
@@ -93,7 +93,7 @@ public class FilePickerActivity extends AppCompatActivity {
                                 sUtils.copy(new File(APKExplorer.getData(getFilesList(), true, this).get(position)), new File(Common.getFileToReplace()));
                                 Common.setFileToReplace(null);
                             }  else {
-                                new File(getFilesDir(), "signing").mkdirs();
+                                sUtils.mkdir(new File(getFilesDir(), "signing"));
                                 if (Common.hasPrivateKey()) {
                                     sUtils.saveString("PrivateKey", APKExplorer.getData(getFilesList(), true, this).get(position), this);
                                     sUtils.copy(new File(APKExplorer.getData(getFilesList(), true, this).get(position)), new File(getFilesDir(), "signing/APKEditor.pk8"));
@@ -164,6 +164,7 @@ public class FilePickerActivity extends AppCompatActivity {
     @Override
     public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,
                                            @NonNull int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         if (requestCode == 0 && Build.VERSION.SDK_INT < 30 && grantResults.length > 0
                 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
             this.recreate();
diff --git a/app/src/main/java/com/apk/editor/activities/ImageViewActivity.java b/app/src/main/java/com/apk/editor/activities/ImageViewActivity.java
index 945daf1..fa897eb 100644
--- a/app/src/main/java/com/apk/editor/activities/ImageViewActivity.java
+++ b/app/src/main/java/com/apk/editor/activities/ImageViewActivity.java
@@ -1,42 +1,22 @@
 package com.apk.editor.activities;
 
-import android.annotation.SuppressLint;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.database.Cursor;
-import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
-import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
-import android.os.Environment;
-import android.provider.MediaStore;
-import android.provider.OpenableColumns;
-import android.view.Menu;
-import android.view.View;
 
-import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.AppCompatImageButton;
 import androidx.appcompat.widget.AppCompatImageView;
-import androidx.appcompat.widget.LinearLayoutCompat;
-import androidx.appcompat.widget.PopupMenu;
-import androidx.core.content.ContextCompat;
-import androidx.core.content.FileProvider;
 
-import com.apk.editor.BuildConfig;
 import com.apk.editor.R;
-import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.APKExplorer;
 import com.apk.editor.utils.Common;
 import com.apk.editor.utils.Projects;
-import com.google.android.material.card.MaterialCardView;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.android.material.textview.MaterialTextView;
 
 import java.io.File;
-import java.io.IOException;
 
 import in.sunilpaulmathew.sCommon.Utils.sPackageUtils;
 import in.sunilpaulmathew.sCommon.Utils.sPermissionUtils;
@@ -47,11 +27,8 @@ import in.sunilpaulmathew.sCommon.Utils.sUtils;
  */
 public class ImageViewActivity extends AppCompatActivity {
 
-    private Bitmap mBitmap = null;
-    private File mFile = null;
     public static final String PATH_INTENT = "path";
 
-    @SuppressLint({"UseCompatLoadingForDrawables", "Range"})
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -60,111 +37,22 @@ public class ImageViewActivity extends AppCompatActivity {
         AppCompatImageButton mBack = findViewById(R.id.back);
         AppCompatImageButton mMenu = findViewById(R.id.export);
         AppCompatImageView mImage = findViewById(R.id.image);
-        LinearLayoutCompat mMainLayout = findViewById(R.id.main_layout);
         MaterialTextView mTitle = findViewById(R.id.title);
         String path = getIntent().getStringExtra(PATH_INTENT);
 
-        if (getIntent().getData() != null) {
-            if (Build.VERSION.SDK_INT < 29 && sPermissionUtils.isPermissionDenied(android.Manifest.permission.WRITE_EXTERNAL_STORAGE, this)) {
-                LinearLayoutCompat mPermissionLayout = findViewById(R.id.permission_layout);
-                MaterialCardView mPermissionGrant = findViewById(R.id.grant_card);
-                mPermissionLayout.setVisibility(View.VISIBLE);
-                mMainLayout.setVisibility(View.GONE);
-                mPermissionGrant.setOnClickListener(v -> sPermissionUtils.requestPermission(
-                        new String[] {
-                                android.Manifest.permission.WRITE_EXTERNAL_STORAGE
-                        },this));
-                return;
-            }
-            Uri uri = getIntent().getData();
-
-            try {
-                mBitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), getIntent().getData());
-            } catch (IOException ignored) {
-            }
-
-            assert uri != null;
-            if (APKEditorUtils.isDocumentsUI(uri)) {
-                @SuppressLint("Recycle")
-                Cursor cursor = getContentResolver().query(uri, null, null, null, null);
-                if (cursor != null && cursor.moveToFirst()) {
-                    mFile = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS),
-                            cursor.getString(cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME)));
-                }
-            } else {
-                mFile = new File(APKEditorUtils.getPath(uri.getPath()));
-            }
-
-            if (mBitmap != null) {
-                mImage.setImageBitmap(mBitmap);
-            } else {
-                new MaterialAlertDialogBuilder(this)
-                        .setIcon(R.mipmap.ic_launcher)
-                        .setTitle(R.string.image_viewer)
-                        .setMessage(getString(R.string.file_path_error))
-                        .setCancelable(false)
-                        .setPositiveButton(R.string.cancel, (dialogInterface, i) -> finish()).show();
-            }
-
-            if (mFile != null && mFile.exists()) {
-                mTitle.setText(mFile.getName());
-                if (Build.VERSION.SDK_INT >= 29) {
-                    mMenu.setVisibility(View.GONE);
-                } else {
-                    mMenu.setImageDrawable(ContextCompat.getDrawable(this, R.drawable.ic_settings));
-                }
-            } else {
-                mMenu.setImageDrawable(ContextCompat.getDrawable(this, R.drawable.ic_export));
-            }
+        if (path != null) {
+            mTitle.setText(new File(path).getName());
+            mImage.setImageURI(APKExplorer.getIconFromPath(path));
         } else {
-            if (path != null) {
-                mTitle.setText(new File(path).getName());
-                mImage.setImageURI(APKExplorer.getIconFromPath(path));
-            } else {
-                mTitle.setText(sPackageUtils.getAppName(Common.getAppID(), this));
-                mImage.setImageDrawable(sPackageUtils.getAppIcon(Common.getAppID(), this));
-            }
-            mMenu.setImageDrawable(ContextCompat.getDrawable(this, R.drawable.ic_export));
+            mTitle.setText(sPackageUtils.getAppName(Common.getAppID(), this));
+            mImage.setImageDrawable(sPackageUtils.getAppIcon(Common.getAppID(), this));
         }
 
-        mMenu.setOnClickListener(v -> {
-            if (mFile != null && mFile.exists()) {
-                PopupMenu popupMenu = new PopupMenu(this, mMenu);
-                Menu menu = popupMenu.getMenu();
-                menu.add(Menu.NONE, 0, Menu.NONE, getString(R.string.share));
-                menu.add(Menu.NONE, 1, Menu.NONE, getString(R.string.delete));
-                popupMenu.setOnMenuItemClickListener(item -> {
-                    switch (item.getItemId()) {
-                        case 0:
-                            Uri uriFile = FileProvider.getUriForFile(this,
-                                    BuildConfig.APPLICATION_ID + ".provider", mFile);
-                            Intent share = new Intent(Intent.ACTION_SEND);
-                            share.setType("image/*");
-                            share.putExtra(Intent.EXTRA_TEXT, getString(R.string.share_summary, BuildConfig.VERSION_NAME));
-                            share.putExtra(Intent.EXTRA_STREAM, uriFile);
-                            share.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
-                            startActivity(Intent.createChooser(share, getString(R.string.share_with)));
-                            break;
-                        case 1:
-                            new MaterialAlertDialogBuilder(this)
-                                    .setMessage(getString(R.string.delete_question, mFile))
-                                    .setNegativeButton(getString(R.string.cancel), (dialog1, id1) -> {
-                                    })
-                                    .setPositiveButton(R.string.delete, (dialogInterface, i) -> {
-                                        mFile.delete();
-                                        finish();
-                                    }).show();
-                            break;
-                    }
-                    return false;
-                });
-                popupMenu.show();
-            } else {
-                new MaterialAlertDialogBuilder(this)
-                        .setMessage(R.string.export_question)
-                        .setNegativeButton(getString(R.string.cancel), (dialog, id) -> {
-                        })
-                        .setPositiveButton(getString(R.string.export), (dialog, id) -> {
+        mMenu.setOnClickListener(v -> new MaterialAlertDialogBuilder(this)
+                .setMessage(R.string.export_question)
+                .setNegativeButton(getString(R.string.cancel), (dialog, id) -> {
+                })
+                .setPositiveButton(getString(R.string.export), (dialog, id) -> {
                             if (sPermissionUtils.isPermissionDenied(android.Manifest.permission.WRITE_EXTERNAL_STORAGE,this)) {
                                 sPermissionUtils.requestPermission(
                                         new String[] {
@@ -188,20 +76,11 @@ public class ImageViewActivity extends AppCompatActivity {
                                         .setPositiveButton(getString(R.string.cancel), (dialog1, id1) -> {
                                         }).show();
                             }
-                        }).show();
-            }
-        });
+                        }
+                ).show()
+        );
 
         mBack.setOnClickListener(v -> finish());
     }
 
-    @Override
-    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,
-                                           @NonNull int[] grantResults) {
-        if (requestCode == 1 && Build.VERSION.SDK_INT < 30 && grantResults.length > 0
-                && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
-            this.recreate();
-        }
-    }
-
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/apk/editor/activities/InstallerFilePickerActivity.java b/app/src/main/java/com/apk/editor/activities/InstallerFilePickerActivity.java
index dab146b..f7fc94e 100644
--- a/app/src/main/java/com/apk/editor/activities/InstallerFilePickerActivity.java
+++ b/app/src/main/java/com/apk/editor/activities/InstallerFilePickerActivity.java
@@ -172,6 +172,7 @@ public class InstallerFilePickerActivity extends AppCompatActivity {
     @Override
     public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,
                                            @NonNull int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         if (requestCode == 1 && Build.VERSION.SDK_INT < 30 && grantResults.length > 0
                 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
             this.recreate();
diff --git a/app/src/main/java/com/apk/editor/activities/TextEditorActivity.java b/app/src/main/java/com/apk/editor/activities/TextEditorActivity.java
index 6ff9c36..6cfd0d6 100644
--- a/app/src/main/java/com/apk/editor/activities/TextEditorActivity.java
+++ b/app/src/main/java/com/apk/editor/activities/TextEditorActivity.java
@@ -1,44 +1,22 @@
 package com.apk.editor.activities;
 
-import android.annotation.SuppressLint;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.database.Cursor;
 import android.graphics.Color;
-import android.net.Uri;
-import android.os.Build;
 import android.os.Bundle;
-import android.os.Environment;
-import android.provider.OpenableColumns;
-import android.view.Menu;
 import android.view.View;
 
-import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.AppCompatEditText;
 import androidx.appcompat.widget.AppCompatImageButton;
-import androidx.appcompat.widget.LinearLayoutCompat;
-import androidx.appcompat.widget.PopupMenu;
-import androidx.core.content.ContextCompat;
-import androidx.core.content.FileProvider;
 
-import com.apk.editor.BuildConfig;
 import com.apk.editor.R;
-import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.AppData;
-import com.google.android.material.card.MaterialCardView;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.android.material.textview.MaterialTextView;
 
-import java.io.BufferedInputStream;
-import java.io.ByteArrayOutputStream;
 import java.io.File;
-import java.io.IOException;
-import java.io.InputStream;
 import java.util.Objects;
 
-import in.sunilpaulmathew.sCommon.Utils.sPermissionUtils;
 import in.sunilpaulmathew.sCommon.Utils.sUtils;
 
 /*
@@ -47,20 +25,16 @@ import in.sunilpaulmathew.sCommon.Utils.sUtils;
 public class TextEditorActivity extends AppCompatActivity {
 
     private AppCompatEditText mText;
-    private File mFile = null;
     public static final String PATH_INTENT = "path";
-    private String mExternalFile = null, mTextContents = null;
+    private String mTextContents = null;
 
-    @SuppressLint({"UseCompatLoadingForDrawables", "Range"})
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_texteditor);
 
         AppCompatImageButton mBack = findViewById(R.id.back);
-        AppCompatImageButton mMenu = findViewById(R.id.menu);
         AppCompatImageButton mSave = findViewById(R.id.save);
-        LinearLayoutCompat mMainLayout = findViewById(R.id.main_layout);
         MaterialTextView mTitle = findViewById(R.id.title);
         mText = findViewById(R.id.text);
 
@@ -70,114 +44,12 @@ public class TextEditorActivity extends AppCompatActivity {
 
         mText.setTextColor(sUtils.isDarkTheme(this) ? Color.WHITE : Color.BLACK);
 
-        if (getIntent().getData() != null) {
-            if (Build.VERSION.SDK_INT < 29 && sPermissionUtils.isPermissionDenied(android.Manifest.permission.WRITE_EXTERNAL_STORAGE,this)) {
-                LinearLayoutCompat mPermissionLayout = findViewById(R.id.permission_layout);
-                MaterialCardView mPermissionGrant = findViewById(R.id.grant_card);
-                mPermissionLayout.setVisibility(View.VISIBLE);
-                mMainLayout.setVisibility(View.GONE);
-                mPermissionGrant.setOnClickListener(v -> sPermissionUtils.requestPermission(
-                        new String[] {
-                                android.Manifest.permission.WRITE_EXTERNAL_STORAGE
-                        },this));
-                return;
-            }
-
-            try {
-                InputStream inputStream = getContentResolver().openInputStream(getIntent().getData());
-                BufferedInputStream bis = new BufferedInputStream(inputStream);
-                ByteArrayOutputStream buf = new ByteArrayOutputStream();
-                for (int result = bis.read(); result != -1; result = bis.read()) {
-                    buf.write((byte) result);
-                }
-                mExternalFile = buf.toString("UTF-8");
-            } catch (IOException ignored) {}
-
-            if (mExternalFile != null) {
-                Uri uri = getIntent().getData();
-                assert uri != null;
-                if (APKEditorUtils.isDocumentsUI(uri)) {
-                    @SuppressLint("Recycle")
-                    Cursor cursor = getContentResolver().query(uri, null, null, null, null);
-                    if (cursor != null && cursor.moveToFirst()) {
-                        mFile = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS),
-                                cursor.getString(cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME)));
-                    }
-                } else {
-                    mFile = new File(APKEditorUtils.getPath(getIntent().getData().getPath()));
-                }
-                if (mFile != null && mFile.exists()) {
-                    mTitle.setText(mFile.getName());
-                    if (Build.VERSION.SDK_INT >= 29) {
-                        mMenu.setVisibility(View.GONE);
-                        mSave.setVisibility(View.GONE);
-                        mText.setFocusable(false);
-                    } else {
-                        mSave.setImageDrawable(ContextCompat.getDrawable(this, R.drawable.ic_save));
-                        mMenu.setImageDrawable(ContextCompat.getDrawable(this, R.drawable.ic_dots));
-                        mSave.setVisibility(View.VISIBLE);
-                        mMenu.setVisibility(View.VISIBLE);
-                    }
-                } else {
-                    mMenu.setImageDrawable(ContextCompat.getDrawable(this, R.drawable.ic_save));
-                    mSave.setVisibility(View.GONE);
-                }
-                mText.setText(mExternalFile);
-                mTextContents = mExternalFile;
-            } else {
-                new MaterialAlertDialogBuilder(this)
-                        .setIcon(R.mipmap.ic_launcher)
-                        .setTitle(R.string.text_editor)
-                        .setMessage(getString(R.string.file_path_error))
-                        .setCancelable(false)
-                        .setPositiveButton(R.string.cancel, (dialogInterface, i) -> finish()).show();
-            }
-        } else if (mPath != null && sUtils.exist(new File(mPath))) {
-            mTitle.setText(new File(mPath).getName());
-            mText.setText(sUtils.read(new File(mPath)));
-            mTextContents = sUtils.read(new File(mPath));
-            mSave.setImageDrawable(ContextCompat.getDrawable(this, R.drawable.ic_save));
-            mSave.setVisibility(View.VISIBLE);
-        }
+        mTitle.setText(new File(mPath).getName());
+        mText.setText(sUtils.read(new File(mPath)));
+        mTextContents = sUtils.read(new File(mPath));
+        mSave.setVisibility(View.VISIBLE);
 
-        mMenu.setOnClickListener(v -> {
-            if (mExternalFile == null) {
-                saveDialog(Objects.requireNonNull(mText.getText()).toString().trim(), mPath);
-                return;
-            }
-            PopupMenu popupMenu = new PopupMenu(this, mMenu);
-            Menu menu = popupMenu.getMenu();
-            menu.add(Menu.NONE, 0, Menu.NONE, getString(R.string.share));
-            menu.add(Menu.NONE, 1, Menu.NONE, getString(R.string.delete));
-            popupMenu.setOnMenuItemClickListener(item -> {
-                switch (item.getItemId()) {
-                    case 0:
-                        Uri uriFile = FileProvider.getUriForFile(this,
-                                BuildConfig.APPLICATION_ID + ".provider", mFile);
-                        Intent share = new Intent(Intent.ACTION_SEND);
-                        share.setType("*/*");
-                        share.putExtra(Intent.EXTRA_TEXT, getString(R.string.share_summary, BuildConfig.VERSION_NAME));
-                        share.putExtra(Intent.EXTRA_STREAM, uriFile);
-                        share.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
-                        startActivity(Intent.createChooser(share, getString(R.string.share_with)));
-                        break;
-                    case 1:
-                        new MaterialAlertDialogBuilder(this)
-                                .setMessage(getString(R.string.delete_question, mFile.getName()))
-                                .setNegativeButton(getString(R.string.cancel), (dialog, id) -> {
-                                })
-                                .setPositiveButton(R.string.delete, (dialogInterface, i) -> {
-                                    mFile.delete();
-                                    finish();
-                                }).show();
-                        break;
-                }
-                return false;
-            });
-            popupMenu.show();
-        });
-
-        mSave.setOnClickListener(v -> saveDialog(Objects.requireNonNull(mText.getText()).toString().trim(), (mFile != null  && mFile.exists()? mFile.getAbsolutePath() : mPath)));
+        mSave.setOnClickListener(v -> saveDialog(Objects.requireNonNull(mText.getText()).toString().trim(), mPath));
 
         mBack.setOnClickListener(v -> onBackPressed());
     }
@@ -191,7 +63,7 @@ public class TextEditorActivity extends AppCompatActivity {
                 })
                 .setPositiveButton(getString(R.string.save), (dialog, id) -> {
                     sUtils.create(text, new File(path));
-                    if (mExternalFile == null && path.contains("classes") && path.contains(".dex")) {
+                    if (path.contains("classes") && path.contains(".dex")) {
                         String parentPath = path.split(".dex")[0] + ".dex";
                         if (!sUtils.exist(new File(parentPath, "edited"))) {
                             sUtils.create("# Edited", new File(parentPath, "edited"));
@@ -201,15 +73,6 @@ public class TextEditorActivity extends AppCompatActivity {
                 }).show();
     }
 
-    @Override
-    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,
-                                           @NonNull int[] grantResults) {
-        if (requestCode == 1 && Build.VERSION.SDK_INT < 30 && grantResults.length > 0
-                && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
-            this.recreate();
-        }
-    }
-
     @Override
     public void onBackPressed() {
         if (mTextContents != null && mText.getText() != null && !mTextContents.equals(mText.getText().toString())) {
diff --git a/app/src/main/java/com/apk/editor/adapters/APKExplorerAdapter.java b/app/src/main/java/com/apk/editor/adapters/APKExplorerAdapter.java
index 9497c9a..4fe2499 100644
--- a/app/src/main/java/com/apk/editor/adapters/APKExplorerAdapter.java
+++ b/app/src/main/java/com/apk/editor/adapters/APKExplorerAdapter.java
@@ -9,6 +9,7 @@ import android.view.Menu;
 import android.view.View;
 import android.view.ViewGroup;
 
+import androidx.activity.result.ActivityResultLauncher;
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.AppCompatImageButton;
 import androidx.appcompat.widget.PopupMenu;
@@ -36,12 +37,14 @@ import in.sunilpaulmathew.sCommon.Utils.sUtils;
  */
 public class APKExplorerAdapter extends RecyclerView.Adapter<APKExplorerAdapter.ViewHolder> {
 
+    private static ActivityResultLauncher<Intent> mActivityResultLauncher;
     private static ClickListener clickListener;
 
     private static List<String> data;
 
-    public APKExplorerAdapter(List<String> data) {
+    public APKExplorerAdapter(List<String> data, ActivityResultLauncher<Intent> activityResultLauncher) {
         APKExplorerAdapter.data = data;
+        APKExplorerAdapter.mActivityResultLauncher = activityResultLauncher;
     }
 
     @NonNull
@@ -128,7 +131,9 @@ public class APKExplorerAdapter extends RecyclerView.Adapter<APKExplorerAdapter.
                     case 2:
                         Common.setFileToReplace(data.get(position));
                         if (Build.VERSION.SDK_INT >= 29) {
-                            sUtils.filePickerIntent(false, 0, null, (Activity) v.getContext());
+                            Intent replace = new Intent(Intent.ACTION_GET_CONTENT);
+                            replace.setType("*/*");
+                            mActivityResultLauncher.launch(replace);
                         } else {
                             Intent filePicker = new Intent(v.getContext(), FilePickerActivity.class);
                             v.getContext().startActivity(filePicker);
diff --git a/app/src/main/java/com/apk/editor/adapters/ProjectsAdapter.java b/app/src/main/java/com/apk/editor/adapters/ProjectsAdapter.java
index 24fa364..c9bf850 100644
--- a/app/src/main/java/com/apk/editor/adapters/ProjectsAdapter.java
+++ b/app/src/main/java/com/apk/editor/adapters/ProjectsAdapter.java
@@ -5,11 +5,14 @@ import android.app.Activity;
 import android.content.Intent;
 import android.graphics.Color;
 import android.os.Build;
+import android.view.Gravity;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.LinearLayout;
 
 import androidx.annotation.NonNull;
+import androidx.appcompat.widget.AppCompatEditText;
 import androidx.appcompat.widget.AppCompatImageButton;
 import androidx.core.content.ContextCompat;
 import androidx.recyclerview.widget.RecyclerView;
@@ -26,6 +29,7 @@ import com.google.android.material.textview.MaterialTextView;
 import java.io.File;
 import java.text.DateFormat;
 import java.util.List;
+import java.util.Objects;
 
 import in.sunilpaulmathew.sCommon.Utils.sPackageUtils;
 import in.sunilpaulmathew.sCommon.Utils.sPermissionUtils;
@@ -97,9 +101,23 @@ public class ProjectsAdapter extends RecyclerView.Adapter<ProjectsAdapter.ViewHo
                                                 android.Manifest.permission.WRITE_EXTERNAL_STORAGE
                                         },(Activity) v.getContext());
                             } else {
-                                APKEditorUtils.dialogEditText(null,
-                                        (dialogInterface, i) -> {
-                                        }, text -> {
+                                LinearLayout layout = new LinearLayout(v.getContext());
+                                layout.setPadding(75, 75, 75, 75);
+
+                                AppCompatEditText editText = new AppCompatEditText(v.getContext());
+                                editText.setGravity(Gravity.CENTER);
+                                editText.setLayoutParams(new LinearLayout.LayoutParams(
+                                        ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
+                                editText.setSingleLine(true);
+
+                                layout.addView(editText);
+
+                                new MaterialAlertDialogBuilder(v.getContext())
+                                        .setView(layout)
+                                        .setNegativeButton(R.string.cancel, (d, i) -> {
+                                        })
+                                        .setPositiveButton(R.string.ok, (dialog1, i) -> {
+                                            String text = Objects.requireNonNull(editText.getText()).toString().trim();
                                             if (text.isEmpty()) {
                                                 sUtils.snackBar(v, v.getContext().getString(R.string.name_empty)).show();
                                                 return;
@@ -111,15 +129,14 @@ public class ProjectsAdapter extends RecyclerView.Adapter<ProjectsAdapter.ViewHo
                                             if (sUtils.exist(new File(Projects.getExportPath(v.getContext()), text))) {
                                                 new MaterialAlertDialogBuilder(v.getContext())
                                                         .setMessage(v.getContext().getString(R.string.export_project_replace, text))
-                                                        .setNegativeButton(R.string.cancel, (dialogInterface, i) -> {
+                                                        .setNegativeButton(R.string.cancel, (dialog2, ii) -> {
                                                         })
-                                                        .setPositiveButton(R.string.replace, (dialogInterface, i) -> Projects.exportProject(new File(data.get(position)), mName, v.getContext()))
+                                                        .setPositiveButton(R.string.replace, (dialog2, iii) -> Projects.exportProject(new File(data.get(position)), mName, v.getContext()))
                                                         .show();
                                             } else {
                                                 Projects.exportProject(new File(data.get(position)), mName, v.getContext());
                                             }
-                                        }, v.getContext()).setOnDismissListener(dialogInterface -> {
-                                }).show();
+                                        }).show();
                             }
                         }).show();
                 return false;
diff --git a/app/src/main/java/com/apk/editor/fragments/APKExplorerFragment.java b/app/src/main/java/com/apk/editor/fragments/APKExplorerFragment.java
index 40fa9a5..ec79220 100644
--- a/app/src/main/java/com/apk/editor/fragments/APKExplorerFragment.java
+++ b/app/src/main/java/com/apk/editor/fragments/APKExplorerFragment.java
@@ -3,6 +3,7 @@ package com.apk.editor.fragments;
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Intent;
+import android.net.Uri;
 import android.os.Bundle;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -10,6 +11,8 @@ import android.view.View;
 import android.view.ViewGroup;
 
 import androidx.activity.OnBackPressedCallback;
+import androidx.activity.result.ActivityResultLauncher;
+import androidx.activity.result.contract.ActivityResultContracts;
 import androidx.annotation.Nullable;
 import androidx.appcompat.widget.AppCompatImageButton;
 import androidx.appcompat.widget.LinearLayoutCompat;
@@ -102,7 +105,7 @@ public class APKExplorerFragment extends androidx.fragment.app.Fragment {
         mRecyclerView.setLayoutManager(new GridLayoutManager(requireActivity(), APKExplorer.getSpanCount(requireActivity())));
 
         try {
-            mRecycleViewAdapter = new APKExplorerAdapter(APKExplorer.getData(getFilesList(), true, requireActivity()));
+            mRecycleViewAdapter = new APKExplorerAdapter(APKExplorer.getData(getFilesList(), true, requireActivity()), replaceFile);
             mRecyclerView.setAdapter(mRecycleViewAdapter);
         } catch (NullPointerException ignored) {
             mRecyclerView.setVisibility(View.GONE);
@@ -230,7 +233,7 @@ public class APKExplorerFragment extends androidx.fragment.app.Fragment {
 
             @Override
             public void doInBackground() {
-                mRecycleViewAdapter = new APKExplorerAdapter(APKExplorer.getData(getFilesList(), true, activity));
+                mRecycleViewAdapter = new APKExplorerAdapter(APKExplorer.getData(getFilesList(), true, activity), replaceFile);
             }
 
             @Override
@@ -246,5 +249,28 @@ public class APKExplorerFragment extends androidx.fragment.app.Fragment {
             }
         }.execute();
     }
+
+    ActivityResultLauncher<Intent> replaceFile = registerForActivityResult(
+            new ActivityResultContracts.StartActivityForResult(),
+            result -> {
+                if (result.getResultCode() == Activity.RESULT_OK && result.getData() != null) {
+                    Intent data = result.getData();
+                    Uri uriFile = data.getData();
+
+                    if (uriFile != null) {
+                        new MaterialAlertDialogBuilder(requireActivity())
+                                .setIcon(R.mipmap.ic_launcher)
+                                .setTitle(R.string.app_name)
+                                .setMessage(getString(R.string.replace_file_question, new File(Common.getFileToReplace()).getName()))
+                                .setNegativeButton(R.string.cancel, (dialog, id) -> {
+                                })
+                                .setPositiveButton(R.string.replace, (dialog, id) -> {
+                                    sUtils.copy(uriFile, new File(Common.getFileToReplace()), requireActivity());
+                                    reload(requireActivity());
+                                }).show();
+                    }
+                }
+            }
+    );
     
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/apk/editor/fragments/APKsFragment.java b/app/src/main/java/com/apk/editor/fragments/APKsFragment.java
index e7f7172..3619aa1 100644
--- a/app/src/main/java/com/apk/editor/fragments/APKsFragment.java
+++ b/app/src/main/java/com/apk/editor/fragments/APKsFragment.java
@@ -14,6 +14,8 @@ import android.view.Menu;
 import android.view.View;
 import android.view.ViewGroup;
 
+import androidx.activity.result.ActivityResultLauncher;
+import androidx.activity.result.contract.ActivityResultContracts;
 import androidx.annotation.Nullable;
 import androidx.appcompat.widget.AppCompatImageButton;
 import androidx.appcompat.widget.LinearLayoutCompat;
@@ -195,7 +197,7 @@ public class APKsFragment extends Fragment {
             installer.setType("*/*");
             installer.addCategory(Intent.CATEGORY_OPENABLE);
             installer.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);
-            startActivityForResult(installer, 0);
+            installerFilePicker.launch(installer);
         } else {
             Common.getAPKList().clear();
             Common.setPath(Environment.getExternalStorageDirectory().toString());
@@ -303,6 +305,7 @@ public class APKsFragment extends Fragment {
                         if (Objects.equals(mExtension, "apk")) {
                             Common.getAPKList().add(mFile.getAbsolutePath());
                         }
+                        inputStream.close();
                     } catch (IOException ignored) {
                     }
                 }
@@ -316,20 +319,20 @@ public class APKsFragment extends Fragment {
         };
     }
 
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-
-        if (requestCode == 0 && resultCode == Activity.RESULT_OK && data != null) {
-            Uri uriFile = data.getData();
+    ActivityResultLauncher<Intent> installerFilePicker = registerForActivityResult(
+            new ActivityResultContracts.StartActivityForResult(),
+            result -> {
+                if (result.getResultCode() == Activity.RESULT_OK && result.getData() != null) {
+                    Intent data = result.getData();
 
-            if (data.getClipData() != null) {
-                handleMultipleAPKs(data.getClipData(), requireActivity()).execute();
-            } else if (uriFile != null) {
-                handleSingleInstallationEvent(uriFile, requireActivity()).execute();
+                    if (data.getClipData() != null) {
+                        handleMultipleAPKs(data.getClipData(), requireActivity()).execute();
+                    } else if (data.getData() != null) {
+                        handleSingleInstallationEvent(data.getData(), requireActivity()).execute();
+                    }
+                }
             }
-        }
-    }
+    );
 
     @Override
     public void onResume() {
diff --git a/app/src/main/java/com/apk/editor/utils/APKEditorUtils.java b/app/src/main/java/com/apk/editor/utils/APKEditorUtils.java
index 3353ccb..8262754 100644
--- a/app/src/main/java/com/apk/editor/utils/APKEditorUtils.java
+++ b/app/src/main/java/com/apk/editor/utils/APKEditorUtils.java
@@ -1,20 +1,12 @@
 package com.apk.editor.utils;
 
 import android.content.Context;
-import android.content.DialogInterface;
 import android.net.Uri;
 import android.os.Build;
-import android.os.Environment;
 import android.text.Html;
 import android.util.TypedValue;
-import android.view.Gravity;
-import android.view.ViewGroup;
-import android.widget.LinearLayout;
-
-import androidx.appcompat.widget.AppCompatEditText;
 
 import com.apk.editor.R;
-import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 
 import net.lingala.zip4j.ZipFile;
 import net.lingala.zip4j.exception.ZipException;
@@ -37,52 +29,6 @@ public class APKEditorUtils {
         return context.getPackageName().equals("com.apk.editor");
     }
 
-    public interface OnDialogEditTextListener {
-        void onClick(String text);
-    }
-
-    public static MaterialAlertDialogBuilder dialogEditText(String text, final DialogInterface.OnClickListener negativeListener,
-                                                            final OnDialogEditTextListener onDialogEditTextListener,
-                                                            Context context) {
-        return dialogEditText(text, negativeListener, onDialogEditTextListener, -1, context);
-    }
-
-    private static MaterialAlertDialogBuilder dialogEditText(String text, final DialogInterface.OnClickListener negativeListener,
-                                                            final OnDialogEditTextListener onDialogEditTextListener, int inputType,
-                                                            Context context) {
-        LinearLayout layout = new LinearLayout(context);
-        layout.setPadding(75, 75, 75, 75);
-
-        final AppCompatEditText editText = new AppCompatEditText(context);
-        editText.setGravity(Gravity.CENTER);
-        editText.setLayoutParams(new LinearLayout.LayoutParams(
-                ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
-        if (text != null) {
-            editText.append(text);
-        }
-        editText.setSingleLine(true);
-        if (inputType >= 0) {
-            editText.setInputType(inputType);
-        }
-
-        layout.addView(editText);
-
-        MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(context).setView(layout);
-        if (negativeListener != null) {
-            dialog.setNegativeButton(context.getString(R.string.cancel), negativeListener);
-        }
-        if (onDialogEditTextListener != null) {
-            dialog.setPositiveButton(context.getString(R.string.ok), (dialog1, which)
-                    -> onDialogEditTextListener.onClick(Objects.requireNonNull(editText.getText()).toString()))
-                    .setOnDismissListener(dialog1 -> {
-                        if (negativeListener != null) {
-                            negativeListener.onClick(dialog1, 0);
-                        }
-                    });
-        }
-        return dialog;
-    }
-
     public static CharSequence fromHtml(String text) {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
             return Html.fromHtml(text, Html.FROM_HTML_MODE_LEGACY);
@@ -114,31 +60,4 @@ public class APKEditorUtils {
         return "com.android.providers.downloads.documents".equals(uri.getAuthority());
     }
 
-    public static String getPath(String path) {
-        if (path.startsWith("/document/raw:")) {
-            path = path.replace("/document/raw:", "");
-        } else if (path.startsWith("/document/primary:")) {
-            path = (Environment.getExternalStorageDirectory() + ("/") + path.replace("/document/primary:", ""));
-        } else if (path.startsWith("/document/")) {
-            path = path.replace("/document/", "/storage/").replace(":", "/");
-        }
-        if (path.startsWith("/storage_root/storage/emulated/0")) {
-            path = path.replace("/storage_root/storage/emulated/0", "/storage/emulated/0");
-        } else if (path.startsWith("/storage_root")) {
-            path = path.replace("storage_root", "storage/emulated/0");
-        }
-        if (path.startsWith("/external")) {
-            path = path.replace("external", "storage/emulated/0");
-        } if (path.startsWith("/root/")) {
-            path = path.replace("/root", "");
-        }
-        if (path.contains("file%3A%2F%2F%2F")) {
-            path = path.replace("file%3A%2F%2F%2F", "").replace("%2F", "/");
-        }
-        if (path.contains("%2520")) {
-            path = path.replace("%2520", " ");
-        }
-        return path;
-    }
-
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/apk/editor/utils/APKExplorer.java b/app/src/main/java/com/apk/editor/utils/APKExplorer.java
index df8a791..d923230 100644
--- a/app/src/main/java/com/apk/editor/utils/APKExplorer.java
+++ b/app/src/main/java/com/apk/editor/utils/APKExplorer.java
@@ -1,5 +1,6 @@
 package com.apk.editor.utils;
 
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.ContentValues;
 import android.content.Context;
@@ -253,19 +254,20 @@ public class APKExplorer {
                 }
             }
 
+            @SuppressLint("StringFormatInvalid")
             @Override
             public void doInBackground() {
                 if (!mExplorePath.exists()) {
-                    mExplorePath.mkdirs();
+                    sUtils.mkdir(mExplorePath);
                     APKEditorUtils.unzip(sPackageUtils.getSourceDir(packageName, context), mExplorePath.getAbsolutePath());
                     // Decompile dex file(s)
                     for (File files : Objects.requireNonNull(mExplorePath.listFiles())) {
                         if (files.getName().startsWith("classes") && files.getName().endsWith(".dex") && !Common.isCancelled()) {
-                            mBackUpPath.mkdirs();
+                            sUtils.mkdir(mBackUpPath);
                             sUtils.copy(files, new File(mBackUpPath, files.getName()));
                             sUtils.delete(files);
                             File mDexExtractPath = new File(mExplorePath, files.getName());
-                            mDexExtractPath.mkdirs();
+                            sUtils.mkdir(mDexExtractPath);
                             Common.setStatus(context.getString(R.string.decompiling, files.getName()));
                             new DexToSmali(false, new File(sPackageUtils.getSourceDir(Common.getAppID(), context)), mDexExtractPath, 0, files.getName()).execute();
                         }
diff --git a/app/src/main/java/com/apk/editor/utils/ExternalAPKData.java b/app/src/main/java/com/apk/editor/utils/ExternalAPKData.java
index 021f40e..53704f3 100644
--- a/app/src/main/java/com/apk/editor/utils/ExternalAPKData.java
+++ b/app/src/main/java/com/apk/editor/utils/ExternalAPKData.java
@@ -107,6 +107,7 @@ public class ExternalAPKData {
         return null;
     }
 
+    @SuppressLint("StringFormatInvalid")
     private static String sdkToAndroidVersion(String sdkVersion, Context context) {
         int sdk = Integer.parseInt(sdkVersion);
         switch (sdk) {
@@ -189,6 +190,7 @@ public class ExternalAPKData {
         mManifest = manifest;
     }
 
+    @SuppressLint("StringFormatInvalid")
     public static void setMinSDKVersion(String minSDKVersion, Context context) {
         mMinSDKVersion = context.getString(R.string.sdk_minimum, sdkToAndroidVersion(minSDKVersion, context));
     }
@@ -197,6 +199,7 @@ public class ExternalAPKData {
         mPermissions = permissions;
     }
 
+    @SuppressLint("StringFormatInvalid")
     public static void setSDKVersion(String sdkVersion, Context context) {
         mSDKVersion = context.getString(R.string.sdk_compile, sdkToAndroidVersion(sdkVersion, context));
     }
diff --git a/app/src/main/java/com/apk/editor/utils/Projects.java b/app/src/main/java/com/apk/editor/utils/Projects.java
index 53a3f26..8ad7a07 100644
--- a/app/src/main/java/com/apk/editor/utils/Projects.java
+++ b/app/src/main/java/com/apk/editor/utils/Projects.java
@@ -1,5 +1,6 @@
 package com.apk.editor.utils;
 
+import android.annotation.SuppressLint;
 import android.app.ProgressDialog;
 import android.content.ContentValues;
 import android.content.Context;
@@ -135,6 +136,7 @@ public class Projects {
         new sExecutor() {
             private ProgressDialog mProgressDialog;
 
+            @SuppressLint("StringFormatInvalid")
             @Override
             public void onPreExecute() {
                 mProgressDialog = new ProgressDialog(context);
diff --git a/app/src/main/java/com/apk/editor/utils/SmaliToDex.java b/app/src/main/java/com/apk/editor/utils/SmaliToDex.java
index e4dc406..fe3b947 100644
--- a/app/src/main/java/com/apk/editor/utils/SmaliToDex.java
+++ b/app/src/main/java/com/apk/editor/utils/SmaliToDex.java
@@ -18,7 +18,6 @@ import org.jf.smali.smaliTreeWalker;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.IOException;
-import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
@@ -47,7 +46,7 @@ public class SmaliToDex {
     @SuppressLint("StringFormatInvalid")
     private void buildFile(File file, DexBuilder dexBuilder) {
         try {
-            InputStream inStream = new FileInputStream(file);
+            FileInputStream inStream = new FileInputStream(file);
             if (!assembleSmaliFile(file, dexBuilder, mApiLevel)) {
                 Common.setStatus(mContext.getString(R.string.assembling, file.getName()) + " : " + mContext.getString(R.string.failed));
                 Common.setError(Common.getError() + 1);
