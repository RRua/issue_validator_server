diff --git a/core/src/com/greenyetilab/race/Assets.java b/core/src/com/greenyetilab/race/Assets.java
index cd441657..b8dc6e0a 100644
--- a/core/src/com/greenyetilab/race/Assets.java
+++ b/core/src/com/greenyetilab/race/Assets.java
@@ -17,6 +17,7 @@ public class Assets {
     public final Skin skin;
     public final Array<TextureRegion> cars = new Array<TextureRegion>();
     public final TextureRegion wheel;
+    public final TextureRegion dot;
     public final TextureAtlas atlas;
     public final Animation explosion;
 
@@ -41,6 +42,14 @@ public class Assets {
             this.cars.add(this.atlas.findRegion(name));
         }
         this.explosion = new Animation(EXPLOSION_FRAME_DURATION, this.atlas.findRegions("explosion"));
+
+        // Fix white-pixel to avoid fading borders
+        this.dot = this.atlas.findRegion("white-pixel");
+        this.dot.setRegionX(this.dot.getRegionX() + 2);
+        this.dot.setRegionY(this.dot.getRegionY() + 2);
+        this.dot.setRegionWidth(this.dot.getRegionWidth() - 4);
+        this.dot.setRegionHeight(this.dot.getRegionHeight() - 4);
+
     }
 
     public NinePatch createScaledPatch(String name) {
diff --git a/core/src/com/greenyetilab/race/GameOverOverlay.java b/core/src/com/greenyetilab/race/GameOverOverlay.java
new file mode 100644
index 00000000..3015e541
--- /dev/null
+++ b/core/src/com/greenyetilab/race/GameOverOverlay.java
@@ -0,0 +1,82 @@
+package com.greenyetilab.race;
+
+import com.badlogic.gdx.math.Interpolation;
+import com.badlogic.gdx.scenes.scene2d.Actor;
+import com.badlogic.gdx.scenes.scene2d.InputEvent;
+import com.badlogic.gdx.scenes.scene2d.actions.Actions;
+import com.badlogic.gdx.scenes.scene2d.ui.Image;
+import com.badlogic.gdx.scenes.scene2d.ui.Label;
+import com.badlogic.gdx.scenes.scene2d.ui.Skin;
+import com.badlogic.gdx.scenes.scene2d.ui.TextButton;
+import com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup;
+import com.badlogic.gdx.scenes.scene2d.utils.Align;
+import com.badlogic.gdx.scenes.scene2d.utils.ClickListener;
+import com.greenyetilab.utils.anchor.Anchor;
+import com.greenyetilab.utils.anchor.AnchorGroup;
+
+/**
+ * Appears on top of RaceGameScreen when player has lost
+ */
+public class GameOverOverlay extends WidgetGroup {
+    private static final float IN_DURATION = 0.5f;
+    private final RaceGame mGame;
+    private final Actor mContent;
+
+    public GameOverOverlay(RaceGame game, GameWorld gameWorld) {
+        mGame = game;
+        setFillParent(true);
+        Image bg = new Image(mGame.getAssets().dot);
+        bg.setColor(0, 0, 0, 0);
+        bg.setFillParent(true);
+        addActor(bg);
+        bg.addAction(Actions.alpha(0.6f, IN_DURATION));
+
+        mContent = createContent();
+    }
+
+    private Actor createContent() {
+        Skin skin = mGame.getAssets().skin;
+        Label label = new Label("Game Over", skin);
+        label.setAlignment(Align.center);
+
+        TextButton tryAgainButton = createButton("Try Again", new ClickListener() {
+            @Override
+            public void clicked(InputEvent event, float x, float y) {
+                mGame.start();
+            }
+        });
+        TextButton menuButton = createButton("Menu", new ClickListener() {
+            @Override
+            public void clicked(InputEvent event, float x, float y) {
+                mGame.showMainMenu();
+            }
+        });
+
+        AnchorGroup mContent = new AnchorGroup();
+        mContent.setSpacing(20);
+        mContent.addPositionRule(tryAgainButton, Anchor.CENTER, mContent, Anchor.CENTER, 0, 0);
+        mContent.addPositionRule(menuButton, Anchor.TOP_CENTER, tryAgainButton, Anchor.BOTTOM_CENTER, 0, -1);
+        mContent.addPositionRule(label, Anchor.BOTTOM_CENTER, tryAgainButton, Anchor.TOP_CENTER, 0, 3);
+
+        return mContent;
+    }
+
+    @Override
+    public void layout() {
+        super.layout();
+        if (mContent.getParent() == null) {
+            mContent.setSize(this.getWidth(), this.getHeight());
+            mContent.setPosition(0, this.getHeight());
+            mContent.addAction(Actions.moveTo(0, 0, IN_DURATION, Interpolation.swingOut));
+            addActor(mContent);
+        }
+    }
+
+    private TextButton createButton(String text, ClickListener listener) {
+        Skin skin = mGame.getAssets().skin;
+        TextButton button = new TextButton(text, skin);
+        button.setSize(300, 60);
+        button.addListener(listener);
+        return button;
+    }
+}
diff --git a/core/src/com/greenyetilab/race/OverlayScreen.java b/core/src/com/greenyetilab/race/OverlayScreen.java
deleted file mode 100644
index 25c0830d..00000000
--- a/core/src/com/greenyetilab/race/OverlayScreen.java
+++ /dev/null
@@ -1,61 +0,0 @@
-package com.greenyetilab.race;
-
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.scenes.scene2d.InputEvent;
-import com.badlogic.gdx.scenes.scene2d.ui.Image;
-import com.badlogic.gdx.scenes.scene2d.ui.Label;
-import com.badlogic.gdx.scenes.scene2d.ui.Skin;
-import com.badlogic.gdx.scenes.scene2d.ui.TextButton;
-import com.badlogic.gdx.scenes.scene2d.utils.Align;
-import com.badlogic.gdx.scenes.scene2d.utils.ClickListener;
-import com.greenyetilab.utils.StageScreen;
-import com.greenyetilab.utils.anchor.Anchor;
-import com.greenyetilab.utils.anchor.AnchorGroup;
-
-/**
- * Created by aurelien on 21/11/14.
- */
-public class OverlayScreen extends StageScreen {
-    private final RaceGame mGame;
-
-    public OverlayScreen(RaceGame game, TextureRegion bg, String text) {
-        mGame = game;
-
-        Image image = new Image(bg);
-        image.setColor(1, 1, 1, 0.5f);
-        getStage().addActor(image);
-
-        Skin skin = game.getAssets().skin;
-        Label label = new Label(text, skin);
-        label.setAlignment(Align.center);
-
-        TextButton tryAgainButton = createButton("Try Again", new ClickListener() {
-            @Override
-            public void clicked(InputEvent event, float x, float y) {
-                mGame.start();
-            }
-        });
-        TextButton menuButton = createButton("Menu", new ClickListener() {
-            @Override
-            public void clicked(InputEvent event, float x, float y) {
-                mGame.showMainMenu();
-            }
-        });
-
-        AnchorGroup group = new AnchorGroup();
-        group.setSpacing(20);
-        group.setFillParent(true);
-        group.addPositionRule(tryAgainButton, Anchor.CENTER, group, Anchor.CENTER, 0, 0);
-        group.addPositionRule(menuButton, Anchor.TOP_CENTER, tryAgainButton, Anchor.BOTTOM_CENTER, 0, -1);
-        group.addPositionRule(label, Anchor.BOTTOM_CENTER, tryAgainButton, Anchor.TOP_CENTER, 0, 3);
-        getStage().addActor(group);
-    }
-
-    private TextButton createButton(String text, ClickListener listener) {
-        Skin skin = mGame.getAssets().skin;
-        TextButton button = new TextButton(text, skin);
-        button.setSize(300, 60);
-        button.addListener(listener);
-        return button;
-    }
-}
diff --git a/core/src/com/greenyetilab/race/RaceGame.java b/core/src/com/greenyetilab/race/RaceGame.java
index b46c7e88..6cf22b29 100644
--- a/core/src/com/greenyetilab/race/RaceGame.java
+++ b/core/src/com/greenyetilab/race/RaceGame.java
@@ -56,15 +56,6 @@ public class RaceGame extends Game {
         pushScreen(screen);
     }
 
-    public void showGameOverOverlay() {
-        showOverlay("Game Over");
-    }
-
-    private void showOverlay(String text) {
-        TextureRegion bg = ScreenUtils.getFrameBufferTexture();
-        setScreenAndDispose(new OverlayScreen(this, bg, text));
-    }
-
     public static Preferences getPreferences() {
         return Gdx.app.getPreferences("com.greenyetilab.race");
     }
diff --git a/core/src/com/greenyetilab/race/RaceGameScreen.java b/core/src/com/greenyetilab/race/RaceGameScreen.java
index 798fb33f..78460105 100644
--- a/core/src/com/greenyetilab/race/RaceGameScreen.java
+++ b/core/src/com/greenyetilab/race/RaceGameScreen.java
@@ -7,12 +7,10 @@ import com.badlogic.gdx.ScreenAdapter;
 import com.badlogic.gdx.graphics.GL20;
 import com.badlogic.gdx.graphics.g2d.Batch;
 import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.tiled.TiledMap;
 import com.badlogic.gdx.scenes.scene2d.Stage;
 import com.badlogic.gdx.scenes.scene2d.ui.Label;
 import com.badlogic.gdx.scenes.scene2d.ui.Skin;
 import com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup;
-import com.badlogic.gdx.utils.Disposable;
 import com.badlogic.gdx.utils.PerformanceCounter;
 import com.badlogic.gdx.utils.PerformanceCounters;
 import com.badlogic.gdx.utils.StringBuilder;
@@ -97,21 +95,21 @@ public class RaceGameScreen extends ScreenAdapter {
     public void render(float delta) {
         mOverallPerformanceCounter.start();
         mGameWorldPerformanceCounter.start();
+        GameWorld.State oldState = mGameWorld.getState();
         mGameWorld.act(delta);
+        GameWorld.State newState = mGameWorld.getState();
         mGameWorldPerformanceCounter.stop();
 
-        mHudStage.act(delta);
-        switch (mGameWorld.getState()) {
-        case RUNNING:
-            break;
-        case BROKEN:
-            mGame.showGameOverOverlay();
-            return;
-        case FINISHED:
-            return;
+        if (oldState != newState) {
+            if (newState == GameWorld.State.BROKEN) {
+                showGameOverOverlay();
+            }
+        }
+        if (newState == GameWorld.State.RUNNING) {
+            handleInput();
         }
 
-        handleInput();
+        mHudStage.act(delta);
         updateHud();
 
         mRendererPerformanceCounter.start();
@@ -169,6 +167,10 @@ public class RaceGameScreen extends ScreenAdapter {
         mVehicle.setBraking(mInput.braking);
     }
 
+    private void showGameOverOverlay() {
+        mHudStage.addActor(new GameOverOverlay(mGame, mGameWorld));
+    }
+
     @Override
     public void dispose() {
         super.dispose();
