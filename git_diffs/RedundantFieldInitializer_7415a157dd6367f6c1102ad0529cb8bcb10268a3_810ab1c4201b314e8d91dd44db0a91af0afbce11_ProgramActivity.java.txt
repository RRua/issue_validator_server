diff --git a/app/src/main/java/com/dynamite/heaterrc/AlarmDetails.java b/app/src/main/java/com/dynamite/heaterrc/AlarmDetails.java
index 0f84ad5..8b25fed 100644
--- a/app/src/main/java/com/dynamite/heaterrc/AlarmDetails.java
+++ b/app/src/main/java/com/dynamite/heaterrc/AlarmDetails.java
@@ -42,10 +42,13 @@ public class AlarmDetails extends commonActivity {
             getSystemService(NOTIFICATION_SERVICE);
  
         //---cancel the notification---
-        nm.cancel(getIntent().getExtras().getInt("NotifID"));
-        
+        try {
+            nm.cancel(getIntent().getExtras().getInt("NotifID"));
+        } catch (NullPointerException npe){
+            npe.printStackTrace();
+        }
         // Restore preferences
-        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
         // final SharedPreferences.Editor SPeditor = settings.edit();
         
         // initialize TextViews
diff --git a/app/src/main/java/com/dynamite/heaterrc/AlarmReceiver.java b/app/src/main/java/com/dynamite/heaterrc/AlarmReceiver.java
index 162bf18..7f9588f 100644
--- a/app/src/main/java/com/dynamite/heaterrc/AlarmReceiver.java
+++ b/app/src/main/java/com/dynamite/heaterrc/AlarmReceiver.java
@@ -26,18 +26,21 @@ import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.content.res.Resources;
 import android.telephony.SmsManager;
 import android.widget.Toast;
 
+import static android.content.Context.MODE_PRIVATE;
+
 public class AlarmReceiver extends BroadcastReceiver {
-    // private static final String DEBUG_TAG = "AlarmReceiver";
+    //private static final String DEBUG_TAG = "AlarmReceiver";
     public static final String PREFS_NAME = "MyPrefsFile";
     public static final String ACTION_SMS_SENT = "com.example.android.apis.os.SMS_SENT_ACTION";
     
     @Override
     public void onReceive(Context context, Intent intent) {
         // Log.d(DEBUG_TAG, "Recurring alarm; requesting an action.");
-        final SharedPreferences settings = context.getSharedPreferences(PREFS_NAME, 4);
+        final SharedPreferences settings = context.getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
         final SharedPreferences.Editor SPeditor = settings.edit();
         final myApp appState = ((myApp)context.getApplicationContext());
         
@@ -90,7 +93,7 @@ public class AlarmReceiver extends BroadcastReceiver {
     
     public void sendSMS2numb (Context context, String s_destNumb, String s_msg, boolean GPStracker){
 		SmsManager sms = SmsManager.getDefault();
-    	SharedPreferences settings = context.getSharedPreferences(PREFS_NAME, 4);
+    	SharedPreferences settings = context.getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
         SharedPreferences.Editor SPeditor = settings.edit();
         String SMS_DEST_NUMBER = s_destNumb;
         
@@ -99,10 +102,15 @@ public class AlarmReceiver extends BroadcastReceiver {
                 
         if((SMS_DEST_NUMBER.contentEquals("0"))||(SMS_DEST_NUMBER == null)){
         	// Log.d(DEBUG_TAG, "Config Error, destination is empty");
-        	Toast toast = Toast.makeText(context, context.getString(R.string.app_name)+
-        			context.getString(R.string.com_SMSsendingErr), Toast.LENGTH_LONG);
-			toast.show();
-			// Add info to taskbar
+        	try {
+				Toast toast = Toast.makeText(context, context.getString(R.string.app_name)+
+						context.getString(R.string.com_SMSsendingErr), Toast.LENGTH_LONG);
+				toast.show();
+				// Add info to taskbar
+			} catch (Resources.NotFoundException rnfe) {
+        		rnfe.printStackTrace();
+        		//Log.d(DEBUG_TAG, "catched exception: " + e.toString());
+			}
         }
         else {  // Send SMS only if destination number has been entered       	
         	// Increment SMS counter
diff --git a/app/src/main/java/com/dynamite/heaterrc/BootReceiver.java b/app/src/main/java/com/dynamite/heaterrc/BootReceiver.java
index 243cc6c..4f5958a 100644
--- a/app/src/main/java/com/dynamite/heaterrc/BootReceiver.java
+++ b/app/src/main/java/com/dynamite/heaterrc/BootReceiver.java
@@ -30,7 +30,7 @@ public class BootReceiver extends BroadcastReceiver {
 
 	@Override
 	public void onReceive(Context context, Intent intent) {
-		final SharedPreferences settings = context.getSharedPreferences(PREFS_NAME, 4);
+		final SharedPreferences settings = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
         // final SharedPreferences.Editor SPeditor = settings.edit();
 		// TODO 
 		Log.d(DEBUG_TAG, "onReceive methode entered");
diff --git a/app/src/main/java/com/dynamite/heaterrc/ConfigActivity.java b/app/src/main/java/com/dynamite/heaterrc/ConfigActivity.java
index a902652..16b4cde 100644
--- a/app/src/main/java/com/dynamite/heaterrc/ConfigActivity.java
+++ b/app/src/main/java/com/dynamite/heaterrc/ConfigActivity.java
@@ -40,7 +40,7 @@ public class ConfigActivity extends commonActivity {
         
         // Log.d(DEBUG_TAG, "onCreate has been called");
 
-        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
         final SharedPreferences.Editor SPeditor = settings.edit();
         
         // Button initialization
@@ -52,10 +52,10 @@ public class ConfigActivity extends commonActivity {
         smsFeedback.setChecked(settings.getBoolean(getString(R.string.sp_smsFeedback), true));
         final CheckBox smsSendWarning = (CheckBox)findViewById(R.id.ShowSMSwarning);
         smsSendWarning.setChecked(settings.getBoolean(getString(R.string.sp_sendSMSwarning), false));
-        smsSendWarning.setVisibility(0xFF); // make this option invisible for the time being.
+        smsSendWarning.setVisibility(View.INVISIBLE); // make this option invisible for the time being.
         final CheckBox GPStracker = (CheckBox)findViewById(R.id.EnableGPStracker);
         GPStracker.setChecked(settings.getBoolean(getString(R.string.sp_GPStrackerTab), false));
-        GPStracker.setVisibility(0x00); // make this option invisible for the time being (0xFF=invisible).
+        GPStracker.setVisibility(View.VISIBLE); // make this option invisible for the time being (0xFF=invisible).
         
 
         // initialize EditText
diff --git a/app/src/main/java/com/dynamite/heaterrc/DisplayNotifications.java b/app/src/main/java/com/dynamite/heaterrc/DisplayNotifications.java
index b476753..06835f3 100644
--- a/app/src/main/java/com/dynamite/heaterrc/DisplayNotifications.java
+++ b/app/src/main/java/com/dynamite/heaterrc/DisplayNotifications.java
@@ -38,7 +38,7 @@ public class DisplayNotifications extends commonActivity {
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);     
         
-        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
         final SharedPreferences.Editor SPeditor = settings.edit();
         
         try {
@@ -87,8 +87,12 @@ public class DisplayNotifications extends commonActivity {
         
         //---get the notification ID for the notification; 
         // passed in by the MainActivity---
-        int notifID = getIntent().getExtras().getInt("NotifID");
- 
+		int notifID = 0;
+		try {
+			notifID = getIntent().getExtras().getInt("NotifID");
+		} catch (NullPointerException npe){
+        	npe.printStackTrace();
+		}
         //---PendingIntent to launch activity if the user selects 
         // the notification---
         Intent i = new Intent("com.dynamite.heaterrc.AlarmDetails");
diff --git a/app/src/main/java/com/dynamite/heaterrc/GPStrackerActivity.java b/app/src/main/java/com/dynamite/heaterrc/GPStrackerActivity.java
index f473b9b..c170286 100644
--- a/app/src/main/java/com/dynamite/heaterrc/GPStrackerActivity.java
+++ b/app/src/main/java/com/dynamite/heaterrc/GPStrackerActivity.java
@@ -42,7 +42,7 @@ public class GPStrackerActivity extends commonActivity {
         
         // Log.d("GPStrackerActivity:", "onCreate has been called");
 
-        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
         final SharedPreferences.Editor SPeditor = settings.edit();
         
      // Button initialization
@@ -65,7 +65,7 @@ public class GPStrackerActivity extends commonActivity {
      // initialize ProgressBar
         final ProgressBar sendingPB;
         sendingPB = (ProgressBar)findViewById(R.id.GPStrackPB);
-        sendingPB.setVisibility(0xFF);
+        sendingPB.setVisibility(View.INVISIBLE);
                 
      // check actual configuration and enable buttons
         if (isPhoneNumberCorrect(settings.getString(getString(R.string.sp_destNumbGPS), getString(R.string.cfg_phonenumber)))){
@@ -100,7 +100,7 @@ public class GPStrackerActivity extends commonActivity {
             public void onClick(View v) {
             	// Log.d("GPStrackerActivity:", "GPSposReqBtn Button pressed");
             	SPeditor.putBoolean(getString(R.string.sp_sendBtnEnabledGPS), false).commit();
-            	sendingPB.setVisibility(0x00);
+            	sendingPB.setVisibility(View.VISIBLE);
             	
                 String SMS_START_COMMAND = settings.getString(getString(R.string.sp_GPSposReqCmd), getString(R.string.cfg_GPSposReqCmd)); 
                 String DEST_NUMB = settings.getString(getString(R.string.sp_destNumbGPS), getString(R.string.cfg_phonenumber));
@@ -145,7 +145,7 @@ public class GPStrackerActivity extends commonActivity {
            			// Log.d("GPStrackerActivity:", "sendBtnEnable="+SEND_BTN_ENABLED);
            			GPSposReqBtn.setEnabled(SEND_BTN_ENABLED);
            			if (SEND_BTN_ENABLED)
-           				sendingPB.setVisibility(0xFF);
+           				sendingPB.setVisibility(View.INVISIBLE);
            		}
            		tPhoneNumberGPS.setText(settings.getString(getString(R.string.sp_destNumbGPS), getString(R.string.cfg_phonenumber)));
            		tPosReqCmd.setText(settings.getString(getString(R.string.sp_GPSposReqCmd), getString(R.string.cfg_GPSposReqCmd)));
diff --git a/app/src/main/java/com/dynamite/heaterrc/ProgramActivity.java b/app/src/main/java/com/dynamite/heaterrc/ProgramActivity.java
index 0218f1a..26ef502 100644
--- a/app/src/main/java/com/dynamite/heaterrc/ProgramActivity.java
+++ b/app/src/main/java/com/dynamite/heaterrc/ProgramActivity.java
@@ -37,7 +37,6 @@ import android.widget.AdapterView;
 import android.widget.ArrayAdapter;
 import android.widget.Button;
 import android.widget.ProgressBar;
-import android.widget.RadioButton;
 import android.widget.Spinner;
 import android.widget.TextView;
 import android.widget.TimePicker;
@@ -54,9 +53,9 @@ public class ProgramActivity extends commonActivity {
 	
 	/** Called when the activity is first created. */
 	public static final String PREFS_NAME = "MyPrefsFile";
-	public static final String SMS_RECIPIENT_EXTRA = "com.example.android.apis.os.SMS_RECIPIENT";
+	//public static final String SMS_RECIPIENT_EXTRA = "com.example.android.apis.os.SMS_RECIPIENT";
     public static final String ACTION_SMS_SENT = "com.example.android.apis.os.SMS_SENT_ACTION";
-    public int SMS_RESULT_COUNTER=0;
+    //public int SMS_RESULT_COUNTER=0;
 	SharedPreferences.OnSharedPreferenceChangeListener listener;
 	private final int IPC_ID = 1122;
     
@@ -65,8 +64,8 @@ public class ProgramActivity extends commonActivity {
 	Button helpschedBtn;
 	ProgressBar sendingPB;
 	TimePicker setTime;
-    RadioButton RB0;
-    RadioButton RB1;
+    //RadioButton RB0;
+    //RadioButton RB1;
     ViewFlipper VF;
     Button sunday;
     Button monday;
@@ -94,7 +93,7 @@ public class ProgramActivity extends commonActivity {
         // Log.d(DEBUG_TAG, "onCreate has been called");
         
      // Restore preferences
-        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
         final SharedPreferences.Editor SPeditor = settings.edit();
         
         // Button initialization
@@ -108,7 +107,7 @@ public class ProgramActivity extends commonActivity {
         
         // initialize ProgressBar
         sendingPB = (ProgressBar)findViewById(R.id.programPB);
-        sendingPB.setVisibility(0xFF);
+        sendingPB.setVisibility(View.INVISIBLE);
         
         // initialize ToggleButton
         scheduleToggle = (ToggleButton)findViewById(R.id.scheduletoggle);
@@ -151,7 +150,7 @@ public class ProgramActivity extends commonActivity {
         saturday.setBackgroundColor(btnColor(settings.getBoolean(getString(R.string.sp_saturday), false)));
         
         
-        /** Get the current time */
+        /* Get the current time */
         final Calendar cal = Calendar.getInstance();
         pHour = cal.get(Calendar.HOUR_OF_DAY);
         pMinute = cal.get(Calendar.MINUTE);
@@ -360,7 +359,7 @@ public class ProgramActivity extends commonActivity {
 	        	// Log.d(DEBUG_TAG, "sendBtnEnable="+SEND_BTN_ENABLED);
 	        	setBtn.setEnabled(SEND_BTN_ENABLED);
 	        	if(SEND_BTN_ENABLED)
-	        		sendingPB.setVisibility(0xFF);
+	        		sendingPB.setVisibility(View.INVISIBLE);
 	        }
 	        else if (key.compareTo(getString(R.string.sp_scheduledSend))==0){
 	        	if (settings.getBoolean(getString(R.string.sp_scheduledSend), false)){
@@ -372,13 +371,13 @@ public class ProgramActivity extends commonActivity {
 	        	
 	        }
 	        else if (key.compareTo(getString(R.string.sp_schedule_active))==0){
+				myApp appStates = ((myApp)getApplicationContext());
 	        	if (settings.getBoolean(getString(R.string.sp_schedule_active), false)){
 	        		// Log.d(DEBUG_TAG, "Schedule has been activated");
-	        		myApp appStates = ((myApp)getApplicationContext());
 	        		appStates.setRecurringAlarm(getApplicationContext());
 	        	} else {
 	        		// Log.d(DEBUG_TAG, "Schedule has been deactivated");
-	        		delAlarm(getApplicationContext());
+	        		delAlarm(appStates.getApplicationContext());
 	        		// When Schedule has been deactivated, there is no next alarm
 	        		SPeditor.putString(getString(R.string.sp_nextAlarm), "-").commit();
 	        		if (scheduleToggle.isChecked()){
@@ -404,8 +403,12 @@ public class ProgramActivity extends commonActivity {
                 0, downloader, PendingIntent.FLAG_CANCEL_CURRENT);
         AlarmManager alarms = (AlarmManager) getSystemService(
                 Context.ALARM_SERVICE);
-        alarms.cancel(recurringSendSMS);
-        
+        try {
+			alarms.cancel(recurringSendSMS);
+		} catch (NullPointerException npe){
+        	npe.printStackTrace();
+			// Log.d(DEBUG_TAG, "Alarm could not be cancelled!");
+		}
     }
     
     private void updateWeekBtn(String weekday, boolean btnset){
@@ -429,7 +432,7 @@ public class ProgramActivity extends commonActivity {
     }
     
     private void updateWeekBtn(){
-    	final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+    	final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
     	sunday.setBackgroundColor(btnColor(settings.getBoolean(getString(R.string.sp_sunday), false)));
    		monday.setBackgroundColor(btnColor(settings.getBoolean(getString(R.string.sp_monday), false)));
    		tuesday.setBackgroundColor(btnColor(settings.getBoolean(getString(R.string.sp_tuesday), false)));
@@ -447,7 +450,7 @@ public class ProgramActivity extends commonActivity {
     }
     
     private boolean dayPressed(String weekday){
-    	final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+    	final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
         final SharedPreferences.Editor SPeditor = settings.edit();
 
     	SPeditor.putString(getString(R.string.sp_lastTouched), weekday);
@@ -483,7 +486,7 @@ public class ProgramActivity extends commonActivity {
          
     /** Displays a notification when the time is updated */
     private void displayToast() {
-    	final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+    	final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
         final SharedPreferences.Editor SPeditor = settings.edit();
         String lastTouched = settings.getString(getString(R.string.sp_lastTouched), "-");
     	Toast.makeText(this, new StringBuilder().append("Time choosen is ").append(int2time(pHour,pMinute)),   Toast.LENGTH_SHORT).show();
diff --git a/app/src/main/java/com/dynamite/heaterrc/SHtabWidget.java b/app/src/main/java/com/dynamite/heaterrc/SHtabWidget.java
index 184d6dd..464a813 100644
--- a/app/src/main/java/com/dynamite/heaterrc/SHtabWidget.java
+++ b/app/src/main/java/com/dynamite/heaterrc/SHtabWidget.java
@@ -31,7 +31,7 @@ public class SHtabWidget extends TabActivity {
 	    super.onCreate(savedInstanceState);
 	    setContentView(R.layout.main);
 	    final String PREFS_NAME = "MyPrefsFile";
-	    final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+	    final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
 
 	    Resources res = getResources(); // Resource object to get Drawables
 	    TabHost tabHost = getTabHost();  // The activity TabHost
diff --git a/app/src/main/java/com/dynamite/heaterrc/SMSreceiver.java b/app/src/main/java/com/dynamite/heaterrc/SMSreceiver.java
index 30267cd..6a3a089 100644
--- a/app/src/main/java/com/dynamite/heaterrc/SMSreceiver.java
+++ b/app/src/main/java/com/dynamite/heaterrc/SMSreceiver.java
@@ -35,7 +35,7 @@ public class SMSreceiver extends BroadcastReceiver{
 	@Override
 	public void onReceive(Context context, Intent intent) {
 		Bundle bundle = intent.getExtras();
-		SharedPreferences settings = context.getSharedPreferences(PREFS_NAME, 4);
+		SharedPreferences settings = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
         SharedPreferences.Editor SPeditor = settings.edit();
 // TODO Garbage collected?
 		// Log.d(DEBUG_TAG, "Entered onReceive method...");
@@ -104,8 +104,10 @@ public class SMSreceiver extends BroadcastReceiver{
 			}
 		} catch(IndexOutOfBoundsException iobe){
 			// Log.w(DEBUG_TAG, "IooBException thrown=" + iobe.toString());
+			iobe.printStackTrace();
 		} catch(Exception e){
 			// Log.w(DEBUG_TAG, "Exception thrown=" + e.toString());
+			e.printStackTrace();
 		}
 	}
 }
diff --git a/app/src/main/java/com/dynamite/heaterrc/StandHeizungActivity.java b/app/src/main/java/com/dynamite/heaterrc/StandHeizungActivity.java
index 923e3c7..f5f9c38 100644
--- a/app/src/main/java/com/dynamite/heaterrc/StandHeizungActivity.java
+++ b/app/src/main/java/com/dynamite/heaterrc/StandHeizungActivity.java
@@ -42,7 +42,7 @@ public class StandHeizungActivity extends commonActivity {
         // Log.d(DEBUG_TAG, "onCreate has been called"); 
         
     	 // Restore preferences
-        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+        final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
         final SharedPreferences.Editor SPeditor = settings.edit();
         
         // Button initialization
diff --git a/app/src/main/java/com/dynamite/heaterrc/commonActivity.java b/app/src/main/java/com/dynamite/heaterrc/commonActivity.java
index 3c2130b..e8f319b 100644
--- a/app/src/main/java/com/dynamite/heaterrc/commonActivity.java
+++ b/app/src/main/java/com/dynamite/heaterrc/commonActivity.java
@@ -42,9 +42,18 @@ public abstract class commonActivity extends Activity{
 	public static final String SMS_RECIPIENT_EXTRA = "com.example.android.apis.os.SMS_RECIPIENT";
 	public static final String ACTION_SMS_SENT = "com.example.android.apis.os.SMS_SENT_ACTION";
 	public static final String PREFS_NAME = "MyPrefsFile";
+	public BroadcastReceiver bcr;
 	// private static final String DEBUG_TAG = "commonActivity";
 
-	// Methods	
+	// Methods
+	public void onDestroy(){
+		super.onDestroy();
+		try {
+			unregisterReceiver(bcr);
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+	}
 	public void onCreate(Bundle savedInstanceState) {
 	        super.onCreate(savedInstanceState);
 	        
@@ -52,13 +61,13 @@ public abstract class commonActivity extends Activity{
 	        
 	        try {
 		        // Register broadcast receivers for SMS sent and delivered intents
-		        registerReceiver(new BroadcastReceiver() {
+		        registerReceiver(bcr = new BroadcastReceiver() {
 		            
 		        	@Override
 		            public void onReceive(Context context, Intent intent) {
 		                String message = null;
 		                boolean error = true;
-		                final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+		                final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
 		                final SharedPreferences.Editor SPeditor = settings.edit();
 		                switch (getResultCode()) {
 		                case Activity.RESULT_OK:
@@ -133,7 +142,7 @@ public abstract class commonActivity extends Activity{
 	
 	public void sendSMS(String s_msg){
 		String PREFS_NAME = "MyPrefsFile";
-    	SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+    	SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
     	sendSMS2numb(settings.getString(getString(R.string.sp_destNumb), "0"), s_msg, false);
     }
 	
@@ -141,7 +150,7 @@ public abstract class commonActivity extends Activity{
 		SmsManager sms = SmsManager.getDefault();
     	myApp appState = ((myApp)getApplicationContext());
     	String PREFS_NAME = "MyPrefsFile";
-    	SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+    	SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
         SharedPreferences.Editor SPeditor = settings.edit();
         String SMS_DEST_NUMBER = s_destNumb;
         
@@ -217,7 +226,7 @@ public abstract class commonActivity extends Activity{
 	
 	public void showInfo(PackageInfo pInfo){
 		final String PREFS_NAME = "MyPrefsFile";
-	    final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+	    final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
 	    final SharedPreferences.Editor SPeditor = settings.edit();
 
 		String s_appname = getString(R.string.app_name);
@@ -316,7 +325,7 @@ public abstract class commonActivity extends Activity{
 			})
 	        .setPositiveButton(getString(R.string.com_restorebutton), new DialogInterface.OnClickListener() {
 	            public void onClick(DialogInterface dialog, int id) {
-	            	SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+	            	SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
 	                SharedPreferences.Editor SPeditor = settings.edit();
 	            	int counter = settings.getInt(getString(R.string.sp_smsCounter), 0);
 	            	SPeditor.clear().commit();
@@ -337,7 +346,7 @@ public abstract class commonActivity extends Activity{
      */
     public void showPopupPlus(String s_title, String s_msg, String s_negBtntxt, String s_posBtntxt, final String s_prefs){
     	final String PREFS_NAME = "MyPrefsFile";
-	    final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+	    final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
 	    final SharedPreferences.Editor SPeditor = settings.edit();
     	// build dialog box to display message
 	    AlertDialog.Builder builder = new AlertDialog.Builder(this);
diff --git a/app/src/main/java/com/dynamite/heaterrc/myApp.java b/app/src/main/java/com/dynamite/heaterrc/myApp.java
index 6b1064b..8019c06 100644
--- a/app/src/main/java/com/dynamite/heaterrc/myApp.java
+++ b/app/src/main/java/com/dynamite/heaterrc/myApp.java
@@ -48,7 +48,7 @@ public class myApp extends Application{
         // we know mobiletuts updates at right around 1130 GMT.
         // let's grab new stuff at around 11:45 GMT, inexactly
     	// Log.d(DEBUG_TAG, "setRecurringAlarm called ");
-    	final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+    	final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
     	final SharedPreferences.Editor SPeditor = settings.edit();
     	final Calendar cal = Calendar.getInstance();
     	
@@ -106,7 +106,7 @@ public class myApp extends Application{
         	Schedule a repeating alarm. */
         long checkTime = updateTime.getTimeInMillis()/1000;
         // check if time is in the past and correct it.
-        /** Get the current time */
+        /* Get the current time */
         long actualTime = cal.getTimeInMillis()/1000;
         if (actualTime > checkTime){
         	// Shift for one week
@@ -124,7 +124,7 @@ public class myApp extends Application{
     }
 	
 	public int getNextWeekDay (){
-	    	final SharedPreferences settings = getSharedPreferences(PREFS_NAME, 4);
+	    	final SharedPreferences settings = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
 	    	
 	    	Time t = new Time();
 	    	int hour = -1;
