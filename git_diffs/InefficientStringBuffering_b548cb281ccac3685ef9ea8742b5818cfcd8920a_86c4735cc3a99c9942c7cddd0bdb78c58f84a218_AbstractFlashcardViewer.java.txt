diff --git a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/HtmlUtilTest.java b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/HtmlUtilTest.java
deleted file mode 100644
index 7b499e1bdd..0000000000
--- a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/HtmlUtilTest.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/****************************************************************************************
- * Copyright (c) 2013 Flavio Lerda <flerda@gmail.com>                                   *
- *                                                                                      *
- * This program is free software; you can redistribute it and/or modify it under        *
- * the terms of the GNU General Public License as published by the Free Software        *
- * Foundation; either version 3 of the License, or (at your option) any later           *
- * version.                                                                             *
- *                                                                                      *
- * This program is distributed in the hope that it will be useful, but WITHOUT ANY      *
- * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A      *
- * PARTICULAR PURPOSE. See the GNU General Public License for more details.             *
- *                                                                                      *
- * You should have received a copy of the GNU General Public License along with         *
- * this program.  If not, see <http://www.gnu.org/licenses/>.                           *
- ****************************************************************************************/
-
-package com.ichi2.anki.tests;
-
-import android.test.AndroidTestCase;
-import com.ichi2.utils.*;
-
-/**
- * Unit tests for {@link HtmlUtil}.
- */
-public class HtmlUtilTest extends AndroidTestCase {
-
-    public void testUnescape_EntityName() {
-        assertEquals("\"", HtmlUtil.unescape("&quot;"));
-        assertEquals("&", HtmlUtil.unescape("&amp;"));
-        assertEquals("<", HtmlUtil.unescape("&lt;"));
-        assertEquals(">", HtmlUtil.unescape("&gt;"));
-        assertEquals("ë", HtmlUtil.unescape("&euml;"));
-        assertEquals("\u039B", HtmlUtil.unescape("&Lambda;"));
-    }
-
-
-    public void testUnescape_Code() {
-        assertEquals("&", HtmlUtil.unescape("&#38;"));
-        assertEquals("<", HtmlUtil.unescape("&#60;"));
-        assertEquals(">", HtmlUtil.unescape("&#62;"));
-        assertEquals("A", HtmlUtil.unescape("&#65;"));
-        assertEquals("ë", HtmlUtil.unescape("&#235;"));
-        assertEquals("\u039B", HtmlUtil.unescape("&#923;"));
-    }
-
-
-    public void testUnescape_XCode() {
-        assertEquals("&", HtmlUtil.unescape("&#x26;"));
-        assertEquals("<", HtmlUtil.unescape("&#x3c;"));  // Lower case.
-        assertEquals(">", HtmlUtil.unescape("&#x3E;"));  // Upper case.
-        assertEquals("A", HtmlUtil.unescape("&#x41;"));
-        assertEquals("ë", HtmlUtil.unescape("&#xeB;"));  // Mixed case.
-        assertEquals("\u039B", HtmlUtil.unescape("&#x039B;"));
-    }
-
-
-    public void testUnescape_MultipleSequences() {
-        assertEquals("Запомните все! Mémoriser quoi que ce soit!背诵的东西！",
-                HtmlUtil.unescape("&#x0417;&#x0430;&#x043f;&#x043e;&#x043c;&#x043d;&#x0438;&#x0442;&#x0435; "
-                        + "&#x0432;&#x0441;&#x0435;! M&eacute;moriser quoi que ce soit!&#x80cc;&#x8bf5;&#x7684;"
-                        + "&#x4e1c;&#x897f;&#xff01;"));
-    }
-
-
-    public void testUnescape_WithTags() {
-        assertEquals("ë", HtmlUtil.unescape("<b>&#235;</b>"));
-        assertEquals("ë", HtmlUtil.unescape("<a href='http://www.example.com/'>&#235;</a>"));
-    }
-
-}
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java
index 0cddaec254..2da19d30c2 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java
@@ -84,7 +84,6 @@ import com.ichi2.libanki.Utils;
 import com.ichi2.themes.HtmlColors;
 import com.ichi2.themes.Themes;
 import com.ichi2.utils.DiffEngine;
-import com.ichi2.utils.HtmlUtil;
 
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -712,8 +711,8 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
             // We have to watch out. For the preview we don’t know the font or font size. Skip those there. (Anki
             // desktop just doesn’t show the input tag there. Do it with standard values here instead.)
             if (mTypeFont != null && !TextUtils.isEmpty(mTypeFont) && mTypeSize > 0) {
-                sb.append("style=\"font-family: '" + mTypeFont + "'; font-size: " + Integer.toString(mTypeSize) +
-                    "px;\" ");
+                sb.append("style=\"font-family: '").append(mTypeFont).append("'; font-size: ")
+                        .append(Integer.toString(mTypeSize)).append("px;\" ");
             }
             sb.append(">\n</center>\n");
         } else {
@@ -786,7 +785,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
         Set<String> matches = new LinkedHashSet<>();
         // LinkedHashSet: make entries appear only once, like Anki desktop (see also issue #2208), and keep the order
         // they appear in.
-        String groupOne = new String();
+        String groupOne;
         int colonColonIndex = -1;
         while (m.find()) {
             groupOne = m.group(1);
@@ -1889,7 +1888,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
         answerText = matcher.replaceAll("\n");
         matcher = Sound.sSoundPattern.matcher(answerText);
         answerText = matcher.replaceAll("");
-        return HtmlUtil.nfcNormalized(answerText);
+        return Utils.nfcNormalized(answerText);
     }
 
 
@@ -1903,7 +1902,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
         if (answer == null || answer.equals("")) {
             return "";
         }
-        return HtmlUtil.nfcNormalized(answer.trim());
+        return Utils.nfcNormalized(answer.trim());
     }
 
 
@@ -2240,7 +2239,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
      * @return true if the AnkiDroid preference for writing answer is true and if the Anki Deck CardLayout specifies a
      *         field to query
      */
-    private final boolean typeAnswer() {
+    private boolean typeAnswer() {
         return mShowTypeAnswerField && null != mTypeCorrect;
     }
 
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/AnkiFont.java b/AnkiDroid/src/main/java/com/ichi2/anki/AnkiFont.java
index 6be7a4694e..b0b66deb4a 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/AnkiFont.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/AnkiFont.java
@@ -50,7 +50,7 @@ public class AnkiFont {
      */
     public static AnkiFont createAnkiFont(Context ctx, String path, boolean fromAssets) {
         File fontfile = new File(path);
-        String name = Utils.removeFileExtension(fontfile.getName());
+        String name = Utils.splitFilename(fontfile.getName())[0];
         String family = name;
         List<String> attributes = new ArrayList<>();
 
@@ -109,9 +109,7 @@ public class AnkiFont {
 
 
     public String getDeclaration() {
-        StringBuilder sb = new StringBuilder("@font-face {");
-        sb.append(getCSS(false)).append(" src: url(\"file://").append(mPath).append("\");}");
-        return sb.toString();
+        return "@font-face {" + getCSS(false) + " src: url(\"file://" + mPath + "\");}";
     }
 
 
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java b/AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java
index 31acddb579..71c12b0f10 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java
@@ -26,7 +26,6 @@ import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
 import java.io.File;
 import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.text.ParseException;
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java b/AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java
index 8594b6bcb0..c32bef6e77 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java
@@ -1961,7 +1961,7 @@ public class DeckPicker extends NavigationDrawerActivity implements
         String deckName = "\'" + getCol().getDecks().name(did) + "\'";
         boolean isDyn = getCol().getDecks().isDyn(did);
         if (isDyn) {
-            msg = String.format(res.getString(R.string.delete_cram_deck_message), deckName);
+            msg = res.getString(R.string.delete_cram_deck_message, deckName);
         } else {
             msg = res.getQuantityString(R.plurals.delete_deck_message, cnt, deckName, cnt);
         }
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/StudyOptionsFragment.java b/AnkiDroid/src/main/java/com/ichi2/anki/StudyOptionsFragment.java
index d3c046ec2b..f9d2800589 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/StudyOptionsFragment.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/StudyOptionsFragment.java
@@ -412,7 +412,7 @@ public class StudyOptionsFragment extends Fragment implements Toolbar.OnMenuItem
             }
         }
         if (requestCode == DECK_OPTIONS) {
-            if (mLoadWithDeckOptions == true) {
+            if (mLoadWithDeckOptions) {
                 mLoadWithDeckOptions = false;
                 try {
                     JSONObject deck = getCol().getDecks().current();
@@ -555,7 +555,7 @@ public class StudyOptionsFragment extends Fragment implements Toolbar.OnMenuItem
                     }
 
                     // open cram deck option if deck is opened for the first time
-                    if (mLoadWithDeckOptions == true) {
+                    if (mLoadWithDeckOptions) {
                         openFilteredDeckOptions(mLoadWithDeckOptions);
                         return;
                     }
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/TranslationActivity.java b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/TranslationActivity.java
index 01d8542ebe..f734b98852 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/TranslationActivity.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/TranslationActivity.java
@@ -48,7 +48,7 @@ import com.ichi2.anki.multimediacard.language.LanguagesListerGlosbe;
 import com.ichi2.anki.runtimetools.TaskOperations;
 import com.ichi2.anki.web.HttpFetcher;
 import com.ichi2.async.Connection;
-import com.ichi2.utils.HtmlUtil;
+import com.ichi2.libanki.Utils;
 
 import java.io.UnsupportedEncodingException;
 import java.net.URLEncoder;
@@ -102,7 +102,7 @@ public class TranslationActivity extends FragmentActivity implements DialogInter
         setContentView(R.layout.activity_translation);
 
         try {
-            mSource = getIntent().getExtras().getString(EXTRA_SOURCE).toString();
+            mSource = getIntent().getExtras().getString(EXTRA_SOURCE);
         } catch (Exception e) {
             mSource = "";
         }
@@ -330,7 +330,7 @@ public class TranslationActivity extends FragmentActivity implements DialogInter
                         continue;
                     }
                     if (meaning.getLanguage().contentEquals(desiredLang)) {
-                        String unescappedString = HtmlUtil.unescape(meaning.getText());
+                        String unescappedString = Utils.unescape(meaning.getText());
                         res.add(unescappedString);
                     }
                 }
@@ -342,7 +342,7 @@ public class TranslationActivity extends FragmentActivity implements DialogInter
                     continue;
                 }
                 if (phrase.getLanguage().contentEquals(desiredLang)) {
-                    String unescappedString = HtmlUtil.unescape(phrase.getText());
+                    String unescappedString = Utils.unescape(phrase.getText());
                     res.add(unescappedString);
                 }
             }
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/CustomFontsReviewerExt.java b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/CustomFontsReviewerExt.java
index 68f711f51b..8c51b19a66 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/CustomFontsReviewerExt.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/CustomFontsReviewerExt.java
@@ -35,13 +35,10 @@ public class CustomFontsReviewerExt implements ReviewerExt {
     private String mOverrideFontStyle;
     private String mThemeFontStyle;
     private String mDominantFontStyle;
-    private final boolean mSupportsQuickUpdate;
-
 
     public CustomFontsReviewerExt(Context context) {
         Map<String, AnkiFont> customFontsMap = getCustomFontsMap(context);
         mCustomStyle = getCustomFontsStyle(customFontsMap) + getDominantFontStyle(context, customFontsMap);
-        mSupportsQuickUpdate = customFontsMap.size() == 0;
     }
 
 
@@ -51,12 +48,6 @@ public class CustomFontsReviewerExt implements ReviewerExt {
     }
 
 
-    @Override
-    public boolean supportsQuickUpdate() {
-        return mSupportsQuickUpdate;
-    }
-
-
     /**
      * Returns the CSS used to handle custom fonts.
      * <p>
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerExt.java b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerExt.java
index bdf7bb8820..1f0d435527 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerExt.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerExt.java
@@ -16,8 +16,6 @@
 
 package com.ichi2.anki.reviewer;
 
-import android.webkit.WebView;
-
 /**
  * An extension to the reviewer class.
  * <p>
@@ -34,11 +32,4 @@ public interface ReviewerExt {
      */
     void updateCssStyle(StringBuilder cssStyle);
 
-
-    /**
-     * Returns true if the extensions supports updating the content of a single {@link WebView} (called quick update)
-     * instead of switch between two instances.
-     */
-    boolean supportsQuickUpdate();
-
 }
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerExtRegistry.java b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerExtRegistry.java
index 95f6b65b1a..889c091add 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerExtRegistry.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerExtRegistry.java
@@ -46,15 +46,4 @@ public class ReviewerExtRegistry implements ReviewerExt {
         }
     }
 
-
-    @Override
-    public boolean supportsQuickUpdate() {
-        for (ReviewerExt ext : mReviewerExts) {
-            if (!ext.supportsQuickUpdate()) {
-                return false;
-            }
-        }
-        return true;
-    }
-
 }
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/WhiteboardListener.java b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/WhiteboardListener.java
deleted file mode 100644
index 6cdd36f85e..0000000000
--- a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/WhiteboardListener.java
+++ /dev/null
@@ -1,8 +0,0 @@
-package com.ichi2.anki.reviewer;
-
-import java.util.EventListener;
-
-public interface WhiteboardListener extends EventListener {
-    abstract void onShowWhiteboard();
-    abstract void onHideWhiteboard();
-}
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/stats/AnkiStatsTaskHandler.java b/AnkiDroid/src/main/java/com/ichi2/anki/stats/AnkiStatsTaskHandler.java
index 87fa168600..818b586578 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/stats/AnkiStatsTaskHandler.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/stats/AnkiStatsTaskHandler.java
@@ -239,7 +239,7 @@ public class AnkiStatsTaskHandler {
                         cur.close();
                     }
                 }
-                Resources res = mTextView.getResources();
+                Resources res = collection.getContext().getResources();
                 final String span = res.getQuantityString(R.plurals.time_span_minutes, minutes, minutes);
                 return res.getQuantityString(R.plurals.studied_cards_today, cards, cards, span);
             }finally {
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/web/UrlTools.java b/AnkiDroid/src/main/java/com/ichi2/anki/web/UrlTools.java
deleted file mode 100644
index 84de8f7f34..0000000000
--- a/AnkiDroid/src/main/java/com/ichi2/anki/web/UrlTools.java
+++ /dev/null
@@ -1,35 +0,0 @@
-/****************************************************************************************
- * Copyright (c) 2013 Bibek Shrestha <bibekshrestha@gmail.com>                          *
- * Copyright (c) 2013 Zaur Molotnikov <qutorial@gmail.com>                              *
- * Copyright (c) 2013 Nicolas Raoul <nicolas.raoul@gmail.com>                           *
- * Copyright (c) 2013 Flavio Lerda <flerda@gmail.com>                                   *
- *                                                                                      *
- * This program is free software; you can redistribute it and/or modify it under        *
- * the terms of the GNU General Public License as published by the Free Software        *
- * Foundation; either version 3 of the License, or (at your option) any later           *
- * version.                                                                             *
- *                                                                                      *
- * This program is distributed in the hope that it will be useful, but WITHOUT ANY      *
- * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A      *
- * PARTICULAR PURPOSE. See the GNU General Public License for more details.             *
- *                                                                                      *
- * You should have received a copy of the GNU General Public License along with         *
- * this program.  If not, see <http://www.gnu.org/licenses/>.                           *
- ****************************************************************************************/
-
-package com.ichi2.anki.web;
-
-import java.io.UnsupportedEncodingException;
-import java.net.URLEncoder;
-
-public class UrlTools {
-
-    public static String encodeUrl(String s) {
-        try {
-            return URLEncoder.encode(s, "utf-8");
-        } catch (UnsupportedEncodingException e) {
-            return s;
-        }
-    }
-
-}
diff --git a/AnkiDroid/src/main/java/com/ichi2/filters/AbstractCardFilter.java b/AnkiDroid/src/main/java/com/ichi2/filters/AbstractCardFilter.java
deleted file mode 100644
index 31e1d0be5a..0000000000
--- a/AnkiDroid/src/main/java/com/ichi2/filters/AbstractCardFilter.java
+++ /dev/null
@@ -1,24 +0,0 @@
-
-package com.ichi2.filters;
-
-import android.content.SharedPreferences;
-
-/**
- * Abstract implementation for card filter.
- * 
- * @author evgenij.kozhevnikov@gmail.com
- */
-public abstract class AbstractCardFilter implements CardFilter {
-
-    /**
-     * Check filter setting.
-     * 
-     * @param preferences program settings.
-     * @return true, if filter could be run, otherwise false.
-     */
-    protected boolean useFilter(SharedPreferences preferences) {
-        String settingName = this.getClass().getName();
-        return preferences.getBoolean(settingName, false);
-    }
-
-}
diff --git a/AnkiDroid/src/main/java/com/ichi2/filters/CardFilter.java b/AnkiDroid/src/main/java/com/ichi2/filters/CardFilter.java
deleted file mode 100644
index 1da4d9b165..0000000000
--- a/AnkiDroid/src/main/java/com/ichi2/filters/CardFilter.java
+++ /dev/null
@@ -1,27 +0,0 @@
-
-package com.ichi2.filters;
-
-import android.content.SharedPreferences;
-import android.util.Pair;
-
-
-/**
- * Card filter for garbage information. One card filter for one message type from one application. Card filters are
- * based on regular expressions, and when reg exp didn't find garbage information, method must return origin messages.
- * Because all filters run on a chain.
- * 
- * @author evgenij.kozhevnikov@gmail.com
- */
-public interface CardFilter {
-
-    /**
-     * Run filter process.
-     * 
-     * @param messages data, received from external application, where first attribute is the SUBJECT information and
-     *            second attribute is the TEXT information.
-     * @param preferences program settings.
-     * @return clean for current filter data.
-     */
-    public Pair<String, String> filter(Pair<String, String> messages, SharedPreferences preferences);
-
-}
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/DB.java b/AnkiDroid/src/main/java/com/ichi2/libanki/DB.java
index 7acfed2469..95e46436b3 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/DB.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/DB.java
@@ -215,7 +215,6 @@ public class DB {
                             Toast.makeText(AnkiDroidApp.getInstance().getBaseContext(),
                                     "Error report pending: unexpected null in database.", Toast.LENGTH_LONG).show();
                         }
-                        continue; // attempt to skip this null record
                     } else {
                         throw new RuntimeException(e);
                     }
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java
index c34673e033..4c34618ff4 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java
@@ -25,7 +25,6 @@ import android.text.TextUtils;
 import android.util.Pair;
 
 import com.ichi2.libanki.template.Template;
-import com.ichi2.utils.HtmlUtil;
 
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -233,11 +232,12 @@ public class Media {
         // get the file name
         String fname = ofile.getName();
         // make sure we write it in NFC form and return an NFC-encoded reference
-        fname = HtmlUtil.nfcNormalized(fname);
+        fname = Utils.nfcNormalized(fname);
         // remove any dangerous characters
         String base = stripIllegal(fname);
-        String root = Utils.removeFileExtension(base);
-        String ext = Utils.getFileExtension(base);
+        String[] split = Utils.splitFilename(base);
+        String root = split[0];
+        String ext = split[1];
         // find the first available name
         String csum = Utils.fileChecksum(ofile);
         while (true) {
@@ -427,7 +427,7 @@ public class Media {
                 // check the refs are in NFC
                 for (String f : noteRefs) {
                     // if they're not, we'll need to fix them first
-                    if (!f.equals(HtmlUtil.nfcNormalized(f))) {
+                    if (!f.equals(Utils.nfcNormalized(f))) {
                         _normalizeNoteRefs(nid);
                         noteRefs = filesInStr(mid, flds);
                         break;
@@ -461,7 +461,7 @@ public class Media {
                 // leading _ says to ignore file
                 continue;
             }
-            File nfcFile = new File(dir(), HtmlUtil.nfcNormalized(file.getName()));
+            File nfcFile = new File(dir(), Utils.nfcNormalized(file.getName()));
             // we enforce NFC fs encoding
             if (local == null) {
                 if (!file.getName().equals(nfcFile.getName())) {
@@ -507,7 +507,7 @@ public class Media {
         String[] flds = note.getFields();
         for (int c = 0; c < flds.length; c++) {
             String fld = flds[c];
-            String nfc = HtmlUtil.nfcNormalized(fld);
+            String nfc = Utils.nfcNormalized(fld);
             if (!nfc.equals(fld)) {
                 note.setField(c, nfc);
             }
@@ -671,7 +671,7 @@ public class Media {
                 continue;
             }
             // check encoding
-            String normf = HtmlUtil.nfcNormalized(fname);
+            String normf = Utils.nfcNormalized(fname);
             if (!fname.equals(normf)) {
                 // wrong filename encoding which will cause sync errors
                 File nf = new File(dir(), normf);
@@ -819,7 +819,7 @@ public class Media {
                 String fname = cur.getString(0);
                 String csum = cur.getString(1);
                 fnames.add(fname);
-                String normname = HtmlUtil.nfcNormalized(fname);
+                String normname = Utils.nfcNormalized(fname);
 
                 if (!TextUtils.isEmpty(csum)) {
                     try {
@@ -888,7 +888,7 @@ public class Media {
                 } else {
                     String name = meta.getString(i.getName());
                     // normalize name for platform
-                    name = HtmlUtil.nfcNormalized(name);
+                    name = Utils.nfcNormalized(name);
                     // save file
                     String destPath = dir().concat(File.separator).concat(name);
                     Utils.writeToFile(z.getInputStream(i), destPath);
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java
index 0f00dc2858..e1dd75815b 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java
@@ -61,6 +61,7 @@ import java.nio.channels.FileChannel;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 import java.sql.Date;
+import java.text.Normalizer;
 import java.text.NumberFormat;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
@@ -84,25 +85,14 @@ import java.util.zip.ZipFile;
 
 import timber.log.Timber;
 
-/**
- * TODO comments
- */
 public class Utils {
-    enum SqlCommandType { SQL_INS, SQL_UPD, SQL_DEL };
-
     // Used to format doubles with English's decimal separator system
     public static final Locale ENGLISH_LOCALE = new Locale("en_US");
 
     public static final int CHUNK_SIZE = 32768;
 
-    private static final int DAYS_BEFORE_1970 = 719163;
-
-    private static NumberFormat mCurrentNumberFormat;
     private static NumberFormat mCurrentPercentageFormat;
 
-    private static TreeSet<Long> sIdTree;
-    private static long sIdTime;
-
     // These are doubles on purpose because we want a rounded, not integer result later.
     private static final double TIME_MINUTE = 60.0;  // seconds
     private static final double TIME_HOUR = 60 * TIME_MINUTE;
@@ -220,7 +210,6 @@ public class Utils {
         if (mCurrentPercentageFormat == null) {
             mCurrentPercentageFormat = NumberFormat.getPercentInstance(LanguageUtil.getLocale());
         }
-        mCurrentNumberFormat.setMaximumFractionDigits(point);
         return mCurrentPercentageFormat.format(value);
     }
 
@@ -256,12 +245,6 @@ public class Utils {
     }
 
 
-    private String minimizeHTML(String s) {
-        // TODO
-        return s;
-    }
-
-
     /**
      * Takes a string and replaces all the HTML symbols in it with their unescaped representation.
      * This should only affect substrings of the form &something; and not tags.
@@ -288,16 +271,6 @@ public class Utils {
      * ***********************************************************************************************
      */
 
-    public static String hexifyID(long id) {
-        return Long.toHexString(id);
-    }
-
-
-    public static long dehexifyID(String id) {
-        return Long.valueOf(id, 16);
-    }
-
-
     /** Given a list of integers, return a string '(int1,int2,...)'. */
     public static String ids2str(int[] ids) {
         StringBuilder sb = new StringBuilder();
@@ -453,27 +426,6 @@ public class Utils {
         return guid;
     }
 
-//    public static JSONArray listToJSONArray(List<Object> list) {
-//        JSONArray jsonArray = new JSONArray();
-//
-//        for (Object o : list) {
-//            jsonArray.put(o);
-//        }
-//
-//        return jsonArray;
-//    }
-//
-//
-//    public static List<String> jsonArrayToListString(JSONArray jsonArray) throws JSONException {
-//        ArrayList<String> list = new ArrayList<String>();
-//
-//        int len = jsonArray.length();
-//        for (int i = 0; i < len; i++) {
-//            list.add(jsonArray.getString(i));
-//        }
-//
-//        return list;
-//    }
 
     public static long[] jsonArrayToLongArray(JSONArray jsonArray) throws JSONException {
         long[] ar = new long[jsonArray.length()];
@@ -483,6 +435,19 @@ public class Utils {
         return ar;
     }
 
+
+    public static Object[] jsonArray2Objects(JSONArray array) {
+        Object[] o = new Object[array.length()];
+        for (int i = 0; i < array.length(); i++) {
+            try {
+                o[i] = array.get(i);
+            } catch (JSONException e) {
+                throw new RuntimeException(e);
+            }
+        }
+        return o;
+    }
+
     /**
      * Fields
      * ***********************************************************************************************
@@ -603,58 +568,12 @@ public class Utils {
     }
 
 
-//    /**
-//     * MD5 sum of file.
-//     * Equivalent to checksum(open(os.path.join(mdir, file), "rb").read()))
-//     *
-//     * @param path The full path to the file
-//     * @return A string of length 32 containing the hexadecimal representation of the MD5 checksum of the contents
-//     * of the file
-//     */
-//    public static String fileChecksum(String path) {
-//        byte[] bytes = null;
-//        try {
-//            File file = new File(path);
-//            if (file != null && file.isFile()) {
-//                bytes = new byte[(int)file.length()];
-//                FileInputStream fin = new FileInputStream(file);
-//                fin.read(bytes);
-//            }
-//        } catch (FileNotFoundException e) {
-//            Timber.e("Can't find file " + path + " to calculate its checksum");
-//        } catch (IOException e) {
-//            Timber.e("Can't read file " + path + " to calculate its checksum");
-//        }
-//        if (bytes == null) {
-//            Timber.w("File " + path + " appears to be empty");
-//            return "";
-//        }
-//        MessageDigest md = null;
-//        byte[] digest = null;
-//        try {
-//            md = MessageDigest.getInstance("MD5");
-//            digest = md.digest(bytes);
-//        } catch (NoSuchAlgorithmException e) {
-//            Timber.e("Utils.checksum: No such algorithm. " + e.getMessage());
-//            throw new RuntimeException(e);
-//        }
-//        BigInteger biginteger = new BigInteger(1, digest);
-//        String result = biginteger.toString(16);
-//        // pad with zeros to length of 32
-//        if (result.length() < 32) {
-//            result = "00000000000000000000000000000000".substring(0, 32 - result.length()) + result;
-//        }
-//        return result;
-//    }
-
     /**
      *  Tempo files
      * ***********************************************************************************************
      */
 
-    // tmpdir
-    // tmpfile
-    // namedtmp
+
     /**
      * Converts an InputStream to a String.
      * @param is InputStream to convert
@@ -792,86 +711,6 @@ public class Utils {
     }
 
 
-    // Print methods
-    public static void printJSONObject(JSONObject jsonObject) {
-        printJSONObject(jsonObject, "-", null);
-    }
-
-
-    public static void printJSONObject(JSONObject jsonObject, boolean writeToFile) {
-        BufferedWriter buff;
-        try {
-            buff = writeToFile ?
-                    new BufferedWriter(new FileWriter("/sdcard/payloadAndroid.txt"), 8192) : null;
-            try {
-                printJSONObject(jsonObject, "-", buff);
-            } finally {
-                if (buff != null) {
-                    buff.close();
-                }
-            }
-        } catch (IOException ioe) {
-            Timber.e(ioe, "printJSONObject.IOException");
-        }
-    }
-
-
-    private static void printJSONObject(JSONObject jsonObject, String indentation, BufferedWriter buff) {
-        try {
-            @SuppressWarnings("unchecked") Iterator<String> keys = jsonObject.keys();
-            TreeSet<String> orderedKeysSet = new TreeSet<>();
-            while (keys.hasNext()) {
-                orderedKeysSet.add(keys.next());
-            }
-
-            for (String key : orderedKeysSet) {
-                try {
-                    Object value = jsonObject.get(key);
-                    if (value instanceof JSONObject) {
-                        if (buff != null) {
-                            buff.write(indentation + " " + key + " : ");
-                            buff.newLine();
-                        }
-                        Timber.i("  " + indentation + key + " : ");
-                        printJSONObject((JSONObject) value, indentation + "-", buff);
-                    } else {
-                        if (buff != null) {
-                            buff.write(indentation + " " + key + " = " + jsonObject.get(key).toString());
-                            buff.newLine();
-                        }
-                        Timber.i("  " + indentation + key + " = " + jsonObject.get(key).toString());
-                    }
-                } catch (JSONException e) {
-                    Timber.e(e, "printJSONObject : JSONException");
-                }
-            }
-        } catch (IOException e1) {
-            Timber.e(e1, "printJSONObject : IOException");
-        }
-    }
-
-
-    /*
-    public static void saveJSONObject(JSONObject jsonObject) throws IOException {
-        Timber.i("saveJSONObject");
-        BufferedWriter buff = new BufferedWriter(new FileWriter("/sdcard/jsonObjectAndroid.txt", true));
-        buff.write(jsonObject.toString());
-        buff.close();
-    }
-    */
-
-
-    /**
-     * Returns 1 if true, 0 if false
-     *
-     * @param b The boolean to convert to integer
-     * @return 1 if b is true, 0 otherwise
-     */
-    public static int booleanToInt(boolean b) {
-        return (b) ? 1 : 0;
-    }
-
-
     /**
      *  Returns the effective date of the present moment.
      *  If the time is prior the cut-off time (9:00am by default as of 11/02/10) return yesterday,
@@ -935,7 +774,6 @@ public class Utils {
         // with existing slashes
         if (mediaDir.length() != 0 && !mediaDir.equalsIgnoreCase("null")) {
             Uri mediaDirUri = Uri.fromFile(new File(mediaDir));
-
             return mediaDirUri.toString() +"/";
         }
         return "";
@@ -971,24 +809,6 @@ public class Utils {
     }
 
 
-    public static void updateProgressBars(View view, int x, int y) {
-        if (view == null) {
-            return;
-        }
-        if (view.getParent() instanceof LinearLayout) {
-            LinearLayout.LayoutParams lparam = new LinearLayout.LayoutParams(0, 0);
-            lparam.height = y;
-            lparam.width = x;
-            view.setLayoutParams(lparam);
-        } else if (view.getParent() instanceof FrameLayout) {
-            FrameLayout.LayoutParams lparam = new FrameLayout.LayoutParams(0, 0);
-            lparam.height = y;
-            lparam.width = x;
-            view.setLayoutParams(lparam);
-        }
-    }
-
-
     /**
      * Calculate the UTC offset
      */
@@ -998,32 +818,20 @@ public class Utils {
         return 4 * 60 * 60 - (cal.get(Calendar.ZONE_OFFSET) + cal.get(Calendar.DST_OFFSET)) / 1000;
     }
 
-    /** Returns the filename without the extension. */
-    public static String removeFileExtension(String filename) {
-      int dotPosition = filename.lastIndexOf('.');
-      if (dotPosition == -1) {
-        return filename;
-      }
-      return filename.substring(0, dotPosition);
-    }
-
-
-    /** Returns only the filename extension. */
-    public static String getFileExtension(String filename) {
+    /**
+     * Returns a String array with two elements:
+     * 0 - file name
+     * 1 - extension
+     */
+    public static String[] splitFilename(String filename) {
+        String name = filename;
+        String ext = "";
         int dotPosition = filename.lastIndexOf('.');
-        if (dotPosition == -1) {
-            return "";
+        if (dotPosition != -1) {
+            name = filename.substring(0, dotPosition);
+            ext = filename.substring(dotPosition);
         }
-        return filename.substring(dotPosition);
-    }
-
-
-    /** Removes any character that are not valid as deck names. */
-    public static String removeInvalidDeckNameCharacters(String name) {
-        if (name == null) { return null; }
-        // The only characters that we cannot absolutely allow to appear in the filename are the ones reserved in some
-        // file system. Currently these are \, /, and :, in order to cover Linux, OSX, and Windows.
-        return name.replaceAll("[:/\\\\]", "");
+        return new String[] {name, ext};
     }
 
 
@@ -1047,7 +855,7 @@ public class Utils {
         List<AnkiFont> fonts = new ArrayList<>();
         for (int i = 0; i < fontsCount; i++) {
             String filePath = fontsList[i].getAbsolutePath();
-            String filePathExtension = getFileExtension(filePath);
+            String filePathExtension = splitFilename(filePath)[1];
             for (String fontExtension : FONT_FILE_EXTENSIONS) {
                 // Go through the list of allowed extensios.
                 if (filePathExtension.equalsIgnoreCase(fontExtension)) {
@@ -1095,18 +903,6 @@ public class Utils {
     }
 
 
-    /** Joins the given string values using the delimiter between them. */
-    public static String join(String delimiter, String... values) {
-        StringBuilder sb = new StringBuilder();
-        for (String value : values) {
-            if (sb.length() != 0) {
-                sb.append(delimiter);
-            }
-            sb.append(value);
-        }
-        return sb.toString();
-    }
-
     /**
      * Simply copy a file to another location
      * @param sourceFile The source file
@@ -1173,4 +969,32 @@ public class Utils {
         return String.format(Locale.US, "android:%s:%s",
                 android.os.Build.VERSION.RELEASE, model);
     }
+
+
+    /*
+     *  Return the input string in the Unicode normalized form. This helps with text comparisons, for example a ü
+     *  stored as u plus the dots but typed as a single character compare as the same.
+     *
+     * @param txt Text to be normalized
+     * @return The input text in its NFC normalized form form.
+    */
+    public static String nfcNormalized(String txt) {
+        if (!Normalizer.isNormalized(txt, Normalizer.Form.NFC)) {
+            return Normalizer.normalize(txt, Normalizer.Form.NFC);
+        }
+        return txt;
+    }
+
+
+    /**
+     * Unescapes all sequences within the given string of text, interpreting them as HTML escaped characters.
+     * <p/>
+     * Not that this code strips any HTML tags untouched, so if the text contains any HTML tags, they will be ignored.
+     *
+     * @param htmlText the text to convert
+     * @return the unescaped text
+     */
+    public static String unescape(String htmlText) {
+        return Html.fromHtml(htmlText).toString();
+    }
 }
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java
index 7788555726..e971ca3bd6 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java
@@ -26,7 +26,6 @@ import com.ichi2.libanki.Collection;
 import com.ichi2.libanki.Media;
 import com.ichi2.libanki.Storage;
 import com.ichi2.libanki.Utils;
-import com.ichi2.utils.HtmlUtil;
 
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -631,7 +630,7 @@ public class Anki2Importer extends Importer {
 
     private void _writeDstMedia(String fname, BufferedInputStream data) {
         try {
-            String path = new File(mDst.getMedia().dir(), HtmlUtil.nfcNormalized(fname)).getAbsolutePath();
+            String path = new File(mDst.getMedia().dir(), Utils.nfcNormalized(fname)).getAbsolutePath();
             Utils.writeToFile(data, path);
             // Mark file addition to media db (see note in Media.java)
             mDst.getMedia().markFileAdd(fname);
@@ -658,8 +657,9 @@ public class Anki2Importer extends Importer {
                     continue;
                 }
                 // if model-local file exists from a previous import, use that
-                String name = Utils.removeFileExtension(fname);
-                String ext = Utils.getFileExtension(fname);
+                String[] split = Utils.splitFilename(fname);
+                String name = split[0];
+                String ext = split[1];
 
                 String lname = String.format(Locale.US, "%s_%s%s", name, mid, ext);
                 if (mDst.getMedia().have(lname)) {
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/AnkiPackageImporter.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/AnkiPackageImporter.java
index 8641ce31f7..842fea7902 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/AnkiPackageImporter.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/AnkiPackageImporter.java
@@ -23,7 +23,6 @@ import com.ichi2.anki.R;
 import com.ichi2.libanki.Collection;
 import com.ichi2.libanki.Storage;
 import com.ichi2.libanki.Utils;
-import com.ichi2.utils.HtmlUtil;
 
 import java.io.BufferedInputStream;
 import java.io.File;
@@ -105,7 +104,7 @@ public class AnkiPackageImporter extends Anki2Importer {
                 if (!file.startsWith("_") && !file.startsWith("latex-")) {
                     continue;
                 }
-                File path = new File(mCol.getMedia().dir(), HtmlUtil.nfcNormalized(file));
+                File path = new File(mCol.getMedia().dir(), Utils.nfcNormalized(file));
                 if (!path.exists()) {
                     try {
                         Utils.unzipFiles(mZip, mCol.getMedia().dir(), new String[]{c}, numToName);
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/MediaSyncer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/MediaSyncer.java
index 7661fb4323..bc8bdac572 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/MediaSyncer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/MediaSyncer.java
@@ -36,7 +36,9 @@ import java.io.File;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.List;
+import java.util.Locale;
 import java.util.zip.ZipFile;
 
 import timber.log.Timber;
@@ -123,7 +125,8 @@ public class MediaSyncer {
                     Pair<String, Integer> info = mCol.getMedia().syncInfo(fname);
                     String lsum = info.first;
                     int ldirty = info.second;
-                    mCol.log(String.format("check: lsum=%s rsum=%s ldirty=%d rusn=%d fname=%s",
+                    mCol.log(String.format(Locale.US,
+                            "check: lsum=%s rsum=%s ldirty=%d rusn=%d fname=%s",
                             TextUtils.isEmpty(lsum) ? "" : lsum.subSequence(0, 4),
                             TextUtils.isEmpty(rsum) ? "" : rsum.subSequence(0, 4),
                             ldirty,
@@ -138,7 +141,7 @@ public class MediaSyncer {
                         } else {
                             mCol.log("have same already");
                         }
-                        mCol.getMedia().markClean(Arrays.asList(fname));
+                        mCol.getMedia().markClean(Collections.singletonList(fname));
                         
                     } else if (!TextUtils.isEmpty(lsum)) {
                         // deleted remotely
@@ -152,7 +155,7 @@ public class MediaSyncer {
                     } else {
                         // deleted both sides
                         mCol.log("both sides deleted");
-                        mCol.getMedia().markClean(Arrays.asList(fname));
+                        mCol.getMedia().markClean(Collections.singletonList(fname));
                     }
                 }
                 _downloadFiles(need);
@@ -183,7 +186,8 @@ public class MediaSyncer {
                     int serverLastUsn = changes.getInt(1);
                     mCol.getMedia().markClean(fnames.subList(0, processedCnt));
 
-                    mCol.log(String.format("processed %d, serverUsn %d, clientUsn %d",
+                    mCol.log(String.format(Locale.US,
+                            "processed %d, serverUsn %d, clientUsn %d",
                             processedCnt, serverLastUsn, lastUsn));
 
                     if (serverLastUsn - processedCnt == lastUsn) {
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/Syncer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/Syncer.java
index e166fc7bb8..b54954a0e4 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/Syncer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/Syncer.java
@@ -28,7 +28,6 @@ import com.ichi2.async.Connection;
 import com.ichi2.libanki.Collection;
 import com.ichi2.libanki.Consts;
 import com.ichi2.libanki.Utils;
-import com.ichi2.utils.ConvUtils;
 
 import org.apache.http.HttpResponse;
 import org.json.JSONArray;
@@ -818,7 +817,7 @@ public class Syncer {
         for (int i = 0; i < logs.length(); i++) {
             try {
                 mCol.getDb().execute("INSERT OR IGNORE INTO revlog VALUES (?,?,?,?,?,?,?,?,?)",
-                        ConvUtils.jsonArray2Objects(logs.getJSONArray(i)));
+                        Utils.jsonArray2Objects(logs.getJSONArray(i)));
             } catch (SQLException | JSONException e) {
                 throw new RuntimeException(e);
             }
@@ -854,7 +853,7 @@ public class Syncer {
             for (int i = 0; i < data.length(); i++) {
                 JSONArray r = data.getJSONArray(i);
                 if (!lmods.containsKey(r.getLong(0)) || lmods.get(r.getLong(0)) < r.getLong(modIdx)) {
-                    update.add(ConvUtils.jsonArray2Objects(r));
+                    update.add(Utils.jsonArray2Objects(r));
                 }
             }
             mCol.log(table, data);
diff --git a/AnkiDroid/src/main/java/com/ichi2/utils/Base64.java b/AnkiDroid/src/main/java/com/ichi2/utils/Base64.java
index 82bf7f1aa8..754db77f7e 100644
--- a/AnkiDroid/src/main/java/com/ichi2/utils/Base64.java
+++ b/AnkiDroid/src/main/java/com/ichi2/utils/Base64.java
@@ -280,7 +280,7 @@ public class Base64 extends Object {
      * silly, to specify ORDERED <b>and</b> URLSAFE in which case one of them will be picked, though there is no
      * guarantee as to which one will be picked.
      */
-    private final static byte[] getAlphabet(int options) {
+    private static byte[] getAlphabet(int options) {
         if ((options & URL_SAFE) == URL_SAFE) {
             return _URL_SAFE_ALPHABET;
         } else if ((options & ORDERED) == ORDERED) {
@@ -296,7 +296,7 @@ public class Base64 extends Object {
      * silly, to specify ORDERED and URL_SAFE in which case one of them will be picked, though there is no guarantee as
      * to which one will be picked.
      */
-    private final static byte[] getDecodabet(int options) {
+    private static byte[] getDecodabet(int options) {
         if ((options & URL_SAFE) == URL_SAFE) {
             return _URL_SAFE_DECODABET;
         } else if ((options & ORDERED) == ORDERED) {
diff --git a/AnkiDroid/src/main/java/com/ichi2/utils/ConvUtils.java b/AnkiDroid/src/main/java/com/ichi2/utils/ConvUtils.java
deleted file mode 100644
index 85eb187f84..0000000000
--- a/AnkiDroid/src/main/java/com/ichi2/utils/ConvUtils.java
+++ /dev/null
@@ -1,35 +0,0 @@
-/****************************************************************************************
- * Copyright (c) 2012 Norbert Nagold <norbert.nagold@gmail.com>                         *
- *                                                                                      *
- * This program is free software; you can redistribute it and/or modify it under        *
- * the terms of the GNU General Public License as published by the Free Software        *
- * Foundation; either version 3 of the License, or (at your option) any later           *
- * version.                                                                             *
- *                                                                                      *
- * This program is distributed in the hope that it will be useful, but WITHOUT ANY      *
- * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A      *
- * PARTICULAR PURPOSE. See the GNU General Public License for more details.             *
- *                                                                                      *
- * You should have received a copy of the GNU General Public License along with         *
- * this program.  If not, see <http://www.gnu.org/licenses/>.                           *
- ****************************************************************************************/
-
-package com.ichi2.utils;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-
-public class ConvUtils {
-
-    public static Object[] jsonArray2Objects(JSONArray array) {
-        Object[] o = new Object[array.length()];
-        for (int i = 0; i < array.length(); i++) {
-            try {
-                o[i] = array.get(i);
-            } catch (JSONException e) {
-                throw new RuntimeException(e);
-            }
-        }
-        return o;
-    }
-}
diff --git a/AnkiDroid/src/main/java/com/ichi2/utils/HtmlUtil.java b/AnkiDroid/src/main/java/com/ichi2/utils/HtmlUtil.java
deleted file mode 100644
index 425b0640d7..0000000000
--- a/AnkiDroid/src/main/java/com/ichi2/utils/HtmlUtil.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/****************************************************************************************
- * Copyright (c) 2013 Flavio Lerda <flerda@gmail.com>                                   *
- *                                                                                      *
- * This program is free software; you can redistribute it and/or modify it under        *
- * the terms of the GNU General Public License as published by the Free Software        *
- * Foundation; either version 3 of the License, or (at your option) any later           *
- * version.                                                                             *
- *                                                                                      *
- * This program is distributed in the hope that it will be useful, but WITHOUT ANY      *
- * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A      *
- * PARTICULAR PURPOSE. See the GNU General Public License for more details.             *
- *                                                                                      *
- * You should have received a copy of the GNU General Public License along with         *
- * this program.  If not, see <http://www.gnu.org/licenses/>.                           *
- ****************************************************************************************/
-
-package com.ichi2.utils;
-
-import android.text.Html;
-
-import java.text.Normalizer;
-
-/**
- * Static helper containing functions to deal with HTML text.
- */
-public class HtmlUtil {
-
-    private HtmlUtil() {
-    }
-
-
-    /**
-     * Unescapes all sequences within the given string of text, interpreting them as HTML escaped characters.
-     * <p/>
-     * Not that this code strips any HTML tags untouched, so if the text contains any HTML tags, they will be ignored.
-     *
-     * @param htmlText the text to convert
-     * @return the unescaped text
-     */
-    public static String unescape(String htmlText) {
-        return Html.fromHtml(htmlText).toString();
-    }
-
-
-    /*
-     *  Return the input string in the Unicode normalized form. This helps with text comparisons, for example a ü
-     *  stored as u plus the dots but typed as a single character compare as the same.
-     *
-     * @param txt Text to be normalized
-     * @return The input text in its NFC normalized form form.
-    */
-    public static String nfcNormalized(String txt) {
-        if (!Normalizer.isNormalized(txt, Normalizer.Form.NFC)) {
-            return Normalizer.normalize(txt, Normalizer.Form.NFC);
-        }
-        return txt;
-    }
-
-}
diff --git a/AnkiDroid/src/main/java/com/ichi2/utils/HttpUtility.java b/AnkiDroid/src/main/java/com/ichi2/utils/HttpUtility.java
index 1d49fac6d0..bf8e01adc8 100644
--- a/AnkiDroid/src/main/java/com/ichi2/utils/HttpUtility.java
+++ b/AnkiDroid/src/main/java/com/ichi2/utils/HttpUtility.java
@@ -5,7 +5,6 @@ package com.ichi2.utils;
 
 import org.apache.http.HttpResponse;
 import org.apache.http.NameValuePair;
-import org.apache.http.client.ClientProtocolException;
 import org.apache.http.client.HttpClient;
 import org.apache.http.client.entity.UrlEncodedFormEntity;
 import org.apache.http.client.methods.HttpPost;
