diff --git a/app/src/main/java/com/lubenard/oring_reminder/ui/adapters/CalendarAdapter.java b/app/src/main/java/com/lubenard/oring_reminder/ui/adapters/CalendarAdapter.java
index 6c220e6..4bcd389 100644
--- a/app/src/main/java/com/lubenard/oring_reminder/ui/adapters/CalendarAdapter.java
+++ b/app/src/main/java/com/lubenard/oring_reminder/ui/adapters/CalendarAdapter.java
@@ -2,6 +2,8 @@ package com.lubenard.oring_reminder.ui.adapters;
 
 import android.app.Activity;
 import android.content.Context;
+
+import com.lubenard.oring_reminder.ui.fragments.CalendarFragment;
 import com.lubenard.oring_reminder.utils.Log;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -26,14 +28,16 @@ public class CalendarAdapter extends RecyclerView.Adapter<CalendarViewHolder> {
     private final ArrayList <Calendar> monthList;
     private Context context;
     private final FragmentActivity activity;
+    private CalendarFragment calendarFragment;
 
-    public CalendarAdapter(FragmentActivity activity, Calendar firstSession) {
+    public CalendarAdapter(FragmentActivity activity, CalendarFragment calendarFragment, Calendar firstSession) {
 
         Log.d("CalendarItemAdapter", "firstSession say is " + Utils.getdateFormatted(firstSession.getTime()));
 
         monthList = new ArrayList<>();
 
         this.activity = activity;
+        this.calendarFragment = calendarFragment;
 
         Calendar todayDate = Calendar.getInstance();
 
@@ -73,7 +77,7 @@ public class CalendarAdapter extends RecyclerView.Adapter<CalendarViewHolder> {
         View view = inflater.inflate(R.layout.calendar_item, parent, false);
         context = parent.getContext();
         Log.d("CalendarItemAdapter", "CalendarItemAdapter: returning ViewHolder");
-        return new CalendarViewHolder(view, activity, context);
+        return new CalendarViewHolder(view, activity, context, calendarFragment);
     }
 
     @Override
diff --git a/app/src/main/java/com/lubenard/oring_reminder/ui/adapters/CalendarItemAdapter.java b/app/src/main/java/com/lubenard/oring_reminder/ui/adapters/CalendarItemAdapter.java
index 8416370..6b0362a 100644
--- a/app/src/main/java/com/lubenard/oring_reminder/ui/adapters/CalendarItemAdapter.java
+++ b/app/src/main/java/com/lubenard/oring_reminder/ui/adapters/CalendarItemAdapter.java
@@ -2,6 +2,7 @@ package com.lubenard.oring_reminder.ui.adapters;
 
 import android.content.Context;
 
+import com.lubenard.oring_reminder.ui.fragments.CalendarFragment;
 import com.lubenard.oring_reminder.ui.fragments.EntryDetailsFragment;
 import com.lubenard.oring_reminder.ui.fragments.SearchFragment;
 import com.lubenard.oring_reminder.utils.Log;
@@ -40,9 +41,10 @@ public class CalendarItemAdapter extends BaseAdapter {
     // It's value is either -1 if not present, or [1..31] if present
     private int todayIndex;
     private Calendar date;
+    private CalendarFragment calendarFragment;
     private List<Pair<Integer, RingSession>> monthEntries;
 
-    public CalendarItemAdapter(FragmentActivity activity, Context context, ArrayList<String> dayList, List<Pair<Integer, RingSession>> monthEntries, int calendarOffset, int todayCounter, Calendar date) {
+    public CalendarItemAdapter(FragmentActivity activity, CalendarFragment calendarFragment, Context context, ArrayList<String> dayList, List<Pair<Integer, RingSession>> monthEntries, int calendarOffset, int todayCounter, Calendar date) {
         this.dayList = dayList;
         this.monthEntries = monthEntries;
         this.context = context;
@@ -50,6 +52,7 @@ public class CalendarItemAdapter extends BaseAdapter {
         this.calendarOffset = calendarOffset;
         this.activity = activity;
         this.date = date;
+        this.calendarFragment = calendarFragment;
         this.settingsManager = new SettingsManager(context);
     }
 
@@ -76,7 +79,7 @@ public class CalendarItemAdapter extends BaseAdapter {
         LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
         gridItem = inflater.inflate(R.layout.calendar_grid_item, null);
 
-        Log.d("CalendarItemAdapter", "Iterate over  " + dayList.get(position) + " with position " + position);
+        //Log.d(TAG, "Iterate over " + dayList.get(position) + " with position " + position);
 
         if (!dayList.get(position).equals("0")) {
 
@@ -86,14 +89,14 @@ public class CalendarItemAdapter extends BaseAdapter {
 
             List<RingSession> sessions = filterSessions(monthEntries, Integer.parseInt(dayList.get(position)));
 
-            Log.d(TAG, "Sessions for " + dayList.get(position) + " are size " + sessions.size());
+            //Log.d(TAG, "Sessions for " + dayList.get(position) + " are size " + sessions.size());
 
             if (todayIndex != -1 && todayIndex == Integer.parseInt(dayList.get(position)))
                 numberTextView.setTextColor(context.getResources().getColor(android.R.color.holo_blue_light));
 
             if (sessions.size() > 0) {
                 RingSession session = sessions.get(sessions.size() - 1);
-                Log.d("CalendarItemAdapter", "session found is " + session);
+                Log.d(TAG, "session found is " + session);
 
                 if (session != null) {
                     if (session.getIsRunning())
@@ -108,6 +111,7 @@ public class CalendarItemAdapter extends BaseAdapter {
                     numberTextView.setOnClickListener(v -> {
                         Log.d(TAG, "Clicked on item " + dayList.get(position));
                         if (sessions.size() > 1) {
+                            calendarFragment.removeMenuProvider();
                             SearchFragment fragment = new SearchFragment();
                             Bundle bundle = new Bundle();
                             String day = dayList.get(position);
@@ -119,6 +123,7 @@ public class CalendarItemAdapter extends BaseAdapter {
                                     .replace(android.R.id.content, fragment, null)
                                     .addToBackStack(null).commit();
                         } else {
+                            calendarFragment.removeMenuProvider();
                             Log.d(TAG, "Launching EntryDetailsFragment");
                             Bundle bundle = new Bundle();
                             bundle.putLong("entryId", session.getId());
@@ -149,7 +154,7 @@ public class CalendarItemAdapter extends BaseAdapter {
 
     @Override
     public boolean isEnabled(int position) {
-        Log.d(TAG, "is " + dayList.get(position) + " enabled ? answer is " + (!dayList.get(position).equals("0") && filterSessions(monthEntries, Integer.parseInt(dayList.get(position))).size() > 0));
+        //Log.d(TAG, "is " + dayList.get(position) + " enabled ? answer is " + (!dayList.get(position).equals("0") && filterSessions(monthEntries, Integer.parseInt(dayList.get(position))).size() > 0));
         return !dayList.get(position).equals("0") && filterSessions(monthEntries, Integer.parseInt(dayList.get(position))).size() > 0;
     }
 }
diff --git a/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/CalendarFragment.java b/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/CalendarFragment.java
index 4eeb3d0..39a787b 100644
--- a/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/CalendarFragment.java
+++ b/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/CalendarFragment.java
@@ -2,13 +2,22 @@ package com.lubenard.oring_reminder.ui.fragments;
 
 import static androidx.core.content.ContextCompat.getDrawable;
 
+import android.app.Activity;
 import android.os.Bundle;
 import com.lubenard.oring_reminder.utils.Log;
 import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.core.view.MenuProvider;
 import androidx.fragment.app.Fragment;
+import androidx.fragment.app.FragmentActivity;
+import androidx.lifecycle.Lifecycle;
 import androidx.recyclerview.widget.DividerItemDecoration;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
@@ -26,18 +35,39 @@ public class CalendarFragment extends Fragment {
 
     private final static String TAG = "CalendarFragment";
 
-    RecyclerView calendarRecyclerView;
-    CalendarAdapter adapter;
-    DbManager dbManager;
+    private RecyclerView calendarRecyclerView;
+    private CalendarAdapter adapter;
+    private DbManager dbManager;
+    private static FragmentActivity activity;
 
     private LinearLayoutManager linearLayoutManager;
 
+    private final MenuProvider menuProvider = new MenuProvider() {
+        @Override
+        public void onCreateMenu(@NonNull Menu menu, @NonNull MenuInflater menuInflater) {
+            menuInflater.inflate(R.menu.menu_calendar, menu);
+        }
+
+        @Override
+        public boolean onMenuItemSelected(@NonNull MenuItem menuItem) {
+            int id = menuItem.getItemId();
+            if (id == R.id.action_view_as_history) {
+                activity.removeMenuProvider(menuProvider);
+                activity.getSupportFragmentManager().beginTransaction()
+                        .replace(android.R.id.content, new HistoryFragment(), null)
+                        .addToBackStack(null).commit();
+                return true;
+            }
+            return false;
+        }
+    };
+
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         View view = inflater.inflate(R.layout.calendar_fragment, container, false);
 
-        calendarRecyclerView = view.findViewById(R.id.calendar_list);
+        Log.d(TAG, "onCreateView()");
         return view;
     }
 
@@ -47,8 +77,14 @@ public class CalendarFragment extends Fragment {
 
         getActivity().setTitle(R.string.calendar_fragment_title);
 
-        Log.d("CalendarFragment", "View is created");
+        Log.d(TAG, "onViewCreated()");
+
+        activity = requireActivity();
+
+        ((AppCompatActivity)activity).getSupportActionBar().setDisplayHomeAsUpEnabled(false);
+        activity.addMenuProvider(menuProvider);
 
+        calendarRecyclerView = view.findViewById(R.id.calendar_list);
         // Since the recyclerView has fixed size (according to screen size),
         // this is used for optimization
         calendarRecyclerView.setHasFixedSize(true);
@@ -67,12 +103,16 @@ public class CalendarFragment extends Fragment {
         calendarRecyclerView.addItemDecoration(dividerItemDecoration);
 
         if (entries.size() > 0)
-            adapter = new CalendarAdapter(requireActivity(), entries.get(0).getDatePutCalendar());
+            adapter = new CalendarAdapter(activity, this, entries.get(0).getDatePutCalendar());
         else
-            adapter = new CalendarAdapter(requireActivity(), Calendar.getInstance());
+            adapter = new CalendarAdapter(activity, this, Calendar.getInstance());
         calendarRecyclerView.setAdapter(adapter);
 
-        Log.d("CalendarFragment", "calendarRecyclerView has " + calendarRecyclerView.getChildCount() + " childs");
+        Log.d(TAG, "calendarRecyclerView has " + calendarRecyclerView.getChildCount() + " childs");
+    }
+
+    public void removeMenuProvider() {
+        activity.removeMenuProvider(menuProvider);
     }
 
     /**
@@ -82,4 +122,23 @@ public class CalendarFragment extends Fragment {
     public void onResume() {
         super.onResume();
     }
+
+    @Override
+    public void onPause() {
+        Log.d(TAG, "onPause()");
+        super.onPause();
+    }
+
+    @Override
+    public void onStop() {
+        Log.d(TAG, "onStop()");
+        super.onStop();
+    }
+
+    @Override
+    public void onDestroyView() {
+        Log.d(TAG, "onDestroyView()");
+        activity.removeMenuProvider(menuProvider);
+        super.onDestroyView();
+    }
 }
diff --git a/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/HistoryFragment.java b/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/HistoryFragment.java
index d14102d..30f04b5 100644
--- a/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/HistoryFragment.java
+++ b/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/HistoryFragment.java
@@ -45,6 +45,7 @@ public class HistoryFragment extends Fragment implements HistoryListAdapter.onLi
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        Log.d(TAG, "onViewCreated()");
         return inflater.inflate(R.layout.full_history_fragment, container, false);
     }
 
diff --git a/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/HomeFragment.java b/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/HomeFragment.java
index f786974..f2206cc 100644
--- a/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/HomeFragment.java
+++ b/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/HomeFragment.java
@@ -1,13 +1,10 @@
 package com.lubenard.oring_reminder.ui.fragments;
 
-import android.app.Activity;
-import android.app.AlertDialog;
 import android.app.DatePickerDialog;
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.os.Bundle;
 import com.lubenard.oring_reminder.utils.Log;
-import android.view.Gravity;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -35,7 +32,6 @@ import com.lubenard.oring_reminder.custom_components.BreakSession;
 import com.lubenard.oring_reminder.custom_components.RingSession;
 import com.lubenard.oring_reminder.managers.DbManager;
 import com.lubenard.oring_reminder.managers.SessionsManager;
-import com.lubenard.oring_reminder.managers.SettingsManager;
 import com.lubenard.oring_reminder.utils.Utils;
 
 import java.util.ArrayList;
@@ -48,24 +44,24 @@ public class HomeFragment extends Fragment {
     private static final String TAG = "HomeFragment";
 
     private static CircularProgressIndicator progress_bar;
-    private static Button button_start_break;
+    private Button button_start_break;
     private static FloatingActionButton fab;
-    private static TextView text_view_break;
-    private static View view;
-    private static Button button_see_curr_session;
-    private static TextView time_needed_to_complete_session;
+    private TextView text_view_break;
+    private View view;
+    private Button button_see_curr_session;
+    private TextView time_needed_to_complete_session;
 
     private ArrayList<RingSession> dataModels;
     private static DbManager dbManager;
-    private static TextView textview_progress;
-    private static TextView home_since_midnight_data;
-    private static TextView home_last_24h_data;
-    private static TextView start_session_data;
-    private static TextView estimated_end_session_data;
-    private static Context context;
+    private TextView textview_progress;
+    private TextView home_since_midnight_data;
+    private TextView home_last_24h_data;
+    private TextView start_session_data;
+    private TextView estimated_end_session_data;
+    private Context context;
     private static FragmentActivity activity;
 
-    private MenuProvider menuProvider = new MenuProvider() {
+    private final MenuProvider menuProvider = new MenuProvider() {
         @Override
         public void onCreateMenu(@NonNull Menu menu, @NonNull MenuInflater menuInflater) {
             menuInflater.inflate(R.menu.menu_main, menu);
@@ -79,20 +75,17 @@ public class HomeFragment extends Fragment {
                     searchEntry();
                     return true;
                 case R.id.action_my_spermogramms:
-                    activity.removeMenuProvider(menuProvider);
-                    getActivity().getSupportFragmentManager().beginTransaction()
+                    requireActivity().getSupportFragmentManager().beginTransaction()
                             .replace(android.R.id.content, new MySpermogramsFragment(), null)
                             .addToBackStack(null).commit();
                     return true;
                 case R.id.action_calculators:
-                    activity.removeMenuProvider(menuProvider);
-                    getActivity().getSupportFragmentManager().beginTransaction()
+                    requireActivity().getSupportFragmentManager().beginTransaction()
                             .replace(android.R.id.content, new CalculatorsFragment(), null)
                             .addToBackStack(null).commit();
                     return true;
                 case R.id.action_datas:
-                    activity.removeMenuProvider(menuProvider);
-                    getActivity().getSupportFragmentManager().beginTransaction()
+                    requireActivity().getSupportFragmentManager().beginTransaction()
                             .replace(android.R.id.content, new DatasFragment(), null)
                             .addToBackStack(null).commit();
                     return true;
@@ -105,6 +98,7 @@ public class HomeFragment extends Fragment {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        Log.d(TAG, "onCreateView()");
         return inflater.inflate(R.layout.home_fragment, container, false);
     }
 
@@ -325,7 +319,7 @@ public class HomeFragment extends Fragment {
         }
     }
 
-    private static void updateCurrSessionDatas() {
+    private void updateCurrSessionDatas() {
         RingSession lastRunningEntry = dbManager.getLastRunningEntry();
 
         if (lastRunningEntry != null) {
@@ -419,7 +413,6 @@ public class HomeFragment extends Fragment {
             });
 
             button_see_curr_session.setOnClickListener(v -> {
-                activity.removeMenuProvider(menuProvider);
                 EntryDetailsFragment fragment = new EntryDetailsFragment();
                 Bundle bundle = new Bundle();
                 bundle.putLong("entryId", dbManager.getLastRunningEntry().getId());
@@ -442,7 +435,8 @@ public class HomeFragment extends Fragment {
 
         activity.setTitle(R.string.app_name);
         ((AppCompatActivity)activity).getSupportActionBar().setDisplayHomeAsUpEnabled(false);
-        activity.addMenuProvider(menuProvider, getViewLifecycleOwner(), Lifecycle.State.CREATED);
+        Log.d(TAG, "onCreate activity is " + activity.toString() + ", menuProvider: " + menuProvider);
+        activity.addMenuProvider(menuProvider);
 
         Log.d(TAG, "onViewCreated()");
 
@@ -467,12 +461,14 @@ public class HomeFragment extends Fragment {
         start_session_data = view.findViewById(R.id.start_session_data);
         estimated_end_session_data = view.findViewById(R.id.estimated_end_data);
 
-        HomeFragment.view = view;
+        this.view = view;
     }
 
     @Override
     public void onDestroyView() {
         Log.d(TAG, "onDestroyView() called");
+        Log.d(TAG, "onDestroy activity is " + activity.toString() + ", menuProvider: " + menuProvider);
+
         activity.removeMenuProvider(menuProvider);
         super.onDestroyView();
     }
diff --git a/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/MainFragment.java b/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/MainFragment.java
index a64be14..01a16f3 100644
--- a/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/MainFragment.java
+++ b/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/MainFragment.java
@@ -20,9 +20,6 @@ public class MainFragment extends Fragment {
 
     private BottomNavigationView bottom_navigation_view;
     private int bottomNavigationViewCurrentIndex = -1;
-    private HomeFragment homeFragment = null;
-    private CalendarFragment calendarFragment = null;
-    private SettingsFragment settingsFragment = null;
     private SettingsManager settingsManager;
 
     @Override
@@ -47,25 +44,29 @@ public class MainFragment extends Fragment {
             // Avoid recreating new fragment each time, we record the current fragment
             settingsManager.setBottomNavigationViewCurrentIndex(R.id.bottom_nav_bar_home);
 
-            homeFragment = new HomeFragment();
-            getActivity().getSupportFragmentManager().beginTransaction()
-                    .replace(R.id.content_fragment, homeFragment, null).addToBackStack(null).commit();
+            Log.d(TAG, "No Fragment found in settingsManager, creating homeFragment");
+
+            requireActivity().getSupportFragmentManager().beginTransaction()
+                    .replace(R.id.content_fragment, HomeFragment.class, null).commit();
         } else {
             switch (bottomNavigationViewCurrentIndex) {
                 case R.id.bottom_nav_bar_home:
                     settingsManager.setBottomNavigationViewCurrentIndex(R.id.bottom_nav_bar_home);
+                    Log.d(TAG, "Launching HomeFragment");
                     requireActivity().getSupportFragmentManager().beginTransaction()
-                            .replace(R.id.content_fragment, new HomeFragment(), null).addToBackStack(null).commit();
+                            .replace(R.id.content_fragment, HomeFragment.class, null).addToBackStack(null).commit();
                     break;
                 case R.id.bottom_nav_bar_calendar:
                     settingsManager.setBottomNavigationViewCurrentIndex(R.id.bottom_nav_bar_calendar);
+                    Log.d(TAG, "Launching CalendarFragment");
                     requireActivity().getSupportFragmentManager().beginTransaction()
-                            .replace(R.id.content_fragment, new CalendarFragment(), null).addToBackStack(null).commit();
+                            .replace(R.id.content_fragment, CalendarFragment.class, null).commit();
                     break;
                 case R.id.bottom_nav_bar_settings:
                     settingsManager.setBottomNavigationViewCurrentIndex(R.id.bottom_nav_bar_settings);
+                    Log.d(TAG, "Launching SettingsFragment");
                     requireActivity().getSupportFragmentManager().beginTransaction()
-                            .replace(R.id.content_fragment, new SettingsFragment(), null).addToBackStack(null).commit();
+                            .replace(R.id.content_fragment, SettingsFragment.class, null).commit();
                     break;
             }
         }
@@ -74,30 +75,27 @@ public class MainFragment extends Fragment {
             int id = menuItem.getItemId();
             Log.d(TAG, "id = " + id + ", bottomNavigationViewCurrentIndex = " + bottomNavigationViewCurrentIndex);
             if (settingsManager.getBottomNavigationViewCurrentIndex() == id) {
-                Log.d(TAG, "id = bottomNavigationViewCurrentIndex");
+                Log.d(TAG, "id == bottomNavigationViewCurrentIndex");
                 return true;
             }
             switch (id) {
                 case R.id.bottom_nav_bar_home:
                     // Navigate to settings screen
-                    if (homeFragment == null) { homeFragment = new HomeFragment(); }
                     settingsManager.setBottomNavigationViewCurrentIndex(id);
                     requireActivity().getSupportFragmentManager().beginTransaction()
-                            .replace(R.id.content_fragment, homeFragment, null).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(null).commit();
+                            .replace(R.id.content_fragment, HomeFragment.class, null).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(null).commit();
                     break;
                 case R.id.bottom_nav_bar_calendar:
                     // Navigate to settings screen
-                    if (calendarFragment == null) { calendarFragment = new CalendarFragment(); }
                     settingsManager.setBottomNavigationViewCurrentIndex(id);
                     requireActivity().getSupportFragmentManager().beginTransaction()
-                            .replace(R.id.content_fragment, calendarFragment, null).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(null).commit();
+                            .replace(R.id.content_fragment, CalendarFragment.class, null).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(null).commit();
                     break;
                 case R.id.bottom_nav_bar_settings:
                     // Navigate to settings screen
-                    if (settingsFragment == null) { settingsFragment = new SettingsFragment(); }
                     settingsManager.setBottomNavigationViewCurrentIndex(R.id.bottom_nav_bar_settings);
                     requireActivity().getSupportFragmentManager().beginTransaction()
-                            .replace(R.id.content_fragment, settingsFragment, null).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(null).commit();
+                            .replace(R.id.content_fragment, SettingsFragment.class, null).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(null).commit();
                     break;
             }
             return true;
diff --git a/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/SearchFragment.java b/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/SearchFragment.java
index a7a0a09..20af4f7 100644
--- a/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/SearchFragment.java
+++ b/app/src/main/java/com/lubenard/oring_reminder/ui/fragments/SearchFragment.java
@@ -29,6 +29,7 @@ public class SearchFragment extends Fragment {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        Log.d(TAG, "onCreateView()");
         return inflater.inflate(R.layout.search_fragment, container, false);
     }
 
diff --git a/app/src/main/java/com/lubenard/oring_reminder/ui/viewHolders/CalendarViewHolder.java b/app/src/main/java/com/lubenard/oring_reminder/ui/viewHolders/CalendarViewHolder.java
index 2b34f35..d1ced1a 100644
--- a/app/src/main/java/com/lubenard/oring_reminder/ui/viewHolders/CalendarViewHolder.java
+++ b/app/src/main/java/com/lubenard/oring_reminder/ui/viewHolders/CalendarViewHolder.java
@@ -1,6 +1,8 @@
 package com.lubenard.oring_reminder.ui.viewHolders;
 
 import android.content.Context;
+
+import com.lubenard.oring_reminder.ui.fragments.CalendarFragment;
 import com.lubenard.oring_reminder.utils.Log;
 
 import android.util.Pair;
@@ -36,13 +38,15 @@ public class CalendarViewHolder extends RecyclerView.ViewHolder {
     private TextView calendarMonth;
     private int todayIndex = -1;
     private FragmentActivity activity;
+    private CalendarFragment calendarFragment;
 
-    public CalendarViewHolder(@NonNull View itemView, FragmentActivity activity, Context context) {
+    public CalendarViewHolder(@NonNull View itemView, FragmentActivity activity, Context context, CalendarFragment calendarFragment) {
         super(itemView);
 
         this.activity = activity;
         calendarGridDays = itemView.findViewById(R.id.calendarGridDays);
         calendarMonth = itemView.findViewById(R.id.calendarMonth);
+        this.calendarFragment = calendarFragment;
     }
 
     /**
@@ -82,7 +86,7 @@ public class CalendarViewHolder extends RecyclerView.ViewHolder {
         } else
             todayIndex = -1;
 
-        final CalendarItemAdapter adapter = new CalendarItemAdapter(activity, context, num, mappedSessions, calendarOffset, todayIndex, date);
+        final CalendarItemAdapter adapter = new CalendarItemAdapter(activity, calendarFragment, context, num, mappedSessions, calendarOffset, todayIndex, date);
 
         calendarGridDays.setAdapter(adapter);
     }
@@ -99,7 +103,7 @@ public class CalendarViewHolder extends RecyclerView.ViewHolder {
         for(int j = 0; j != calendarOffset; j++) {list.add("0");}
 
         for (int i = 1; i < selectedMonthFirstDay.getActualMaximum(Calendar.DAY_OF_MONTH) + 1; i++) {
-            Log.d(TAG, "Adding " + i + " to list days");
+            //Log.d(TAG, "Adding " + i + " to list days");
             list.add(String.valueOf(i));
         }
 
