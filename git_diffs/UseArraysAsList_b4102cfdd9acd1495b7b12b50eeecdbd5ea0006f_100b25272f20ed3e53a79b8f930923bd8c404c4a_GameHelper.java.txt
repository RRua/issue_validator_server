diff --git a/app/src/main/java/com/totsp/crossword/BrowseActivity.java b/app/src/main/java/com/totsp/crossword/BrowseActivity.java
index ee5dc7ae..cb368db2 100755
--- a/app/src/main/java/com/totsp/crossword/BrowseActivity.java
+++ b/app/src/main/java/com/totsp/crossword/BrowseActivity.java
@@ -41,6 +41,7 @@ import com.totsp.crossword.net.Downloaders;
 import com.totsp.crossword.net.Scrapers;
 import com.totsp.crossword.puz.Puzzle;
 import com.totsp.crossword.puz.PuzzleMeta;
+import com.totsp.crossword.shortyz.BuildConfig;
 import com.totsp.crossword.shortyz.R;
 import com.totsp.crossword.shortyz.ShortyzApplication;
 import com.totsp.crossword.view.CircleProgressBar;
@@ -466,9 +467,9 @@ public class BrowseActivity extends ShortyzActivity implements RecyclerItemClick
             this.startActivity(i);
 
             return;
-        } else if (prefs.getBoolean("release_4.3.9", true)) {
+        } else if (prefs.getBoolean("release_" + BuildConfig.VERSION_NAME, true)) {
             prefs.edit()
-                    .putBoolean("release_4.3.9", false)
+                    .putBoolean("release_"+BuildConfig.VERSION_NAME, false)
                     .apply();
 
             Intent i = new Intent(Intent.ACTION_VIEW, Uri.parse("file:///android_asset/release.html"), this,
diff --git a/app/src/main/java/com/totsp/crossword/ClueListActivity.java b/app/src/main/java/com/totsp/crossword/ClueListActivity.java
index 794ccad8..b2a6689e 100755
--- a/app/src/main/java/com/totsp/crossword/ClueListActivity.java
+++ b/app/src/main/java/com/totsp/crossword/ClueListActivity.java
@@ -24,6 +24,7 @@ import android.widget.TabHost.TabSpec;
 import android.widget.Toast;
 
 import com.totsp.crossword.io.IO;
+import com.totsp.crossword.puz.Playboard;
 import com.totsp.crossword.puz.Playboard.Position;
 import com.totsp.crossword.puz.Playboard.Word;
 import com.totsp.crossword.puz.Puzzle;
@@ -87,7 +88,7 @@ public class ClueListActivity extends ShortyzActivity {
 		utils.finishOnHomeButton(this);
 		DisplayMetrics metrics = new DisplayMetrics();
 		getWindowManager().getDefaultDisplay().getMetrics(metrics);
-		this.renderer = new PlayboardRenderer(ShortyzApplication.BOARD, metrics.densityDpi, metrics.widthPixels,
+		this.renderer = new PlayboardRenderer(ShortyzApplication.getInstance().getBoard(), metrics.densityDpi, metrics.widthPixels,
 				!prefs.getBoolean("supressHints", false),
 				ContextCompat.getColor(this, R.color.boxColor), ContextCompat.getColor(this, R.color.blankColor),
 				ContextCompat.getColor(this, R.color.errorColor));
@@ -100,11 +101,11 @@ public class ClueListActivity extends ShortyzActivity {
 					Toast.LENGTH_LONG).show();
 			finish();
 		}
-        if(ShortyzApplication.BOARD == null || ShortyzApplication.BOARD.getPuzzle() == null){
+        if(ShortyzApplication.getInstance().getBoard() == null || ShortyzApplication.getInstance().getBoard().getPuzzle() == null){
             finish();
         }
 		this.timer = new ImaginaryTimer(
-				ShortyzApplication.BOARD.getPuzzle().getTime());
+				ShortyzApplication.getInstance().getBoard().getPuzzle().getTime());
 
 		Uri u = this.getIntent().getData();
 
@@ -114,14 +115,14 @@ public class ClueListActivity extends ShortyzActivity {
 			}
 		}
 
-		puz = ShortyzApplication.BOARD.getPuzzle();
+		puz = ShortyzApplication.getInstance().getBoard().getPuzzle();
 		timer.start();
 		setContentView(R.layout.clue_list);
 
 		int keyboardType = "CONDENSED_ARROWS".equals(prefs.getString(
 				"keyboardType", "")) ? R.xml.keyboard_dpad : R.xml.keyboard;
 		Keyboard keyboard = new Keyboard(this, keyboardType);
-		keyboardView = (KeyboardView) this.findViewById(R.id.clueKeyboard);
+		keyboardView = this.findViewById(R.id.clueKeyboard);
 		keyboardView.setKeyboard(keyboard);
 		this.useNativeKeyboard = "NATIVE".equals(prefs.getString(
 				"keyboardType", ""));
@@ -195,10 +196,10 @@ public class ClueListActivity extends ShortyzActivity {
 			}
 
 			public void onTap(Point e) {
-				Word current = ShortyzApplication.BOARD.getCurrentWord();
+				Word current = ShortyzApplication.getInstance().getBoard().getCurrentWord();
 				int newAcross = current.start.across;
 				int newDown = current.start.down;
-				int box = ShortyzApplication.RENDERER.findBoxNoScale(e);
+				int box = ShortyzApplication.getInstance().getRenderer().findBoxNoScale(e);
 
 				if (box < current.length) {
 					if (tabHost.getCurrentTab() == 0) {
@@ -210,15 +211,15 @@ public class ClueListActivity extends ShortyzActivity {
 
 				Position newPos = new Position(newAcross, newDown);
 
-				if (!newPos.equals(ShortyzApplication.BOARD
+				if (!newPos.equals(ShortyzApplication.getInstance().getBoard()
 						.getHighlightLetter())) {
-					ShortyzApplication.BOARD.setHighlightLetter(newPos);
+					ShortyzApplication.getInstance().getBoard().setHighlightLetter(newPos);
 					ClueListActivity.this.render();
 				}
 			}
 		});
 
-		this.tabHost = (TabHost) this.findViewById(R.id.tabhost);
+		this.tabHost = this.findViewById(R.id.tabhost);
 		this.tabHost.setup();
 
 		TabSpec ts = tabHost.newTabSpec("TAB1");
@@ -237,23 +238,23 @@ public class ClueListActivity extends ShortyzActivity {
 		ts.setContent(R.id.downList);
 		this.tabHost.addTab(ts);
 
-		this.tabHost.setCurrentTab(ShortyzApplication.BOARD.isAcross() ? 0 : 1);
+		this.tabHost.setCurrentTab(ShortyzApplication.getInstance().getBoard().isAcross() ? 0 : 1);
 
 		this.across = (ListView) this.findViewById(R.id.acrossList);
 		this.down = (ListView) this.findViewById(R.id.downList);
 
 		across.setAdapter(new ArrayAdapter<>(this,
-				android.R.layout.simple_list_item_1, ShortyzApplication.BOARD
+				android.R.layout.simple_list_item_1, ShortyzApplication.getInstance().getBoard()
 						.getAcrossClues()));
 		across.setFocusableInTouchMode(true);
 		down.setAdapter(new ArrayAdapter<>(this,
-				android.R.layout.simple_list_item_1, ShortyzApplication.BOARD
+				android.R.layout.simple_list_item_1, ShortyzApplication.getInstance().getBoard()
 						.getDownClues()));
 		across.setOnItemClickListener(new OnItemClickListener() {
 			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
 					long arg3) {
 				arg0.setSelected(true);
-				ShortyzApplication.BOARD.jumpTo(arg2, true);
+				ShortyzApplication.getInstance().getBoard().jumpTo(arg2, true);
 				imageView.scrollTo(0, 0);
 				render();
 
@@ -266,9 +267,10 @@ public class ClueListActivity extends ShortyzActivity {
 		across.setOnItemSelectedListener(new OnItemSelectedListener() {
 			public void onItemSelected(AdapterView<?> arg0, View arg1,
 					int arg2, long arg3) {
-				if (!ShortyzApplication.BOARD.isAcross()
-						|| (ShortyzApplication.BOARD.getCurrentClueIndex() != arg2)) {
-					ShortyzApplication.BOARD.jumpTo(arg2, true);
+				Playboard board = ShortyzApplication.getInstance().getBoard();
+				if (!board.isAcross()
+						|| (board.getCurrentClueIndex() != arg2)) {
+					board.jumpTo(arg2, true);
 					imageView.scrollTo(0, 0);
 					render();
 
@@ -285,7 +287,7 @@ public class ClueListActivity extends ShortyzActivity {
 		down.setOnItemClickListener(new OnItemClickListener() {
 			public void onItemClick(AdapterView<?> arg0, View arg1,
 					final int arg2, long arg3) {
-				ShortyzApplication.BOARD.jumpTo(arg2, false);
+				ShortyzApplication.getInstance().getBoard().jumpTo(arg2, false);
 				imageView.scrollTo(0, 0);
 				render();
 
@@ -299,9 +301,9 @@ public class ClueListActivity extends ShortyzActivity {
 		down.setOnItemSelectedListener(new OnItemSelectedListener() {
 			public void onItemSelected(AdapterView<?> arg0, View arg1,
 					int arg2, long arg3) {
-				if (ShortyzApplication.BOARD.isAcross()
-						|| (ShortyzApplication.BOARD.getCurrentClueIndex() != arg2)) {
-					ShortyzApplication.BOARD.jumpTo(arg2, false);
+				if (ShortyzApplication.getInstance().getBoard().isAcross()
+						|| (ShortyzApplication.getInstance().getBoard().getCurrentClueIndex() != arg2)) {
+					ShortyzApplication.getInstance().getBoard().jumpTo(arg2, false);
 					imageView.scrollTo(0, 0);
 					render();
 
@@ -320,7 +322,8 @@ public class ClueListActivity extends ShortyzActivity {
 
 	@Override
 	public boolean onKeyDown(int keyCode, KeyEvent event) {
-		Word w = ShortyzApplication.BOARD.getCurrentWord();
+		Playboard board = ShortyzApplication.getInstance().getBoard();
+		Word w = board.getCurrentWord();
 		Position last = new Position(w.start.across
 				+ (w.across ? (w.length - 1) : 0), w.start.down
 				+ ((!w.across) ? (w.length - 1) : 0));
@@ -337,9 +340,9 @@ public class ClueListActivity extends ShortyzActivity {
 
 		case KeyEvent.KEYCODE_DPAD_LEFT:
 
-			if (!ShortyzApplication.BOARD.getHighlightLetter().equals(
-					ShortyzApplication.BOARD.getCurrentWord().start)) {
-				ShortyzApplication.BOARD.previousLetter();
+			if (!board.getHighlightLetter().equals(
+					board.getCurrentWord().start)) {
+				board.previousLetter();
 
 				this.render();
 			}
@@ -348,21 +351,21 @@ public class ClueListActivity extends ShortyzActivity {
 
 		case KeyEvent.KEYCODE_DPAD_RIGHT:
 
-			if (!ShortyzApplication.BOARD.getHighlightLetter().equals(last)) {
-				ShortyzApplication.BOARD.nextLetter();
+			if (!board.getHighlightLetter().equals(last)) {
+				board.nextLetter();
 				this.render();
 			}
 
 			return true;
 
 		case KeyEvent.KEYCODE_DEL:
-			w = ShortyzApplication.BOARD.getCurrentWord();
-			ShortyzApplication.BOARD.deleteLetter();
+			w = board.getCurrentWord();
+			board.deleteLetter();
 
-			Position p = ShortyzApplication.BOARD.getHighlightLetter();
+			Position p = board.getHighlightLetter();
 
 			if (!w.checkInWord(p.across, p.down)) {
-				ShortyzApplication.BOARD.setHighlightLetter(w.start);
+				board.setHighlightLetter(w.start);
 			}
 
 			this.render();
@@ -372,13 +375,13 @@ public class ClueListActivity extends ShortyzActivity {
 		case KeyEvent.KEYCODE_SPACE:
 
 			if (!prefs.getBoolean("spaceChangesDirection", true)) {
-				ShortyzApplication.BOARD.playLetter(' ');
+				board.playLetter(' ');
 
-				Position curr = ShortyzApplication.BOARD.getHighlightLetter();
+				Position curr = board.getHighlightLetter();
 
-				if (!ShortyzApplication.BOARD.getCurrentWord().equals(w)
-						|| (ShortyzApplication.BOARD.getBoxes()[curr.across][curr.down] == null)) {
-					ShortyzApplication.BOARD.setHighlightLetter(last);
+				if (!board.getCurrentWord().equals(w)
+						|| (board.getBoxes()[curr.across][curr.down] == null)) {
+					board.setHighlightLetter(last);
 				}
 
 				this.render();
@@ -392,13 +395,13 @@ public class ClueListActivity extends ShortyzActivity {
 						.getDisplayLabel() : ((char) keyCode));
 
 		if (PlayActivity.ALPHA.indexOf(c) != -1) {
-			ShortyzApplication.BOARD.playLetter(c);
+			board.playLetter(c);
 
-			Position p = ShortyzApplication.BOARD.getHighlightLetter();
+			Position p = board.getHighlightLetter();
 
-			if (!ShortyzApplication.BOARD.getCurrentWord().equals(w)
-					|| (ShortyzApplication.BOARD.getBoxes()[p.across][p.down] == null)) {
-				ShortyzApplication.BOARD.setHighlightLetter(last);
+			if (!board.getCurrentWord().equals(w)
+					|| (board.getBoxes()[p.across][p.down] == null)) {
+				board.setHighlightLetter(last);
 			}
 
 			this.render();
diff --git a/app/src/main/java/com/totsp/crossword/ClueListAdapter.java b/app/src/main/java/com/totsp/crossword/ClueListAdapter.java
index 087251c8..a16ffbf0 100755
--- a/app/src/main/java/com/totsp/crossword/ClueListAdapter.java
+++ b/app/src/main/java/com/totsp/crossword/ClueListAdapter.java
@@ -73,10 +73,10 @@ public class ClueListAdapter extends ArrayAdapter {
             view = inflater.inflate(R.layout.clue_detail_item, null);
         }
 
-        TextView line = (TextView) view.findViewById(R.id.clueLine);
+        TextView line = view.findViewById(R.id.clueLine);
         line.setTextSize(TypedValue.COMPLEX_UNIT_SP, this.textSize);
 
-        TextView word = (TextView) view.findViewById(R.id.clueWord);
+        TextView word = view.findViewById(R.id.clueWord);
         word.setTextSize(TypedValue.COMPLEX_UNIT_SP, (int) (this.textSize - 1.75));
 
         Clue c = this.clues[position];
@@ -85,7 +85,7 @@ public class ClueListAdapter extends ArrayAdapter {
         Box[] boxes = this.cache.get(c.number);
 
         if (boxes == null) {
-            boxes = ShortyzApplication.BOARD.getWordBoxes(c.number, across);
+            boxes = ShortyzApplication.getInstance().getBoard().getWordBoxes(c.number, across);
             cache.put(c.number, boxes);
         }
 
diff --git a/app/src/main/java/com/totsp/crossword/DownloadPickerDialogBuilder.java b/app/src/main/java/com/totsp/crossword/DownloadPickerDialogBuilder.java
index fbd0edd1..9d491652 100755
--- a/app/src/main/java/com/totsp/crossword/DownloadPickerDialogBuilder.java
+++ b/app/src/main/java/com/totsp/crossword/DownloadPickerDialogBuilder.java
@@ -67,13 +67,13 @@ public class DownloadPickerDialogBuilder {
         View layout = inflater.inflate(R.layout.download_dialog, (ViewGroup) mActivity.findViewById(R.id.download_root));
 
 
-        final DatePicker datePicker = (DatePicker) layout.findViewById(R.id.datePicker);
-        dayOfWeek = (TextView) layout.findViewById(R.id.dayOfWeek);
+        final DatePicker datePicker = layout.findViewById(R.id.datePicker);
+        dayOfWeek = layout.findViewById(R.id.dayOfWeek);
         updateDayOfWeek();
 
         datePicker.init(year, monthOfYear, dayOfMonth, dateChangedListener);
 
-        mPuzzleSelect = (Spinner) layout.findViewById(R.id.puzzleSelect);
+        mPuzzleSelect = layout.findViewById(R.id.puzzleSelect);
         mPuzzleSelect.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
             @Override
             public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
diff --git a/app/src/main/java/com/totsp/crossword/GameHelper.java b/app/src/main/java/com/totsp/crossword/GameHelper.java
index 7e7d846e..955e23aa 100755
--- a/app/src/main/java/com/totsp/crossword/GameHelper.java
+++ b/app/src/main/java/com/totsp/crossword/GameHelper.java
@@ -16,10 +16,6 @@
 
 package com.totsp.crossword;
 
-import java.security.MessageDigest;
-import java.security.NoSuchAlgorithmException;
-import java.util.Vector;
-
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.app.Dialog;
@@ -41,10 +37,15 @@ import com.google.android.gms.common.Scopes;
 import com.google.android.gms.games.GamesActivityResultCodes;
 import com.google.android.gms.games.GamesClient;
 import com.google.android.gms.games.multiplayer.Invitation;
-//import com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch;
 import com.google.android.gms.plus.PlusClient;
 import com.totsp.crossword.shortyz.R;
 
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
+import java.util.Arrays;
+import java.util.Vector;
+
+
 public class GameHelper implements
 		GooglePlayServicesClient.ConnectionCallbacks,
         GooglePlayServicesClient.OnConnectionFailedListener {
@@ -79,35 +80,35 @@ public class GameHelper implements
     };
 
     // State we are in right now
-    int mState = STATE_UNCONFIGURED;
+    private int mState = STATE_UNCONFIGURED;
 
     // Are we expecting the result of a resolution flow?
-    boolean mExpectingResolution = false;
+    private boolean mExpectingResolution = false;
 
     /**
      * The Activity we are bound to. We need to keep a reference to the Activity
      * because some games methods require an Activity (a Context won't do). We
      * are careful not to leak these references: we release them on onStop().
      */
-    Activity mActivity = null;
+    private Activity mActivity = null;
 
     // OAuth scopes required for the clients. Initialized in setup().
-    String mScopes[];
+    private String mScopes[];
 
     // Request code we use when invoking other Activities to complete the
     // sign-in flow.
-    final static int RC_RESOLVE = 9001;
+    private final static int RC_RESOLVE = 9001;
 
     // Request code when invoking Activities whose result we don't care about.
-    final static int RC_UNUSED = 9002;
+    private final static int RC_UNUSED = 9002;
 
     // Client objects we manage. If a given client is not enabled, it is null.
-    GamesClient mGamesClient = null;
-    PlusClient mPlusClient = null;
-    AppStateClient mAppStateClient = null;
+    private GamesClient mGamesClient = null;
+    private PlusClient mPlusClient = null;
+    private AppStateClient mAppStateClient = null;
 
     // What clients we manage (OR-able values, can be combined as flags)
-    public final static int CLIENT_NONE = 0x00;
+    private final static int CLIENT_NONE = 0x00;
     public final static int CLIENT_GAMES = 0x01;
     public final static int CLIENT_PLUS = 0x02;
     public final static int CLIENT_APPSTATE = 0x04;
@@ -258,9 +259,7 @@ public class GameHelper implements
         }
 
         if (null != additionalScopes) {
-            for (String scope : additionalScopes) {
-                scopesVector.add(scope);
-            }
+            scopesVector.addAll(Arrays.asList(additionalScopes));
         }
 
         mScopes = new String[scopesVector.size()];
diff --git a/app/src/main/java/com/totsp/crossword/PlayActivity.java b/app/src/main/java/com/totsp/crossword/PlayActivity.java
index 2ed6d5e0..7ffba2de 100755
--- a/app/src/main/java/com/totsp/crossword/PlayActivity.java
+++ b/app/src/main/java/com/totsp/crossword/PlayActivity.java
@@ -60,14 +60,15 @@ import java.util.TimerTask;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import static com.totsp.crossword.shortyz.ShortyzApplication.BOARD;
-import static com.totsp.crossword.shortyz.ShortyzApplication.RENDERER;
 
 public class PlayActivity extends ShortyzActivity {
     private static final Logger LOG = Logger.getLogger("com.totsp.crossword");
     private static final int INFO_DIALOG = 0;
     private static final int REVEAL_PUZZLE_DIALOG = 2;
     static final String ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
+    public static final String SHOW_TIMER = "showTimer";
+    public static final String SCALE = "scale";
+    public static final String KEYBOARD_TYPE = "keyboardType";
     @SuppressWarnings("rawtypes")
     private AdapterView across;
     @SuppressWarnings("rawtypes")
@@ -118,6 +119,15 @@ public class PlayActivity extends ShortyzActivity {
         }
     };
 
+
+    private Playboard getBoard(){
+        return ShortyzApplication.getInstance().getBoard();
+    }
+
+    private PlayboardRenderer getRenderer(){
+        return ShortyzApplication.getInstance().getRenderer();
+    }
+
     @Override
     public void onConfigurationChanged(Configuration newConfig) {
         super.onConfigurationChanged(newConfig);
@@ -171,13 +181,11 @@ public class PlayActivity extends ShortyzActivity {
         this.configuration = getBaseContext().getResources().getConfiguration();
 
         try {
-            if (!prefs.getBoolean("showTimer", false)) {
+            if (!prefs.getBoolean(SHOW_TIMER, false)) {
                 if (ShortyzApplication.isLandscape(metrics)) {
                     if (ShortyzApplication.isMiniTabletish(metrics)) {
                         utils.hideWindowTitle(this);
                     }
-                } else if (android.os.Build.VERSION.SDK_INT < 11) {
-                    utils.hideWindowTitle(this);
                 }
 
             } else {
@@ -220,31 +228,31 @@ public class PlayActivity extends ShortyzActivity {
                 throw new IOException();
             }
 
-            BOARD = new Playboard(puz, movement, prefs.getBoolean("preserveCorrectLettersInShowErrors", false));
-            RENDERER = new PlayboardRenderer(BOARD, metrics.densityDpi, metrics.widthPixels,
+            ShortyzApplication.getInstance().setBoard(new Playboard(puz, movement, prefs.getBoolean("preserveCorrectLettersInShowErrors", false)));
+            ShortyzApplication.getInstance().setRenderer(new PlayboardRenderer(getBoard(), metrics.densityDpi, metrics.widthPixels,
                     !prefs.getBoolean("supressHints", false),
                     ContextCompat.getColor(this, R.color.boxColor), ContextCompat.getColor(this, R.color.blankColor),
-                    ContextCompat.getColor(this, R.color.errorColor));
+                    ContextCompat.getColor(this, R.color.errorColor)));
 
-            float scale = prefs.getFloat("scale", 1.0F);
+            float scale = prefs.getFloat(SCALE, 1.0F);
 
-            if (scale > RENDERER.getDeviceMaxScale()) {
-                scale = RENDERER.getDeviceMaxScale();
-            } else if (scale < RENDERER.getDeviceMinScale()) {
-                scale = RENDERER.getDeviceMinScale();
+            if (scale > getRenderer().getDeviceMaxScale()) {
+                scale = getRenderer().getDeviceMaxScale();
+            } else if (scale < getRenderer().getDeviceMinScale()) {
+                scale = getRenderer().getDeviceMinScale();
             } else if (Float.isNaN(scale)) {
                 scale = 1F;
             }
-            prefs.edit().putFloat("scale", scale).apply();
+            prefs.edit().putFloat(SCALE, scale).apply();
 
-            RENDERER.setScale(scale);
-            BOARD.setSkipCompletedLetters(this.prefs.getBoolean("skipFilled",
+            getRenderer().setScale(scale);
+            getBoard().setSkipCompletedLetters(this.prefs.getBoolean("skipFilled",
                     false));
 
             if (puz.getPercentComplete() != 100) {
                 this.timer = new ImaginaryTimer(puz.getTime());
                 this.timer.start();
-                this.runTimer = prefs.getBoolean("showTimer", false);
+                this.runTimer = prefs.getBoolean(SHOW_TIMER, false);
 
                 if (runTimer) {
                     this.handler.post(this.updateTimeTask);
@@ -255,12 +263,12 @@ public class PlayActivity extends ShortyzActivity {
 
 
             int keyboardType = "CONDENSED_ARROWS".equals(prefs.getString(
-                    "keyboardType", "")) ? R.xml.keyboard_dpad : R.xml.keyboard;
+                    KEYBOARD_TYPE, "")) ? R.xml.keyboard_dpad : R.xml.keyboard;
             Keyboard keyboard = new Keyboard(this, keyboardType);
-            keyboardView = (KeyboardView) this.findViewById(R.id.playKeyboard);
+            keyboardView = this.findViewById(R.id.playKeyboard);
             keyboardView.setKeyboard(keyboard);
             this.useNativeKeyboard = "NATIVE".equals(prefs.getString(
-                    "keyboardType", ""));
+                    KEYBOARD_TYPE, ""));
 
             if (this.useNativeKeyboard) {
                 keyboardView.setVisibility(View.GONE);
@@ -347,12 +355,12 @@ public class PlayActivity extends ShortyzActivity {
                         }
                     });
 
-            this.clue = (TextView) this.findViewById(R.id.clueLine);
+            this.clue = this.findViewById(R.id.clueLine);
             if (clue != null && clue.getVisibility() != View.GONE) {
                 clue.setVisibility(View.GONE);
                 View custom = utils.onActionBarCustom(this, R.layout.clue_line_only);
                 if (custom != null) {
-                    clue = (TextView) custom.findViewById(R.id.clueLine);
+                    clue = custom.findViewById(R.id.clueLine);
                 }
             }
             if(this.clue != null) {
@@ -377,9 +385,9 @@ public class PlayActivity extends ShortyzActivity {
                     handler.post(new Runnable() {
                         public void run() {
                             try {
-                                Position p = RENDERER.findBox(e);
-                                Word w = BOARD.setHighlightLetter(p);
-                                RENDERER.draw(w);
+                                Position p = getRenderer().findBox(e);
+                                Word w = getBoard().setHighlightLetter(p);
+                                getRenderer().draw(w);
                                 PlayActivity.this.openContextMenu(boardView);
                             } catch (Exception ex) {
                                 ex.printStackTrace();
@@ -393,14 +401,14 @@ public class PlayActivity extends ShortyzActivity {
                         if (prefs.getBoolean("doubleTap", false)
                                 && ((System.currentTimeMillis() - lastTap) < 300)) {
                             if (fitToScreen) {
-                                RENDERER.setScale(prefs.getFloat("scale", 1F));
+                                getRenderer().setScale(prefs.getFloat(SCALE, 1F));
                                 boardView.setCurrentScale(1F);
-                                BOARD.setHighlightLetter(RENDERER.findBox(e));
+                                getBoard().setHighlightLetter(getRenderer().findBox(e));
                                 render();
                             } else {
                                 int w = boardView.getWidth();
                                 int h = boardView.getHeight();
-                                float scale = RENDERER.fitTo((w < h) ? w : h);
+                                float scale = getRenderer().fitTo((w < h) ? w : h);
                                 boardView.setCurrentScale(scale);
                                 render(true);
                                 boardView.scrollTo(0, 0);
@@ -408,8 +416,8 @@ public class PlayActivity extends ShortyzActivity {
 
                             fitToScreen = !fitToScreen;
                         } else {
-                            Position p = RENDERER.findBox(e);
-                            Word old = BOARD.setHighlightLetter(p);
+                            Position p = getRenderer().findBox(e);
+                            Word old = getBoard().setHighlightLetter(p);
                             PlayActivity.this.render(old);
                         }
 
@@ -452,7 +460,7 @@ public class PlayActivity extends ShortyzActivity {
         revealPuzzleDialog.setButton(AlertDialog.BUTTON_POSITIVE, "OK",
                 new DialogInterface.OnClickListener() {
                     public void onClick(DialogInterface dialog, int which) {
-                        BOARD.revealPuzzle();
+                        getBoard().revealPuzzle();
                         render();
                     }
                 });
@@ -482,13 +490,12 @@ public class PlayActivity extends ShortyzActivity {
                             public void run() {
                                 int w = boardView.getImageView().getWidth();
                                 int h = boardView.getImageView().getHeight();
-                                float scale = RENDERER.fitTo((w < h) ? w : h);
+                                float scale = getRenderer().fitTo((w < h) ? w : h);
                                 prefs.edit()
-                                        .putFloat("scale",
+                                        .putFloat(SCALE,
                                                 scale)
                                         .apply();
-                                BOARD.setHighlightLetter(RENDERER
-                                        .findBox(center));
+                                getBoard().setHighlightLetter(getRenderer().findBox(center));
 
                                 render(true);
                             }
@@ -504,33 +511,33 @@ public class PlayActivity extends ShortyzActivity {
             this.showErrors = false;
         }
 
-        if (BOARD.isShowErrors() != this.showErrors) {
-            BOARD.toggleShowErrors();
+        if (getBoard().isShowErrors() != this.showErrors) {
+            getBoard().toggleShowErrors();
         }
 
 
         this.render(true);
 
-        this.across = (AdapterView) this.findViewById(R.id.acrossList);
-        this.down = (AdapterView) this.findViewById(R.id.downList);
+        this.across = this.findViewById(R.id.acrossList);
+        this.down = this.findViewById(R.id.downList);
         boolean isGal = false;
         if ((this.across == null) && (this.down == null)) {
-            this.across = (AdapterView) this.findViewById(R.id.acrossListGal);
-            this.down = (AdapterView) this.findViewById(R.id.downListGal);
+            this.across = this.findViewById(R.id.acrossListGal);
+            this.down = this.findViewById(R.id.downListGal);
             isGal = true;
         }
 
         if ((across != null) && (down != null)) {
             across.setAdapter(this.acrossAdapter = new ClueListAdapter(this,
-                    BOARD.getAcrossClues(), true));
-            down.setAdapter(this.downAdapter = new ClueListAdapter(this, BOARD
+                    getBoard().getAcrossClues(), true));
+            down.setAdapter(this.downAdapter = new ClueListAdapter(this, getBoard()
                     .getDownClues(), false));
             if (!isGal) {
                 across.setOnItemClickListener(new OnItemClickListener() {
                     public void onItemClick(AdapterView<?> arg0, View arg1,
                                             int arg2, long arg3) {
                         arg0.setSelected(true);
-                        BOARD.jumpTo(arg2, true);
+                        getBoard().jumpTo(arg2, true);
                         render();
                     }
                 });
@@ -539,9 +546,9 @@ public class PlayActivity extends ShortyzActivity {
             across.setOnItemSelectedListener(new OnItemSelectedListener() {
                 public void onItemSelected(AdapterView<?> arg0, View arg1,
                                            int arg2, long arg3) {
-                    if (!BOARD.isAcross()
-                            || (BOARD.getCurrentClueIndex() != arg2)) {
-                        BOARD.jumpTo(arg2, true);
+                    if (!getBoard().isAcross()
+                            || (getBoard().getCurrentClueIndex() != arg2)) {
+                        getBoard().jumpTo(arg2, true);
                         render();
                     }
                 }
@@ -554,7 +561,7 @@ public class PlayActivity extends ShortyzActivity {
                 down.setOnItemClickListener(new OnItemClickListener() {
                     public void onItemClick(AdapterView<?> arg0, View arg1,
                                             final int arg2, long arg3) {
-                        BOARD.jumpTo(arg2, false);
+                        getBoard().jumpTo(arg2, false);
                         render();
                     }
                 });
@@ -563,9 +570,9 @@ public class PlayActivity extends ShortyzActivity {
             down.setOnItemSelectedListener(new OnItemSelectedListener() {
                 public void onItemSelected(AdapterView<?> arg0, View arg1,
                                            int arg2, long arg3) {
-                    if (BOARD.isAcross()
-                            || (BOARD.getCurrentClueIndex() != arg2)) {
-                        BOARD.jumpTo(arg2, false);
+                    if (getBoard().isAcross()
+                            || (getBoard().getCurrentClueIndex() != arg2)) {
+                        getBoard().jumpTo(arg2, false);
                         render();
                     }
                 }
@@ -586,38 +593,38 @@ public class PlayActivity extends ShortyzActivity {
             this.allCluesAdapter = new SeparatedListAdapter(this);
             this.allCluesAdapter.addSection(
                     "Across",
-                    this.acrossAdapter = new ClueListAdapter(this, BOARD
+                    this.acrossAdapter = new ClueListAdapter(this, getBoard()
                             .getAcrossClues(), true));
             this.allCluesAdapter.addSection(
                     "Down",
-                    this.downAdapter = new ClueListAdapter(this, BOARD
+                    this.downAdapter = new ClueListAdapter(this, getBoard()
                             .getDownClues(), false));
             allClues.setAdapter(this.allCluesAdapter);
 
             allClues.setOnItemClickListener(new OnItemClickListener() {
                 public void onItemClick(AdapterView<?> arg0, View arg1,
                                         int clickIndex, long arg3) {
-                    boolean across = clickIndex <= BOARD.getAcrossClues().length + 1;
+                    boolean across = clickIndex <= getBoard().getAcrossClues().length + 1;
                     int index = clickIndex - 1;
-                    if (index > BOARD.getAcrossClues().length) {
-                        index = index - BOARD.getAcrossClues().length - 1;
+                    if (index > getBoard().getAcrossClues().length) {
+                        index = index - getBoard().getAcrossClues().length - 1;
                     }
                     arg0.setSelected(true);
-                    BOARD.jumpTo(index, across);
+                    getBoard().jumpTo(index, across);
                     render();
                 }
             });
             allClues.setOnItemSelectedListener(new OnItemSelectedListener() {
                 public void onItemSelected(AdapterView<?> arg0, View arg1,
                                            int clickIndex, long arg3) {
-                    boolean across = clickIndex <= BOARD.getAcrossClues().length + 1;
+                    boolean across = clickIndex <= getBoard().getAcrossClues().length + 1;
                     int index = clickIndex - 1;
-                    if (index > BOARD.getAcrossClues().length) {
-                        index = index - BOARD.getAcrossClues().length - 1;
+                    if (index > getBoard().getAcrossClues().length) {
+                        index = index - getBoard().getAcrossClues().length - 1;
                     }
-                    if (!BOARD.isAcross() == across && BOARD.getCurrentClueIndex() != index) {
+                    if (!getBoard().isAcross() == across && getBoard().getCurrentClueIndex() != index) {
                         arg0.setSelected(true);
-                        BOARD.jumpTo(index, across);
+                        getBoard().jumpTo(index, across);
                         render();
                     }
                 }
@@ -626,7 +633,7 @@ public class PlayActivity extends ShortyzActivity {
                 }
             });
         }
-        if (!prefs.getBoolean("showTimer", false)) {
+        if (!prefs.getBoolean(SHOW_TIMER, false)) {
             if (ShortyzApplication.isLandscape(metrics)) {
                 if (ShortyzApplication.isMiniTabletish(metrics) && allClues != null) {
                     utils.hideActionBar(this);
@@ -638,7 +645,7 @@ public class PlayActivity extends ShortyzActivity {
         setTitle(neverNull(puz.getTitle()) + " - " + neverNull(puz.getAuthor())
              + " - 	" + neverNull(puz.getCopyright()));
         this.showCount = prefs.getBoolean("showCount", false);
-        if (this.prefs.getBoolean("fitToScreen", false) || (android.os.Build.VERSION.SDK_INT > 11 && ShortyzApplication.isLandscape(metrics)) && (ShortyzApplication.isTabletish(metrics) || ShortyzApplication.isMiniTabletish(metrics))) {
+        if (this.prefs.getBoolean("fitToScreen", false) || (ShortyzApplication.isLandscape(metrics)) && (ShortyzApplication.isTabletish(metrics) || ShortyzApplication.isMiniTabletish(metrics))) {
             this.handler.postDelayed(new Runnable() {
 
                 public void run() {
@@ -649,10 +656,10 @@ public class PlayActivity extends ShortyzActivity {
                     if (v == 0) {
                         handler.postDelayed(this, 100);
                     }
-                    float newScale = RENDERER.fitTo(v);
+                    float newScale = getRenderer().fitTo(v);
                     boardView.setCurrentScale(newScale);
 
-                    prefs.edit().putFloat("scale", newScale).apply();
+                    prefs.edit().putFloat(SCALE, newScale).apply();
                     render();
                 }
 
@@ -678,7 +685,7 @@ public class PlayActivity extends ShortyzActivity {
 //
 //            menu.add("Zoom In");
 //
-//            if (RENDERER.getScale() < RENDERER.getDeviceMaxScale())
+//            if (getRenderer().getScale() < getRenderer().getDeviceMaxScale())
 //                menu.add("Zoom In Max");
 //
 //            menu.add("Zoom Out");
@@ -721,7 +728,7 @@ public class PlayActivity extends ShortyzActivity {
         Menu zoom = menu.addSubMenu("Zoom");
         zoom.add(createSpannableForMenu("Zoom In")).setTitleCondensed("Zoom In");
 
-        if (RENDERER != null && RENDERER.getScale() < RENDERER.getDeviceMaxScale())
+        if (getRenderer() != null && getRenderer().getScale() < getRenderer().getDeviceMaxScale())
             zoom.add(createSpannableForMenu("Zoom In Max")).setTitleCondensed("Zoom In Max");
 
         zoom.add(createSpannableForMenu("Zoom Out")).setTitleCondensed("Zoom Out");
@@ -755,9 +762,9 @@ public class PlayActivity extends ShortyzActivity {
         switch (keyCode) {
             case KeyEvent.KEYCODE_SEARCH:
                 System.out.println("Next clue.");
-                BOARD.setMovementStrategy(MovementStrategy.MOVE_NEXT_CLUE);
-                previous = BOARD.nextWord();
-                BOARD.setMovementStrategy(this.getMovementStrategy());
+                getBoard().setMovementStrategy(MovementStrategy.MOVE_NEXT_CLUE);
+                previous = getBoard().nextWord();
+                getBoard().setMovementStrategy(this.getMovementStrategy());
                 this.render(previous);
 
                 return true;
@@ -773,7 +780,7 @@ public class PlayActivity extends ShortyzActivity {
             case KeyEvent.KEYCODE_DPAD_DOWN:
 
                 if ((System.currentTimeMillis() - lastKey) > 50) {
-                    previous = BOARD.moveDown();
+                    previous = getBoard().moveDown();
                     this.render(previous);
                 }
 
@@ -784,7 +791,7 @@ public class PlayActivity extends ShortyzActivity {
             case KeyEvent.KEYCODE_DPAD_UP:
 
                 if ((System.currentTimeMillis() - lastKey) > 50) {
-                    previous = BOARD.moveUp();
+                    previous = getBoard().moveUp();
                     this.render(previous);
                 }
 
@@ -795,7 +802,7 @@ public class PlayActivity extends ShortyzActivity {
             case KeyEvent.KEYCODE_DPAD_LEFT:
 
                 if ((System.currentTimeMillis() - lastKey) > 50) {
-                    previous = BOARD.moveLeft();
+                    previous = getBoard().moveLeft();
                     this.render(previous);
                 }
 
@@ -806,7 +813,7 @@ public class PlayActivity extends ShortyzActivity {
             case KeyEvent.KEYCODE_DPAD_RIGHT:
 
                 if ((System.currentTimeMillis() - lastKey) > 50) {
-                    previous = BOARD.moveRight();
+                    previous = getBoard().moveRight();
                     this.render(previous);
                 }
 
@@ -815,7 +822,7 @@ public class PlayActivity extends ShortyzActivity {
                 return true;
 
             case KeyEvent.KEYCODE_DPAD_CENTER:
-                previous = BOARD.toggleDirection();
+                previous = getBoard().toggleDirection();
                 this.render(previous);
 
                 return true;
@@ -824,10 +831,10 @@ public class PlayActivity extends ShortyzActivity {
 
                 if ((System.currentTimeMillis() - lastKey) > 150) {
                     if (prefs.getBoolean("spaceChangesDirection", true)) {
-                        previous = BOARD.toggleDirection();
+                        previous = getBoard().toggleDirection();
                         this.render(previous);
                     } else {
-                        previous = BOARD.playLetter(' ');
+                        previous = getBoard().playLetter(' ');
                         this.render(previous);
                     }
                 }
@@ -840,10 +847,10 @@ public class PlayActivity extends ShortyzActivity {
 
                 if ((System.currentTimeMillis() - lastKey) > 150) {
                     if (prefs.getBoolean("enterChangesDirection", true)) {
-                        previous = BOARD.toggleDirection();
+                        previous = getBoard().toggleDirection();
                         this.render(previous);
                     } else {
-                        previous = BOARD.nextWord();
+                        previous = getBoard().nextWord();
                         this.render(previous);
                     }
                 }
@@ -855,7 +862,7 @@ public class PlayActivity extends ShortyzActivity {
             case KeyEvent.KEYCODE_DEL:
 
                 if ((System.currentTimeMillis() - lastKey) > 150) {
-                    previous = BOARD.deleteLetter();
+                    previous = getBoard().deleteLetter();
                     this.render(previous);
                 }
 
@@ -869,7 +876,7 @@ public class PlayActivity extends ShortyzActivity {
                         .getDisplayLabel() : ((char) keyCode));
 
         if (ALPHA.indexOf(c) != -1) {
-            previous = BOARD.playLetter(c);
+            previous = getBoard().playLetter(c);
             this.render(previous);
 
             return true;
@@ -892,17 +899,17 @@ public class PlayActivity extends ShortyzActivity {
             return true;
         }
         if (item.getTitle().toString().equals("Letter")) {
-            BOARD.revealLetter();
+            getBoard().revealLetter();
             this.render();
 
             return true;
         } else if (item.getTitle().toString().equals("Word")) {
-            BOARD.revealWord();
+            getBoard().revealWord();
             this.render();
 
             return true;
         } else if (item.getTitle().toString().equals("Errors")) {
-            BOARD.revealErrors();
+            getBoard().revealErrors();
             this.render();
 
             return true;
@@ -912,9 +919,9 @@ public class PlayActivity extends ShortyzActivity {
             return true;
         } else if (item.getTitle().toString().equals("Show Errors")
                 || item.getTitle().toString().equals("Hide Errors")) {
-            BOARD.toggleShowErrors();
-            item.setTitle(BOARD.isShowErrors() ? "Hide Errors" : "Show Errors");
-            this.prefs.edit().putBoolean("showErrors", BOARD.isShowErrors())
+            getBoard().toggleShowErrors();
+            item.setTitle(getBoard().isShowErrors() ? "Hide Errors" : "Show Errors");
+            this.prefs.edit().putBoolean("showErrors", getBoard().isShowErrors())
                     .apply();
             this.render();
 
@@ -927,8 +934,8 @@ public class PlayActivity extends ShortyzActivity {
         } else if (item.getTitle().toString().equals("Zoom In")) {
             this.boardView.scrollTo(0, 0);
 
-            float newScale = RENDERER.zoomIn();
-            this.prefs.edit().putFloat("scale", newScale).apply();
+            float newScale = getRenderer().zoomIn();
+            this.prefs.edit().putFloat(SCALE, newScale).apply();
             this.fitToScreen = false;
             boardView.setCurrentScale(newScale);
             this.render();
@@ -937,8 +944,8 @@ public class PlayActivity extends ShortyzActivity {
         } else if (item.getTitle().toString().equals("Zoom In Max")) {
             this.boardView.scrollTo(0, 0);
 
-            float newScale = RENDERER.zoomInMax();
-            this.prefs.edit().putFloat("scale", newScale).apply();
+            float newScale = getRenderer().zoomInMax();
+            this.prefs.edit().putFloat(SCALE, newScale).apply();
             this.fitToScreen = false;
             boardView.setCurrentScale(newScale);
             this.render();
@@ -947,8 +954,8 @@ public class PlayActivity extends ShortyzActivity {
         } else if (item.getTitle().toString().equals("Zoom Out")) {
             this.boardView.scrollTo(0, 0);
 
-            float newScale = RENDERER.zoomOut();
-            this.prefs.edit().putFloat("scale", newScale).apply();
+            float newScale = getRenderer().zoomOut();
+            this.prefs.edit().putFloat(SCALE, newScale).apply();
             this.fitToScreen = false;
             boardView.setCurrentScale(newScale);
             this.render();
@@ -959,9 +966,9 @@ public class PlayActivity extends ShortyzActivity {
 
             return true;
         } else if (item.getTitle().toString().equals("Zoom Reset")) {
-            float newScale = RENDERER.zoomReset();
+            float newScale = getRenderer().zoomReset();
             boardView.setCurrentScale(newScale);
-            this.prefs.edit().putFloat("scale", newScale).apply();
+            this.prefs.edit().putFloat(SCALE, newScale).apply();
             this.render();
             this.boardView.scrollTo(0, 0);
 
@@ -1011,8 +1018,8 @@ public class PlayActivity extends ShortyzActivity {
 
         int v = (this.boardView.getWidth() < this.boardView.getHeight()) ? this.boardView
                 .getWidth() : this.boardView.getHeight();
-        float newScale = RENDERER.fitTo(v);
-        this.prefs.edit().putFloat("scale", newScale).apply();
+        float newScale = getRenderer().fitTo(v);
+        this.prefs.edit().putFloat(SCALE, newScale).apply();
         boardView.setCurrentScale(newScale);
         this.render();
     }
@@ -1078,17 +1085,17 @@ public class PlayActivity extends ShortyzActivity {
     protected void onResume() {
         super.onResume();
         this.resumedOn = System.currentTimeMillis();
-        BOARD.setSkipCompletedLetters(this.prefs
+        getBoard().setSkipCompletedLetters(this.prefs
                 .getBoolean("skipFilled", false));
-        BOARD.setMovementStrategy(this.getMovementStrategy());
+        getBoard().setMovementStrategy(this.getMovementStrategy());
 
         int keyboardType = "CONDENSED_ARROWS".equals(prefs.getString(
-                "keyboardType", "")) ? R.xml.keyboard_dpad : R.xml.keyboard;
+                KEYBOARD_TYPE, "")) ? R.xml.keyboard_dpad : R.xml.keyboard;
         final Keyboard keyboard = new Keyboard(this, keyboardType);
         keyboardView = (KeyboardView) this.findViewById(R.id.playKeyboard);
         keyboardView.setKeyboard(keyboard);
         this.useNativeKeyboard = "NATIVE".equals(prefs.getString(
-                "keyboardType", ""));
+                KEYBOARD_TYPE, ""));
 
         if (this.useNativeKeyboard) {
             keyboardView.setVisibility(View.GONE);
@@ -1108,7 +1115,7 @@ public class PlayActivity extends ShortyzActivity {
             timer.start();
         }
 
-        this.runTimer = prefs.getBoolean("showTimer", false);
+        this.runTimer = prefs.getBoolean(SHOW_TIMER, false);
 
         if (runTimer) {
             this.handler.post(this.updateTimeTask);
@@ -1174,13 +1181,13 @@ public class PlayActivity extends ShortyzActivity {
         dialog.setTitle("Puzzle Info");
         dialog.setContentView(R.layout.puzzle_info_dialog);
 
-        TextView view = (TextView) dialog.findViewById(R.id.puzzle_info_title);
+        TextView view = dialog.findViewById(R.id.puzzle_info_title);
         view.setText(this.puz.getTitle());
-        view = (TextView) dialog.findViewById(R.id.puzzle_info_author);
+        view = dialog.findViewById(R.id.puzzle_info_author);
         view.setText(this.puz.getAuthor());
-        view = (TextView) dialog.findViewById(R.id.puzzle_info_copyright);
+        view = dialog.findViewById(R.id.puzzle_info_copyright);
         view.setText(this.puz.getCopyright());
-        view = (TextView) dialog.findViewById(R.id.puzzle_info_time);
+        view = dialog.findViewById(R.id.puzzle_info_time);
 
         if (timer != null) {
             this.timer.stop();
@@ -1226,16 +1233,16 @@ public class PlayActivity extends ShortyzActivity {
             this.keyboardView.setVisibility(View.GONE);
         }
 
-        Clue c = BOARD.getClue();
-        BOARD.toggleDirection();
-        BOARD.toggleDirection();
+        Clue c = getBoard().getClue();
+        getBoard().toggleDirection();
+        getBoard().toggleDirection();
 
         if (c.hint == null) {
-            BOARD.toggleDirection();
-            c = BOARD.getClue();
+            getBoard().toggleDirection();
+            c = getBoard().getClue();
         }
 
-        this.boardView.setBitmap(RENDERER.draw(previous), rescale);
+        this.boardView.setBitmap(getRenderer().draw(previous), rescale);
         this.boardView.requestFocus();
         /*
 		 * If we jumped to a new word, ensure the first letter is visible.
@@ -1247,18 +1254,18 @@ public class PlayActivity extends ShortyzActivity {
             Point bottomRight;
             Point cursorTopLeft;
             Point cursorBottomRight;
-            cursorTopLeft = RENDERER.findPointTopLeft(BOARD
+            cursorTopLeft = getRenderer().findPointTopLeft(getBoard()
                     .getHighlightLetter());
-            cursorBottomRight = RENDERER.findPointBottomRight(BOARD
+            cursorBottomRight = getRenderer().findPointBottomRight(getBoard()
                     .getHighlightLetter());
 
-            if ((previous != null) && previous.equals(BOARD.getCurrentWord())) {
+            if ((previous != null) && previous.equals(getBoard().getCurrentWord())) {
                 topLeft = cursorTopLeft;
                 bottomRight = cursorBottomRight;
             } else {
-                topLeft = RENDERER
-                        .findPointTopLeft(BOARD.getCurrentWordStart());
-                bottomRight = RENDERER.findPointBottomRight(BOARD
+                topLeft = getRenderer()
+                        .findPointTopLeft(getBoard().getCurrentWordStart());
+                bottomRight = getRenderer().findPointBottomRight(getBoard()
                         .getCurrentWordStart());
             }
 
@@ -1282,19 +1289,19 @@ public class PlayActivity extends ShortyzActivity {
 
         this.clue
                 .setText("("
-                        + (BOARD.isAcross() ? "across" : "down")
+                        + (getBoard().isAcross() ? "across" : "down")
                         + ") "
                         + c.number
                         + ". "
                         + c.hint
                         + (this.showCount ? ("  ["
-                        + BOARD.getCurrentWord().length + "]") : ""));
+                        + getBoard().getCurrentWord().length + "]") : ""));
 
         if (this.allClues != null) {
-            if (BOARD.isAcross()) {
+            if (getBoard().isAcross()) {
                 ClueListAdapter cla = (ClueListAdapter) this.allCluesAdapter.sections
                         .get(0);
-                cla.setActiveDirection(BOARD.isAcross());
+                cla.setActiveDirection(getBoard().isAcross());
                 cla.setHighlightClue(c);
                 this.allCluesAdapter.notifyDataSetChanged();
                 this.allClues.setSelectionFromTop(cla.indexOf(c) + 1,
@@ -1302,21 +1309,21 @@ public class PlayActivity extends ShortyzActivity {
             } else {
                 ClueListAdapter cla = (ClueListAdapter) this.allCluesAdapter.sections
                         .get(1);
-                cla.setActiveDirection(!BOARD.isAcross());
+                cla.setActiveDirection(!getBoard().isAcross());
                 cla.setHighlightClue(c);
                 this.allCluesAdapter.notifyDataSetChanged();
                 this.allClues.setSelectionFromTop(
-                        cla.indexOf(c) + BOARD.getAcrossClues().length + 2,
+                        cla.indexOf(c) + getBoard().getAcrossClues().length + 2,
                         (this.allClues.getHeight() / 2) - 50);
             }
         }
 
         if (this.down != null) {
             this.downAdapter.setHighlightClue(c);
-            this.downAdapter.setActiveDirection(!BOARD.isAcross());
+            this.downAdapter.setActiveDirection(!getBoard().isAcross());
             this.downAdapter.notifyDataSetChanged();
 
-            if (!BOARD.isAcross() && !c.equals(this.down.getSelectedItem())) {
+            if (!getBoard().isAcross() && !c.equals(this.down.getSelectedItem())) {
                 if (this.down instanceof ListView) {
                     ((ListView) this.down).setSelectionFromTop(
                             this.downAdapter.indexOf(c),
@@ -1330,10 +1337,10 @@ public class PlayActivity extends ShortyzActivity {
 
         if (this.across != null) {
             this.acrossAdapter.setHighlightClue(c);
-            this.acrossAdapter.setActiveDirection(BOARD.isAcross());
+            this.acrossAdapter.setActiveDirection(getBoard().isAcross());
             this.acrossAdapter.notifyDataSetChanged();
 
-            if (BOARD.isAcross() && !c.equals(this.across.getSelectedItem())) {
+            if (getBoard().isAcross() && !c.equals(this.across.getSelectedItem())) {
                 if (across instanceof ListView) {
                     ((ListView) this.across).setSelectionFromTop(
                             this.acrossAdapter.indexOf(c),
diff --git a/app/src/main/java/com/totsp/crossword/PreferencesActivity.java b/app/src/main/java/com/totsp/crossword/PreferencesActivity.java
index 61479dd0..6bdbd3a8 100755
--- a/app/src/main/java/com/totsp/crossword/PreferencesActivity.java
+++ b/app/src/main/java/com/totsp/crossword/PreferencesActivity.java
@@ -111,16 +111,6 @@ public class PreferencesActivity extends PreferenceActivity
                 return true;
             }
         });
-
-//        Preference sendDebug = (Preference) findPreference("sendDebug");
-//        sendDebug.setOnPreferenceClickListener(new OnPreferenceClickListener(){
-//
-//			public boolean onPreferenceClick(Preference preference) {
-//				startActivity(ShortyzApplication.sendDebug());
-//				return true;
-//			}
-//        	
-//        });
     }
 
     protected void onResume() {
diff --git a/app/src/main/java/com/totsp/crossword/PuzzleDownloadListener.java b/app/src/main/java/com/totsp/crossword/PuzzleDownloadListener.java
index 899968df..6277a55f 100755
--- a/app/src/main/java/com/totsp/crossword/PuzzleDownloadListener.java
+++ b/app/src/main/java/com/totsp/crossword/PuzzleDownloadListener.java
@@ -87,6 +87,7 @@ public class PuzzleDownloadListener implements DownloadListener {
         File outputFile = new File(crosswords.getAbsolutePath() + "/" + fileName);
         File archiveOutputFile = new File(crosswords.getAbsolutePath() + "/archive/" + fileName);
 
+        FileOutputStream fout = null;
         try {
             InputStream in = OpenHttpConnection(new URL(url), cookies);
 
@@ -96,7 +97,7 @@ public class PuzzleDownloadListener implements DownloadListener {
                 return;
             }
 
-            FileOutputStream fout = new FileOutputStream(outputFile);
+            fout = new FileOutputStream(outputFile);
             byte[] buffer = new byte[1024];
             int len = 0;
             
@@ -118,8 +119,14 @@ public class PuzzleDownloadListener implements DownloadListener {
             }
         } catch (Exception ex) {
             sendMessage("Error downloading puzzle " + fileName);
-
-            return;
+        } finally {
+            if(fout != null){
+                try {
+                    fout.close();
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
         }
     }
 
diff --git a/app/src/main/java/com/totsp/crossword/PuzzleFinishedActivity.java b/app/src/main/java/com/totsp/crossword/PuzzleFinishedActivity.java
index f2ba99e4..27dcaec5 100755
--- a/app/src/main/java/com/totsp/crossword/PuzzleFinishedActivity.java
+++ b/app/src/main/java/com/totsp/crossword/PuzzleFinishedActivity.java
@@ -1,9 +1,5 @@
 package com.totsp.crossword;
 
-import java.text.DateFormat;
-import java.text.NumberFormat;
-import java.util.concurrent.TimeUnit;
-
 import android.content.Intent;
 import android.os.Bundle;
 import android.view.View;
@@ -17,6 +13,10 @@ import com.totsp.crossword.puz.Puzzle;
 import com.totsp.crossword.shortyz.R;
 import com.totsp.crossword.shortyz.ShortyzApplication;
 
+import java.text.DateFormat;
+import java.text.NumberFormat;
+import java.util.concurrent.TimeUnit;
+
 public class PuzzleFinishedActivity extends ShortyzActivity {
 	private static final long SECONDS = 1000;
     private static final long MINUTES = SECONDS * 60;
@@ -36,7 +36,7 @@ public class PuzzleFinishedActivity extends ShortyzActivity {
         setContentView(R.layout.completed);
         this.getWindow().setLayout(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
         
-        Puzzle puz = ShortyzApplication.BOARD.getPuzzle();
+        Puzzle puz = ShortyzApplication.getInstance().getBoard().getPuzzle();
         
         two_int.setMinimumIntegerDigits(2);
         
@@ -83,19 +83,19 @@ public class PuzzleFinishedActivity extends ShortyzActivity {
             		elapsedString +(cheatedBoxes > 0 ? "but got "+cheatedBoxes +" hints" : "")+" with #Shortyz!";
         }
         
-        TextView elapsedTime = (TextView) this.findViewById(R.id.elapsed);
+        TextView elapsedTime = this.findViewById(R.id.elapsed);
         elapsedTime.setText(elapsedString);
         
-        TextView totalCluesView = (TextView) this.findViewById(R.id.totalClues);
+        TextView totalCluesView = this.findViewById(R.id.totalClues);
         totalCluesView.setText(Integer.toString(totalClues));
         
-        TextView totalBoxesView = (TextView) this.findViewById(R.id.totalBoxes);
+        TextView totalBoxesView = this.findViewById(R.id.totalBoxes);
         totalBoxesView.setText(Integer.toString(totalBoxes));
         
-        TextView cheatedBoxesView = (TextView) this.findViewById(R.id.cheatedBoxes);
+        TextView cheatedBoxesView = this.findViewById(R.id.cheatedBoxes);
         cheatedBoxesView.setText(cheatedString);
         
-        Button share = (Button) this.findViewById(R.id.share);
+        Button share = this.findViewById(R.id.share);
         share.setOnClickListener(new OnClickListener(){
 
 			public void onClick(View v) {
@@ -109,7 +109,7 @@ public class PuzzleFinishedActivity extends ShortyzActivity {
         	
         });
         
-        Button done = (Button) this.findViewById(R.id.done);
+        Button done = this.findViewById(R.id.done);
         done.setOnClickListener(new OnClickListener(){
 
 			public void onClick(View v) {
diff --git a/app/src/main/java/com/totsp/crossword/ShortyzActivity.java b/app/src/main/java/com/totsp/crossword/ShortyzActivity.java
index 9e146d8d..cb2511fd 100755
--- a/app/src/main/java/com/totsp/crossword/ShortyzActivity.java
+++ b/app/src/main/java/com/totsp/crossword/ShortyzActivity.java
@@ -16,6 +16,7 @@ import android.os.StatFs;
 import android.preference.PreferenceManager;
 import android.util.DisplayMetrics;
 import android.view.ViewConfiguration;
+import android.widget.Toast;
 
 import com.totsp.crossword.util.NightModeHelper;
 import com.totsp.crossword.versions.AndroidVersionUtils;
@@ -106,13 +107,18 @@ public class 	ShortyzActivity extends BaseGameActivity {
 	}
 
 	private void doOrientation() {
-		if ("PORT".equals(prefs.getString("orientationLock", "UNLOCKED"))) {
-			setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
-		} else if ("LAND"
-				.equals(prefs.getString("orientationLock", "UNLOCKED"))) {
-			setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
-		} else {
-			setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);
+		try {
+			if ("PORT".equals(prefs.getString("orientationLock", "UNLOCKED"))) {
+				setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
+			} else if ("LAND"
+					.equals(prefs.getString("orientationLock", "UNLOCKED"))) {
+				setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
+			} else {
+				setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);
+			}
+		} catch(RuntimeException e) {
+			Toast.makeText(this, "Sorry, orientation lock is not supported without " +
+					"fullscreen mode anymore because of an Android change.", Toast.LENGTH_LONG).show();
 		}
 	}
 
diff --git a/app/src/main/java/com/totsp/crossword/net/Downloaders.java b/app/src/main/java/com/totsp/crossword/net/Downloaders.java
index 0533bc6e..a9886839 100755
--- a/app/src/main/java/com/totsp/crossword/net/Downloaders.java
+++ b/app/src/main/java/com/totsp/crossword/net/Downloaders.java
@@ -248,7 +248,7 @@ public class Downloaders {
         String contentTitle = "Downloading Puzzles";
 
         NotificationCompat.Builder not =
-                new NotificationCompat.Builder(context)
+                new NotificationCompat.Builder(context, ShortyzApplication.PUZZLE_DOWNLOAD_CHANNEL_ID)
                         .setSmallIcon(android.R.drawable.stat_sys_download)
                         .setContentTitle(contentTitle)
                         .setWhen(System.currentTimeMillis());
@@ -443,7 +443,7 @@ public class Downloaders {
         PendingIntent contentIntent = PendingIntent.getActivity(context, 0,
                 notificationIntent, 0);
 
-        Notification not = new NotificationCompat.Builder(context)
+        Notification not = new NotificationCompat.Builder(context, ShortyzApplication.PUZZLE_DOWNLOAD_CHANNEL_ID)
                 .setSmallIcon(android.R.drawable.stat_sys_download_done)
                 .setContentTitle(contentTitle)
                 .setContentText("New puzzles were downloaded.")
@@ -464,7 +464,7 @@ public class Downloaders {
         PendingIntent contentIntent = PendingIntent.getActivity(context, 0,
                 notificationIntent, 0);
 
-        Notification not = new NotificationCompat.Builder(context)
+        Notification not = new NotificationCompat.Builder(context, ShortyzApplication.PUZZLE_DOWNLOAD_CHANNEL_ID)
                 .setSmallIcon(android.R.drawable.stat_sys_download_done)
                 .setContentTitle(contentTitle)
                 .setContentText(puzFile.getName())
@@ -476,21 +476,4 @@ public class Downloaders {
             this.notificationManager.notify(i, not);
         }
     }
-
-//    private void postUpdatedNotification(int i, String name, File puzFile) {
-//        String contentTitle = "Updated " + name;
-//        Notification not = new Notification(
-//                android.R.drawable.stat_sys_download_done, contentTitle,
-//                System.currentTimeMillis());
-//        Intent notificationIntent = new Intent(Intent.ACTION_EDIT,
-//                Uri.fromFile(puzFile), context, PlayActivity.class);
-//        PendingIntent contentIntent = PendingIntent.getActivity(context, 0,
-//                notificationIntent, 0);
-//        not.setLatestEventInfo(context, contentTitle, puzFile.getName(),
-//                contentIntent);
-//
-//        if ((this.notificationManager != null) && !supressMessages) {
-//            this.notificationManager.notify(i, not);
-//        }
-//    }
 }
diff --git a/app/src/main/java/com/totsp/crossword/shortyz/ShortyzApplication.java b/app/src/main/java/com/totsp/crossword/shortyz/ShortyzApplication.java
index cd56df15..4de92e99 100755
--- a/app/src/main/java/com/totsp/crossword/shortyz/ShortyzApplication.java
+++ b/app/src/main/java/com/totsp/crossword/shortyz/ShortyzApplication.java
@@ -22,12 +22,14 @@ import com.google.api.services.gmail.Gmail;
 import com.totsp.crossword.gmail.GMConstants;
 import com.totsp.crossword.io.IO;
 import com.totsp.crossword.puz.Playboard;
+import com.totsp.crossword.versions.AndroidVersionUtils;
 import com.totsp.crossword.view.PlayboardRenderer;
 
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
 import java.io.FileWriter;
+import java.io.IOException;
 import java.io.PrintWriter;
 import java.util.Arrays;
 import java.util.concurrent.atomic.AtomicReference;
@@ -39,26 +41,46 @@ import okhttp3.CookieJar;
 
 public class ShortyzApplication extends Application {
 
+	public static String PUZZLE_DOWNLOAD_CHANNEL_ID = "shortyz.downloads";
     private static ShortyzApplication INSTANCE;
-	public static Playboard BOARD;
-	public static PlayboardRenderer RENDERER;
+	private Playboard board;
+	private PlayboardRenderer renderer;
 	public static File DEBUG_DIR;
 	public static File CROSSWORDS = new File(
 			Environment.getExternalStorageDirectory(), "crosswords");
 	final HttpTransport transport = AndroidHttp.newCompatibleTransport();
 	final JsonFactory jsonFactory = GsonFactory.getDefaultInstance();
-	private static GoogleAccountCredential credential;
-	private static Gmail gmailService;
-	private static SharedPreferences settings;
+	private GoogleAccountCredential credential;
+	private Gmail gmailService;
+	private SharedPreferences settings;
 	private AtomicReference<PersistentCookieJar> cookieJar = new AtomicReference<>(null);
 
-	@Override
+	public void setBoard(Playboard board){
+	    this.board = board;
+    }
+
+    public Playboard getBoard() {
+         return board;
+    }
+
+    public void setRenderer(PlayboardRenderer renderer){
+	    this.renderer = renderer;
+    }
+
+    public PlayboardRenderer getRenderer() {
+        return renderer;
+    }
+
+    @Override
 	public void onCreate() {
 		INSTANCE = this;
 		// Initialize credentials and service object.
 		settings = PreferenceManager.getDefaultSharedPreferences(this);
 		updateCredential(settings);
 		super.onCreate();
+
+		AndroidVersionUtils.Factory.getInstance().createNotificationChannel(this);
+
 		Fabric.with(this, new Crashlytics());
 
 		if (Environment.MEDIA_MOUNTED.equals(Environment
@@ -72,8 +94,9 @@ public class ShortyzApplication extends Application {
 				return;
 			}
 			File info = new File(DEBUG_DIR, "device");
+			PrintWriter writer = null;
 			try {
-				PrintWriter writer = new PrintWriter(new FileWriter(info));
+				writer = new PrintWriter(new FileWriter(info));
 				writer.println("VERSION INT: "
 						+ android.os.Build.VERSION.SDK_INT);
 				writer.println("VERSION STRING: "
@@ -86,6 +109,10 @@ public class ShortyzApplication extends Application {
 				writer.close();
 			} catch (Exception e) {
 				throw new RuntimeException(e);
+			} finally {
+				if(writer != null){
+					writer.close();
+				}
 			}
 		}
 	}
@@ -97,10 +124,10 @@ public class ShortyzApplication extends Application {
 		if (zip.exists()) {
 			zip.delete();
 		}
-
+		ZipOutputStream zos = null;
 		if (debug.exists())
 			try {
-				ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(
+				zos = new ZipOutputStream(new FileOutputStream(
 						zip));
 				zipDir(debug.getAbsolutePath(), zos);
 				zos.close();
@@ -115,11 +142,20 @@ public class ShortyzApplication extends Application {
 			} catch (Exception e) {
 				e.printStackTrace();
 				throw new RuntimeException(e);
+			} finally {
+				if(zos != null){
+					try {
+						zos.close();
+					} catch (IOException e) {
+						e.printStackTrace();
+					}
+				}
 			}
 		return null;
 	}
 
 	public static void zipDir(String dir2zip, ZipOutputStream zos) {
+		FileInputStream fis = null;
 		try {
 			File zipDir = new File(dir2zip);
 			String[] dirList = zipDir.list();
@@ -132,14 +168,23 @@ public class ShortyzApplication extends Application {
 					zipDir(filePath, zos);
 					continue;
 				}
-				FileInputStream fis = new FileInputStream(f);
+				try {
+					fis = new FileInputStream(f);
 
-				ZipEntry anEntry = new ZipEntry(f.getPath());
-				zos.putNextEntry(anEntry);
-				while ((bytesIn = fis.read(readBuffer)) != -1) {
-					zos.write(readBuffer, 0, bytesIn);
+					ZipEntry anEntry = new ZipEntry(f.getPath());
+					zos.putNextEntry(anEntry);
+					while ((bytesIn = fis.read(readBuffer)) != -1) {
+						zos.write(readBuffer, 0, bytesIn);
+					}
+				} finally {
+					if(fis != null){
+						try {
+							fis.close();
+						} catch (IOException e) {
+							e.printStackTrace();
+						}
+					}
 				}
-				fis.close();
 			}
 		} catch (Exception e) {
 			e.printStackTrace();
diff --git a/app/src/main/java/com/totsp/crossword/versions/AndroidVersionUtils.java b/app/src/main/java/com/totsp/crossword/versions/AndroidVersionUtils.java
index b2e34a23..75bd9898 100755
--- a/app/src/main/java/com/totsp/crossword/versions/AndroidVersionUtils.java
+++ b/app/src/main/java/com/totsp/crossword/versions/AndroidVersionUtils.java
@@ -44,8 +44,11 @@ public interface AndroidVersionUtils {
 			}
 			System.out.println("Creating utils for version: "
 					+ android.os.Build.VERSION.SDK_INT);
-
-			if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+			if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+				System.out.println("Using Oreo");
+				return INSTANCE = new OreoUtil();
+			}
+			else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
 				System.out.println("Using Lollipop");
 				return INSTANCE = new LollipopUtil();
 			}
@@ -84,4 +87,6 @@ public interface AndroidVersionUtils {
 	boolean checkBackgroundDownload(SharedPreferences prefs, boolean hasWritePermissions);
 
 	void clearBackgroundDownload(SharedPreferences prefs);
+
+	void createNotificationChannel(Context context);
 }
diff --git a/app/src/main/java/com/totsp/crossword/versions/DefaultUtil.java b/app/src/main/java/com/totsp/crossword/versions/DefaultUtil.java
index 921d2453..1fe36f3e 100755
--- a/app/src/main/java/com/totsp/crossword/versions/DefaultUtil.java
+++ b/app/src/main/java/com/totsp/crossword/versions/DefaultUtil.java
@@ -3,11 +3,9 @@ package com.totsp.crossword.versions;
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.net.Uri;
-import android.support.v7.app.ActionBarActivity;
 import android.support.v7.app.AppCompatActivity;
 import android.view.MenuItem;
 import android.view.SubMenu;
-import android.view.View;
 import android.view.Window;
 
 import com.totsp.crossword.io.IO;
@@ -17,6 +15,7 @@ import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import java.io.File;
 import java.io.FileOutputStream;
+import java.io.IOException;
 import java.net.URL;
 import java.util.Map;
 import java.util.Map.Entry;
@@ -39,11 +38,11 @@ public abstract class DefaultUtil implements AndroidVersionUtils {
 		for (Entry<String, String> e : headers.entrySet()){
 			requestBuilder = requestBuilder.header(e.getKey(), e.getValue());
 		}
-
+        FileOutputStream fos = null;
 		try {
 			Response response = httpclient.newCall(requestBuilder.build()).execute();
 
-			FileOutputStream fos = new FileOutputStream(destination);
+			fos = new FileOutputStream(destination);
 			ByteArrayOutputStream baos = new ByteArrayOutputStream();
 			
 			IO.copyStream(response.body().byteStream(), baos);
@@ -54,35 +53,33 @@ public abstract class DefaultUtil implements AndroidVersionUtils {
 		} catch (Exception e) {
 			e.printStackTrace();
 			return false;
-		}
+		} finally {
+		    if(fos != null){
+                try {
+                    fos.close();
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+        }
 		
 	}
 
-	public abstract void finishOnHomeButton(AppCompatActivity a);
-
-	public abstract void holographic(AppCompatActivity playActivity);
-
 	public abstract void onActionBarWithText(MenuItem a);
 
 	public abstract void onActionBarWithText(SubMenu reveal);
 
 	public abstract void storeMetas(Uri uri, PuzzleMeta meta);
 
-	public abstract View onActionBarCustom(AppCompatActivity a, int id);
-
-	public void hideWindowTitle(ActionBarActivity a) {
+	public void hideWindowTitle(AppCompatActivity a) {
 		a.requestWindowFeature(Window.FEATURE_NO_TITLE);
 	}
 
-	public abstract void hideActionBar(AppCompatActivity a);
-
     public abstract void onActionBarWithoutText(MenuItem a);
 
-    public abstract void hideTitleOnPortrait(AppCompatActivity a);
-
-	public abstract boolean isBackgroundDownloadAvaliable();
 
 	public abstract boolean checkBackgroundDownload(SharedPreferences prefs, boolean hasWritePermissions);
 
 	public abstract void clearBackgroundDownload(SharedPreferences prefs);
+
 }
diff --git a/app/src/main/java/com/totsp/crossword/versions/GingerbreadUtil.java b/app/src/main/java/com/totsp/crossword/versions/GingerbreadUtil.java
index 5ab24988..3359897c 100755
--- a/app/src/main/java/com/totsp/crossword/versions/GingerbreadUtil.java
+++ b/app/src/main/java/com/totsp/crossword/versions/GingerbreadUtil.java
@@ -75,6 +75,11 @@ public class GingerbreadUtil extends DefaultUtil {
 
     }
 
+    @Override
+    public void createNotificationChannel(Context context) {
+
+    }
+
     @Override
     public void toggleNightMode(ShortyzActivity activity) {
 
diff --git a/app/src/main/java/com/totsp/crossword/versions/OreoUtil.java b/app/src/main/java/com/totsp/crossword/versions/OreoUtil.java
new file mode 100644
index 00000000..57ab15cf
--- /dev/null
+++ b/app/src/main/java/com/totsp/crossword/versions/OreoUtil.java
@@ -0,0 +1,28 @@
+package com.totsp.crossword.versions;
+
+import android.annotation.TargetApi;
+import android.app.NotificationChannel;
+import android.app.NotificationManager;
+import android.content.Context;
+import android.os.Build;
+import android.util.Log;
+
+import com.totsp.crossword.shortyz.ShortyzApplication;
+
+@TargetApi(Build.VERSION_CODES.O)
+public class OreoUtil extends LollipopUtil {
+
+    @Override
+    public void createNotificationChannel(Context context) {
+        Log.i(OreoUtil.class.getSimpleName(), "Creating notification channel");
+        CharSequence name = "Downloads";
+        String description = "Notifications about downloaded puzzles";
+        int importance = NotificationManager.IMPORTANCE_LOW;
+        NotificationChannel channel = new NotificationChannel(ShortyzApplication.PUZZLE_DOWNLOAD_CHANNEL_ID
+                , name, importance);
+        channel.setDescription(description);
+        NotificationManager notificationManager = context.getSystemService(NotificationManager.class);
+        notificationManager.createNotificationChannel(channel);
+
+    }
+}
