diff --git a/src/com/android/alarmclock/AlarmAlert.java b/src/com/android/alarmclock/AlarmAlert.java
index e78112d9..71871d54 100644
--- a/src/com/android/alarmclock/AlarmAlert.java
+++ b/src/com/android/alarmclock/AlarmAlert.java
@@ -78,7 +78,9 @@ public class AlarmAlert extends Activity {
         mVolumeBehavior = Integer.parseInt(vol);
 
         requestWindowFeature(android.view.Window.FEATURE_NO_TITLE);
-        getWindow().addFlags(WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);
+        getWindow().addFlags(WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED
+                | WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON
+                | WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);
         updateLayout();
 
         // Register to get the alarm killed intent.
@@ -216,21 +218,6 @@ public class AlarmAlert extends Activity {
         setTitle();
     }
 
-    @Override
-    protected void onStart() {
-        super.onStart();
-        if (Log.LOGV) Log.v("AlarmAlert.onStart()");
-        // Acquire a separate lock for the screen to stay on.
-        AlarmAlertWakeLock.acquireScreenWakeLock(this);
-    }
-
-    @Override
-    protected void onStop() {
-        super.onStop();
-        if (Log.LOGV) Log.v("AlarmAlert.onStop()");
-        AlarmAlertWakeLock.releaseScreenLock();
-    }
-
     @Override
     public void onDestroy() {
         super.onDestroy();
diff --git a/src/com/android/alarmclock/AlarmAlertWakeLock.java b/src/com/android/alarmclock/AlarmAlertWakeLock.java
index d6ab7649..8cbcd94c 100644
--- a/src/com/android/alarmclock/AlarmAlertWakeLock.java
+++ b/src/com/android/alarmclock/AlarmAlertWakeLock.java
@@ -25,7 +25,6 @@ import android.os.PowerManager;
  */
 class AlarmAlertWakeLock {
 
-    private static PowerManager.WakeLock sScreenWakeLock;
     private static PowerManager.WakeLock sCpuWakeLock;
 
     static void acquireCpuWakeLock(Context context) {
@@ -44,22 +43,6 @@ class AlarmAlertWakeLock {
         sCpuWakeLock.acquire();
     }
 
-    static void acquireScreenWakeLock(Context context) {
-        Log.v("Acquiring screen wake lock");
-        if (sScreenWakeLock != null) {
-            return;
-        }
-
-        PowerManager pm =
-                (PowerManager) context.getSystemService(Context.POWER_SERVICE);
-
-        sScreenWakeLock = pm.newWakeLock(
-                PowerManager.FULL_WAKE_LOCK |
-                PowerManager.ACQUIRE_CAUSES_WAKEUP |
-                PowerManager.ON_AFTER_RELEASE, Log.LOGTAG);
-        sScreenWakeLock.acquire();
-    }
-
     static void releaseCpuLock() {
         Log.v("Releasing cpu wake lock");
         if (sCpuWakeLock != null) {
@@ -67,12 +50,4 @@ class AlarmAlertWakeLock {
             sCpuWakeLock = null;
         }
     }
-
-    static void releaseScreenLock() {
-        Log.v("Releasing screen lock");
-        if (sScreenWakeLock != null) {
-            sScreenWakeLock.release();
-            sScreenWakeLock = null;
-        }
-    }
 }
diff --git a/src/com/android/alarmclock/AlarmReceiver.java b/src/com/android/alarmclock/AlarmReceiver.java
index 7fc5b35e..34870019 100644
--- a/src/com/android/alarmclock/AlarmReceiver.java
+++ b/src/com/android/alarmclock/AlarmReceiver.java
@@ -89,12 +89,8 @@ public class AlarmReceiver extends BroadcastReceiver {
         }
 
         // Maintain a cpu wake lock until the AlarmAlert and AlarmKlaxon can
-        // pick it up. Also acquire the screen lock so the screen is on before
-        // starting the AlarmAlert activity. Do this before launching the
-        // AlarmAlert so that the ActivityManager does not try to pause the
-        // activity due to the screen being off.
+        // pick it up.
         AlarmAlertWakeLock.acquireCpuWakeLock(context);
-        AlarmAlertWakeLock.acquireScreenWakeLock(context);
 
         /* Close dialogs and window shade */
         Intent closeDialogs = new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
