diff --git a/app/src/main/java/ch/bailu/aat/services/cache/osm_features/Icon.java b/app/src/main/java/ch/bailu/aat/services/cache/osm_features/Icon.java
deleted file mode 100644
index e1bd4f48..00000000
--- a/app/src/main/java/ch/bailu/aat/services/cache/osm_features/Icon.java
+++ /dev/null
@@ -1,53 +0,0 @@
-package ch.bailu.aat.services.cache.osm_features;
-
-import android.content.Context;
-import android.content.res.AssetManager;
-import android.content.res.Resources;
-import android.graphics.Color;
-import android.graphics.drawable.Drawable;
-
-import com.caverock.androidsvg.SVG;
-import com.caverock.androidsvg.SVGParseException;
-
-import java.io.IOException;
-
-import ch.bailu.aat.services.icons.IconMapService;
-import ch.bailu.aat.util.graphic.SyncTileBitmap;
-import ch.bailu.aat.util.ui.AppDensity;
-import ch.bailu.aat.util.ui.AppLog;
-
-
-final class Icon {
-    public final Drawable way, node, area, relation;
-    private final int icon_size;
-
-
-    public Icon(Context context) {
-        int sicon_size = new AppDensity(context).toPixel_i(IconMapService.SMALL_ICON_SIZE);
-        icon_size =new AppDensity(context).toPixel_i(IconMapService.BIG_ICON_SIZE);
-
-        way = toDrawable(context,"way.svg",sicon_size,Color.WHITE);
-        node = toDrawable(context,"symbols/node.svg",sicon_size,Color.WHITE);
-        area = toDrawable(context,"symbols/area.svg",sicon_size,Color.WHITE);
-        relation = toDrawable(context,"symbols/relation.svg",sicon_size,Color.WHITE);
-    }
-
-    public Drawable toDrawable(Context context, String asset) {
-        return Icon.toDrawable(context, asset, icon_size, Color.TRANSPARENT);
-    }
-
-
-    public static Drawable toDrawable(Context context, String asset, int size, int color) {
-        AssetManager assets = context.getAssets();
-        Resources res = context.getResources();
-
-        try {
-            SVG svg = SVG.getFromAsset(assets, asset);
-            return SyncTileBitmap.toDrawable(svg, size, res, color);
-
-        } catch (SVGParseException | IOException e) {
-            AppLog.d(asset,asset);
-        }
-        return null;
-    }
-}
diff --git a/app/src/main/java/ch/bailu/aat/services/icons/IconMap.java b/app/src/main/java/ch/bailu/aat/services/icons/IconMap.java
index d038e20d..6e694416 100644
--- a/app/src/main/java/ch/bailu/aat/services/icons/IconMap.java
+++ b/app/src/main/java/ch/bailu/aat/services/icons/IconMap.java
@@ -3,19 +3,17 @@ package ch.bailu.aat.services.icons;
 import java.util.HashMap;
 
 public final class IconMap {
-    private final static String SVG_PREFIX="symbols/";
-    private final static String SVG_SUFFIX=".svg";
+
 
    public class Icon {
         public final String svg;
 
         public Icon(String file_name) {
-            svg = SVG_PREFIX + file_name + SVG_SUFFIX;
+            svg = IconMapService.SVG_DIRECTORY + file_name + IconMapService.SVG_SUFFIX;
         }
     }
 
 
-
     private final HashMap<Integer, HashMap<String, Icon>> key_list =
             new HashMap<Integer, HashMap<String, Icon>>();
 
diff --git a/app/src/main/java/ch/bailu/aat/services/icons/IconMapService.java b/app/src/main/java/ch/bailu/aat/services/icons/IconMapService.java
index efca826e..650e282b 100644
--- a/app/src/main/java/ch/bailu/aat/services/icons/IconMapService.java
+++ b/app/src/main/java/ch/bailu/aat/services/icons/IconMapService.java
@@ -9,21 +9,20 @@ import ch.bailu.aat.gpx.interfaces.GpxPointInterface;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.VirtualService;
 import ch.bailu.aat.services.cache.ImageObjectAbstract;
+import ch.bailu.aat.util.WithStatusText;
 import ch.bailu.aat.util.fs.foc.FocAsset;
 import ch.bailu.aat.util.ui.AppLog;
-import ch.bailu.aat.util.WithStatusText;
 import ch.bailu.util_java.foc.Foc;
 
 public final class IconMapService extends VirtualService implements WithStatusText {
-    public static final float BIG_ICON_SIZE = 48;//64;
-    public static final float SMALL_ICON_SIZE = 24;
-
+    public static final float BIG_ICON_SIZE = 48;
 
     private final static int NKEY_KEY = Keys.toIndex("class");
     private final static int NKEY_VALUE = Keys.toIndex("type");
 
-    private final static String MAP_FILE="symbols/iconmap.txt";
-
+    public final static String SVG_SUFFIX = ".svg";
+    public final static String SVG_DIRECTORY = "icons/";
+    private final static String SVG_MAP_FILE = SVG_DIRECTORY + "iconmap.txt";
 
 
     private final IconMap map;
@@ -37,7 +36,7 @@ public final class IconMapService extends VirtualService implements WithStatusTe
         map = new IconMap();
 
         try {
-            Foc map_file = new FocAsset(sc.getContext().getAssets(), MAP_FILE);
+            Foc map_file = new FocAsset(sc.getContext().getAssets(), SVG_MAP_FILE);
             new IconMapParser(map_file, map);
         } catch (IOException e) {
             AppLog.e(getContext(), this, e);
@@ -46,16 +45,6 @@ public final class IconMapService extends VirtualService implements WithStatusTe
 
     }
 
-    public ImageObjectAbstract getIconSVG(int key, String value, int size) {
-        String id = toAssetPath(key, value);
-
-        if (id != null)
-            return cache.getIcon(id, size);
-
-        return null;
-    }
-
-
     public ImageObjectAbstract getIconSVG(final GpxPointInterface point, final int size) {
 
         GpxAttributes attr = point.getAttributes();
