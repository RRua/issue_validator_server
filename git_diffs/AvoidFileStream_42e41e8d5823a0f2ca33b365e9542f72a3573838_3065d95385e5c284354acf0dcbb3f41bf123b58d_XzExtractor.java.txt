diff --git a/app/src/main/java/com/amaze/filemanager/activities/AboutActivity.java b/app/src/main/java/com/amaze/filemanager/activities/AboutActivity.java
index b2dae2d73..54df8ca67 100644
--- a/app/src/main/java/com/amaze/filemanager/activities/AboutActivity.java
+++ b/app/src/main/java/com/amaze/filemanager/activities/AboutActivity.java
@@ -84,7 +84,6 @@ public class AboutActivity extends BasicActivity implements View.OnClickListener
         mAppBarLayout = findViewById(R.id.appBarLayout);
         mCollapsingToolbarLayout = findViewById(R.id.collapsing_toolbar_layout);
         mTitleTextView =  findViewById(R.id.text_view_title);
-        ImageView mLicensesIcon = findViewById(R.id.image_view_license);
         mAuthorsDivider = findViewById(R.id.view_divider_authors);
         mDeveloper1Divider = findViewById(R.id.view_divider_developers_1);
 
diff --git a/app/src/main/java/com/amaze/filemanager/activities/MainActivity.java b/app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
index a1e6d3747..0aae10941 100644
--- a/app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
+++ b/app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
@@ -212,8 +212,6 @@ public class MainActivity extends PermissionsActivity implements SmbConnectionLi
 
     private TabHandler tabHandler;
 
-    private AsyncTask<Void, Void, Boolean> cloudSyncTask;
-
     private AppBarLayout appBarLayout;
 
     private View fabBgView;
@@ -1315,7 +1313,7 @@ public class MainActivity extends PermissionsActivity implements SmbConnectionLi
             }
             switch (operation) {
                 case DataUtils.DELETE://deletion
-                    new DeleteTask(null, mainActivity).execute((oparrayList));
+                    new DeleteTask(mainActivity).execute((oparrayList));
                     break;
                 case DataUtils.COPY://copying
                     //legacy compatibility
@@ -1829,11 +1827,6 @@ public class MainActivity extends PermissionsActivity implements SmbConnectionLi
 
     @Override
     public Loader<Cursor> onCreateLoader(int id, Bundle args) {
-        if (cloudSyncTask != null && cloudSyncTask.getStatus() == AsyncTask.Status.RUNNING) {
-            cloudSyncTask.cancel(true);
-
-        }
-
         Uri uri = Uri.withAppendedPath(Uri.parse("content://" + CloudContract.PROVIDER_AUTHORITY), "/keys.db/secret_keys");
 
         String[] projection = new String[] {
diff --git a/app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java b/app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
index 8e8e7a3b6..22795f49f 100644
--- a/app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
+++ b/app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
@@ -210,7 +210,6 @@ public class PreferencesActivity extends ThemedActivity {
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
-            SharedPreferences Sp = PreferenceManager.getDefaultSharedPreferences(this);
             boolean colourednavigation = getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
diff --git a/app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java b/app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
index ab9ae4551..6dbbbe939 100644
--- a/app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
+++ b/app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
@@ -203,7 +203,7 @@ public class AppsAdapter extends ArrayAdapter<AppDataParcelable> {
                                             } else {
                                                 files.add(f1);
                                             }
-                                            new DeleteTask(app.getActivity().getContentResolver(), app.getActivity()).execute((files));
+                                            new DeleteTask(app.getActivity()).execute((files));
                                         })).build().show();
                             } else {
                                 Toast.makeText(app.getActivity(),app.getString(R.string.enablerootmde),Toast.LENGTH_SHORT).show();
diff --git a/app/src/main/java/com/amaze/filemanager/adapters/HiddenAdapter.java b/app/src/main/java/com/amaze/filemanager/adapters/HiddenAdapter.java
index 99a586c62..cc07f514d 100644
--- a/app/src/main/java/com/amaze/filemanager/adapters/HiddenAdapter.java
+++ b/app/src/main/java/com/amaze/filemanager/adapters/HiddenAdapter.java
@@ -75,7 +75,7 @@ public class HiddenAdapter extends RecyclerView.Adapter<HiddenViewHolder> {
                 HybridFileParcelable baseFile = new HybridFileParcelable(items.get(position).getPath() + "/.nomedia");
                 baseFile.setMode(OpenMode.FILE);
                 a1.add(baseFile);
-                new DeleteTask(context.getActivity().getContentResolver(), c).execute((a1));
+                new DeleteTask(c).execute((a1));
             }
             dataUtils.removeHiddenFile(items.get(position).getPath());
             items.remove(items.get(position));
diff --git a/app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java b/app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
index 9953839a5..55ce1a27b 100644
--- a/app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
+++ b/app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
@@ -515,7 +515,7 @@ public class RecyclerAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolde
                 if (holder.about != null) {
                     if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT))
                         holder.about.setColorFilter(grey_color);
-                    showPopup(holder.about, rowItem, p);
+                    showPopup(holder.about, rowItem);
                 }
                 holder.genericIcon.setOnClickListener(v -> {
                     int id = v.getId();
@@ -772,7 +772,7 @@ public class RecyclerAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolde
                 if (holder.about != null) {
                     if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT))
                         holder.about.setColorFilter(grey_color);
-                    showPopup(holder.about, rowItem, p);
+                    showPopup(holder.about, rowItem);
                 }
                 if (getBoolean(PREFERENCE_SHOW_LAST_MODIFIED))
                     holder.date.setText(rowItem.date1);
@@ -904,7 +904,7 @@ public class RecyclerAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolde
         modelProvider.getPreloadRequestBuilder(iconData).listener(requestListener).into(view);
     }
 
-    private void showPopup(View v, final LayoutElementParcelable rowItem, final int position) {
+    private void showPopup(View v, final LayoutElementParcelable rowItem) {
         v.setOnClickListener(view -> {
             PopupMenu popupMenu = new ItemPopupMenu(context, mainFrag.getMainActivity(),
                     utilsProvider, mainFrag, rowItem, view, sharedPrefs);
diff --git a/app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java b/app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
index f7839fdcb..aa85cac81 100644
--- a/app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
+++ b/app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
@@ -56,12 +56,12 @@ public class DeleteTask extends AsyncTask<ArrayList<HybridFileParcelable>, Strin
     private CompressedExplorerFragment compressedExplorerFragment;
     private DataUtils dataUtils = DataUtils.getInstance();
 
-    public DeleteTask(ContentResolver c, Context cd) {
+    public DeleteTask(Context cd) {
         this.cd = cd;
         rootMode = PreferenceManager.getDefaultSharedPreferences(cd).getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
     }
 
-    public DeleteTask(ContentResolver c, Context cd, CompressedExplorerFragment compressedExplorerFragment) {
+    public DeleteTask(Context cd, CompressedExplorerFragment compressedExplorerFragment) {
         this.cd = cd;
         rootMode = PreferenceManager.getDefaultSharedPreferences(cd).getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
         this.compressedExplorerFragment = compressedExplorerFragment;
diff --git a/app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/RarHelperTask.java b/app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/RarHelperTask.java
index 36b35e10c..3e50b1cdb 100644
--- a/app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/RarHelperTask.java
+++ b/app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/RarHelperTask.java
@@ -39,7 +39,6 @@ import java.util.ArrayList;
 
 public class RarHelperTask extends CompressedHelperTask {
 
-    private WeakReference<Context> context;
     private String fileLocation;
     private String relativeDirectory;
 
@@ -48,10 +47,9 @@ public class RarHelperTask extends CompressedHelperTask {
      * @param realFileDirectory the location of the zip file
      * @param dir relativeDirectory to access inside the zip file
      */
-    public RarHelperTask(Context context, String realFileDirectory, String dir, boolean goBack,
+    public RarHelperTask(String realFileDirectory, String dir, boolean goBack,
                          OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> l) {
         super(goBack, l);
-        this.context = new WeakReference<>(context);
         fileLocation = realFileDirectory;
         relativeDirectory = dir;
     }
diff --git a/app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/TarHelperTask.java b/app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/TarHelperTask.java
index f9fbaad9d..102f678ed 100644
--- a/app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/TarHelperTask.java
+++ b/app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/TarHelperTask.java
@@ -41,13 +41,11 @@ import static com.amaze.filemanager.filesystem.compressed.CompressedHelper.SEPAR
 
 public class TarHelperTask extends CompressedHelperTask {
 
-    private WeakReference<Context> context;
     private String filePath, relativePath;
 
-    public TarHelperTask(Context context, String filePath, String relativePath, boolean goBack,
+    public TarHelperTask(String filePath, String relativePath, boolean goBack,
                          OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> l) {
         super(goBack, l);
-        this.context = new WeakReference<>(context);
         this.filePath = filePath;
         this.relativePath = relativePath;
     }
diff --git a/app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java b/app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
index d09c387e6..3a0bdd402 100644
--- a/app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
+++ b/app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
@@ -428,7 +428,7 @@ public class CopyService extends AbstractProgressiveService {
                         if (!failedFOps.contains(a))
                             toDelete.add(a);
                     }
-                    new DeleteTask(getContentResolver(), c).execute((toDelete));
+                    new DeleteTask(c).execute((toDelete));
                 }
             }
 
diff --git a/app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java b/app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
index 6d4b27c07..fc04c8956 100644
--- a/app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
+++ b/app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
@@ -54,7 +54,6 @@ public class DecryptService extends AbstractProgressiveService {
     private ArrayList<DatapointParcelable> dataPackages = new ArrayList<>();
     private ServiceWatcherUtil serviceWatcherUtil;
     private long totalSize = 0l;
-    private OpenMode openMode;
     private String decryptPath;
     private HybridFileParcelable baseFile;
     private ArrayList<HybridFile> failedOps = new ArrayList<>();
@@ -80,7 +79,7 @@ public class DecryptService extends AbstractProgressiveService {
                 .getColorPreference()
                 .getCurrentUserColorPreferences(this, sharedPreferences).accent;
 
-        openMode = OpenMode.values()[intent.getIntExtra(TAG_OPEN_MODE, OpenMode.UNKNOWN.ordinal())];
+        OpenMode openMode = OpenMode.values()[intent.getIntExtra(TAG_OPEN_MODE, OpenMode.UNKNOWN.ordinal())];
         notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
         Intent notificationIntent = new Intent(this, MainActivity.class);
         notificationIntent.setAction(Intent.ACTION_MAIN);
diff --git a/app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java b/app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
index ac12475a6..07341283e 100644
--- a/app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
+++ b/app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
@@ -53,7 +53,6 @@ public class EncryptService extends AbstractProgressiveService {
     private ArrayList<DatapointParcelable> dataPackages = new ArrayList<>();
     private ServiceWatcherUtil serviceWatcherUtil;
     private long totalSize = 0l;
-    private OpenMode openMode;
     private HybridFileParcelable baseFile;
     private ArrayList<HybridFile> failedOps = new ArrayList<>();
     private String targetFilename;
@@ -79,7 +78,7 @@ public class EncryptService extends AbstractProgressiveService {
                 .getColorPreference()
                 .getCurrentUserColorPreferences(this, sharedPreferences).accent;
 
-        openMode = OpenMode.values()[intent.getIntExtra(TAG_OPEN_MODE, OpenMode.UNKNOWN.ordinal())];
+        OpenMode openMode = OpenMode.values()[intent.getIntExtra(TAG_OPEN_MODE, OpenMode.UNKNOWN.ordinal())];
         notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
         Intent notificationIntent = new Intent(this, MainActivity.class);
         notificationIntent.setAction(Intent.ACTION_MAIN);
diff --git a/app/src/main/java/com/amaze/filemanager/database/SortHandler.java b/app/src/main/java/com/amaze/filemanager/database/SortHandler.java
index 80a6d4b11..c41789bae 100644
--- a/app/src/main/java/com/amaze/filemanager/database/SortHandler.java
+++ b/app/src/main/java/com/amaze/filemanager/database/SortHandler.java
@@ -31,8 +31,6 @@ public class SortHandler extends SQLiteOpenHelper {
     public static final String COLUMN_SORT_PATH = "path";
     public static final String COLUMN_SORT_TYPE = "type";
 
-    private Context context;
-
     public static int getSortType(Context context, String path) {
         SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(context);
         final Set<String> onlyThisFloders = sharedPref.getStringSet(PREFERENCE_SORTBY_ONLY_THIS, new HashSet<>());
@@ -51,7 +49,6 @@ public class SortHandler extends SQLiteOpenHelper {
 
     public SortHandler(Context context) {
         super(context, DATABASE_NAME, null, TabHandler.DATABASE_VERSION);
-        this.context = context;
     }
 
     @Override
diff --git a/app/src/main/java/com/amaze/filemanager/database/TabHandler.java b/app/src/main/java/com/amaze/filemanager/database/TabHandler.java
index e1a62d989..5cae48a7e 100644
--- a/app/src/main/java/com/amaze/filemanager/database/TabHandler.java
+++ b/app/src/main/java/com/amaze/filemanager/database/TabHandler.java
@@ -50,11 +50,8 @@ public class TabHandler extends SQLiteOpenHelper {
     protected static final String COLUMN_ENCRYPTED_PATH = "path";
     protected static final String COLUMN_ENCRYPTED_PASSWORD = "password";
 
-    private Context context;
-
     public TabHandler(Context context) {
         super(context, DATABASE_NAME, null, DATABASE_VERSION);
-        this.context = context;
         // The call to onUpgrade() is not performed unless getWritableDatabase() is called.
         // See more at https://github.com/TeamAmaze/AmazeFileManager/pull/1262
         getWritableDatabase();
diff --git a/app/src/main/java/com/amaze/filemanager/filesystem/CustomFileObserver.java b/app/src/main/java/com/amaze/filemanager/filesystem/CustomFileObserver.java
index 5e3e48956..44956a067 100644
--- a/app/src/main/java/com/amaze/filemanager/filesystem/CustomFileObserver.java
+++ b/app/src/main/java/com/amaze/filemanager/filesystem/CustomFileObserver.java
@@ -145,12 +145,6 @@ public class CustomFileObserver extends FileObserver {
         messagingScheduled = false;
     }
 
-    /**
-     *  No such file or directory
-     *  From: http://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html
-     */
-    private static final int ENOENT = 2, ENOTDIR = 20;
-
     private ScheduledExecutorService executor = null;
 
     /**
diff --git a/app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java b/app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
index bd4df3c6d..d0e50bccd 100644
--- a/app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
+++ b/app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
@@ -140,7 +140,7 @@ public class RootHelper {
         return null;
     }
 
-    public static HybridFileParcelable generateBaseFile(DocumentFile file, boolean showHidden) {
+    public static HybridFileParcelable generateBaseFile(DocumentFile file) {
         long size = 0;
         if (!file.isDirectory())
             size = file.length();
diff --git a/app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/RarDecompressor.java b/app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/RarDecompressor.java
index 63f230d29..2e63dada2 100644
--- a/app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/RarDecompressor.java
+++ b/app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/RarDecompressor.java
@@ -26,7 +26,6 @@ import android.content.Context;
 
 import com.amaze.filemanager.asynchronous.asynctasks.compress.RarHelperTask;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
-import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 import com.github.junrar.rarfile.FileHeader;
@@ -44,7 +43,7 @@ public class RarDecompressor extends Decompressor {
     @Override
     public RarHelperTask changePath(String path, boolean addGoBackItem,
                                        OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
-        return new RarHelperTask(context, filePath, path, addGoBackItem, onFinish);
+        return new RarHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 
     public static String convertName(FileHeader file) {
diff --git a/app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/TarDecompressor.java b/app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/TarDecompressor.java
index 65b68c4f5..306e90f48 100644
--- a/app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/TarDecompressor.java
+++ b/app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/TarDecompressor.java
@@ -39,7 +39,7 @@ public class TarDecompressor extends Decompressor {
 
     @Override
     public TarHelperTask changePath(String path, boolean addGoBackItem, OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
-        return new TarHelperTask(context, filePath, path, addGoBackItem, onFinish);
+        return new TarHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 
 }
diff --git a/app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java b/app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
index 60140455b..423b0720d 100644
--- a/app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
+++ b/app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
@@ -355,7 +355,7 @@ public class CompressedExplorerFragment extends Fragment implements BottomBarBut
         // in case of opening any unknown file inside the zip
 
         if (files.get(0).exists()) {
-            new DeleteTask(getActivity().getContentResolver(), getActivity(), this).execute(files);
+            new DeleteTask(getActivity(), this).execute(files);
         }
     }
 
diff --git a/app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java b/app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
index 6434acbe8..a2853c5d5 100644
--- a/app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
+++ b/app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
@@ -691,7 +691,6 @@ public class MainFragment extends android.support.v4.app.Fragment implements Bot
                     return true;
                 case R.id.rename:
 
-                    final ActionMode m = mode;
                     final HybridFileParcelable f;
                     f = checkedItems.get(0).generateBaseFile();
                     rename(f);
@@ -1447,7 +1446,7 @@ public class MainFragment extends android.support.v4.app.Fragment implements Bot
 
             if (!isEncryptOpen && encryptBaseFiles.size() != 0) {
                 // we've opened the file and are ready to delete it
-                new DeleteTask(getMainActivity().getContentResolver(), getActivity()).execute(encryptBaseFiles);
+                new DeleteTask(getActivity()).execute(encryptBaseFiles);
             }
         }
     }
diff --git a/app/src/main/java/com/amaze/filemanager/fragments/SearchWorkerFragment.java b/app/src/main/java/com/amaze/filemanager/fragments/SearchWorkerFragment.java
index 11a6c52a5..2375c4615 100644
--- a/app/src/main/java/com/amaze/filemanager/fragments/SearchWorkerFragment.java
+++ b/app/src/main/java/com/amaze/filemanager/fragments/SearchWorkerFragment.java
@@ -25,8 +25,6 @@ public class SearchWorkerFragment extends Fragment {
 
     public SearchAsyncTask mSearchAsyncTask;
 
-    private static final String TAG = "SearchWorkerFragment";
-
     private HelperCallbacks mCallbacks;
 
     // interface for activity to communicate with asynctask
diff --git a/app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbSearchDialog.java b/app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbSearchDialog.java
index 574fab445..3cee2c5b3 100644
--- a/app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbSearchDialog.java
+++ b/app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbSearchDialog.java
@@ -118,10 +118,8 @@ public class SmbSearchDialog extends DialogFragment {
 
         private ArrayList<ComputerParcelable> items;
         private LayoutInflater mInflater;
-        private Context context;
 
         public ListViewAdapter(Context context, List<ComputerParcelable> objects) {
-            this.context = context;
             items = new ArrayList<>(objects);
             mInflater = (LayoutInflater) context
                 .getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
diff --git a/app/src/main/java/com/amaze/filemanager/ui/views/Indicator.java b/app/src/main/java/com/amaze/filemanager/ui/views/Indicator.java
index 6b627546d..2ada13c7e 100644
--- a/app/src/main/java/com/amaze/filemanager/ui/views/Indicator.java
+++ b/app/src/main/java/com/amaze/filemanager/ui/views/Indicator.java
@@ -99,7 +99,6 @@ public class Indicator extends View implements ViewPager.OnPageChangeListener,
 
     // animation
     private ValueAnimator moveAnimation;
-    private AnimatorSet joiningAnimationSet;
     private PendingRetreatAnimator retreatAnimation;
     private PendingRevealAnimator[] revealAnimations;
     private final Interpolator interpolator;
@@ -649,9 +648,7 @@ public class Indicator extends View implements ViewPager.OnPageChangeListener,
     }
 
     private void cancelJoiningAnimations() {
-        if (joiningAnimationSet != null && joiningAnimationSet.isRunning()) {
-            joiningAnimationSet.cancel();
-        }
+        // TODO: 20/08/18 ?
     }
 
     /**
diff --git a/app/src/main/java/com/amaze/filemanager/ui/views/drawer/ActionViewStateManager.java b/app/src/main/java/com/amaze/filemanager/ui/views/drawer/ActionViewStateManager.java
index 6e8c8622b..6cef197b1 100644
--- a/app/src/main/java/com/amaze/filemanager/ui/views/drawer/ActionViewStateManager.java
+++ b/app/src/main/java/com/amaze/filemanager/ui/views/drawer/ActionViewStateManager.java
@@ -16,8 +16,7 @@ public class ActionViewStateManager {
     private @ColorInt int idleIconColor;
     private @ColorInt int selectedIconColor;
 
-    public ActionViewStateManager(NavigationView navView, @ColorInt int idleColor,
-                                  @ColorInt int accentColor) {
+    public ActionViewStateManager(@ColorInt int idleColor, @ColorInt int accentColor) {
         idleIconColor = idleColor;
         selectedIconColor = accentColor;
     }
diff --git a/app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java b/app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
index ba453006c..d95c9e8e7 100644
--- a/app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
+++ b/app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
@@ -167,7 +167,7 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
             idleColor = Color.WHITE;
         }
 
-        actionViewStateManager = new ActionViewStateManager(navView, idleColor, accentColor);
+        actionViewStateManager = new ActionViewStateManager(idleColor, accentColor);
 
         ColorStateList drawerColors = new ColorStateList(
                 new int[][] {
diff --git a/app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java b/app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
index 3bf0cdfd9..ccb0edac4 100644
--- a/app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
+++ b/app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
@@ -528,7 +528,7 @@ public class MainActivityHelper {
     public void deleteFiles(ArrayList<HybridFileParcelable> files) {
         if (files == null || files.size() == 0) return;
         if (files.get(0).isSmb()) {
-            new DeleteTask(null, mainActivity).execute((files));
+            new DeleteTask(mainActivity).execute((files));
             return;
         }
         int mode = checkFolder(new File(files.get(0).getPath()).getParentFile(), mainActivity);
@@ -536,7 +536,7 @@ public class MainActivityHelper {
             mainActivity.oparrayList = (files);
             mainActivity.operation = DataUtils.DELETE;
         } else if (mode == 1 || mode == 0)
-            new DeleteTask(null, mainActivity).execute((files));
+            new DeleteTask(mainActivity).execute((files));
         else Toast.makeText(mainActivity, R.string.not_allowed, Toast.LENGTH_SHORT).show();
     }
 
diff --git a/app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamServer.java b/app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamServer.java
index 6601f163f..1c38946b5 100644
--- a/app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamServer.java
+++ b/app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamServer.java
@@ -199,7 +199,6 @@ public abstract class CloudStreamServer {
     public CloudStreamServer(int port, File wwwroot ) throws IOException
     {
         myTcpPort = port;
-        this.myRootDir = wwwroot;
         myServerSocket = tryBind(myTcpPort);
         myThread = new Thread(() -> {
             try {
@@ -226,7 +225,6 @@ public abstract class CloudStreamServer {
 
     public CloudStreamServer(File wwwroot ) throws IOException
     {
-        this.myRootDir = wwwroot;
         myServerSocket = tryBind(myTcpPort);
         myThread = new Thread(() -> {
             try {
@@ -889,7 +887,6 @@ public abstract class CloudStreamServer {
     private int myTcpPort;
     private final ServerSocket myServerSocket;
     private Thread myThread;
-    private File myRootDir;
 
     // ==================================================
     // File server code
