diff --git a/Stately/app/src/main/java/com/lloydtorres/stately/issues/IssuesFragment.java b/Stately/app/src/main/java/com/lloydtorres/stately/issues/IssuesFragment.java
index 9fab32e7..673fb774 100644
--- a/Stately/app/src/main/java/com/lloydtorres/stately/issues/IssuesFragment.java
+++ b/Stately/app/src/main/java/com/lloydtorres/stately/issues/IssuesFragment.java
@@ -55,9 +55,6 @@ public class IssuesFragment extends Fragment {
     private Toolbar toolbar;
     private SwipeRefreshLayout mSwipeRefreshLayout;
 
-    private static AlertDialog.Builder dialogBuilder;
-    private static DialogInterface.OnClickListener dialogClickListener;
-
     private RecyclerView mRecyclerView;
     private RecyclerView.LayoutManager mLayoutManager;
     private RecyclerView.Adapter mRecyclerAdapter;
@@ -101,15 +98,6 @@ public class IssuesFragment extends Fragment {
             }
         });
 
-        // dialog and listener for positive responses
-        dialogBuilder = new AlertDialog.Builder(getContext(), R.style.MaterialDialog);
-        dialogClickListener = new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                dismissAllIssues(mView);
-            }
-        };
-
         // Setup recyclerview
         mRecyclerView = (RecyclerView) mView.findViewById(R.id.refreshview_recycler);
         mRecyclerView.setHasFixedSize(true);
@@ -259,88 +247,6 @@ public class IssuesFragment extends Fragment {
         mSwipeRefreshLayout.setRefreshing(false);
     }
 
-    private void dismissAllIssues(final View view)
-    {
-        String targetURL = Issue.QUERY;
-
-        StringRequest stringRequest = new StringRequest(Request.Method.POST, targetURL,
-                new Response.Listener<String>() {
-                    @Override
-                    public void onResponse(String response) {
-                        if (getActivity() == null || !isAdded())
-                        {
-                            return;
-                        }
-
-                        SparkleHelper.makeSnackbar(view, getString(R.string.issue_dismiss_all_response));
-                        startQueryIssues();
-                    }
-                }, new Response.ErrorListener() {
-            @Override
-            public void onErrorResponse(VolleyError error) {
-                SparkleHelper.logError(error.toString());
-
-                if (getActivity() == null || !isAdded())
-                {
-                    return;
-                }
-
-                mSwipeRefreshLayout.setRefreshing(false);
-                if (error instanceof TimeoutError || error instanceof NoConnectionError || error instanceof NetworkError) {
-                    SparkleHelper.makeSnackbar(view, getString(R.string.login_error_no_internet));
-                }
-                else
-                {
-                    SparkleHelper.makeSnackbar(view, getString(R.string.login_error_generic));
-                }
-            }
-        }){
-            @Override
-            protected Map<String,String> getParams(){
-                Map<String,String> params = new HashMap<String, String>();
-                params.put("dismiss_all", "1");
-                return params;
-            }
-
-            @Override
-            public Map<String, String> getHeaders() {
-                Map<String,String> params = new HashMap<String, String>();
-                if (getActivity() != null && isAdded())
-                {
-                    UserLogin u = SparkleHelper.getActiveUser(getContext());
-                    params.put("User-Agent", String.format(getString(R.string.app_header), u.nationId));
-                    params.put("Content-Type", "application/x-www-form-urlencoded");
-                    params.put("Cookie", String.format("autologin=%s", u.autologin));
-                }
-                return params;
-            }
-        };
-
-        if (!DashHelper.getInstance(getContext()).addRequest(stringRequest))
-        {
-            mSwipeRefreshLayout.setRefreshing(false);
-            SparkleHelper.makeSnackbar(view, getString(R.string.rate_limit_error));
-        }
-    }
-
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.fragment_issue, menu);
-        super.onCreateOptionsMenu(menu, inflater);
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            case R.id.nav_dismiss:
-                dialogBuilder.setMessage(getString(R.string.issue_dismiss_all))
-                        .setPositiveButton(getString(R.string.issue_dismiss_all_positive), dialogClickListener)
-                        .setNegativeButton(getString(R.string.explore_negative), null).show();
-                return true;
-        }
-        return super.onOptionsItemSelected(item);
-    }
-
     @Override
     public void onDestroy()
     {
