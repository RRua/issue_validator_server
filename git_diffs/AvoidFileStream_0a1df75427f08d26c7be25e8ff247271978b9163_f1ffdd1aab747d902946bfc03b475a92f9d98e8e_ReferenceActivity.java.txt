diff --git a/app/src/main/java/ca/louisbourque/freenetassistant/MainViewBroadcastReceiver.java b/app/src/main/java/ca/louisbourque/freenetassistant/MainViewBroadcastReceiver.java
index 4ec763f..e622206 100644
--- a/app/src/main/java/ca/louisbourque/freenetassistant/MainViewBroadcastReceiver.java
+++ b/app/src/main/java/ca/louisbourque/freenetassistant/MainViewBroadcastReceiver.java
@@ -8,6 +8,11 @@ public class MainViewBroadcastReceiver extends BroadcastReceiver {
 	
 	private MainActivity activity;
 
+
+    public MainViewBroadcastReceiver(){
+        super();
+    }
+
 	public MainViewBroadcastReceiver(MainActivity mainActivity){
 		super();
 		this.activity = mainActivity;
diff --git a/app/src/main/java/ca/louisbourque/freenetassistant/ReferenceActivity.java b/app/src/main/java/ca/louisbourque/freenetassistant/ReferenceActivity.java
deleted file mode 100644
index 2ad7b9f..0000000
--- a/app/src/main/java/ca/louisbourque/freenetassistant/ReferenceActivity.java
+++ /dev/null
@@ -1,137 +0,0 @@
-package ca.louisbourque.freenetassistant;
-
-import java.io.ByteArrayInputStream;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.math.BigInteger;
-import java.security.SecureRandom;
-
-import android.annotation.SuppressLint;
-import android.content.Intent;
-import android.net.Uri;
-import android.os.Bundle;
-import android.support.v4.view.MenuItemCompat;
-import android.support.v7.app.ActionBarActivity;
-import android.support.v7.widget.ShareActionProvider;
-import android.support.v7.widget.Toolbar;
-import android.view.Menu;
-import android.view.MenuInflater;
-import android.view.MenuItem;
-import android.widget.TextView;
-
-public class ReferenceActivity extends ActionBarActivity {
-	
-	private GlobalState gs;
-    private String EncodedStr;
-	private String randomStr;
-
-    @SuppressLint("TrulyRandom")
-	@Override
-	protected void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-		setContentView(R.layout.activity_reference);
-		this.gs = (GlobalState) getApplication();
-		LocalNode an = this.gs.getActiveLocalNode();
-        String refStr = an.getNodeReference();
-        EncodedStr = an.getEncodedNodeReference();
-        // Set up the action bar.
-        Toolbar toolbar = (Toolbar) findViewById(R.id.my_toolbar);
-        // setHasOptionsMenu(true);
-        setSupportActionBar(toolbar);
-		
-		//final ActionBar actionBar = getActionBar();
-		SecureRandom random = new SecureRandom();
-		randomStr = new BigInteger(130, random).toString(32);
-		
-		TextView nodeText = (TextView) this.findViewById(R.id.text_reference);
-		nodeText.setText(refStr);
-	}
-	
-	@Override
-	public void onDestroy(){
-		super.onDestroy();
-        
-	}
-
-    @Override
-    protected void onStart() {
-        this.gs.registerActivity(this);
-        super.onStart();
-    }
-
-    @Override
-    protected void onStop() {
-        this.gs.unregisterActivity(this);
-        super.onStop();
-    }
-	
-	@Override
-	public boolean onCreateOptionsMenu(Menu menu) {
-		// Inflate the menu items for use in the action bar
-		MenuInflater inflater = getMenuInflater();
-		inflater.inflate(R.menu.reference, menu);
-		// Get the menu item.
-	    MenuItem menuItem = menu.findItem(R.id.action_share);
-	    // Get the provider and hold onto it to set/change the share intent.
-        ShareActionProvider actionProvider = (ShareActionProvider) MenuItemCompat.getActionProvider(menuItem);
-
-	    // Attach an intent to this ShareActionProvider.  You can update this at any time,
-	    // like when the user selects a new piece of data they might like to share.
-        actionProvider.setShareIntent(shareReference());
-		
-		
-		return super.onCreateOptionsMenu(menu);
-	}
-	
-	public Intent shareReference(){
-		Intent shareIntent = new Intent(Intent.ACTION_SEND);
-	    shareIntent.setType("text/plain");
-	    copyFileToInternal();
-	    Uri uri = Uri.parse("content://ca.louisbourque.freenetassistant.fref/fref/"+randomStr+"/myref.fref");
-	    
-	    shareIntent.putExtra(Intent.EXTRA_STREAM, uri);
-	    return shareIntent;
-	}
-	
-	
-	private void copyFileToInternal() {
-	    try {
-	        InputStream is = new ByteArrayInputStream(EncodedStr.getBytes());
-	        File refDir = new File(getCacheDir(), "fref");
-
-	        clearFolder(refDir);
-	        //Save to a random location, to prevent guess location of ref
-	        File randomDir = new File(refDir, randomStr);
-	        File outFile = new File(randomDir, "myref.fref");
-	        randomDir.mkdirs();
-	        if(outFile.createNewFile()){
-		        OutputStream os = new FileOutputStream(outFile.getAbsolutePath());
-		
-		        byte[] buff = new byte[1024];
-		        int len;
-		        while ((len = is.read(buff)) > 0) {
-		            os.write(buff, 0, len);
-		        }
-		        os.flush();
-		        os.close();
-		        is.close();
-	        }
-	    } catch (IOException e) {
-	        e.printStackTrace(); // TODO: should close streams properly here
-	    }
-	}
-	
-	private void clearFolder(File dir) {
-
-        File[] files = dir.listFiles();
-        if(files == null){
-        	return;
-        }
-        for (File file : files) {
-        	file.delete();
-        }
-    }
-}
diff --git a/app/src/main/java/ca/louisbourque/freenetassistant/ReferenceContentProvider.java b/app/src/main/java/ca/louisbourque/freenetassistant/ReferenceContentProvider.java
deleted file mode 100644
index c29c576..0000000
--- a/app/src/main/java/ca/louisbourque/freenetassistant/ReferenceContentProvider.java
+++ /dev/null
@@ -1,57 +0,0 @@
-package ca.louisbourque.freenetassistant;
-
-import java.io.File;
-import java.io.FileNotFoundException;
-
-import android.content.ContentProvider;
-import android.content.ContentValues;
-import android.database.Cursor;
-import android.net.Uri;
-import android.os.ParcelFileDescriptor;
-
-public class ReferenceContentProvider extends ContentProvider {
-
-	@Override
-	public int delete(Uri arg0, String arg1, String[] arg2) {
-		// TODO Auto-generated method stub
-		return 0;
-	}
-
-	@Override
-	public String getType(Uri arg0) {
-		// TODO Auto-generated method stub
-		return null;
-	}
-
-	@Override
-	public Uri insert(Uri arg0, ContentValues arg1) {
-		// TODO Auto-generated method stub
-		return null;
-	}
-
-	@Override
-	public boolean onCreate() {
-		// TODO Auto-generated method stub
-		return false;
-	}
-
-	@Override
-	public Cursor query(Uri arg0, String[] arg1, String arg2, String[] arg3,
-			String arg4) {
-		// TODO Auto-generated method stub
-		return null;
-	}
-
-	@Override
-	public int update(Uri arg0, ContentValues arg1, String arg2, String[] arg3) {
-		// TODO Auto-generated method stub
-		return 0;
-	}
-	
-	@Override
-	public ParcelFileDescriptor openFile(Uri uri, String mode) throws FileNotFoundException {       
-	     File privateFile = new File(getContext().getCacheDir()+uri.getPath());
-	     return ParcelFileDescriptor.open(privateFile, ParcelFileDescriptor.MODE_READ_ONLY);
-	}
-
-}
