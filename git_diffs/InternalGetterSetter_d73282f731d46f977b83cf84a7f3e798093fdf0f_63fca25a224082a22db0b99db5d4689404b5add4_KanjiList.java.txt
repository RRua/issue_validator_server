diff --git a/src/com/leafdigital/kanji/android/IconService.java b/src/com/leafdigital/kanji/android/IconService.java
new file mode 100644
index 0000000..1e28993
--- /dev/null
+++ b/src/com/leafdigital/kanji/android/IconService.java
@@ -0,0 +1,60 @@
+/*
+This file is part of leafdigital kanjirecog.
+
+kanjirecog is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+kanjirecog is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with kanjirecog.  If not, see <http://www.gnu.org/licenses/>.
+
+Copyright 2011 Samuel Marshall.
+*/
+package com.leafdigital.kanji.android;
+
+import android.app.*;
+import android.content.Intent;
+import android.os.*;
+
+/**
+ * Service that just displays the notification icon.
+ */
+public class IconService extends Service
+{
+	private IBinder binder = new Binder();
+	private NotificationManager notifications;
+
+	@Override
+	public IBinder onBind(Intent intent)
+	{
+		return binder;
+	}
+
+	@Override
+	public void onCreate()
+	{
+		notifications = (NotificationManager)getSystemService(NOTIFICATION_SERVICE);
+
+		Notification notification = new Notification(R.drawable.statusicon,
+			getString(R.string.notificationtitle), 0L);
+		notification.flags |=
+			Notification.FLAG_ONGOING_EVENT | Notification.FLAG_NO_CLEAR;
+		PendingIntent launchIntent = PendingIntent.getActivity(this, 0,
+      new Intent(this, MainActivity.class), 0);
+		notification.setLatestEventInfo(this, getString(R.string.notificationtitle),
+			getString(R.string.notificationtext), launchIntent);
+
+		notifications.notify(1, notification);
+	}
+
+	public void onDestroy()
+	{
+		notifications.cancel(1);
+	}
+}
diff --git a/src/com/leafdigital/kanji/android/KanjiActivity.java b/src/com/leafdigital/kanji/android/KanjiActivity.java
new file mode 100644
index 0000000..d849188
--- /dev/null
+++ b/src/com/leafdigital/kanji/android/KanjiActivity.java
@@ -0,0 +1,79 @@
+/*
+This file is part of leafdigital kanjirecog.
+
+kanjirecog is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+kanjirecog is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with kanjirecog.  If not, see <http://www.gnu.org/licenses/>.
+
+Copyright 2011 Samuel Marshall.
+*/
+package com.leafdigital.kanji.android;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.view.*;
+
+public abstract class KanjiActivity extends Activity
+{
+	@Override
+	public boolean onCreateOptionsMenu(Menu menu)
+	{
+		MenuInflater inflater = getMenuInflater();
+		inflater.inflate(R.menu.main, menu);
+		return true;
+	}
+
+	@Override
+	public boolean onOptionsItemSelected(MenuItem item)
+	{
+		switch(item.getItemId())
+		{
+		case R.id.settings:
+			startActivity(new Intent(this, KanjiPreferenceActivity.class));
+			return true;
+		case R.id.quit:
+			quit();
+			return true;
+		default:
+			return super.onOptionsItemSelected(item);
+		}
+	}
+
+	/**
+	 * Called when activity is being 'quit'.
+	 */
+	protected void quit()
+	{
+		Intent intent = new Intent("QUIT");
+		setResult(RESULT_OK, intent);
+		finish();
+	}
+
+	/**
+	 * Helper function so that QUIT can be propogated.
+	 * @param intent Intent from onActivityResult.
+	 * @return True if app is being quit
+	 */
+	protected boolean checkQuit(Intent intent)
+	{
+		if(intent != null && intent.getAction() != null
+			&& intent.getAction().equals("QUIT"))
+		{
+			quit();
+			return true;
+		}
+		else
+		{
+			return false;
+		}
+	}
+}
\ No newline at end of file
diff --git a/src/com/leafdigital/kanji/android/KanjiPreferenceActivity.java b/src/com/leafdigital/kanji/android/KanjiPreferenceActivity.java
new file mode 100644
index 0000000..e8e34cf
--- /dev/null
+++ b/src/com/leafdigital/kanji/android/KanjiPreferenceActivity.java
@@ -0,0 +1,14 @@
+package com.leafdigital.kanji.android;
+
+import android.os.Bundle;
+import android.preference.PreferenceActivity;
+
+public class KanjiPreferenceActivity extends PreferenceActivity
+{
+	@Override
+	protected void onCreate(Bundle savedInstanceState)
+	{
+		super.onCreate(savedInstanceState);
+		addPreferencesFromResource(R.xml.preferences);
+	}
+}
diff --git a/src/com/leafdigital/kanji/android/MainActivity.java b/src/com/leafdigital/kanji/android/MainActivity.java
index 6bcb1fa..3e29ed6 100644
--- a/src/com/leafdigital/kanji/android/MainActivity.java
+++ b/src/com/leafdigital/kanji/android/MainActivity.java
@@ -18,16 +18,21 @@ Copyright 2011 Samuel Marshall.
 */
 package com.leafdigital.kanji.android;
 
-import android.app.Activity;
-import android.content.Intent;
+import android.content.*;
+import android.content.pm.PackageManager;
 import android.os.Bundle;
+import android.preference.PreferenceManager;
 import android.text.ClipboardManager;
 import android.view.*;
 import android.view.View.OnClickListener;
 import android.widget.*;
 
-public class MainActivity extends Activity
+public class MainActivity extends KanjiActivity
+	implements SharedPreferences.OnSharedPreferenceChangeListener
 {
+	private static final String PREF_SHOWNAVIGATION = "shownotification";
+	private static final String PREF_STARTWITHSYSTEM = "startwithsystem";
+
 	/** Called when the activity is first created. */
 	@Override
 	public void onCreate(Bundle savedInstanceState)
@@ -57,16 +62,69 @@ public class MainActivity extends Activity
 				clipboard.setText(edit.getText().toString());
 				edit.setText("");
 				findViewById(R.id.copy).setEnabled(false);
+				finish();
 			}
 		});
 
 		onClickListener.onClick(null);
 
+		SharedPreferences prefs =
+			PreferenceManager.getDefaultSharedPreferences(this);
+		prefs.registerOnSharedPreferenceChangeListener(this);
+		onSharedPreferenceChanged(prefs, PREF_SHOWNAVIGATION);
+	}
+
+	@Override
+	protected void onDestroy()
+	{
+		PreferenceManager.getDefaultSharedPreferences(this).
+			unregisterOnSharedPreferenceChangeListener(this);
+		super.onDestroy();
+	}
+
+	@Override
+	protected void quit()
+	{
+		Intent serviceIntent = new Intent(this, IconService.class);
+		stopService(serviceIntent);
+		super.quit();
+	}
+
+	@Override
+	public void onSharedPreferenceChanged(SharedPreferences sharedPreferences,
+		String key)
+	{
+		if(key.equals(PREF_SHOWNAVIGATION))
+		{
+			boolean show = sharedPreferences.getBoolean(PREF_SHOWNAVIGATION, false);
+			Intent serviceIntent = new Intent(this, IconService.class);
+			if(show)
+			{
+				startService(serviceIntent);
+			}
+			else
+			{
+				stopService(serviceIntent);
+			}
+		}
+		else if(key.equals(PREF_STARTWITHSYSTEM))
+		{
+			int flag = sharedPreferences.getBoolean(PREF_STARTWITHSYSTEM, false)
+				? PackageManager.COMPONENT_ENABLED_STATE_ENABLED
+				: PackageManager.COMPONENT_ENABLED_STATE_DISABLED;
+			ComponentName component = new ComponentName(this, StartupReceiver.class);
+			getPackageManager().setComponentEnabledSetting(component, flag,
+				PackageManager.DONT_KILL_APP);
+		}
 	}
 
 	@Override
 	protected void onActivityResult(int requestCode, int resultCode, Intent data)
 	{
+		if(checkQuit(data))
+		{
+			return;
+		}
 		if(resultCode == RESULT_OK)
 		{
 			String kanji = data.getStringExtra(PickKanjiActivity.EXTRA_KANJI);
diff --git a/src/com/leafdigital/kanji/android/PickKanjiActivity.java b/src/com/leafdigital/kanji/android/PickKanjiActivity.java
index 9c3fa73..a50dfd8 100644
--- a/src/com/leafdigital/kanji/android/PickKanjiActivity.java
+++ b/src/com/leafdigital/kanji/android/PickKanjiActivity.java
@@ -36,7 +36,7 @@ import com.leafdigital.kanji.android.KanjiDrawing.DrawnStroke;
 
 import static com.leafdigital.kanji.android.TopResultsActivity.*;
 
-public class PickKanjiActivity extends Activity
+public class PickKanjiActivity extends KanjiActivity
 {
 	private KanjiDrawing drawing;
 
@@ -206,6 +206,10 @@ public class PickKanjiActivity extends Activity
 	@Override
 	protected void onActivityResult(int requestCode, int resultCode, Intent data)
 	{
+		if(checkQuit(data))
+		{
+			return;
+		}
 		if(resultCode != RESULT_OK || data == null)
 		{
 			return;
diff --git a/src/com/leafdigital/kanji/android/StartupReceiver.java b/src/com/leafdigital/kanji/android/StartupReceiver.java
new file mode 100644
index 0000000..a820c75
--- /dev/null
+++ b/src/com/leafdigital/kanji/android/StartupReceiver.java
@@ -0,0 +1,36 @@
+/*
+This file is part of leafdigital kanjirecog.
+
+kanjirecog is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+kanjirecog is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with kanjirecog.  If not, see <http://www.gnu.org/licenses/>.
+
+Copyright 2011 Samuel Marshall.
+*/
+package com.leafdigital.kanji.android;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+
+/**
+ * Broadcast receiver to launch app at startup.
+ */
+public class StartupReceiver extends BroadcastReceiver
+{
+	@Override
+	public void onReceive(Context context, Intent intent)
+	{
+		Intent serviceIntent = new Intent(context, IconService.class);
+		context.startService(serviceIntent);
+	}
+}
diff --git a/src/com/leafdigital/kanji/android/TopResultsActivity.java b/src/com/leafdigital/kanji/android/TopResultsActivity.java
index 03c1ceb..4986b81 100644
--- a/src/com/leafdigital/kanji/android/TopResultsActivity.java
+++ b/src/com/leafdigital/kanji/android/TopResultsActivity.java
@@ -20,7 +20,6 @@ package com.leafdigital.kanji.android;
 
 import java.util.*;
 
-import android.app.Activity;
 import android.content.*;
 import android.net.ConnectivityManager;
 import android.os.Bundle;
@@ -31,7 +30,7 @@ import android.widget.Button;
 import com.leafdigital.kanji.*;
 import com.leafdigital.kanji.android.KanjiDrawing.DrawnStroke;
 
-public class TopResultsActivity extends Activity
+public class TopResultsActivity extends KanjiActivity
 {
 	/**
 	 * Intent key that should contain an int from R.strings with the activity
@@ -191,6 +190,10 @@ public class TopResultsActivity extends Activity
 	@Override
 	protected void onActivityResult(int requestCode, int resultCode, Intent data)
 	{
+		if(checkQuit(data))
+		{
+			return;
+		}
 		if(resultCode == RESULT_OK)
 		{
 			setResult(RESULT_OK, data);
