diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java
index 0bfdf0db78..f8a4f868b2 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java
@@ -73,8 +73,9 @@ public class ActionButtonStatus {
 
 
     public void setCustomButtons(Menu menu) {
-        for(int itemId : mCustomButtons.keySet()) {
-            if (mCustomButtons.get(itemId) != MENU_DISABLED) {
+        for(Map.Entry<Integer, Integer> entry : mCustomButtons.entrySet()) {
+            int itemId = entry.getKey();
+            if (entry.getValue() != MENU_DISABLED) {
                 MenuItem item = menu.findItem(itemId);
                 if (item == null) {
                     // Happens with TV - removing flag icon
@@ -82,7 +83,7 @@ public class ActionButtonStatus {
                     continue;
                 }
 
-                item.setShowAsAction(mCustomButtons.get(itemId));
+                item.setShowAsAction(entry.getValue());
                 Drawable icon = item.getIcon();
                 item.setEnabled(!mReviewerUi.isControlBlocked());
                 if (icon != null) {
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/AnkiPackageExporter.java b/AnkiDroid/src/main/java/com/ichi2/libanki/AnkiPackageExporter.java
index bae42bced4..ccae160726 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/AnkiPackageExporter.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/AnkiPackageExporter.java
@@ -173,9 +173,7 @@ class AnkiExporter extends Exporter {
         ArrayList<Long> dids = new ArrayList<>();
         if (mDid != null) {
             dids.add(mDid);
-            for (Long x : mSrc.getDecks().children(mDid).values()) {
-                dids.add(x);
-            }
+            dids.addAll(mSrc.getDecks().children(mDid).values());
         }
         JSONObject dconfs = new JSONObject();
         for (Deck d : mSrc.getDecks().all()) {
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java
index 924dda8458..70c1982fa6 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java
@@ -1098,8 +1098,8 @@ public class Collection {
         // unpack fields and create dict
         Map<String, String> fields = new HashMap<>();
         Map<String, Pair<Integer, JSONObject>> fmap = Models.fieldMap(model);
-        for (String name : fmap.keySet()) {
-            fields.put(name, flist[fmap.get(name).first]);
+        for (Map.Entry<String, Pair<Integer, JSONObject>> entry : fmap.entrySet()) {
+            fields.put(entry.getKey(), flist[entry.getValue().first]);
         }
         int cardNum = ord + 1;
         fields.put("Tags", tags.trim());
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java
index d76836b144..8fba5d731e 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java
@@ -1013,9 +1013,9 @@ public class Decks {
 
 
     private void gather(HashMap<Long, HashMap> node, List<Long> arr) {
-        for (Long did : node.keySet()) {
-            HashMap child = node.get(did);
-            arr.add(did);
+        for (Map.Entry<Long, HashMap> entry : node.entrySet()) {
+            HashMap child = entry.getValue();
+            arr.add(entry.getKey());
             gather(child, arr);
         }
     }
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java
index 53375b8228..a91163bb48 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java
@@ -755,9 +755,9 @@ public class Media {
             }
         }
         // look for any entries in the cache that no longer exist on disk
-        for (String fname : cache.keySet()) {
-            if (!((Boolean)cache.get(fname)[2])) {
-                removed.add(fname);
+        for (Map.Entry<String, Object[]> entry : cache.entrySet()) {
+            if (!((Boolean) entry.getValue()[2])) {
+                removed.add(entry.getKey());
             }
         }
         return new Pair<>(added, removed);
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Models.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Models.java
index 44ccecee83..9da66790fe 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Models.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Models.java
@@ -34,6 +34,7 @@ import com.ichi2.utils.JSONObject;
 
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Iterator;
@@ -288,11 +289,7 @@ public class Models {
 
     /** get all models */
     public ArrayList<Model> all() {
-        ArrayList<Model> models = new ArrayList<>();
-        for (Model jsonObject : mModels.values()) {
-            models.add(jsonObject);
-        }
-        return models;
+        return new ArrayList<>(mModels.values());
     }
 
 
@@ -910,8 +907,8 @@ public class Models {
                 String[] flds = Utils.splitFields(cur.getString(1));
                 Map<Integer, String> newflds = new HashMap<>();
 
-                for (Integer old : map.keySet()) {
-                    newflds.put(map.get(old), flds[old]);
+                for (Entry<Integer, Integer> entry : map.entrySet()) {
+                    newflds.put(entry.getValue(), flds[entry.getKey()]);
                 }
                 List<String> flds2 = new ArrayList<>();
                 for (int c = 0; c < nfields; ++c) {
@@ -1156,7 +1153,7 @@ public class Models {
         ords.remove(-1);
         if (ords.isEmpty() && allowEmpty) {
             // empty clozes use first ord
-            return new ArrayList<>(Arrays.asList(0));
+            return new ArrayList<>(Collections.singletonList(0));
         }
         return new ArrayList<>(ords);
     }
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Tags.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Tags.java
index 7655365075..26ffe9e13a 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Tags.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Tags.java
@@ -119,9 +119,7 @@ public class Tags {
 
 
     public List<String> all() {
-        List<String> list = new ArrayList<>();
-        list.addAll(mTags.keySet());
-        return list;
+        return new ArrayList<>(mTags.keySet());
     }
 
 
@@ -147,10 +145,7 @@ public class Tags {
                 tags.add(cursor.getString(0));
             }
         }
-        HashSet<String> tagSet = new HashSet<>();
-        for (String s : split(TextUtils.join(" ", tags))) {
-            tagSet.add(s);
-        }
+        HashSet<String> tagSet = new HashSet<>(split(TextUtils.join(" ", tags)));
         register(tagSet);
     }
 
@@ -176,9 +171,7 @@ public class Tags {
         if (children) {
             ArrayList<Long> dids = new ArrayList<>();
             dids.add(did);
-            for (long id : mCol.getDecks().children(did).values()) {
-                dids.add(id);
-            }
+            dids.addAll(mCol.getDecks().children(did).values());
             tags = mCol.getDb().queryStringList("SELECT DISTINCT n.tags FROM cards c, notes n WHERE c.nid = n.id AND c.did IN " + Utils.ids2str(Utils.collection2Array(dids)));
         } else {
             tags = mCol.getDb().queryStringList("SELECT DISTINCT n.tags FROM cards c, notes n WHERE c.nid = n.id AND c.did = ?", did);
@@ -370,9 +363,9 @@ public class Tags {
 
     public void beforeUpload() {
         boolean changed = false;
-        for (String k : mTags.keySet()) {
-            if (mTags.get(k) != 0) {
-                mTags.put(k, 0);
+        for (Map.Entry<String, Integer> entry : mTags.entrySet()) {
+            if (entry.getValue() != 0) {
+                mTags.put(entry.getKey(), 0);
                 changed = true;
             }
         }
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/python/CsvSniffer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/python/CsvSniffer.java
index cca3b61352..76a122aa1e 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/python/CsvSniffer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/python/CsvSniffer.java
@@ -246,8 +246,9 @@ public class CsvSniffer {
                     charFrequency.put(c, metaFrequency);
                 }
             }
-            for (char c : charFrequency.keySet()) {
-                Set<Map.Entry<Integer, Integer>> bareList = charFrequency.get(c).entrySet();
+            for (Map.Entry<Character, Map<Integer, Integer>> e : charFrequency.entrySet()) {
+                char c = e.getKey();
+                Set<Map.Entry<Integer, Integer>> bareList = e.getValue().entrySet();
 
                 List<Tuple> items = new ArrayList<>();
 
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java
index ff4c8b88ab..da358d714e 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java
@@ -2237,7 +2237,7 @@ public class SchedV2 extends AbstractSched {
             String now;
             now = " " + context.getString(R.string.sched_unbury_action);
             sb.append("\n\n");
-            sb.append("" + context.getString(R.string.sched_has_buried) + now);
+            sb.append("").append(context.getString(R.string.sched_has_buried)).append(now);
         }
         if (mCol.getDecks().current().getInt("dyn") == 0) {
             sb.append("\n\n");
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/HttpSyncer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/HttpSyncer.java
index 62e1410f1f..310658d519 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/HttpSyncer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/HttpSyncer.java
@@ -182,10 +182,10 @@ public class HttpSyncer {
             StringWriter buf = new StringWriter();
             // post vars
             mPostVars.put("c", comp != 0 ? 1 : 0);
-            for (String key : mPostVars.keySet()) {
+            for (Map.Entry<String, Object> entry : mPostVars.entrySet()) {
                 buf.write(bdry + "\r\n");
-                buf.write(String.format(Locale.US, "Content-Disposition: form-data; name=\"%s\"\r\n\r\n%s\r\n", key,
-                        mPostVars.get(key)));
+                buf.write(String.format(Locale.US, "Content-Disposition: form-data; name=\"%s\"\r\n\r\n%s\r\n", entry.getKey(),
+                        entry.getValue()));
             }
             tmpFileBuffer = File.createTempFile("syncer", ".tmp", new File(AnkiDroidApp.getCacheStorageDirectory()));
             FileOutputStream fos = new FileOutputStream(tmpFileBuffer);
diff --git a/AnkiDroid/src/test/java/com/ichi2/anki/CardBrowserTest.java b/AnkiDroid/src/test/java/com/ichi2/anki/CardBrowserTest.java
index 3579c288fe..342a0ea970 100644
--- a/AnkiDroid/src/test/java/com/ichi2/anki/CardBrowserTest.java
+++ b/AnkiDroid/src/test/java/com/ichi2/anki/CardBrowserTest.java
@@ -23,7 +23,7 @@ import org.robolectric.android.controller.ActivityController;
 import org.robolectric.shadows.ShadowActivity;
 import org.robolectric.shadows.ShadowApplication;
 
-import java.util.Arrays;
+import java.util.Collections;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
@@ -398,7 +398,7 @@ public class CardBrowserTest extends RobolectricTest {
     }
 
     private void removeCardFromCollection(Long cardId) {
-        getCol().remCards(Arrays.asList(cardId));
+        getCol().remCards(Collections.singletonList(cardId));
     }
 
     @CheckReturnValue
