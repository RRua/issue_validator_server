diff --git a/app/src/main/java/com/amaze/filemanager/adapters/data/AppDataParcelable.java b/app/src/main/java/com/amaze/filemanager/adapters/data/AppDataParcelable.java
index bd18d7b81..7b6d5ede4 100644
--- a/app/src/main/java/com/amaze/filemanager/adapters/data/AppDataParcelable.java
+++ b/app/src/main/java/com/amaze/filemanager/adapters/data/AppDataParcelable.java
@@ -95,11 +95,11 @@ public final class AppDataParcelable implements Parcelable {
   public static final class AppDataSorter implements Comparator<AppDataParcelable> {
     public static final int SORT_NAME = 0, SORT_MODIF = 1, SORT_SIZE = 2;
 
-    private int asc = 1;
-    private int sort = 0;
+    private final int asc;
+    private final int sort;
 
-    public AppDataSorter(int sort, int asc) {
-      this.asc = asc;
+    public AppDataSorter(int sort, boolean isAscending) {
+      this.asc = isAscending? 1:-1;
       this.sort = sort;
     }
 
diff --git a/app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java b/app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
index 6e9db0cbb..8bc2e9fe2 100644
--- a/app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
+++ b/app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
@@ -48,13 +48,14 @@ public class AppListLoader extends AsyncTaskLoader<AppListLoader.AppsDataPair> {
   private PackageManager packageManager;
   private PackageReceiver packageReceiver;
   private AppsDataPair mApps;
-  private int sortBy, asc;
+  private final int sortBy;
+  private final boolean isAscending;
 
-  public AppListLoader(Context context, int sortBy, int asc) {
+  public AppListLoader(Context context, int sortBy, boolean isAscending) {
     super(context);
 
     this.sortBy = sortBy;
-    this.asc = asc;
+    this.isAscending = isAscending;
 
     /*
      * using global context because of the fact that loaders are supposed to be used
@@ -103,7 +104,7 @@ public class AppListLoader extends AsyncTaskLoader<AppListLoader.AppsDataPair> {
 
       mApps.first.add(elem);
 
-      Collections.sort(mApps.first, new AppDataParcelable.AppDataSorter(sortBy, asc));
+      Collections.sort(mApps.first, new AppDataParcelable.AppDataSorter(sortBy, isAscending));
 
       for (AppDataParcelable p : mApps.first) {
         mApps.second.add(p.path);
diff --git a/app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java b/app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
index 7a9dbb162..0428d1aae 100644
--- a/app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
+++ b/app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
@@ -1025,7 +1025,7 @@ public class MainActivity extends PermissionsActivity
     if (drawer.onOptionsItemSelected(item)) return true;
 
     if (getFragmentAtFrame() instanceof AppsListFragment && item.getItemId() == R.id.sort) {
-      GeneralDialogCreation.showSortDialog((AppsListFragment) getFragmentAtFrame(), getAppTheme());
+      ((AppsListFragment) getFragmentAtFrame()).showSortDialog(getAppTheme());
     }
 
     // Handle action buttons
diff --git a/app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java b/app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
index 76da9d556..5c7287de5 100644
--- a/app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
+++ b/app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
@@ -22,6 +22,8 @@ package com.amaze.filemanager.ui.dialogs;
 
 import static android.os.Build.VERSION_CODES.M;
 import static com.amaze.filemanager.filesystem.files.FileUtils.toHybridFileArrayList;
+import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
+import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
 
 import java.io.File;
@@ -112,6 +114,7 @@ import androidx.annotation.Nullable;
 import androidx.annotation.RequiresApi;
 import androidx.annotation.StringRes;
 import androidx.appcompat.widget.AppCompatButton;
+import androidx.loader.app.LoaderManager;
 import androidx.preference.PreferenceManager;
 
 /**
@@ -1242,37 +1245,6 @@ public class GeneralDialogCreation {
     dialog.dismiss();
   }
 
-  public static void showSortDialog(final AppsListFragment m, AppTheme appTheme) {
-    int accentColor = ((ThemedActivity) m.getActivity()).getAccent();
-    String[] sort = m.getResources().getStringArray(R.array.sortbyApps);
-    int current = Integer.parseInt(m.sharedPreferences.getString("sortbyApps", "0"));
-    MaterialDialog.Builder a = new MaterialDialog.Builder(m.getActivity());
-    a.theme(appTheme.getMaterialDialogTheme());
-    a.items(sort)
-        .itemsCallbackSingleChoice(
-            current > 2 ? current - 3 : current, (dialog, view, which, text) -> true);
-    a.negativeText(R.string.ascending).positiveColor(accentColor);
-    a.positiveText(R.string.descending).negativeColor(accentColor);
-    a.onNegative(
-        (dialog, which) -> {
-          m.sharedPreferences.edit().putString("sortbyApps", "" + dialog.getSelectedIndex()).commit();
-          m.getSortModes();
-          m.getLoaderManager().restartLoader(AppsListFragment.ID_LOADER_APP_LIST, null, m);
-          dialog.dismiss();
-        });
-
-    a.onPositive(
-        (dialog, which) -> {
-          m.sharedPreferences.edit().putString("sortbyApps", "" + (dialog.getSelectedIndex() + 3)).commit();
-          m.getSortModes();
-          m.getLoaderManager().restartLoader(AppsListFragment.ID_LOADER_APP_LIST, null, m);
-          dialog.dismiss();
-        });
-
-    a.title(R.string.sort_by);
-    a.build().show();
-  }
-
   public static void showHistoryDialog(
       final DataUtils dataUtils,
       SharedPreferences sharedPrefs,
diff --git a/app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java b/app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
index 38180573e..570004b39 100644
--- a/app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
+++ b/app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
@@ -20,6 +20,7 @@
 
 package com.amaze.filemanager.ui.fragments;
 
+import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.GlideApp;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.AppsAdapter;
@@ -27,6 +28,7 @@ import com.amaze.filemanager.adapters.glide.AppsAdapterPreloadModel;
 import com.amaze.filemanager.asynchronous.loaders.AppListLoader;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
+import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.utils.GlideConstants;
@@ -45,6 +47,12 @@ import androidx.loader.app.LoaderManager;
 import androidx.loader.content.Loader;
 import androidx.preference.PreferenceManager;
 
+import java.lang.ref.WeakReference;
+import java.util.Objects;
+
+import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
+import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
+
 public class AppsListFragment extends ListFragment
     implements LoaderManager.LoaderCallbacks<AppListLoader.AppsDataPair> {
 
@@ -54,9 +62,10 @@ public class AppsListFragment extends ListFragment
 
   private AppsAdapter adapter;
 
-  public SharedPreferences sharedPreferences;
+  private SharedPreferences sharedPreferences;
   private Parcelable listViewState;
-  private int isAscending, sortby;
+  private boolean isAscending;
+  private int sortby;
 
   private AppsAdapterPreloadModel modelProvider;
 
@@ -70,7 +79,9 @@ public class AppsListFragment extends ListFragment
   @Override
   public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
     super.onViewCreated(view, savedInstanceState);
-    MainActivity mainActivity = (MainActivity) getActivity();
+    final MainActivity mainActivity = (MainActivity) getActivity();
+    Objects.requireNonNull(mainActivity);
+
     UtilitiesProvider utilsProvider = mainActivity.getUtilsProvider();
 
     mainActivity.getAppbar().setTitle(R.string.apps);
@@ -79,7 +90,9 @@ public class AppsListFragment extends ListFragment
     mainActivity.supportInvalidateOptionsMenu();
 
     sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
-    getSortModes();
+    isAscending = sharedPreferences.getBoolean(PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING, true);
+    sortby = sharedPreferences.getInt(PreferencesConstants.PREFERENCE_APPLIST_SORTBY, 0);
+
     getListView().setDivider(null);
     if (utilsProvider.getAppTheme().equals(AppTheme.DARK)) {
       getActivity()
@@ -131,22 +144,56 @@ public class AppsListFragment extends ListFragment
     b.putParcelable(KEY_LIST_STATE, getListView().onSaveInstanceState());
   }
 
-  /**
-   * Assigns sort modes A value from 0 to 2 defines sort mode as name||/last modified/size in
-   * ascending order Values from 3 to 5 defines sort mode as name/last modified/size in descending
-   * order
-   *
-   * <p>Final value of {@link #sortby} varies from 0 to 2
-   */
-  public void getSortModes() {
-    int t = Integer.parseInt(sharedPreferences.getString("sortbyApps", "0"));
-    if (t <= 2) {
-      sortby = t;
-      isAscending = 1;
-    } else if (t > 2) {
-      isAscending = -1;
-      sortby = t - 3;
+  public void showSortDialog(AppTheme appTheme) {
+    final MainActivity mainActivity = (MainActivity) getActivity();
+    if(mainActivity == null) {
+      return;
     }
+
+    WeakReference<AppsListFragment> appsListFragment = new WeakReference<>(this);
+
+    int accentColor = mainActivity.getAccent();
+    String[] sort = getResources().getStringArray(R.array.sortbyApps);
+    MaterialDialog.Builder builder = new MaterialDialog.Builder(mainActivity);
+    builder.theme(appTheme.getMaterialDialogTheme());
+    builder.items(sort).itemsCallbackSingleChoice(sortby, (dialog, view, which, text) -> true);
+    builder.negativeText(R.string.ascending).positiveColor(accentColor);
+    builder.positiveText(R.string.descending).negativeColor(accentColor);
+    builder.onNegative((dialog, which) -> {
+      final AppsListFragment $this = appsListFragment.get();
+      if ($this == null) {
+        return;
+      }
+
+      $this.saveAndReload(dialog.getSelectedIndex(), true);
+      dialog.dismiss();
+    });
+
+    builder.onPositive((dialog, which) -> {
+      final AppsListFragment $this = appsListFragment.get();
+      if ($this == null) {
+        return;
+      }
+
+      $this.saveAndReload(dialog.getSelectedIndex(), false);
+      dialog.dismiss();
+    });
+
+    builder.title(R.string.sort_by);
+    builder.build().show();
+  }
+
+  private void saveAndReload(int newSortby, boolean newIsAscending) {
+    sortby = newSortby;
+    isAscending = newIsAscending;
+
+
+    sharedPreferences.edit()
+            .putBoolean(PREFERENCE_APPLIST_ISASCENDING, newIsAscending)
+            .putInt(PREFERENCE_APPLIST_SORTBY, newSortby)
+            .apply();
+
+    LoaderManager.getInstance(this).restartLoader(AppsListFragment.ID_LOADER_APP_LIST, null, this);
   }
 
   @NonNull
diff --git a/app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PreferencesConstants.java b/app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PreferencesConstants.java
index d46880632..d0915f7ab 100644
--- a/app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PreferencesConstants.java
+++ b/app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PreferencesConstants.java
@@ -100,6 +100,8 @@ public class PreferencesConstants {
 
   // START sort preferences
   public static final String PREFERENCE_SORTBY_ONLY_THIS = "sortby_only_this";
+  public static final String PREFERENCE_APPLIST_SORTBY = "AppsListFragment.sortBy";
+  public static final String PREFERENCE_APPLIST_ISASCENDING = "AppsListFragment.isAscending";
   // END sort preferences
 
   // drag and drop preferences
