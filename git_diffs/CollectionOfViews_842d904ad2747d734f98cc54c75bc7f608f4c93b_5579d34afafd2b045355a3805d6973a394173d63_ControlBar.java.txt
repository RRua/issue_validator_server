diff --git a/app/src/main/java/ch/bailu/aat/activities/AboutActivity.java b/app/src/main/java/ch/bailu/aat/activities/AboutActivity.java
index 531502b6..3ae76888 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AboutActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AboutActivity.java
@@ -21,12 +21,10 @@ import ch.bailu.aat.views.MainControlBar;
 import ch.bailu.aat.views.description.MultiView;
 
 
-public class AboutActivity extends AbsDispatcher implements View.OnClickListener {
+public class AboutActivity extends AbsDispatcher {
 
-    private static String SOLID_KEY=AboutActivity.class.getSimpleName();
+    private static String SOLID_KEY = AboutActivity.class.getSimpleName();
 
-    private View next, prev;
-    private MultiView multiView;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -37,65 +35,33 @@ public class AboutActivity extends AbsDispatcher implements View.OnClickListener
 
 
     private void createViews() {
+        MultiView multiView = createMultiView();
         LinearLayout contentView = new ContentView(this);
 
-        contentView.addView(createButtonBar());
-        multiView = createMultiView();
+        contentView.addView(createButtonBar(multiView));
         contentView.addView(multiView);
 
         setContentView(contentView);
     }
 
-    private LinearLayout createButtonBar() {
-        final ControlBar bar = new MainControlBar(getServiceContext());
-
-        prev = bar.addImageButton(R.drawable.go_previous_inverse);
-        bar.addImageButton(R.drawable.content_loading_inverse);
-        next = bar.addImageButton(R.drawable.go_next_inverse);
-
-        bar.setOnClickListener1(this);
+    private LinearLayout createButtonBar(MultiView mv) {
+        final MainControlBar bar = new MainControlBar(getServiceContext());
 
+        bar.addAll(mv);
         return bar;
     }
 
 
     private MultiView createMultiView() {
-        ContentDescription[] data = new ContentDescription[] {
-                new CurrentSpeedDescription(this),
-                new AltitudeDescription(this),
-                new TimeDescription(this),
-                new DistanceDescription(this),
-                new AverageSpeedDescription(this),
-                new MaximumSpeedDescription(this),
-        };
-
-
-
-        View multiViewLayout[] = {
-                new HtmlScrollTextView(this, R.string.README_about_html),
-                new HtmlScrollTextView(this, R.string.README_enduser_html),
-        };
-
-        return new MultiView(this,
+        MultiView mv = new MultiView(this,
                 SOLID_KEY,
-                GpxInformation.ID.INFO_ID_ALL,
-                multiViewLayout);
-    }
-
-
-    @Override
-    public void onDestroy() {
-        TileRemoverService ts = getServiceContext().getTileRemoverService();
-
-        if (ts != null) ts.getState().reset();
-
-        super.onDestroy();
+                GpxInformation.ID.INFO_ID_ALL);
+        mv.add(new HtmlScrollTextView(this, R.string.README_about_html),
+                getString(R.string.intro_about));
+        mv.add(new HtmlScrollTextView(this, R.string.README_enduser_html),
+                getString(R.string.intro_readme));
 
+        return mv;
     }
 
-    @Override
-    public void onClick(View v) {
-        if (v == prev) multiView.setPrevious();
-        else if (v == next) multiView.setNext();
-    }
 }
\ No newline at end of file
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java
index c4740e03..facf5a12 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java
@@ -12,7 +12,7 @@ import ch.bailu.aat.description.AverageSpeedDescription;
 import ch.bailu.aat.description.CaloriesDescription;
 import ch.bailu.aat.description.ContentDescription;
 import ch.bailu.aat.description.DateDescription;
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.description.DistanceDescription;
 import ch.bailu.aat.description.EndDateDescription;
 import ch.bailu.aat.description.MaximumSpeedDescription;
@@ -149,21 +149,11 @@ public class AbsFileContentActivity extends AbsDispatcher implements OnClickList
                         new DistanceSpeedGraphView(this, SOLID_KEY)});
 
 
-
-        final View views[] = {
-                summary,
-                map,
-                graph,
-        };
-
-        final DescriptionInterface[] targets = {
-                summary.addAllContent(summaryData, GpxInformation.ID.INFO_ID_FILEVIEW),
-                map,
-                graph
-
-        };
-
-        return new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, views, targets);
+        MultiView mv = new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL);
+        mv.add(summary, summary.addAllContent(summaryData, GpxInformation.ID.INFO_ID_FILEVIEW));
+        mv.addT(map);
+        mv.addT(graph);
+        return mv;
     }
 
 
@@ -173,7 +163,7 @@ public class AbsFileContentActivity extends AbsDispatcher implements OnClickList
     protected void createDispatcher() {
         currentFile = new IteratorSource.FollowFile(getServiceContext());
 
-        final DescriptionInterface[] target = new DescriptionInterface[] {
+        final OnContentUpdatedInterface[] target = new OnContentUpdatedInterface[] {
                 multiView, this, busyButton.getBusyControl(GpxInformation.ID.INFO_ID_FILEVIEW)
         };
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
index d1ba7a3f..490d14b3 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
@@ -16,7 +16,9 @@ import java.io.File;
 
 import ch.bailu.aat.R;
 import ch.bailu.aat.description.ContentDescription;
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.DistanceDescription;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
+import ch.bailu.aat.description.TrackSizeDescription;
 import ch.bailu.aat.dispatcher.ContentSource;
 import ch.bailu.aat.dispatcher.CurrentLocationSource;
 import ch.bailu.aat.dispatcher.IteratorSource;
@@ -25,7 +27,6 @@ import ch.bailu.aat.dispatcher.RootDispatcher;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.helpers.AppTheme;
 import ch.bailu.aat.helpers.FileAction;
-import ch.bailu.aat.helpers.file.FileIntent;
 import ch.bailu.aat.menus.FileMenu;
 import ch.bailu.aat.preferences.SolidDirectoryQuery;
 import ch.bailu.aat.services.directory.Iterator;
@@ -45,11 +46,13 @@ import ch.bailu.aat.views.map.overlay.control.NavigationBarOverlay;
 import ch.bailu.aat.views.map.overlay.gpx.GpxDynOverlay;
 import ch.bailu.aat.views.map.overlay.gpx.GpxOverlayListOverlay;
 import ch.bailu.aat.views.map.overlay.grid.GridDynOverlay;
+import ch.bailu.aat.views.preferences.SolidDirectoryMenuButton;
+import ch.bailu.aat.views.preferences.SolidExtendetDirectoryView;
 import ch.bailu.aat.views.preferences.TitleView;
 import ch.bailu.aat.views.preferences.VerticalScrollView;
 
 
-public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItemClickListener, OnClickListener {
+public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItemClickListener {
 
     private FileMenu fileMenu;
     private String                      solid_key;
@@ -58,8 +61,6 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
 
     private SolidDirectoryQuery sdirectory;
 
-    private final ImageButton[]         selectView = new ImageButton[3];
-    private ImageButton fileManager;
     private MultiView                   multiView;
 
 
@@ -82,32 +83,44 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
         sdirectory.setValue(getDirectory().getAbsolutePath());
         solid_key = AbsGpxListActivity.class.getSimpleName() +  "_" + sdirectory.getValueAsString();
 
+        multiView = createMultiView();
 
         final LinearLayout contentView = new ContentView(this);
-        contentView.addView(createControlBar());
-        contentView.addView(createMultiView());
+        contentView.addView(createControlBar(multiView));
+        contentView.addView(multiView);
         setContentView(contentView);
 
-        selectView(multiView.getActive());
         createDispatcher();
     }
 
 
-    private ControlBar createControlBar() {
-        final MainControlBar bar = new MainControlBar(getServiceContext(), 4);
+    private ControlBar createControlBar(MultiView multiView) {
+        final MainControlBar bar = new MainControlBar(getServiceContext());
 
         busyControl = new DbSynchronizerBusyIndicator(bar.getMenu());
-        for (int i = 0; i< selectView.length; i++) {
-            selectView[i] = bar.addImageButton(R.drawable.radio_inverse);
-        }
-        fileManager = bar.addImageButton(R.drawable.folder_inverse);
-        bar.setOnClickListener1(this);
+
+        bar.addAll(multiView);
+        bar.add(new SolidDirectoryMenuButton(sdirectory));
 
         return bar;
     }
 
 
     private MultiView createMultiView() {
+        final String summary_label = "Summary*";
+        final String filter_label = "Filter*";
+        final String map_label = getString(R.string.intro_map);
+        final String list_label = "File list*";
+
+        final ContentDescription summary_content[] = getSummaryData();
+        final ContentDescription filter_content[] = {
+                new TrackSizeDescription(this),
+                new DistanceDescription(this)
+        };
+
+        final VerticalScrollView filter= new VerticalScrollView(this);
+        final VerticalScrollView summary= new VerticalScrollView(this);
+
         final OsmInteractiveView map = new OsmInteractiveView(getServiceContext(), solid_key);
 
         final OsmOverlay overlayList[] = {
@@ -122,40 +135,28 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
         map.setOverlayList(overlayList);
 
 
-
-
-        ContentDescription listData[] = getGpxListItemData();
-        listView = new GpxListView(this, listData);
+        listView = new GpxListView(this, getGpxListItemData());
         listView.setOnItemClickListener(this);
         registerForContextMenu(listView);
 
-        final TextView label = new TextView(this);
-        label.setText(getLabel());
-        AppTheme.themify(label);
-        label.setTextColor(AppTheme.getHighlightColor());
 
-        ContentDescription content[] = getSummaryData();
-        VerticalScrollView scrollView= new VerticalScrollView(this);
+        filter.add(new TitleView(this, getLabel()+ " - " + filter_label));
+        filter.addAllFilterViews(map.map);
 
-        scrollView.add(new TitleView(this, getLabel()));
-        scrollView.addAllFilterViews(map.map);
-        scrollView.add(new TitleView(this, "Summary*"));
 
-        final DescriptionInterface targets[] = {
-                DescriptionInterface.NULL,
-                map,
-                scrollView.addAllContent(content, GpxInformation.ID.INFO_ID_LIST_SUMMARY)
-        };
+        summary.add(new TitleView(this, getLabel() + " - " + summary_label));
 
-        final View views[] = {
-                listView,
-                map,
-                scrollView,
-        };
+        multiView = new MultiView(this, solid_key, GpxInformation.ID.INFO_ID_ALL);
 
+        multiView.add(listView, list_label);
+        multiView.add(map, map, map_label);
+        multiView.add(filter,
+                filter.addAllContent(filter_content, GpxInformation.ID.INFO_ID_LIST_SUMMARY),
+                filter_label);
+        multiView.add(summary, summary.addAllContent(summary_content,
+                GpxInformation.ID.INFO_ID_LIST_SUMMARY),
+                summary_label);
 
-        multiView = new MultiView(this, solid_key, GpxInformation.ID.INFO_ID_ALL,
-                views, targets);
         return multiView;
     }
 
@@ -165,7 +166,7 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
     private void createDispatcher() {
 
 
-        final DescriptionInterface[] target = new DescriptionInterface[] {
+        final OnContentUpdatedInterface[] target = new OnContentUpdatedInterface[] {
                 multiView, this
         };
 
@@ -246,32 +247,5 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
         return fileMenu.onItemClick(item);
     }
 
-
-    @Override
-    public void onClick(View v) {
-        if (v == fileManager) {
-            File directory = new File(sdirectory.getValueAsString());
-            new FileIntent(directory).view(this);
-        } else {
-            for (int i = 0; i < selectView.length; i++) {
-                if (v == selectView[i]) {
-                    setView(i);
-                }
-            }
-        }
-
-    }
-
-    public void setView(int i) {
-        multiView.setActive(i);
-        selectView(i);
-    }
-
-    private void selectView(int s) {
-        for (int i=0; i<selectView.length; i++) {
-            if (i==s) selectView[i].setImageResource(R.drawable.radio_checked_inverse);
-            else selectView[i].setImageResource(R.drawable.radio_inverse);
-        }
-    }
 }
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsMenu.java b/app/src/main/java/ch/bailu/aat/activities/AbsMenu.java
index caf0eb09..32b2ff28 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsMenu.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsMenu.java
@@ -5,12 +5,12 @@ import android.os.Bundle;
 import android.view.Menu;
 import android.view.MenuItem;
 
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.menus.OptionsMenu;
 
 public abstract class AbsMenu extends AbsServiceLink 
-implements DescriptionInterface{
+implements OnContentUpdatedInterface {
 
     private OptionsMenu menu;
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
index d1fc03d5..0ba2f2be 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
@@ -17,7 +17,7 @@ import java.io.File;
 import java.io.IOException;
 
 import ch.bailu.aat.R;
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.dispatcher.ContentSource;
 import ch.bailu.aat.dispatcher.CustomFileSource;
 import ch.bailu.aat.dispatcher.RootDispatcher;
@@ -76,7 +76,7 @@ public abstract class AbsOsmApiActivity extends AbsDispatcher implements OnClick
         ContentSource[] source = new ContentSource[] {
                 new CustomFileSource(getServiceContext(),osmApi.getResultFile().toString()),};
 
-        DescriptionInterface[] target = new DescriptionInterface[] {
+        OnContentUpdatedInterface[] target = new OnContentUpdatedInterface[] {
                 list
         };
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/ActivitySwitcher.java b/app/src/main/java/ch/bailu/aat/activities/ActivitySwitcher.java
index 95aae9f7..e0d56abc 100644
--- a/app/src/main/java/ch/bailu/aat/activities/ActivitySwitcher.java
+++ b/app/src/main/java/ch/bailu/aat/activities/ActivitySwitcher.java
@@ -25,8 +25,8 @@ public class ActivitySwitcher {
     };
 
 
-    private final int      activityLabel;
-    private final Class<?> activityClass;
+    public final int      activityLabel;
+    public final Class<?> activityClass;
 
     public final static int cycable = 3;
 
@@ -35,10 +35,6 @@ public class ActivitySwitcher {
         activityClass=c;
     }
 
-    public int getLabel() {
-        return activityLabel;
-    }
-
     public void start(Context c) {
         start(c, activityClass);
     }
diff --git a/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java b/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java
index f9a3da2e..5f0a7364 100644
--- a/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java
@@ -6,7 +6,7 @@ import android.view.View;
 import java.io.File;
 
 import ch.bailu.aat.description.ContentDescription;
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.description.DistanceDescription;
 import ch.bailu.aat.description.NameDescription;
 import ch.bailu.aat.description.PathDescription;
@@ -87,19 +87,17 @@ public class GpxEditorActivity extends AbsFileContentActivity {
         VerticalScrollView summary = new VerticalScrollView(this);
         DistanceAltitudeGraphView graph =new DistanceAltitudeGraphView(this, SOLID_KEY);
 
-        TrackDescriptionView views[] = {
 
-                wayList,
-                map,
+        MultiView mv = new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL);
 
-                new VerticalView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_EDITOR_OVERLAY,
-                        new View[] {summary, graph},
-                        new DescriptionInterface[]
-                                {summary.addAllContent(summaryData, GpxInformation.ID.INFO_ID_EDITOR_OVERLAY), graph}
-                        )
-        };
-
-        return new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, views);
+        mv.addT(wayList);
+        mv.addT(map);
+        mv.addT(new VerticalView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_EDITOR_OVERLAY,
+                new View[] {summary, graph},
+                new OnContentUpdatedInterface[]
+                        {summary.addAllContent(summaryData, GpxInformation.ID.INFO_ID_EDITOR_OVERLAY), graph}
+        ));
+        return mv;
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/GpxViewActivity.java b/app/src/main/java/ch/bailu/aat/activities/GpxViewActivity.java
index 59d76682..ad1ddd56 100644
--- a/app/src/main/java/ch/bailu/aat/activities/GpxViewActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/GpxViewActivity.java
@@ -15,7 +15,7 @@ import ch.bailu.aat.description.AverageSpeedDescription;
 import ch.bailu.aat.description.CaloriesDescription;
 import ch.bailu.aat.description.ContentDescription;
 import ch.bailu.aat.description.DateDescription;
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.description.DistanceDescription;
 import ch.bailu.aat.description.EndDateDescription;
 import ch.bailu.aat.description.MaximumSpeedDescription;
@@ -157,19 +157,12 @@ public class GpxViewActivity extends AbsDispatcher implements OnClickListener {
             });
 
 
-        final View views[] = {
-                summary,
-                map,
-                graph
-        };
-
-        final DescriptionInterface targets[] = {
-                summary.addAllContent(summaryData, GpxInformation.ID.INFO_ID_FILEVIEW),
-                map,
-                graph
-        };
+        MultiView mv = new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL);
+        mv.add(summary, summary.addAllContent(summaryData, GpxInformation.ID.INFO_ID_FILEVIEW));
+        mv.addT(map);
+        mv.addT(graph);
 
-        return new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, views, targets);
+        return mv;
     }
 
 
@@ -181,7 +174,7 @@ public class GpxViewActivity extends AbsDispatcher implements OnClickListener {
                 new CustomFileSource(getServiceContext(), fileID)
         };
 
-        final DescriptionInterface[] target = new DescriptionInterface[] {
+        final OnContentUpdatedInterface[] target = new OnContentUpdatedInterface[] {
                 multiView, this, busyButton.getBusyControl(GpxInformation.ID.INFO_ID_FILEVIEW) 
         };
         setDispatcher(new RootDispatcher(this,source, target));
diff --git a/app/src/main/java/ch/bailu/aat/activities/MainActivity.java b/app/src/main/java/ch/bailu/aat/activities/MainActivity.java
index 5c1659a8..5019a64d 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MainActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MainActivity.java
@@ -1,15 +1,19 @@
 package ch.bailu.aat.activities;
 
 
+import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.view.View;
 import android.widget.LinearLayout;
 
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.dispatcher.ContentSource;
 import ch.bailu.aat.dispatcher.CurrentLocationSource;
 import ch.bailu.aat.dispatcher.RootDispatcher;
 import ch.bailu.aat.dispatcher.TrackerSource;
+import ch.bailu.aat.helpers.AppDirectory;
+import ch.bailu.aat.preferences.SolidDataDirectory;
+import ch.bailu.aat.preferences.SolidDirectory;
 import ch.bailu.aat.preferences.SolidPreset;
 import ch.bailu.aat.views.AbsLabelTextView;
 import ch.bailu.aat.views.ContentView;
@@ -55,14 +59,14 @@ public class MainActivity extends AbsDispatcher {
         list.add(new SolidIndexListView(new SolidPreset(this)));
 
         for (int i = 0; i < ActivitySwitcher.list.length; i++) {
-            list.add(new ActivityLabel(ActivitySwitcher.list[i]));
+            list.add(labelFactory(ActivitySwitcher.list[i]));
         }
         return list;
     }
 
 
     private void createDispatcher() {
-        DescriptionInterface[] target = new DescriptionInterface[] {
+        OnContentUpdatedInterface[] target = new OnContentUpdatedInterface[] {
                 gpsState, trackerState, this
         };
 
@@ -90,9 +94,22 @@ public class MainActivity extends AbsDispatcher {
     }
 
 
+    private ActivityLabel labelFactory(ActivitySwitcher s) {
+        if (s.activityClass == TrackListActivity.class) {
+            return new PresetDirectoryLabel(s);
+        } else if (s.activityClass == OverlayListActivity.class) {
+            return new DirectoryLabel(s, AppDirectory.DIR_OVERLAY);
+        } else if (s.activityClass == ImportListActivity.class) {
+            return new DirectoryLabel(s, AppDirectory.DIR_IMPORT);
+        }
+
+        return new ActivityLabel(s);
+
+    }
+
     private class ActivityLabel extends AbsLabelTextView {
         public ActivityLabel(final ActivitySwitcher s) {
-            super(MainActivity.this, getString(s.getLabel()));
+            super(MainActivity.this, getString(s.activityLabel));
 
             setOnClickListener(new OnClickListener() {
                 @Override
@@ -101,5 +118,87 @@ public class MainActivity extends AbsDispatcher {
                 }
             });
         }
+
+    }
+
+
+    private class PresetDirectoryLabel extends ActivityLabel implements SharedPreferences.OnSharedPreferenceChangeListener {
+
+        private final SolidDirectory sdirectory;
+        private final SolidPreset spreset;
+
+
+        public PresetDirectoryLabel(ActivitySwitcher s) {
+            super(s);
+            sdirectory = new SolidDataDirectory(getContext());
+            spreset = new SolidPreset(getContext());
+
+            setText();
+        }
+
+        public void setText() {
+            setText(new SolidPreset(getContext()).getDirectoryName());
+        }
+
+        @Override
+        public void onAttachedToWindow() {
+            super.onAttachedToWindow();
+
+            spreset.register(this);
+        }
+
+
+        @Override
+        public void onDetachedFromWindow() {
+            super.onDetachedFromWindow();
+
+            spreset.unregister(this);
+        }
+
+        @Override
+        public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
+            if (spreset.hasKey(key) || sdirectory.hasKey(key)) {
+                setText();
+            }
+        }
+    }
+
+
+    private class DirectoryLabel extends ActivityLabel implements SharedPreferences.OnSharedPreferenceChangeListener {
+
+        private final SolidDirectory sdirectory;
+        private final String directory;
+
+
+        public DirectoryLabel(ActivitySwitcher s, String d) {
+            super(s);
+            sdirectory = new SolidDataDirectory(getContext());
+            directory = d;
+        }
+
+        public void setText() {
+            setText(AppDirectory.getDataDirectory(getContext(), directory).getAbsolutePath());
+        }
+
+        @Override
+        public void onAttachedToWindow() {
+            super.onAttachedToWindow();
+            setText();
+            sdirectory.register(this);
+        }
+
+
+        @Override
+        public void onDetachedFromWindow() {
+            super.onDetachedFromWindow();
+            sdirectory.unregister(this);
+        }
+
+        @Override
+        public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
+            if (sdirectory.hasKey(key)) {
+                setText();
+            }
+        }
     }
 }
diff --git a/app/src/main/java/ch/bailu/aat/activities/MapActivity.java b/app/src/main/java/ch/bailu/aat/activities/MapActivity.java
index 7548ddcb..e4c9eae9 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MapActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MapActivity.java
@@ -14,7 +14,7 @@ import org.osmdroid.util.GeoPoint;
 
 import ch.bailu.aat.R;
 import ch.bailu.aat.coordinates.Coordinates;
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.dispatcher.ContentSource;
 import ch.bailu.aat.dispatcher.CurrentLocationSource;
 import ch.bailu.aat.dispatcher.EditorSource;
@@ -126,7 +126,7 @@ public class MapActivity extends AbsDispatcher implements OnClickListener{
 
 
     private void createDispatcher() {
-        DescriptionInterface[] target = new DescriptionInterface[] {
+        OnContentUpdatedInterface[] target = new OnContentUpdatedInterface[] {
                 map,trackerState,gpsState, this
         };
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/MapFeaturesActivity.java b/app/src/main/java/ch/bailu/aat/activities/MapFeaturesActivity.java
index 28d44b22..ddf19b6b 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MapFeaturesActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MapFeaturesActivity.java
@@ -44,7 +44,7 @@ public class MapFeaturesActivity extends AbsDispatcher implements OnClickListene
         final ControlBar bar = new MainControlBar(getServiceContext(), LinearLayout.HORIZONTAL, 6);
         
         bar.addView(download);
-        bar.addViewIgnoreSize(AppTheme.getTitleTextView(this, R.string.query_features));
+        bar.addIgnoreSize(AppTheme.getTitleTextView(this, R.string.query_features));
 
         list = new FeaturesList(getServiceContext());
         list.loadList();
diff --git a/app/src/main/java/ch/bailu/aat/activities/NodeDetailActivity.java b/app/src/main/java/ch/bailu/aat/activities/NodeDetailActivity.java
index 4408d605..f601d36d 100644
--- a/app/src/main/java/ch/bailu/aat/activities/NodeDetailActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/NodeDetailActivity.java
@@ -9,7 +9,7 @@ import android.widget.ImageButton;
 import android.widget.LinearLayout;
 
 import ch.bailu.aat.R;
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.dispatcher.ContentSource;
 import ch.bailu.aat.dispatcher.CurrentLocationSource;
 import ch.bailu.aat.dispatcher.CustomFileSource;
@@ -94,8 +94,8 @@ public class NodeDetailActivity extends AbsDispatcher implements OnClickListener
                 map,
         };
 
-        DescriptionInterface targets[]  = {
-            DescriptionInterface.NULL,
+        OnContentUpdatedInterface targets[]  = {
+            OnContentUpdatedInterface.NULL,
             map
         };
 
@@ -116,7 +116,7 @@ public class NodeDetailActivity extends AbsDispatcher implements OnClickListener
         map.setOverlayList(overlayList);
 
 
-        DescriptionInterface[] target = new DescriptionInterface[] {
+        OnContentUpdatedInterface[] target = new OnContentUpdatedInterface[] {
                 verticalView, this
         };
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java b/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java
index 8aa6127b..645c9b9e 100644
--- a/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java
@@ -5,28 +5,24 @@ import android.view.View;
 import android.widget.LinearLayout;
 
 import ch.bailu.aat.R;
-import ch.bailu.aat.description.AltitudeDescription;
-import ch.bailu.aat.description.AverageSpeedDescription;
-import ch.bailu.aat.description.ContentDescription;
-import ch.bailu.aat.description.CurrentSpeedDescription;
-import ch.bailu.aat.description.DistanceDescription;
-import ch.bailu.aat.description.MaximumSpeedDescription;
-import ch.bailu.aat.description.TimeDescription;
 import ch.bailu.aat.gpx.GpxInformation;
+import ch.bailu.aat.preferences.SolidPreset;
 import ch.bailu.aat.services.tileremover.TileRemoverService;
 import ch.bailu.aat.views.ContentView;
 import ch.bailu.aat.views.ControlBar;
 import ch.bailu.aat.views.MainControlBar;
+import ch.bailu.aat.views.MvListButton;
+import ch.bailu.aat.views.MvNextButton;
 import ch.bailu.aat.views.description.MultiView;
 import ch.bailu.aat.views.preferences.GeneralPreferencesView;
 import ch.bailu.aat.views.preferences.MapTilePreferencesView;
+import ch.bailu.aat.views.preferences.PresetPreferencesView;
+import ch.bailu.aat.views.MvPreviousButton;
 
-public class PreferencesActivity extends AbsDispatcher implements View.OnClickListener {
+public class PreferencesActivity extends AbsDispatcher {
 
     private static String SOLID_KEY=PreferencesActivity.class.getSimpleName();
 
-    private View next, prev;
-    private MultiView multiView;
     private MapTilePreferencesView mapTilePreferences;
 
 
@@ -41,45 +37,32 @@ public class PreferencesActivity extends AbsDispatcher implements View.OnClickLi
     private void createViews() {
         LinearLayout contentView = new ContentView(this);
 
-        contentView.addView(createButtonBar());
-        multiView = createMultiView();
+        MultiView multiView = createMultiView();
+        contentView.addView(new MainControlBar(getServiceContext(), multiView));
         contentView.addView(multiView);
 
         setContentView(contentView);
     }
 
-    private LinearLayout createButtonBar() {
-        final ControlBar bar = new MainControlBar(getServiceContext());
-
-        prev = bar.addImageButton(R.drawable.go_previous_inverse);
-        bar.addImageButton(R.drawable.content_loading_inverse);
-        next = bar.addImageButton(R.drawable.go_next_inverse);
-
-        bar.setOnClickListener1(this);
-
-        return bar;
-    }
 
 
     private MultiView createMultiView() {
-        ContentDescription[] data = new ContentDescription[] {
-                new CurrentSpeedDescription(this),
-                new AltitudeDescription(this),
-                new TimeDescription(this),
-                new DistanceDescription(this),
-                new AverageSpeedDescription(this),
-                new MaximumSpeedDescription(this),
-        };
+        MultiView mv = new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL);
 
-        mapTilePreferences = new MapTilePreferencesView(this, getServiceContext());
+        final int l = new SolidPreset(this).length();
 
+        mapTilePreferences = new MapTilePreferencesView(this, getServiceContext());
+        mv.add(new GeneralPreferencesView(this),
+                getString(R.string.p_general)+ "/"+ getString(R.string.p_system));
+        mv.add(mapTilePreferences,
+                getString(R.string.p_tiles));
 
-        View views[] = {
-                mapTilePreferences,
-                new GeneralPreferencesView(this),
-        };
+        for (int i = 0; i < l; i++) {
+            mv.add(new PresetPreferencesView(this, i),
+                    getString(R.string.p_preset) + " " + (i + 1));
+        }
 
-        return new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, views);
+        return mv;
     }
 
 
@@ -98,10 +81,4 @@ public class PreferencesActivity extends AbsDispatcher implements View.OnClickLi
         super.onDestroy();
 
     }
-
-    @Override
-    public void onClick(View v) {
-        if (v == prev) multiView.setPrevious();
-        else if (v == next) multiView.setNext();
-    }
 }
diff --git a/app/src/main/java/ch/bailu/aat/activities/SplitViewActivity.java b/app/src/main/java/ch/bailu/aat/activities/SplitViewActivity.java
index 911621f4..4f7d1980 100644
--- a/app/src/main/java/ch/bailu/aat/activities/SplitViewActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/SplitViewActivity.java
@@ -13,7 +13,7 @@ import ch.bailu.aat.description.AltitudeDescription;
 import ch.bailu.aat.description.AverageSpeedDescription;
 import ch.bailu.aat.description.ContentDescription;
 import ch.bailu.aat.description.CurrentSpeedDescription;
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.description.DistanceDescription;
 import ch.bailu.aat.description.TimeDescription;
 import ch.bailu.aat.dispatcher.ContentSource;
@@ -55,8 +55,8 @@ public class SplitViewActivity extends AbsDispatcher implements OnClickListener{
     private TrackerStateButton      trackerState;
 
     private EditorHelper          edit;
-    
-    
+
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -64,7 +64,7 @@ public class SplitViewActivity extends AbsDispatcher implements OnClickListener{
         edit = new EditorHelper(getServiceContext());
         setContentView(createContentView());
         createDispatcher();
-        
+
     }
 
 
@@ -88,13 +88,13 @@ public class SplitViewActivity extends AbsDispatcher implements OnClickListener{
 
 
     private TrackDescriptionView createMultiView() {
-        ContentDescription[] cockpitA = new ContentDescription[] { 
+        ContentDescription[] cockpitA = new ContentDescription[] {
                 new DistanceDescription(this),
                 new AltitudeDescription(this),
                 new TimeDescription(this),
         };
 
-        ContentDescription[] cockpitB = new ContentDescription[] { 
+        ContentDescription[] cockpitB = new ContentDescription[] {
                 new CurrentSpeedDescription(this),
                 new AverageSpeedDescription(this),
         };
@@ -104,25 +104,19 @@ public class SplitViewActivity extends AbsDispatcher implements OnClickListener{
 
         OsmOverlay overlayList[] = {
                 new GpxOverlayListOverlay(mapViewAlt,getServiceContext()),
-                new GpxDynOverlay(mapViewAlt, getServiceContext(), GpxInformation.ID.INFO_ID_TRACKER), 
+                new GpxDynOverlay(mapViewAlt, getServiceContext(), GpxInformation.ID.INFO_ID_TRACKER),
                 new CurrentLocationOverlay(mapViewAlt),
                 new NavigationBarOverlay(mapViewAlt,6),
         };
         mapViewAlt.setOverlayList(overlayList);
 
 
-        TrackDescriptionView viewData[] = {
-                new CockpitView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, cockpitA),
-                new CockpitView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, cockpitB),
-                new VerticalView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, new TrackDescriptionView[] {
-                        new DistanceAltitudeGraphView(this, SOLID_KEY),
-                        new DistanceSpeedGraphView(this, SOLID_KEY)}),   
-                        mapViewAlt,
-        };   
-
-
-
-        multiView = new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, viewData);
+        multiView = new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER);
+        multiView.addT(new CockpitView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, cockpitA));
+        multiView.addT(new CockpitView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, cockpitB));
+        multiView.addT(new DistanceAltitudeGraphView(this, SOLID_KEY));
+        multiView.addT(new DistanceSpeedGraphView(this, SOLID_KEY));
+        multiView.addT(mapViewAlt);
 
 
 
@@ -139,7 +133,7 @@ public class SplitViewActivity extends AbsDispatcher implements OnClickListener{
         trackerState = new TrackerStateButton(this.getServiceContext());
         bar.addView(trackerState);
         bar.setOnClickListener1(this);
-        
+
         return bar;
     }
 
@@ -164,38 +158,38 @@ public class SplitViewActivity extends AbsDispatcher implements OnClickListener{
     }
 
 
-    
+
     private void createDispatcher() {
-            
-            OsmOverlay overlayList[] = {
-                    new GpxOverlayListOverlay(mapView, getServiceContext()),
-                    new GpxDynOverlay(mapView, getServiceContext(), GpxInformation.ID.INFO_ID_TRACKER), 
-                    new CurrentLocationOverlay(mapView),
-                    new GridDynOverlay(mapView, getServiceContext()),
-                    new NavigationBarOverlay(mapView),
-                    new InformationBarOverlay(mapView),
-                    new CustomBarOverlay(mapView, createButtonBar()),
-                    new EditorOverlay(mapView, getServiceContext(),  GpxInformation.ID.INFO_ID_EDITOR_DRAFT, edit),
-
-            };
-            mapView.setOverlayList(overlayList);
-
-
-            DescriptionInterface[] target = new DescriptionInterface[] {
-                    multiView, trackerState, mapView, this
-            };
-
-            ContentSource[] source = new ContentSource[] {
-                    new EditorSource(getServiceContext(),edit),
-                    new TrackerSource(getServiceContext()),
-                    new CurrentLocationSource(getServiceContext()),
-                    new OverlaySource(getServiceContext()),
-            };
-
-            setDispatcher(new RootDispatcher(this,source, target));
+
+        OsmOverlay overlayList[] = {
+                new GpxOverlayListOverlay(mapView, getServiceContext()),
+                new GpxDynOverlay(mapView, getServiceContext(), GpxInformation.ID.INFO_ID_TRACKER),
+                new CurrentLocationOverlay(mapView),
+                new GridDynOverlay(mapView, getServiceContext()),
+                new NavigationBarOverlay(mapView),
+                new InformationBarOverlay(mapView),
+                new CustomBarOverlay(mapView, createButtonBar()),
+                new EditorOverlay(mapView, getServiceContext(),  GpxInformation.ID.INFO_ID_EDITOR_DRAFT, edit),
+
+        };
+        mapView.setOverlayList(overlayList);
+
+
+        OnContentUpdatedInterface[] target = new OnContentUpdatedInterface[] {
+                multiView, trackerState, mapView, this
+        };
+
+        ContentSource[] source = new ContentSource[] {
+                new EditorSource(getServiceContext(),edit),
+                new TrackerSource(getServiceContext()),
+                new CurrentLocationSource(getServiceContext()),
+                new OverlaySource(getServiceContext()),
+        };
+
+        setDispatcher(new RootDispatcher(this,source, target));
 
     }
-    
+
     @Override
     public void onServicesUp(boolean firstRun) {}
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/TestActivity.java b/app/src/main/java/ch/bailu/aat/activities/TestActivity.java
index 4507bfdc..3e9bf2d7 100644
--- a/app/src/main/java/ch/bailu/aat/activities/TestActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/TestActivity.java
@@ -19,7 +19,7 @@ import ch.bailu.aat.description.CaloriesDescription;
 import ch.bailu.aat.description.ContentDescription;
 import ch.bailu.aat.description.CurrentSpeedDescription;
 import ch.bailu.aat.description.DateDescription;
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.description.EndDateDescription;
 import ch.bailu.aat.description.GpsStateDescription;
 import ch.bailu.aat.description.LatitudeDescription;
@@ -65,10 +65,9 @@ import ch.bailu.aat.views.map.overlay.gpx.GpxTestOverlay;
 import ch.bailu.aat.views.map.overlay.grid.GridDynOverlay;
 import ch.bailu.aat.views.preferences.VerticalScrollView;
 
-public class TestActivity extends AbsDispatcher implements OnClickListener {
+public class TestActivity extends AbsDispatcher {
     private static final String SOLID_KEY = "test";
 
-    private ImageButton multiCycleP, multiCycleN;
     private MultiView multiView;
 
     private OsmInteractiveView map;
@@ -82,8 +81,10 @@ public class TestActivity extends AbsDispatcher implements OnClickListener {
 
         final LinearLayout contentView = new ContentView(this);
 
-        contentView.addView(createButtonBar());
+
         multiView = createMultiView();
+
+        contentView.addView(createButtonBar(multiView));
         contentView.addView(multiView);
 
 
@@ -147,46 +148,27 @@ public class TestActivity extends AbsDispatcher implements OnClickListener {
         statusTextView = new StatusTextView(this);
 
 
-        DescriptionInterface targets[] = {
-                map,
-                locationView.addAllContent(locationDescription, GpxInformation.ID.INFO_ID_LOCATION),
-                trackerView.addAllContent(trackerDescription, GpxInformation.ID.INFO_ID_TRACKER),
-                DescriptionInterface.NULL,
-                DescriptionInterface.NULL
-        };
-
-        View views[] = {
-                map,
-                locationView,
-                trackerView,
-                testsView,
-                statusTextView
-        };
+        MultiView mv = new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL);
 
+        mv.addT(map,"Map*");
+        mv.add(locationView, locationView.addAllContent(
+                locationDescription, GpxInformation.ID.INFO_ID_LOCATION), "Location*");
 
-        return new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, views, targets);
+        mv.add(trackerView, trackerView.addAllContent(
+                trackerDescription, GpxInformation.ID.INFO_ID_TRACKER), "Tracker*");
+        mv.add(testsView, "Tests*");
+        mv.add(statusTextView, getString(R.string.intro_status));
+        return mv;
     }
 
 
-    private ControlBar createButtonBar() {
-        final ControlBar bar = new MainControlBar(getServiceContext());
-
-        multiCycleP = bar.addImageButton(R.drawable.go_previous_inverse);
-        multiCycleN = bar.addImageButton(R.drawable.go_next_inverse);
-
-        bar.setOnClickListener1(this);
+    private ControlBar createButtonBar(MultiView multiView) {
+        final MainControlBar bar = new MainControlBar(getServiceContext());
 
+        bar.addAll(multiView);
         return bar;
     }
 
-    @Override
-    public void onClick(View v) {
-        if (v == multiCycleN) {
-            multiView.setNext();
-        } else if (v == multiCycleP) {
-            multiView.setPrevious();
-        }
-    }
 
 
     private void createDispatcher() {
@@ -205,7 +187,7 @@ public class TestActivity extends AbsDispatcher implements OnClickListener {
         map.setOverlayList(overlayList);
 
 
-        DescriptionInterface[] target = new DescriptionInterface[]{
+        OnContentUpdatedInterface[] target = new OnContentUpdatedInterface[]{
                 multiView, this
         };
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/TrackerActivity.java b/app/src/main/java/ch/bailu/aat/activities/TrackerActivity.java
index 1e29efa8..70d3d300 100644
--- a/app/src/main/java/ch/bailu/aat/activities/TrackerActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/TrackerActivity.java
@@ -11,7 +11,7 @@ import ch.bailu.aat.description.AltitudeDescription;
 import ch.bailu.aat.description.AverageSpeedDescription;
 import ch.bailu.aat.description.ContentDescription;
 import ch.bailu.aat.description.CurrentSpeedDescription;
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.description.DistanceDescription;
 import ch.bailu.aat.description.MaximumSpeedDescription;
 import ch.bailu.aat.description.TimeDescription;
@@ -26,6 +26,7 @@ import ch.bailu.aat.services.editor.EditorHelper;
 import ch.bailu.aat.views.ContentView;
 import ch.bailu.aat.views.ControlBar;
 import ch.bailu.aat.views.MainControlBar;
+import ch.bailu.aat.views.MvNextButton;
 import ch.bailu.aat.views.description.MultiView;
 import ch.bailu.aat.views.description.TrackerStateButton;
 import ch.bailu.aat.views.description.VerticalView;
@@ -47,7 +48,7 @@ public class TrackerActivity extends AbsDispatcher implements OnClickListener{
  
     private static final String SOLID_KEY="tracker";
 
-    private ImageButton          activityCycle, multiCycle;
+    private ImageButton          activityCycle;
     private TrackerStateButton   trackerState;
     private MultiView            multiView;
     private OsmInteractiveView   map;
@@ -62,8 +63,9 @@ public class TrackerActivity extends AbsDispatcher implements OnClickListener{
         edit = new EditorHelper(getServiceContext());
 
         ViewGroup contentView = new ContentView(this);
-        contentView.addView(createButtonBar());
+
         multiView = createMultiView();
+        contentView.addView(createButtonBar(multiView));
         contentView.addView(multiView);
         setContentView(contentView);
 
@@ -84,22 +86,21 @@ public class TrackerActivity extends AbsDispatcher implements OnClickListener{
         CockpitView cockpit = new CockpitView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, data);
 
         map = new OsmInteractiveView(getServiceContext(), SOLID_KEY);
-        TrackDescriptionView multiViewLayout[] = {
-                cockpit,
-                map,
-                new VerticalView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, new TrackDescriptionView[] {
-                        new DistanceAltitudeGraphView(this, SOLID_KEY),
-                        new DistanceSpeedGraphView(this, SOLID_KEY)})
-        };   
-
-        return new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, multiViewLayout);
+
+        MultiView mv = new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL);
+        mv.addT(cockpit);
+        mv.addT(map);
+        mv.addT(new VerticalView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, new TrackDescriptionView[] {
+                new DistanceAltitudeGraphView(this, SOLID_KEY),
+                new DistanceSpeedGraphView(this, SOLID_KEY)}));
+        return mv;
     }
 
-    private ControlBar createButtonBar() {
+    private ControlBar createButtonBar(MultiView mv) {
         ControlBar bar = new MainControlBar(getServiceContext());
 
         activityCycle = bar.addImageButton(R.drawable.go_down_inverse);
-        multiCycle = bar.addImageButton(R.drawable.go_next_inverse);
+        bar.add(new MvNextButton(mv));
 
         trackerState = new TrackerStateButton(this.getServiceContext());
         
@@ -119,8 +120,6 @@ public class TrackerActivity extends AbsDispatcher implements OnClickListener{
         if (v == activityCycle) {
             ActivitySwitcher.cycle(this);
 
-        } else if (v ==multiCycle) {
-            multiView.setNext();
         }
     }
 
@@ -137,7 +136,7 @@ public class TrackerActivity extends AbsDispatcher implements OnClickListener{
             };
             map.setOverlayList(overlayList);
             
-            DescriptionInterface[] target = new DescriptionInterface[] {
+            OnContentUpdatedInterface[] target = new OnContentUpdatedInterface[] {
                     multiView,trackerState,this
             };
 
diff --git a/app/src/main/java/ch/bailu/aat/description/ContentDescription.java b/app/src/main/java/ch/bailu/aat/description/ContentDescription.java
index c4cab9f7..e9f11d06 100644
--- a/app/src/main/java/ch/bailu/aat/description/ContentDescription.java
+++ b/app/src/main/java/ch/bailu/aat/description/ContentDescription.java
@@ -4,7 +4,8 @@ import android.content.Context;
 import android.content.ContextWrapper;
 
 
-public abstract class ContentDescription extends ContextWrapper implements DescriptionInterface {
+public abstract class ContentDescription extends ContextWrapper
+        implements ContentInterface, OnContentUpdatedInterface {
     
     protected static final String NULL_STRING="";
     public ContentDescription(Context c) {
@@ -18,8 +19,10 @@ public abstract class ContentDescription extends ContextWrapper implements Descr
         return NULL_STRING;
     }
 
-    /*
-    public int getStrlen() {
-        return 4;
-    }*/
+
+
+    @Override
+    public String getValueAsString() {
+        return getValue() + " " + getUnit();
+    }
 }
diff --git a/app/src/main/java/ch/bailu/aat/description/ContentInterface.java b/app/src/main/java/ch/bailu/aat/description/ContentInterface.java
new file mode 100644
index 00000000..77b5e3c9
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/description/ContentInterface.java
@@ -0,0 +1,6 @@
+package ch.bailu.aat.description;
+
+public interface ContentInterface {
+    String getLabel();
+    String getValueAsString();
+}
diff --git a/app/src/main/java/ch/bailu/aat/description/DescriptionInterface.java b/app/src/main/java/ch/bailu/aat/description/OnContentUpdatedInterface.java
similarity index 63%
rename from app/src/main/java/ch/bailu/aat/description/DescriptionInterface.java
rename to app/src/main/java/ch/bailu/aat/description/OnContentUpdatedInterface.java
index 58153153..8486bb23 100644
--- a/app/src/main/java/ch/bailu/aat/description/DescriptionInterface.java
+++ b/app/src/main/java/ch/bailu/aat/description/OnContentUpdatedInterface.java
@@ -3,8 +3,8 @@ package ch.bailu.aat.description;
 import ch.bailu.aat.gpx.GpxInformation;
 
 
-public interface DescriptionInterface {
-    static final DescriptionInterface NULL = new DescriptionInterface() {
+public interface OnContentUpdatedInterface {
+    static final OnContentUpdatedInterface NULL = new OnContentUpdatedInterface() {
         @Override
         public void updateGpxContent(GpxInformation info) {
 
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/ContentSource.java b/app/src/main/java/ch/bailu/aat/dispatcher/ContentSource.java
index ff086daa..74b8e955 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/ContentSource.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/ContentSource.java
@@ -2,10 +2,10 @@ package ch.bailu.aat.dispatcher;
 
 import java.io.Closeable;
 
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 
-public abstract class ContentSource implements Closeable, DescriptionInterface {
+public abstract class ContentSource implements Closeable, OnContentUpdatedInterface {
 
     public static final ContentSource NULL_LIST[] = new ContentSource[]{};
     private RootDispatcher dispatcher = RootDispatcher.NULL;
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/OverlaySource.java b/app/src/main/java/ch/bailu/aat/dispatcher/OverlaySource.java
index 87eb3305..f9a4bbb6 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/OverlaySource.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/OverlaySource.java
@@ -113,7 +113,7 @@ public class OverlaySource extends ContentSource {
         public void initAndUpdateOverlay() {
 
             if (soverlay.isEnabled()) {
-                File file = soverlay.getFile();
+                File file = soverlay.toFile();
                 enableOverlay(file.getAbsolutePath());
 
             } else {
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/RootDispatcher.java b/app/src/main/java/ch/bailu/aat/dispatcher/RootDispatcher.java
index e7e93672..cf52b34a 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/RootDispatcher.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/RootDispatcher.java
@@ -4,20 +4,20 @@ import android.content.Context;
 
 import java.io.Closeable;
 
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 
-public class RootDispatcher implements DescriptionInterface, Closeable {
-    public static final DescriptionInterface NULL_LIST[] = new DescriptionInterface[]{};
+public class RootDispatcher implements OnContentUpdatedInterface, Closeable {
+    public static final OnContentUpdatedInterface NULL_LIST[] = new OnContentUpdatedInterface[]{};
     public static final RootDispatcher NULL=new RootDispatcher() {
         @Override
         public void close(){}
     };
 
 
-    private final DescriptionInterface TARGET_LIST[];
+    private final OnContentUpdatedInterface TARGET_LIST[];
     
-    private DescriptionInterface targetList[];
+    private OnContentUpdatedInterface targetList[];
     private final ContentSource[] sourceList;
 
 
@@ -28,7 +28,7 @@ public class RootDispatcher implements DescriptionInterface, Closeable {
         sourceList = ContentSource.NULL_LIST;
     }
 
-    public RootDispatcher(Context c, ContentSource s[], DescriptionInterface t[]) {
+    public RootDispatcher(Context c, ContentSource s[], OnContentUpdatedInterface t[]) {
         TARGET_LIST = t;
         targetList = t;
         sourceList = s;
@@ -66,7 +66,7 @@ public class RootDispatcher implements DescriptionInterface, Closeable {
     
     @Override
     public void updateGpxContent(GpxInformation info) {
-        for (DescriptionInterface target: targetList)
+        for (OnContentUpdatedInterface target: targetList)
             target.updateGpxContent(info);
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/SubDispatcher.java b/app/src/main/java/ch/bailu/aat/dispatcher/SubDispatcher.java
index 04109d69..5ce250d8 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/SubDispatcher.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/SubDispatcher.java
@@ -1,16 +1,16 @@
 package ch.bailu.aat.dispatcher;
 
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.views.description.TrackDescriptionView;
 
-public class SubDispatcher implements DescriptionInterface {
+public class SubDispatcher implements OnContentUpdatedInterface {
 
     private final TrackDescriptionView.Filter filter;
-    private final DescriptionInterface targetList[];
+    private final OnContentUpdatedInterface targetList[];
 
 
-    public SubDispatcher(DescriptionInterface t[], int f) {
+    public SubDispatcher(OnContentUpdatedInterface t[], int f) {
         filter = new TrackDescriptionView.Filter(f);
         targetList = t;
     }
@@ -19,7 +19,7 @@ public class SubDispatcher implements DescriptionInterface {
     @Override
     public void updateGpxContent(GpxInformation info) {
         if (filter.pass(info)) {
-            for (DescriptionInterface target : targetList)
+            for (OnContentUpdatedInterface target : targetList)
                 target.updateGpxContent(info);
         }
     }
diff --git a/app/src/main/java/ch/bailu/aat/helpers/FileList.java b/app/src/main/java/ch/bailu/aat/helpers/FileList.java
index d18e969a..c2a81829 100644
--- a/app/src/main/java/ch/bailu/aat/helpers/FileList.java
+++ b/app/src/main/java/ch/bailu/aat/helpers/FileList.java
@@ -64,7 +64,7 @@ public class FileList {
 
 
     
-    public File getFile() {
+    public File toFile() {
         if (isIndexValid()) {
             return files[index];
         }
@@ -73,7 +73,7 @@ public class FileList {
     
     
     public String getFileName() {
-        return getFile().getName();
+        return toFile().getName();
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/helpers/file/FileIntent.java b/app/src/main/java/ch/bailu/aat/helpers/file/FileIntent.java
index 1da3150d..ec08ee06 100644
--- a/app/src/main/java/ch/bailu/aat/helpers/file/FileIntent.java
+++ b/app/src/main/java/ch/bailu/aat/helpers/file/FileIntent.java
@@ -30,6 +30,16 @@ public class FileIntent {
     
 
 
+    public void pick(Context context) {
+        intent.setAction(Intent.ACTION_GET_CONTENT);
+        intent.putExtra(Intent.EXTRA_TEXT, file.getName());
+        intent.setDataAndType(getFileUri(), "resource/folder");
+        context.startActivity(Intent.createChooser(intent, file.getName()));
+
+
+    }
+
+
     public void pick(String label, Activity context, int id) {
         intent.setAction(Intent.ACTION_GET_CONTENT);
         intent.putExtra(Intent.EXTRA_SUBJECT, label);
diff --git a/app/src/main/java/ch/bailu/aat/menus/DirectoryMenu.java b/app/src/main/java/ch/bailu/aat/menus/DirectoryMenu.java
new file mode 100644
index 00000000..a6755834
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/menus/DirectoryMenu.java
@@ -0,0 +1,62 @@
+package ch.bailu.aat.menus;
+
+
+import android.view.ContextMenu;
+import android.view.Menu;
+import android.view.MenuItem;
+
+import ch.bailu.aat.R;
+import ch.bailu.aat.helpers.Clipboard;
+import ch.bailu.aat.helpers.file.FileIntent;
+import ch.bailu.aat.preferences.SolidDirectory;
+
+public class DirectoryMenu extends AbsMenu {
+    private MenuItem view, get, clipboard;
+
+
+    private final SolidDirectory sdirectory;
+    public DirectoryMenu(SolidDirectory d) {
+        sdirectory = d;
+    }
+
+
+    @Override
+    public void inflate(Menu menu) {
+        view = menu.add(R.string.file_view);
+        get = menu.add(R.string.file_view);
+        clipboard = menu.add(R.string.clipboard_copy);
+    }
+
+    @Override
+    public void inflateWithHeader(ContextMenu menu) {
+        menu.setHeaderTitle(sdirectory.getValueAsFile().getName());
+        menu.setHeaderIcon(R.drawable.folder_inverse);
+        inflate(menu);
+    }
+
+    @Override
+    public void prepare(Menu menu) {
+
+    }
+
+    @Override
+    public boolean onItemClick(MenuItem item) {
+        FileIntent intent = new FileIntent(sdirectory.getValueAsFile());
+
+        if (item == view) {
+            intent.view(sdirectory.getContext());
+
+        } else if (item == get) {
+            intent.pick(sdirectory.getContext());
+
+        } else if (item == clipboard) {
+            new Clipboard(sdirectory.getContext()).setText(sdirectory.getLabel(),
+                    sdirectory.getValueAsString());
+
+        } else {
+            return false;
+        }
+        return true;
+    }
+
+}
diff --git a/app/src/main/java/ch/bailu/aat/menus/MultiViewMenu.java b/app/src/main/java/ch/bailu/aat/menus/MultiViewMenu.java
new file mode 100644
index 00000000..3566de83
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/menus/MultiViewMenu.java
@@ -0,0 +1,37 @@
+package ch.bailu.aat.menus;
+
+
+import android.view.ContextMenu;
+import android.view.Menu;
+import android.view.MenuItem;
+
+import ch.bailu.aat.views.description.MultiView;
+
+public class MultiViewMenu extends AbsMenu {
+
+    private final MultiView mview;
+
+    public MultiViewMenu(MultiView mv) {
+        mview = mv;
+    }
+
+    @Override
+    public void inflate(Menu menu) {
+        mview.inflateMenu(menu);
+    }
+
+    @Override
+    public void inflateWithHeader(ContextMenu menu) {
+        inflate(menu);
+    }
+
+    @Override
+    public void prepare(Menu menu) {}
+
+    @Override
+    public boolean onItemClick(MenuItem item) {
+        mview.setActive(item.getItemId());
+        return true;
+    }
+
+}
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidType.java b/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java
similarity index 79%
rename from app/src/main/java/ch/bailu/aat/preferences/SolidType.java
rename to app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java
index 702e7a55..63093fc4 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidType.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java
@@ -5,32 +5,38 @@ import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
 
 
 
-public abstract class SolidType implements SolidTypeInterface {
-    public static final String NULL_LABEL=""; 
-    
+public abstract class AbsSolidType implements SolidTypeInterface {
+    public static final String NULL_LABEL="";
+
 
     public int getIconResource() {return 0;}
+
+    @Override
     public String getLabel() {
         return NULL_LABEL;
     }
-    public abstract String getValueAsString();
+
     public abstract void setValueFromString(String s);
 
+    @Override
     public boolean hasKey(String s) {
         return s.equals(getKey());
     }    
     
-    
+
+    @Override
     public Context getContext() {
         return getStorage().getContext();
     }
     
-    
+
+    @Override
     public void register(OnSharedPreferenceChangeListener listener) {
         getStorage().register(listener);
     }
-    
-    
+
+
+    @Override
     public void unregister(OnSharedPreferenceChangeListener listener) {
         getStorage().unregister(listener);
     }
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidCheckList.java b/app/src/main/java/ch/bailu/aat/preferences/SolidCheckList.java
index 17749705..8c1f5735 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidCheckList.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidCheckList.java
@@ -4,7 +4,7 @@ import android.content.Context;
 import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
 
 
-public abstract class SolidCheckList extends SolidType {
+public abstract class SolidCheckList extends AbsSolidType {
 
     public abstract CharSequence[] getStringArray();
     public abstract boolean[] getEnabledArray();
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidDirectoryQuery.java b/app/src/main/java/ch/bailu/aat/preferences/SolidDirectoryQuery.java
index 6833bcf4..02a815b5 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidDirectoryQuery.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidDirectoryQuery.java
@@ -2,10 +2,12 @@ package ch.bailu.aat.preferences;
 
 import android.content.Context;
 
+import java.util.ArrayList;
+
 import ch.bailu.aat.R;
 import ch.bailu.aat.services.directory.GpxDbConstants;
 
-public class SolidDirectoryQuery extends SolidString {
+public class SolidDirectoryQuery extends SolidDirectory {
     private static final String KEY_DIR_DIRECTORY="DIR_DIRECTORY";
     private static final String KEY_DIR_INDEX="DIR_INDEX_";
 
@@ -126,6 +128,11 @@ public class SolidDirectoryQuery extends SolidString {
 
         return selection;
     }
+
+    @Override
+    public ArrayList<String> buildSelection(ArrayList<String> list) {
+        return null;
+    }
 }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidIndexList.java b/app/src/main/java/ch/bailu/aat/preferences/SolidIndexList.java
index a0572393..bcf196dc 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidIndexList.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidIndexList.java
@@ -1,6 +1,6 @@
 package ch.bailu.aat.preferences;
 
-public abstract class SolidIndexList extends SolidType {
+public abstract class SolidIndexList extends AbsSolidType {
 
     private final SolidInteger sindex;
     
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidInteger.java b/app/src/main/java/ch/bailu/aat/preferences/SolidInteger.java
index 06d5ce09..bdf9c7da 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidInteger.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidInteger.java
@@ -2,7 +2,7 @@ package ch.bailu.aat.preferences;
 
 import ch.bailu.aat.helpers.AppLog;
 
-public class SolidInteger extends SolidType {
+public class SolidInteger extends AbsSolidType {
     private final String key;
     private final Storage storage;
     
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidLong.java b/app/src/main/java/ch/bailu/aat/preferences/SolidLong.java
index ba9e4dda..35713863 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidLong.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidLong.java
@@ -2,7 +2,7 @@ package ch.bailu.aat.preferences;
 
 import ch.bailu.aat.helpers.AppLog;
 
-public class SolidLong extends SolidType {
+public class SolidLong extends AbsSolidType {
 
 
     private final String key;
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidOverlayFile.java b/app/src/main/java/ch/bailu/aat/preferences/SolidOverlayFile.java
index 16bee995..6133c230 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidOverlayFile.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidOverlayFile.java
@@ -29,26 +29,37 @@ public class SolidOverlayFile  implements SolidTypeInterface {
     }
 
 
-    public File getFile() {
+    public File toFile() {
         return new File(getPath());
     }
 
     public String getName() {
-        return getFile().getName();
+        return toFile().getName();
     }
-
     public String getPath() {
+        return getValueAsString();
+    }
+
+    @Override
+    public String getLabel() {
+        return getName();
+    }
+
+
+    @Override
+    public String getValueAsString() {
         return path.getValueAsString();
     }
 
 
+
     public boolean isEnabled() {
         return exists() && enabled.getValue();
     }
 
 
     public boolean exists() {
-        return getFile().exists();
+        return toFile().exists();
     }
 
 
@@ -75,12 +86,6 @@ public class SolidOverlayFile  implements SolidTypeInterface {
     }
 
 
-    @Override
-    public String getLabel() {
-        return "";
-    }
-
-
     @Override
     public boolean hasKey(String key) {
         return key.contains(KEY_NAME) || key.contains(KEY_ENABLED);
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidString.java b/app/src/main/java/ch/bailu/aat/preferences/SolidString.java
index e90cdd71..d03d767d 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidString.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidString.java
@@ -1,6 +1,6 @@
 package ch.bailu.aat.preferences;
 
-public class SolidString extends SolidType {
+public class SolidString extends AbsSolidType {
     private final String key;
     private final Storage storage;
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidTrimDate.java b/app/src/main/java/ch/bailu/aat/preferences/SolidTrimDate.java
index f2184734..3e8f51a9 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidTrimDate.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidTrimDate.java
@@ -3,6 +3,8 @@ package ch.bailu.aat.preferences;
 import android.content.Context;
 import android.text.format.DateUtils;
 
+import ch.bailu.aat.R;
+
 public class SolidTrimDate extends SolidIndexList {
 
 
@@ -55,7 +57,7 @@ public class SolidTrimDate extends SolidIndexList {
 
     @Override
     public String getLabel() {
-        return "Trim Age*";
+        return getContext().getString(R.string.p_trim_age);
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidTrimSize.java b/app/src/main/java/ch/bailu/aat/preferences/SolidTrimSize.java
index 38619be0..0b224194 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidTrimSize.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidTrimSize.java
@@ -2,6 +2,8 @@ package ch.bailu.aat.preferences;
 
 import android.content.Context;
 
+import ch.bailu.aat.R;
+
 public class SolidTrimSize extends SolidIndexList {
 
     public final static long KB=1024;
@@ -76,7 +78,7 @@ public class SolidTrimSize extends SolidIndexList {
 
     @Override
     public String getLabel() {
-        return "Size*";
+        return getContext().getString(R.string.p_trim_size);
     }
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidTypeInterface.java b/app/src/main/java/ch/bailu/aat/preferences/SolidTypeInterface.java
index eb167d76..1a941c70 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidTypeInterface.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidTypeInterface.java
@@ -2,14 +2,16 @@ package ch.bailu.aat.preferences;
 
 import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
 
+import ch.bailu.aat.description.ContentInterface;
 import ch.bailu.aat.helpers.ContextWrapperInterface;
 
-public interface SolidTypeInterface extends ContextWrapperInterface {
+public interface SolidTypeInterface extends
+        ContextWrapperInterface,
+        ContentInterface {
+
     public String getKey();
     public Storage getStorage();
     
-    public String getLabel(); 
-    
     public boolean hasKey(String key);
     
     public void register(OnSharedPreferenceChangeListener listener);
diff --git a/app/src/main/java/ch/bailu/aat/views/BusyButton.java b/app/src/main/java/ch/bailu/aat/views/BusyButton.java
index 40cc4784..4836793c 100644
--- a/app/src/main/java/ch/bailu/aat/views/BusyButton.java
+++ b/app/src/main/java/ch/bailu/aat/views/BusyButton.java
@@ -5,7 +5,7 @@ import android.view.ViewGroup;
 import android.widget.ImageButton;
 
 import ch.bailu.aat.R;
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.helpers.AppTheme;
 
@@ -62,7 +62,7 @@ public class BusyButton extends ViewGroup   {
         return new BusyControl(id);
     }
     
-    public class BusyControl implements DescriptionInterface {
+    public class BusyControl implements OnContentUpdatedInterface {
         private final int ID;
 
         public BusyControl(int iid) {
diff --git a/app/src/main/java/ch/bailu/aat/views/ControlBar.java b/app/src/main/java/ch/bailu/aat/views/ControlBar.java
index 545da214..b4123499 100644
--- a/app/src/main/java/ch/bailu/aat/views/ControlBar.java
+++ b/app/src/main/java/ch/bailu/aat/views/ControlBar.java
@@ -19,9 +19,7 @@ import ch.bailu.aat.preferences.SolidIndexList;
 public class ControlBar extends LinearLayout {
     public final  static int DEFAULT_VISIBLE_BUTTON_COUNT=4;
 
-
     private final FrameLayout scroller;
-
     private final LinearLayout canvas;
 
     private final int orientation;
@@ -29,8 +27,6 @@ public class ControlBar extends LinearLayout {
 
     private OnClickListener listener1, listener2;
 
-    private final ArrayList<SolidImageButton> solidButton = new ArrayList<>();
-
     public ControlBar(Context context, int orientation) {
         this(context, orientation, DEFAULT_VISIBLE_BUTTON_COUNT);
     }
@@ -66,40 +62,37 @@ public class ControlBar extends LinearLayout {
         int large = length;
         int small = controlSize;
 
+        int large_spec = MeasureSpec.makeMeasureSpec(large, MeasureSpec.EXACTLY);
+        int small_spec = MeasureSpec.makeMeasureSpec(small, MeasureSpec.EXACTLY);
+
         if (orientation == HORIZONTAL) {
-            measure(large,small);
+            measure(large_spec, small_spec);
             layout(x, y, x+large, y+small);
         } else {
-            measure(small, large);
+            measure(small_spec, large_spec);
             layout(x, y, x+small, y+large);
         }
     }
 
-    
 
+/*
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
         if (changed) scroller.layout(0,0,r-l,b-t);
     }
-
+*/
 
     public ImageButton addImageButton(int res) {
-        ImageButton button = new ImageButton(getContext());
-        button.setImageResource(res);
-        AppTheme.themify(button);
-        this.addView(button);
+        ImageButton button = new ImageButtonView(getContext(), res);
+        add(button);
         button.setOnClickListener(onClickListener);
         return button;
     }
 
 
-    public Button addButton(String text) {
-        Button button =  new Button(getContext());
-        button.setText(text);
-        AppTheme.themify(button);
-        this.addView(button);
-        button.setOnClickListener(onClickListener);
-        return button;
+    public View add(View v) {
+        canvas.addView(v, controlSize, controlSize);
+        return v;
     }
 
 
@@ -116,11 +109,15 @@ public class ControlBar extends LinearLayout {
 
     }
 
-    public void addViewIgnoreSize(View v) {
+    public void addIgnoreSize(View v) {
         canvas.addView(v);
     }
 
 
+    public View addSolidIndexButton(SolidIndexList slist) {
+        return add(new SolidImageButton(slist));
+    }
+
     public void setOnClickListener1(OnClickListener l) {
         listener1 = l;
     }
@@ -139,20 +136,5 @@ public class ControlBar extends LinearLayout {
     };
 
 
-    public ImageButton addSolidIndexButton(SolidIndexList sIndexList) {
-        SolidImageButton button = new SolidImageButton(sIndexList);
-        AppTheme.themify(button);
-        addView(button);
-        solidButton.add(button);
-        return button;
-    }
-
-
-    public void onSharedPreferencesChanged(String key) {
-        for (int i=0; i<solidButton.size(); i++) {
-            solidButton.get(i).onPreferencesChanged(key);
-        }
-    }
-
 
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/ImageButtonView.java b/app/src/main/java/ch/bailu/aat/views/ImageButtonView.java
new file mode 100644
index 00000000..7de989c0
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/views/ImageButtonView.java
@@ -0,0 +1,16 @@
+package ch.bailu.aat.views;
+
+import android.content.Context;
+import android.widget.ImageButton;
+
+import ch.bailu.aat.helpers.AppTheme;
+
+
+public class ImageButtonView extends ImageButton {
+    public ImageButtonView(Context context, int res) {
+        super(context);
+
+        setImageResource(res);
+        AppTheme.themify(this);
+    }
+}
diff --git a/app/src/main/java/ch/bailu/aat/views/MainControlBar.java b/app/src/main/java/ch/bailu/aat/views/MainControlBar.java
index f848f79e..7fb50d27 100644
--- a/app/src/main/java/ch/bailu/aat/views/MainControlBar.java
+++ b/app/src/main/java/ch/bailu/aat/views/MainControlBar.java
@@ -5,6 +5,7 @@ import android.view.View;
 import ch.bailu.aat.helpers.AppLayout;
 import ch.bailu.aat.menus.OptionsMenu;
 import ch.bailu.aat.services.ServiceContext;
+import ch.bailu.aat.views.description.MultiView;
 
 public class MainControlBar extends ControlBar {
 
@@ -12,7 +13,11 @@ public class MainControlBar extends ControlBar {
     
     public MainControlBar(final ServiceContext context) {
         this(context, DEFAULT_VISIBLE_BUTTON_COUNT);
-        
+    }
+
+    public MainControlBar(final ServiceContext context, final MultiView mv) {
+        this(context);
+        addAll(mv);
     }
 
     public MainControlBar(final ServiceContext scontext, int button) {
@@ -38,4 +43,10 @@ public class MainControlBar extends ControlBar {
     public BusyButton getMenu() {
         return menu;
     }
+
+    public void addAll(MultiView mv) {
+        add(new MvPreviousButton(mv));
+        add(new MvListButton(mv));
+        add(new MvNextButton(mv));
+    }
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/MvListButton.java b/app/src/main/java/ch/bailu/aat/views/MvListButton.java
new file mode 100644
index 00000000..ee62429f
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/views/MvListButton.java
@@ -0,0 +1,23 @@
+package ch.bailu.aat.views;
+
+import android.view.View;
+
+import ch.bailu.aat.R;
+import ch.bailu.aat.menus.MultiViewMenu;
+import ch.bailu.aat.views.description.MultiView;
+
+public class MvListButton extends ImageButtonView {
+
+    public MvListButton(final MultiView mv) {
+        super(mv.getContext(), R.drawable.content_loading_inverse);
+
+        final MultiViewMenu menu = new MultiViewMenu(mv);
+
+        setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                menu.showAsPopup(mv.getContext(), MvListButton.this);
+            }
+        });
+    }
+}
diff --git a/app/src/main/java/ch/bailu/aat/views/MvNextButton.java b/app/src/main/java/ch/bailu/aat/views/MvNextButton.java
new file mode 100644
index 00000000..16733423
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/views/MvNextButton.java
@@ -0,0 +1,20 @@
+package ch.bailu.aat.views;
+
+import android.view.View;
+
+import ch.bailu.aat.R;
+import ch.bailu.aat.views.description.MultiView;
+
+
+public class MvNextButton extends ImageButtonView {
+    public MvNextButton(final MultiView mv) {
+        super(mv.getContext(), R.drawable.go_next_inverse);
+
+        setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                mv.setNext();
+            }
+        });
+    }
+}
diff --git a/app/src/main/java/ch/bailu/aat/views/MvPreviousButton.java b/app/src/main/java/ch/bailu/aat/views/MvPreviousButton.java
new file mode 100644
index 00000000..7915450f
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/views/MvPreviousButton.java
@@ -0,0 +1,21 @@
+package ch.bailu.aat.views;
+
+import android.view.View;
+
+import ch.bailu.aat.R;
+import ch.bailu.aat.views.description.MultiView;
+
+
+public class MvPreviousButton extends ImageButtonView {
+    public MvPreviousButton(final MultiView mv) {
+        super(mv.getContext(), R.drawable.go_previous_inverse);
+
+        setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                mv.setPrevious();
+            }
+        });
+    }
+}
+
diff --git a/app/src/main/java/ch/bailu/aat/views/SolidImageButton.java b/app/src/main/java/ch/bailu/aat/views/SolidImageButton.java
index 0f0c3d64..7f66915f 100644
--- a/app/src/main/java/ch/bailu/aat/views/SolidImageButton.java
+++ b/app/src/main/java/ch/bailu/aat/views/SolidImageButton.java
@@ -1,44 +1,53 @@
 package ch.bailu.aat.views;
 
+import android.content.SharedPreferences;
 import android.view.View;
-import android.widget.ImageButton;
 
 import ch.bailu.aat.helpers.AppLog;
 import ch.bailu.aat.preferences.SolidIndexList;
 
 
-public class SolidImageButton extends ImageButton {
+public class SolidImageButton extends ImageButtonView implements SharedPreferences.OnSharedPreferenceChangeListener {
 
-    private final SolidIndexList sList;
+    private final SolidIndexList slist;
     
-    public SolidImageButton(SolidIndexList sgrid) {
-        super(sgrid.getContext());
+    public SolidImageButton(SolidIndexList s) {
+        super(s.getContext(), s.getIconResource());
         
-        sList = sgrid;
+        slist = s;
         setOnClickListener(onClick);
-        
-        setImage();
     }
 
 
-    void onPreferencesChanged(String key) {
-        if (sList.hasKey(key)) {
-            setImage();
-            AppLog.i(getContext(), sList.getValueAsString());
-        }
-    }
-    
-    
-    private void setImage() {
-        setImageResource(sList.getIconResource());
-    }
 
-    
     private final OnClickListener onClick = new OnClickListener() {
         @Override
         public void onClick(View v) {
-            sList.cycle();
+            slist.cycle();
         }
         
     };
+
+
+    @Override
+    public void onAttachedToWindow() {
+        super.onAttachedToWindow();
+
+        slist.register(this);
+    }
+
+    @Override
+    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
+        if (slist.hasKey(key)) {
+            setImageResource(slist.getIconResource());
+            AppLog.i(getContext(), slist.getValueAsString());
+        }
+    }
+
+    @Override
+    public void onDetachedFromWindow() {
+        super.onDetachedFromWindow();
+
+        slist.unregister(this);
+    }
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/description/LabelTextView.java b/app/src/main/java/ch/bailu/aat/views/description/LabelTextView.java
index 71c9e249..6a0f4ffe 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/LabelTextView.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/LabelTextView.java
@@ -3,11 +3,11 @@ package ch.bailu.aat.views.description;
 import android.content.Context;
 
 import ch.bailu.aat.description.ContentDescription;
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.views.AbsLabelTextView;
 
-public class LabelTextView extends AbsLabelTextView implements DescriptionInterface{
+public class LabelTextView extends AbsLabelTextView implements OnContentUpdatedInterface {
     private final ContentDescription description;
 
     public LabelTextView(Context context, ContentDescription d) {
@@ -25,6 +25,6 @@ public class LabelTextView extends AbsLabelTextView implements DescriptionInterf
 
 
     public void setText() {
-        setText(description.getValue()+" "+ description.getUnit());
+        setText(description.getValueAsString());
     }
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/description/MultiView.java b/app/src/main/java/ch/bailu/aat/views/description/MultiView.java
index 87b3432f..5aac91e9 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/MultiView.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/MultiView.java
@@ -2,12 +2,15 @@ package ch.bailu.aat.views.description;
 
 import android.content.Context;
 import android.util.SparseArray;
+import android.view.Menu;
 import android.view.View;
 
-import ch.bailu.aat.description.DescriptionInterface;
+import java.util.ArrayList;
+
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.preferences.Storage;
-import ch.bailu.aat.views.description.TrackDescriptionView;
+import ch.bailu.aat.views.map.OsmInteractiveView;
 
 
 public class MultiView extends TrackDescriptionView {
@@ -15,46 +18,67 @@ public class MultiView extends TrackDescriptionView {
 
     private final SparseArray<GpxInformation> informationMap =
             new SparseArray<>(5);
-    
-    private final DescriptionInterface[] targets;
-    private final View[] views;
-    private int active=0;
 
 
-    public MultiView(Context context, String key, int filter,
-                     View[] v,
-                     DescriptionInterface[]t) {
-        super(context, key, filter);
 
-        views = v;
-        targets = t;
+    public class Page {
+        final public OnContentUpdatedInterface target;
+        final public View view;
+        final public String label;
+
+        public Page(View v, OnContentUpdatedInterface t, String l) {
+            target = t; view = v; label = l;
 
-        for (View view : views) {
             view.setVisibility(GONE);
             addView(view);
         }
+    }
+
 
-        setActive(Storage.activity(context).readInteger(solidKey + "_index"));
 
+    private ArrayList<Page> pages = new ArrayList(5);
+    private int active=0;
+
+
+    public MultiView(Context context, String key, int infoID) {
+        super(context, key, infoID);
     }
-    public MultiView(Context context, String key, int filter, TrackDescriptionView[] d) {
-        this(context, key, filter, d, d);
+
+
+    public void inflateMenu(Menu menu) {
+        for (int i = 0 ; i< pages.size(); i++) {
+            menu.add(Menu.NONE, i, Menu.NONE, pages.get(i).label);
+        }
     }
 
-    public MultiView(Context context, String key, int filter, View[] v) {
-        this(context, key, filter, v, createNullDescription(v.length));
+    public void add(View view, OnContentUpdatedInterface target, String label) {
+        pages.add(new Page(view, target, label));
     }
 
-    private static DescriptionInterface[] createNullDescription(int l) {
-        DescriptionInterface[] r = new DescriptionInterface[l];
 
-        for (int i = 0; i<r.length; i++) {
-            r[i] = DescriptionInterface.NULL;
-        }
-        return r;
+    public void add(View view, OnContentUpdatedInterface target) {
+        pages.add(new Page(view, target, ""));
+    }
+
+
+    public void add(View view, String label) {
+        pages.add(new Page(view, OnContentUpdatedInterface.NULL, label));
+    }
+
+
+    public void add(View view) {
+        pages.add(new Page(view, OnContentUpdatedInterface.NULL, ""));
     }
 
 
+    public void addT(TrackDescriptionView view) {
+        add(view, view);
+    }
+
+    public void addT(TrackDescriptionView view, String s) {
+        add(view, view, s);
+    }
+
     public void setNext() {
         setActive(active+1);
     }
@@ -70,19 +94,19 @@ public class MultiView extends TrackDescriptionView {
 
     public void setActive(int a) {
         if (a != active) {
-            views[active].setVisibility(GONE);
+            pages.get(active).view.setVisibility(GONE);
         }
 
         active=a;
-        if (active >= views.length) active=0;
-        else if (active < 0) active= views.length-1;
+        if (active >= pages.size()) active=0;
+        else if (active < 0) active= pages.size()-1;
         
         
-        views[active].setVisibility(VISIBLE);
-        views[active].bringToFront();
+        pages.get(active).view.setVisibility(VISIBLE);
+        pages.get(active).view.bringToFront();
         
         for (int i=0; i< informationMap.size(); i++) 
-            targets[active].updateGpxContent(informationMap.valueAt(i));
+            pages.get(active).target.updateGpxContent(informationMap.valueAt(i));
     }
     
     
@@ -90,7 +114,7 @@ public class MultiView extends TrackDescriptionView {
     public void updateGpxContent(GpxInformation info) {
         if (filter.pass(info)) {
             informationMap.put(info.getID(), info);
-            targets[active].updateGpxContent(info);
+            pages.get(active).target.updateGpxContent(info);
         }
     }
 
@@ -105,19 +129,27 @@ public class MultiView extends TrackDescriptionView {
         hSpec  = MeasureSpec.makeMeasureSpec (height,  MeasureSpec.EXACTLY);
 
         //int width=0,height=0;
-        for (View view : views) {
-            view.measure(wSpec, hSpec);
+        for (Page p : pages) {
+            p.view.measure(wSpec, hSpec);
         }
         setMeasuredDimension(width, height);
     }
     
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
-        for (View view : views) {
-            view.layout(0, 0, r-l, b-t);
+        for (Page p : pages) {
+            p.view.layout(0, 0, r-l, b-t);
         }
     }
-    
+
+
+    @Override
+    public void onAttachedToWindow() {
+        super.onAttachedToWindow();
+        setActive(Storage.activity(getContext()).readInteger(solidKey + "_index"));
+    }
+
+
     @Override
     public void onDetachedFromWindow() {
         Storage.activity(getContext()).writeInteger(solidKey + "_index",active);
diff --git a/app/src/main/java/ch/bailu/aat/views/description/TrackDescriptionView.java b/app/src/main/java/ch/bailu/aat/views/description/TrackDescriptionView.java
index 0dff53bf..684b9e80 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/TrackDescriptionView.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/TrackDescriptionView.java
@@ -3,11 +3,11 @@ package ch.bailu.aat.views.description;
 import android.content.Context;
 import android.view.ViewGroup;
 
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 
 public abstract class TrackDescriptionView extends ViewGroup 
-implements DescriptionInterface {
+implements OnContentUpdatedInterface {
     public static final String DEFAULT_SOLID_KEY=TrackDescriptionView.class.getSimpleName();
     
     
@@ -20,9 +20,6 @@ implements DescriptionInterface {
         solidKey=key;
     }
 
-
-
-
     public static class Filter {
         public final int id;
         
diff --git a/app/src/main/java/ch/bailu/aat/views/description/VerticalView.java b/app/src/main/java/ch/bailu/aat/views/description/VerticalView.java
index e0e15b4d..f1641ef8 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/VerticalView.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/VerticalView.java
@@ -3,14 +3,13 @@ package ch.bailu.aat.views.description;
 import android.content.Context;
 import android.view.View;
 
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
-import ch.bailu.aat.views.description.TrackDescriptionView;
 
 public class VerticalView extends TrackDescriptionView {
 
     private final View[] views;
-    private final DescriptionInterface[] targets;
+    private final OnContentUpdatedInterface[] targets;
 
 
     public VerticalView(Context context, String key, int filter, TrackDescriptionView[] vl) {
@@ -21,7 +20,7 @@ public class VerticalView extends TrackDescriptionView {
                         String key,
                         int filter,
                         View[] v,
-                        DescriptionInterface[] t) {
+                        OnContentUpdatedInterface[] t) {
         super(context, key, filter);
         views = v;
         targets = t;
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/OsmOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/OsmOverlay.java
index d8203b22..cacad2c2 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/OsmOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/OsmOverlay.java
@@ -6,11 +6,11 @@ import android.graphics.Canvas;
 import org.osmdroid.views.MapView;
 import org.osmdroid.views.overlay.Overlay;
 
-import ch.bailu.aat.description.DescriptionInterface;
+import ch.bailu.aat.description.OnContentUpdatedInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.views.map.AbsOsmView;
 
-public abstract class OsmOverlay extends Overlay implements DescriptionInterface {
+public abstract class OsmOverlay extends Overlay implements OnContentUpdatedInterface {
     private final AbsOsmView osm;
     private final MapPainter painter;
 
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/control/ControlBarOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/control/ControlBarOverlay.java
index 069e32a7..fcca824b 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/control/ControlBarOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/control/ControlBarOverlay.java
@@ -140,11 +140,6 @@ public abstract class ControlBarOverlay extends OsmOverlay implements Runnable,
         showBar();
     }
 
-    @Override
-    public void onSharedPreferenceChanged(String key) {
-        super.onSharedPreferenceChanged(key);
-        bar.onSharedPreferencesChanged(key);
-    }
 
 
     public void topTap()   {hideBar();}
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/AbsSolidDialog.java b/app/src/main/java/ch/bailu/aat/views/preferences/AbsSolidDialog.java
index 66f2eab4..8e41c313 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/AbsSolidDialog.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/AbsSolidDialog.java
@@ -2,11 +2,11 @@ package ch.bailu.aat.views.preferences;
 
 import android.app.AlertDialog;
 
-import ch.bailu.aat.preferences.SolidType;
+import ch.bailu.aat.preferences.AbsSolidType;
 
 public abstract class AbsSolidDialog {
 
-    public static AlertDialog.Builder createDefaultDialog(SolidType s) {
+    public static AlertDialog.Builder createDefaultDialog(AbsSolidType s) {
         AlertDialog.Builder dialog = new AlertDialog.Builder(s.getContext());
 
         dialog.setTitle(s.getLabel());
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/AbsSolidView.java b/app/src/main/java/ch/bailu/aat/views/preferences/AbsSolidView.java
index 930ee8b0..079415d5 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/AbsSolidView.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/AbsSolidView.java
@@ -1,23 +1,21 @@
 package ch.bailu.aat.views.preferences;
 
-import android.content.Context;
 import android.content.SharedPreferences;
 import android.view.View;
 
-import ch.bailu.aat.preferences.SolidType;
+import ch.bailu.aat.preferences.AbsSolidType;
 import ch.bailu.aat.views.AbsLabelTextView;
 
 public abstract class AbsSolidView extends AbsLabelTextView
         implements SharedPreferences.OnSharedPreferenceChangeListener {
 
-    private final SolidType solid;
+    private final AbsSolidType solid;
 
-    public AbsSolidView(final SolidType s) {
+    public AbsSolidView(final AbsSolidType s) {
         super(s.getContext(), s.getLabel());
 
         solid = s;
 
-        setText(solid.getValueAsString());
         setOnClickListener(new OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -29,18 +27,22 @@ public abstract class AbsSolidView extends AbsLabelTextView
     public abstract void onRequestNewValue();
 
 
+    public void setText() {
+        setText("["+solid.getValueAsString()+"]");
+    }
+
     @Override
     public void onAttachedToWindow() {
         super.onAttachedToWindow();
         solid.register(this);
-
+        setText();
     }
 
 
     @Override
     public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
         if (solid.hasKey(key)) {
-            setText(solid.getValueAsString());
+            setText();
         }
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/GeneralPreferencesView.java b/app/src/main/java/ch/bailu/aat/views/preferences/GeneralPreferencesView.java
index fcabefa7..a0cc6eb3 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/GeneralPreferencesView.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/GeneralPreferencesView.java
@@ -25,21 +25,10 @@ public class GeneralPreferencesView extends VerticalScrollView {
         add(new SolidIndexListView(new SolidUnit(context)));
         add(new SolidIntegerView(new SolidWeight(context)));
 
-
-        final SolidPreset spreset= new SolidPreset(context);
-        for (int i=0; i<spreset.length(); i++) {
-            add(new TitleView(context, context.getString(R.string.p_preset) + " " + (i+1)));
-
-            add(new SolidIndexListView(new SolidMET(context,i)));
-            add(new SolidIndexListView(new SolidAutopause(context,i)));
-            add(new SolidIndexListView(new SolidDistanceFilter(context,i)));
-            add(new SolidIndexListView(new SolidAccelerationFilter(context,i)));
-            add(new SolidIndexListView(new SolidAccuracyFilter(context,i)));
-            add(new SolidIndexListView(new SolidMissingTrigger(context,i)));
-        }
-
         add(new TitleView(context, R.string.p_system));
         add(new SolidIndexListView(new SolidLocationProvider(context)));
-        add(new SolidDirectoryView(context, new SolidDataDirectory(context)));
+        add(new SolidExtendetDirectoryView(context, new SolidDataDirectory(context)));
     }
+
+
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/MapTilePreferencesView.java b/app/src/main/java/ch/bailu/aat/views/preferences/MapTilePreferencesView.java
index 283b5aa0..b2429a05 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/MapTilePreferencesView.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/MapTilePreferencesView.java
@@ -3,6 +3,7 @@ package ch.bailu.aat.views.preferences;
 import android.app.Activity;
 import android.content.Context;
 
+import ch.bailu.aat.R;
 import ch.bailu.aat.preferences.SolidTileCacheDirectory;
 import ch.bailu.aat.preferences.SolidTileSize;
 import ch.bailu.aat.preferences.SolidTrimDate;
@@ -20,9 +21,9 @@ public class MapTilePreferencesView extends VerticalScrollView {
 
         final Context context = scontext.getContext();
 
-        add(new TitleView(context, "Map Tiles*"));
+        add(new TitleView(context, context.getString(R.string.p_tiles)));
         add(new SolidIndexListView(new SolidTileSize(context)));
-        add(new SolidDirectoryView(acontext, new SolidTileCacheDirectory(context)));
+        add(new SolidExtendetDirectoryView(acontext, new SolidTileCacheDirectory(context)));
         add(new SolidIndexListView(new SolidTrimMode(context)));
         add(new SolidIndexListView(new SolidTrimSize(context)));
         add(new SolidIndexListView(new SolidTrimDate(context)));
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/PresetPreferencesView.java b/app/src/main/java/ch/bailu/aat/views/preferences/PresetPreferencesView.java
new file mode 100644
index 00000000..33d9b7cf
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/PresetPreferencesView.java
@@ -0,0 +1,30 @@
+package ch.bailu.aat.views.preferences;
+
+import android.content.Context;
+
+import ch.bailu.aat.R;
+import ch.bailu.aat.preferences.SolidAccelerationFilter;
+import ch.bailu.aat.preferences.SolidAccuracyFilter;
+import ch.bailu.aat.preferences.SolidAutopause;
+import ch.bailu.aat.preferences.SolidDistanceFilter;
+import ch.bailu.aat.preferences.SolidMET;
+import ch.bailu.aat.preferences.SolidMissingTrigger;
+import ch.bailu.aat.preferences.SolidPreset;
+
+public class PresetPreferencesView extends VerticalScrollView {
+    public PresetPreferencesView(Context context, int i) {
+        super(context);
+
+
+        final SolidPreset spreset = new SolidPreset(context);
+        add(new TitleView(context, context.getString(R.string.p_preset) + " " + (i + 1)));
+
+        add(new SolidIndexListView(new SolidMET(context, i)));
+        add(new SolidIndexListView(new SolidAutopause(context, i)));
+        add(new SolidIndexListView(new SolidDistanceFilter(context, i)));
+        add(new SolidIndexListView(new SolidAccelerationFilter(context, i)));
+        add(new SolidIndexListView(new SolidAccuracyFilter(context, i)));
+        add(new SolidIndexListView(new SolidMissingTrigger(context, i)));
+    }
+
+}
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryDialog.java b/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryDialog.java
index deb66c64..c946cede 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryDialog.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryDialog.java
@@ -11,11 +11,11 @@ import java.util.ArrayList;
 import ch.bailu.aat.helpers.Clipboard;
 import ch.bailu.aat.helpers.file.FileIntent;
 import ch.bailu.aat.preferences.SolidDirectory;
-import ch.bailu.aat.preferences.SolidType;
+import ch.bailu.aat.preferences.AbsSolidType;
 
 public class SolidDirectoryDialog extends AbsSolidDialog
         implements  DialogInterface.OnClickListener {
-    private final SolidType solid;
+    private final AbsSolidType solid;
     private final AlertDialog.Builder dialog;
     private final String[] preselect;
 
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryMenuButton.java b/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryMenuButton.java
new file mode 100644
index 00000000..2e1ff2a9
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/SolidDirectoryMenuButton.java
@@ -0,0 +1,23 @@
+package ch.bailu.aat.views.preferences;
+
+import android.view.View;
+
+import ch.bailu.aat.R;
+import ch.bailu.aat.menus.DirectoryMenu;
+import ch.bailu.aat.preferences.SolidDirectory;
+import ch.bailu.aat.views.ImageButtonView;
+
+public class SolidDirectoryMenuButton extends ImageButtonView {
+    public SolidDirectoryMenuButton(final SolidDirectory s) {
+        super(s.getContext(), R.drawable.folder_inverse);
+
+        setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                new DirectoryMenu(s).showAsPopup(
+                        s.getContext(),
+                        SolidDirectoryMenuButton.this);
+            }
+        });
+    }
+}
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/SolidExtendetDirectoryView.java b/app/src/main/java/ch/bailu/aat/views/preferences/SolidExtendetDirectoryView.java
new file mode 100644
index 00000000..41bad730
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/SolidExtendetDirectoryView.java
@@ -0,0 +1,35 @@
+package ch.bailu.aat.views.preferences;
+
+import android.app.Activity;
+import android.view.View;
+import android.widget.LinearLayout;
+
+import ch.bailu.aat.description.ContentDescription;
+import ch.bailu.aat.preferences.SolidDirectory;
+import ch.bailu.aat.views.description.LabelTextView;
+
+public class SolidExtendetDirectoryView extends LinearLayout{
+    public SolidExtendetDirectoryView(Activity context, SolidDirectory s) {
+        super(s.getContext());
+        setOrientation(HORIZONTAL);
+
+        addW(new SolidDirectoryView(context, s));
+        addView(new SolidDirectoryMenuButton(s));
+    }
+
+    public SolidExtendetDirectoryView(Activity context, SolidDirectory s, ContentDescription d) {
+        super(s.getContext());
+        setOrientation(HORIZONTAL);
+
+        addW(new LabelTextView(context, d));
+        addView(new SolidDirectoryMenuButton(s));
+    }
+
+    public void addW(View v) {
+        addView(v);
+
+        LinearLayout.LayoutParams l = (LinearLayout.LayoutParams) v.getLayoutParams();
+        l.weight = 1;
+        v.setLayoutParams(l);
+    }
+}
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/SolidStringInputDialog.java b/app/src/main/java/ch/bailu/aat/views/preferences/SolidStringInputDialog.java
index e09e00bb..f068f4cb 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/SolidStringInputDialog.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/SolidStringInputDialog.java
@@ -6,11 +6,11 @@ import android.content.DialogInterface;
 import android.widget.EditText;
 
 import ch.bailu.aat.R;
-import ch.bailu.aat.preferences.SolidType;
+import ch.bailu.aat.preferences.AbsSolidType;
 
 public class SolidStringInputDialog extends AbsSolidDialog {
 
-    public SolidStringInputDialog(final SolidType s) {
+    public SolidStringInputDialog(final AbsSolidType s) {
 
         final Context context = s.getContext();
 
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/VerticalScrollView.java b/app/src/main/java/ch/bailu/aat/views/preferences/VerticalScrollView.java
index 3818d3e6..425465d6 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/VerticalScrollView.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/VerticalScrollView.java
@@ -60,7 +60,4 @@ public class VerticalScrollView extends ScrollView {
         to.addView(new SolidDateView(sdirectory.getDateTo()));
         layout.addView(to);
     }
-
-
-
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/tileremover/TileRemoverView.java b/app/src/main/java/ch/bailu/aat/views/tileremover/TileRemoverView.java
index 45fd8e4a..64f3def6 100644
--- a/app/src/main/java/ch/bailu/aat/views/tileremover/TileRemoverView.java
+++ b/app/src/main/java/ch/bailu/aat/views/tileremover/TileRemoverView.java
@@ -24,7 +24,6 @@ public class TileRemoverView
 
     private TilesSummaryView summaryView;
     private BusyButton scan, remove;
-    private View openFolder;
 
     private final SolidTileCacheDirectory sdirectory;
 
@@ -40,10 +39,18 @@ public class TileRemoverView
 
         sdirectory = new SolidTileCacheDirectory(getContext());
 
+        addW(createFilterLayout(getContext()));
         addView(createControlBar(getContext()));
-        addView(createFilterLayout(getContext()), LayoutParams.MATCH_PARENT);
+
     }
 
+    public void addW(View v) {
+        addView(v);
+
+        LinearLayout.LayoutParams l = (LinearLayout.LayoutParams) v.getLayoutParams();
+        l.weight = 1;
+        v.setLayoutParams(l);
+    }
 
     private View createFilterLayout(Context context) {
         summaryView = new TilesSummaryView(context);
@@ -54,10 +61,6 @@ public class TileRemoverView
     private View createControlBar(Context context) {
         final ControlBar bar =  new ControlBar(context, LinearLayout.VERTICAL);
 
-
-
-        openFolder = bar.addImageButton(R.drawable.folder_inverse);
-
         scan = new BusyButton(context, R.drawable.view_refresh_inverse);
         bar.addButton(scan);
 
@@ -140,8 +143,6 @@ public class TileRemoverView
             } else if (v == remove) {
                 tr.getState().remove();
 
-            } else if (v == openFolder) {
-                new FileIntent(sdirectory.getValueAsFile()).view(getContext());
             }
         }
     }
diff --git a/app/src/main/java/ch/bailu/aat/views/tileremover/TilesSummaryView.java b/app/src/main/java/ch/bailu/aat/views/tileremover/TilesSummaryView.java
index 82723b5c..fae185f2 100644
--- a/app/src/main/java/ch/bailu/aat/views/tileremover/TilesSummaryView.java
+++ b/app/src/main/java/ch/bailu/aat/views/tileremover/TilesSummaryView.java
@@ -6,6 +6,7 @@ import android.widget.RadioButton;
 import android.widget.RadioGroup;
 import android.widget.TextView;
 
+import ch.bailu.aat.helpers.AppTheme;
 import ch.bailu.aat.preferences.SolidTrimIndex;
 import ch.bailu.aat.services.tileremover.MapSummaries;
 import ch.bailu.aat.services.tileremover.MapSummaryInterface;
@@ -40,6 +41,7 @@ public class TilesSummaryView extends RadioGroup implements View.OnClickListener
 
     private void addViews(int i, String name) {
         radioButtons[i] = new RadioButton(getContext());
+        AppTheme.themify(radioButtons[i]);
         radioButtons[i].setText(name);
 
         radioButtons[i].setOnClickListener(this);
