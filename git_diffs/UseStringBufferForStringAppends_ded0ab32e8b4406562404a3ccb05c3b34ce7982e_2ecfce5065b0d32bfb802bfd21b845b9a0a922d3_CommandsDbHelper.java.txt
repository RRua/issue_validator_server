diff --git a/app/src/androidTest/java/com.inspiredandroid.linuxcommandbibliotheca.test/MyAndroidTest.java b/app/src/androidTest/java/com.inspiredandroid.linuxcommandbibliotheca.test/MyAndroidTest.java
index a6ff7a0..44d5992 100644
--- a/app/src/androidTest/java/com.inspiredandroid.linuxcommandbibliotheca.test/MyAndroidTest.java
+++ b/app/src/androidTest/java/com.inspiredandroid.linuxcommandbibliotheca.test/MyAndroidTest.java
@@ -11,6 +11,7 @@ import com.google.gson.Gson;
 import com.google.gson.reflect.TypeToken;
 import com.inspiredandroid.linuxcommandbibliotheca.R;
 import com.inspiredandroid.linuxcommandbibliotheca.misc.Utils;
+import com.inspiredandroid.linuxcommandbibliotheca.models.Command;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandChildModel;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandGroupModel;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandsDBTableModel;
@@ -25,6 +26,8 @@ import java.nio.channels.FileChannel;
 import java.util.ArrayList;
 import java.util.List;
 
+import io.realm.Realm;
+
 
 /**
  * Class to com.inspiredandroid.linuxcommandbibliotheca.test Android com.inspiredandroid.linuxcommandbibliotheca.test case.
@@ -55,9 +58,7 @@ public class MyAndroidTest extends AndroidTestCase {
      */
     public void testCraftManDatabase() throws Exception
     {
-        CommandsDbHelper helper = new CommandsDbHelper(mContext);
-        helper.getReadableDatabase();
-        helper.close();
+
     }
 
     /**
@@ -130,18 +131,17 @@ public class MyAndroidTest extends AndroidTestCase {
      * @param missingCommands
      * @param mans
      */
-    private void addMissingMansToList(ArrayList<String> missingCommands, String[] mans)
+    private void addMissingMansToList(List<String> missingCommands, List<String> mans)
     {
-        CommandsDbHelper helper = new CommandsDbHelper(mContext);
+        Realm realm = Realm.getInstance(getContext());
         for(String man : mans) {
-            Cursor c = helper.getCommandFromName(man);
-            if(c.getCount() == 0) {
+            Command command = realm.where(Command.class).equalTo("name", man).findFirst();
+            if(command == null) {
                 if(!missingCommands.contains(man)) {
                     missingCommands.add(man);
                 }
             }
         }
-        helper.close();
     }
 
     /**
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandBibliothecaActivity.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandBibliothecaActivity.java
index 59d52f5..8fe8c3a 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandBibliothecaActivity.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandBibliothecaActivity.java
@@ -1,5 +1,6 @@
 package com.inspiredandroid.linuxcommandbibliotheca;
 
+import android.content.Context;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
@@ -11,6 +12,10 @@ import com.inspiredandroid.linuxcommandbibliotheca.asnytasks.LoadDatabaseAsyncTa
 import com.inspiredandroid.linuxcommandbibliotheca.fragments.BibliothecaFragment;
 import com.inspiredandroid.linuxcommandbibliotheca.fragments.DatabaseLoadingFragment;
 
+import java.io.File;
+
+import io.realm.Realm;
+
 /**
  * Created by Simon Schubert
  * <p/>
@@ -32,8 +37,13 @@ public class CommandBibliothecaActivity extends LoadingBaseActivity {
 
         showLoadingFragment();
 
-        mAsyncTask = new LoadDatabaseAsyncTask(this, this);
-        mAsyncTask.execute();
+        File file = new File(getFilesDir()+"/"+Realm.DEFAULT_REALM_NAME);
+        if(file.exists()) {
+            showBibliothecaFragment();
+        } else {
+            mAsyncTask = new LoadDatabaseAsyncTask(this, this);
+            mAsyncTask.execute();
+        }
     }
 
     /**
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandManActivity.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandManActivity.java
index 3620bb0..8cd9d2b 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandManActivity.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/CommandManActivity.java
@@ -12,9 +12,12 @@ import android.widget.Toast;
 
 import com.inspiredandroid.linuxcommandbibliotheca.fragments.CommandManFragment;
 import com.inspiredandroid.linuxcommandbibliotheca.fragments.DatabaseLoadingFragment;
+import com.inspiredandroid.linuxcommandbibliotheca.models.Command;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandsDBTableModel;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
 
+import io.realm.Realm;
+
 /**
  * Created by Simon Schubert
  * <p/>
@@ -93,17 +96,13 @@ public class CommandManActivity extends LoadingBaseActivity {
      */
     private long getIdByCommandName(String name)
     {
-        CommandsDbHelper mDbHelper = new CommandsDbHelper(this);
-
-        Cursor c = mDbHelper.getCommandFromName(name);
-        c.moveToFirst();
+        Realm realm = Realm.getInstance(this);
+        Command command = realm.where(Command.class).equalTo("name", name).findFirst();
         long id = INVALID;
-        if (c.getCount() > 0) {
-            id = c.getLong(c.getColumnIndex(CommandsDBTableModel.COL_ID));
+        if (command != null) {
+            id = command.getId();
         }
-        c.close();
-
-        mDbHelper.close();
+        realm.close();
 
         return id;
     }
@@ -120,15 +119,13 @@ public class CommandManActivity extends LoadingBaseActivity {
             return;
         }
 
-        CommandsDbHelper mDbHelper = new CommandsDbHelper(this);
+        Realm realm = Realm.getInstance(this);
 
-        Cursor c = mDbHelper.getCommandFromId(id);
-        c.moveToFirst();
-        String name = c.getString(c.getColumnIndex(CommandsDBTableModel.COL_NAME)).toUpperCase();
-        int category = c.getInt(c.getColumnIndex(CommandsDBTableModel.COL_CATEGORY));
-        c.close();
+        Command command = realm.where(Command.class).equalTo("id", id).findFirst();
+        String name = command.getName().toUpperCase();
+        int category = command.getId();
 
-        mDbHelper.close();
+        realm.close();
 
         showManFragment(name, id, category);
     }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/LoadingBaseActivity.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/LoadingBaseActivity.java
index b697ef0..2f87a63 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/LoadingBaseActivity.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/LoadingBaseActivity.java
@@ -8,6 +8,11 @@ import android.support.v7.app.AppCompatActivity;
 import com.inspiredandroid.linuxcommandbibliotheca.asnytasks.LoadDatabaseAsyncTask;
 import com.inspiredandroid.linuxcommandbibliotheca.interfaces.CraftDatabaseInterface;
 
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+
 /**
  * Created by Simon Schubert.
  */
@@ -24,6 +29,7 @@ public abstract class LoadingBaseActivity extends AppCompatActivity implements C
         mAsyncTask.execute();
     }
 
+
     @Override
     protected void onDestroy()
     {
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ManExpandableListAdapter.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ManExpandableListAdapter.java
index 2447203..401676d 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ManExpandableListAdapter.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/adapter/ManExpandableListAdapter.java
@@ -9,6 +9,7 @@ import android.widget.BaseExpandableListAdapter;
 import android.widget.TextView;
 
 import com.inspiredandroid.linuxcommandbibliotheca.R;
+import com.inspiredandroid.linuxcommandbibliotheca.models.Command;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
 import com.inspiredandroid.linuxcommandbibliotheca.view.CodeTextView;
 
@@ -16,6 +17,8 @@ import java.util.ArrayList;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+import io.realm.Realm;
+
 /**
  * Created by Simon Schubert
  */
@@ -145,7 +148,7 @@ public class ManExpandableListAdapter extends BaseExpandableListAdapter {
      */
     private String[] extractCommandsFromDescription(String description)
     {
-        CommandsDbHelper helper = new CommandsDbHelper(mContext);
+        Realm realm = Realm.getInstance(mContext);
 
         // match "command(category)" e.g: gzip(1)
         Pattern p = Pattern.compile("[[:graph:]]+\\s?\\(\\w\\)");
@@ -155,11 +158,10 @@ public class ManExpandableListAdapter extends BaseExpandableListAdapter {
         ArrayList<String> tmp = new ArrayList<>();
         while (m.find()) {
             String extractedCommand = m.group(0).substring(0, m.group(0).length() - 3).trim();
-            Cursor c = helper.getCommandFromName(extractedCommand);
-            if (c.getCount() > 0) {
+            Command command = realm.where(Command.class).equalTo("name", extractedCommand).findFirst();
+            if (command != null) {
                 tmp.add(extractedCommand);
             }
-            c.close();
         }
 
         // convert String[] to ArrayList
@@ -169,7 +171,7 @@ public class ManExpandableListAdapter extends BaseExpandableListAdapter {
             commands[i] = cmd;
         }
 
-        helper.close();
+        realm.close();
 
         return commands;
     }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/FetchCommandlineFuCommandsAsyncTask.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/FetchCommandlineFuCommandsAsyncTask.java
index 6754eaa..ce53187 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/FetchCommandlineFuCommandsAsyncTask.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/FetchCommandlineFuCommandsAsyncTask.java
@@ -9,6 +9,7 @@ import com.google.gson.JsonSyntaxException;
 import com.google.gson.reflect.TypeToken;
 import com.inspiredandroid.linuxcommandbibliotheca.adapter.ScriptsExpandableListAdapter;
 import com.inspiredandroid.linuxcommandbibliotheca.interfaces.FetchedCommandlineFuCommandsInterface;
+import com.inspiredandroid.linuxcommandbibliotheca.models.Command;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandChildModel;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandGroupModel;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandLineFuModel;
@@ -37,7 +38,6 @@ public class FetchCommandlineFuCommandsAsyncTask extends AsyncTask<String, Strin
     private Context mContext;
     private FetchedCommandlineFuCommandsInterface mCallback;
     private int mPage;
-    private CommandsDbHelper mHelper;
 
     public FetchCommandlineFuCommandsAsyncTask(Context _context, FetchedCommandlineFuCommandsInterface _callback, int _page)
     {
@@ -69,7 +69,6 @@ public class FetchCommandlineFuCommandsAsyncTask extends AsyncTask<String, Strin
             commandLineFuModels = new ArrayList<>();
         }
 
-        mHelper = new CommandsDbHelper(mContext);
         Realm realm = Realm.getInstance(mContext);
 
         realm.beginTransaction();
@@ -88,7 +87,7 @@ public class FetchCommandlineFuCommandsAsyncTask extends AsyncTask<String, Strin
                 json2.put("command", commandLineFuModel.getCommand());
 
                 JSONArray jsonMans = new JSONArray();
-                ArrayList<String> mans = getManPages(commandLineFuModel.getCommand());
+                ArrayList<String> mans = getManPages(realm, commandLineFuModel.getCommand());
                 for(String man : mans) {
                     JSONObject jsonMan = new JSONObject();
                     jsonMan.put("man", man);
@@ -104,11 +103,9 @@ public class FetchCommandlineFuCommandsAsyncTask extends AsyncTask<String, Strin
                 e.printStackTrace();
             }
             realm.createOrUpdateObjectFromJson(CommandGroupModel.class, json);
-            //commands.add(new CommandGroupModel(commandLineFuModel.getCommand(), commandLineFuModel.getSummary(), ));
         }
         realm.commitTransaction();
 
-        mHelper.close();
         realm.close();
 
         return null;
@@ -129,7 +126,7 @@ public class FetchCommandlineFuCommandsAsyncTask extends AsyncTask<String, Strin
      * @param sentence the scripts
      * @return list of commands which exists in the database
      */
-    private ArrayList<String> getManPages(String sentence)
+    private ArrayList<String> getManPages(Realm realm, String sentence)
     {
         String[] words = sentence.split("\\s+");
         for (int i = 0; i < words.length; i++) {
@@ -137,11 +134,10 @@ public class FetchCommandlineFuCommandsAsyncTask extends AsyncTask<String, Strin
         }
         ArrayList<String> mans = new ArrayList<>();
         for (String word : words) {
-            Cursor c = mHelper.getCommandFromName(word);
-            if (c.getCount() > 0) {
+            Command command = realm.where(Command.class).equalTo("name", word).findFirst();
+            if (command != null) {
                 mans.add(word);
             }
-            c.close();
         }
         return mans;
     }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/LoadDatabaseAsyncTask.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/LoadDatabaseAsyncTask.java
index cb8ce91..6a4678d 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/LoadDatabaseAsyncTask.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/asnytasks/LoadDatabaseAsyncTask.java
@@ -3,9 +3,17 @@ package com.inspiredandroid.linuxcommandbibliotheca.asnytasks;
 import android.content.Context;
 import android.os.AsyncTask;
 
+import com.inspiredandroid.linuxcommandbibliotheca.R;
 import com.inspiredandroid.linuxcommandbibliotheca.interfaces.CraftDatabaseInterface;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
 
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+
+import io.realm.Realm;
+
 /**
  * Created by Simon Schubert
  */
@@ -30,8 +38,7 @@ public class LoadDatabaseAsyncTask extends AsyncTask<Boolean, Void, Boolean> {
     @Override
     protected Boolean doInBackground(Boolean... contexts)
     {
-        boolean success = true;
-
+        /*
         CommandsDbHelper helper = new CommandsDbHelper(mContext);
         try {
             helper.getReadableDatabase();
@@ -40,8 +47,39 @@ public class LoadDatabaseAsyncTask extends AsyncTask<Boolean, Void, Boolean> {
             success = false;
         }
         helper.close();
+        */
 
-        return success;
+        File file = new File(mContext.getFilesDir()+"/"+ Realm.DEFAULT_REALM_NAME);
+        if(!file.exists()) {
+            try {
+                copyBundledRealmFile(mContext.getResources().openRawResource(R.raw.realm), "default.realm");
+            } catch (IOException e) {
+                e.printStackTrace();
+                return false;
+            }
+        }
+
+
+        return true;
+    }
+
+
+    private String copyBundledRealmFile(InputStream inputStream, String outFileName) throws IOException
+    {
+        try {
+            File file = new File(mContext.getFilesDir(), outFileName);
+            FileOutputStream outputStream = new FileOutputStream(file);
+            byte[] buf = new byte[1024];
+            int bytesRead;
+            while ((bytesRead = inputStream.read(buf)) > 0) {
+                outputStream.write(buf, 0, bytesRead);
+            }
+            outputStream.close();
+            return file.getAbsolutePath();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return null;
     }
 
     @Override
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/BibliothecaFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/BibliothecaFragment.java
index 75c8e7b..3263352 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/BibliothecaFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/BibliothecaFragment.java
@@ -13,8 +13,11 @@ import android.view.View;
 import android.view.ViewGroup;
 
 import com.inspiredandroid.linuxcommandbibliotheca.R;
+import com.inspiredandroid.linuxcommandbibliotheca.models.Command;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
 
+import io.realm.Realm;
+
 /**
  * Created by Simon Schubert
  */
@@ -49,9 +52,8 @@ public class BibliothecaFragment extends Fragment {
         View view = inflater.inflate(R.layout.fragment_bibliotheca, container, false);
 
         // Get total commands count
-        CommandsDbHelper mDbHelper = new CommandsDbHelper(getActivity());
-        int commandsCount = mDbHelper.getCommandsCount();
-        mDbHelper.close();
+        Realm realm = Realm.getInstance(getContext());
+        long commandsCount = realm.where(Command.class).count();
 
         TabLayout tabLayout = (TabLayout) view.findViewById(R.id.tab_layout);
         tabLayout.addTab(tabLayout.newTab().setText(String.format(getString(R.string.fragment_bibliotheca_commands), commandsCount)));
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandManFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandManFragment.java
index ce79ef3..2f8b8af 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandManFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandManFragment.java
@@ -24,11 +24,15 @@ import com.inspiredandroid.linuxcommandbibliotheca.R;
 import com.inspiredandroid.linuxcommandbibliotheca.adapter.ManExpandableListAdapter;
 import com.inspiredandroid.linuxcommandbibliotheca.asnytasks.SearchManAsyncTask;
 import com.inspiredandroid.linuxcommandbibliotheca.interfaces.ConvertManFromHtmlToSpannableInterface;
+import com.inspiredandroid.linuxcommandbibliotheca.models.CommandPage;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.BookmarkManager;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
 
 import java.util.ArrayList;
 
+import io.realm.Realm;
+import io.realm.RealmResults;
+
 /**
  * Created by Simon Schubert
  */
@@ -36,6 +40,7 @@ public class CommandManFragment extends AppIndexFragment implements ConvertManFr
 
     ExpandableListView mList;
     ManExpandableListAdapter mAdapter;
+    Realm mRealm;
     String mName;
     long mId;
     int mCategory;
@@ -90,6 +95,8 @@ public class CommandManFragment extends AppIndexFragment implements ConvertManFr
         mName = b.getString(CommandManActivity.EXTRA_COMMAND_NAME);
         mCategory = b.getInt(CommandManActivity.EXTRA_COMMAND_CATEGORY);
 
+        mRealm = Realm.getInstance(getContext());
+
         mAdapter = createAdapter();
     }
 
@@ -109,6 +116,14 @@ public class CommandManFragment extends AppIndexFragment implements ConvertManFr
         return view;
     }
 
+    @Override
+    public void onDestroy()
+    {
+        super.onDestroy();
+
+        mRealm.close();
+    }
+
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater)
     {
@@ -179,18 +194,15 @@ public class CommandManFragment extends AppIndexFragment implements ConvertManFr
      */
     private ManExpandableListAdapter createAdapter()
     {
-        CommandsDbHelper helper = new CommandsDbHelper(getContext());
-
-        Cursor c = helper.getCommandPagesFromId(mId);
+        RealmResults<CommandPage> pages = mRealm.where(CommandPage.class).equalTo("commandid", mId).findAll();
 
         ArrayList<String> groups = new ArrayList<>();
         ArrayList<ArrayList<CharSequence>> child = new ArrayList<>();
-        while (c.moveToNext()) {
-            String title = c.getString(c.getColumnIndex("title"));
-            String page = c.getString(c.getColumnIndex("page"));
-            groups.add(title);
+        for (CommandPage page : pages) {
+
+            groups.add(page.getTitle());
 
-            CharSequence chars = Html.fromHtml(page);
+            CharSequence chars = Html.fromHtml(page.getPage());
 
             ArrayList<CharSequence> pageSplit = new ArrayList<>();
             String[] tmp = chars.toString().split("\\r?\\n");
@@ -206,10 +218,6 @@ public class CommandManFragment extends AppIndexFragment implements ConvertManFr
             child.add(pageSplit);
         }
 
-        c.close();
-
-        helper.close();
-
         return new ManExpandableListAdapter(getActivity(), groups, child);
     }
 
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandsFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandsFragment.java
index e370a1f..153e25b 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandsFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/CommandsFragment.java
@@ -25,18 +25,26 @@ import com.inspiredandroid.linuxcommandbibliotheca.AboutActivity;
 import com.inspiredandroid.linuxcommandbibliotheca.CommandManActivity;
 import com.inspiredandroid.linuxcommandbibliotheca.R;
 import com.inspiredandroid.linuxcommandbibliotheca.adapter.CommandsAdapter;
+import com.inspiredandroid.linuxcommandbibliotheca.adapter.MyAdapter;
+import com.inspiredandroid.linuxcommandbibliotheca.models.Command;
+import com.inspiredandroid.linuxcommandbibliotheca.models.CommandPage;
+import com.inspiredandroid.linuxcommandbibliotheca.models.CommandsDBTableModel;
+import com.inspiredandroid.linuxcommandbibliotheca.models.Quiz;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.BookmarkManager;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
 
 import java.text.Normalizer;
 
+import io.realm.Realm;
+import io.realm.RealmResults;
+
 /**
  * Created by Simon Schubert.
  */
-public class CommandsFragment extends Fragment implements AdapterView.OnItemClickListener, LoaderManager.LoaderCallbacks<Cursor> {
+public class CommandsFragment extends Fragment implements AdapterView.OnItemClickListener {
 
-    private CommandsAdapter mAdapter;
-    private CommandsDbHelper mDbHelper;
+    private MyAdapter mAdapter;
+    private Realm mRealm;
 
     public CommandsFragment()
     {
@@ -49,7 +57,7 @@ public class CommandsFragment extends Fragment implements AdapterView.OnItemClic
 
         setHasOptionsMenu(true);
 
-        mDbHelper = new CommandsDbHelper(getActivity());
+        mRealm = Realm.getInstance(getContext());
 
         createAdapter();
     }
@@ -138,7 +146,7 @@ public class CommandsFragment extends Fragment implements AdapterView.OnItemClic
     {
         super.onDestroy();
 
-        mDbHelper.close();
+        mRealm.close();
     }
 
     @Override
@@ -168,7 +176,51 @@ public class CommandsFragment extends Fragment implements AdapterView.OnItemClic
 
     private void createAdapter()
     {
-        mAdapter = new CommandsAdapter(getActivity(), R.layout.row_command_child, mDbHelper.getAllCommands(BookmarkManager.getBookmarkIdsChain(getContext())), true);
+        /*
+        mRealm.beginTransaction();
+        mRealm.clear(Command.class);
+
+        Cursor c = mDbHelper.getAllCommands("");
+
+        while (c.moveToNext()) {
+            Command command = mRealm.createObject(Command.class);
+            command.setId(c.getInt(c.getColumnIndex(CommandsDBTableModel.COL_ID)));
+            command.setCategory(c.getInt(c.getColumnIndex(CommandsDBTableModel.COL_CATEGORY)));
+            command.setDescription(c.getString(c.getColumnIndex(CommandsDBTableModel.COL_DESCRIPTION)));
+            command.setName(c.getString(c.getColumnIndex(CommandsDBTableModel.COL_NAME)));
+            mRealm.copyToRealm(command);
+        }
+
+        Cursor c2 = mDbHelper.getAllCommandPages();
+
+        while (c2.moveToNext()) {
+            CommandPage command = mRealm.createObject(CommandPage.class);
+            command.setId(c2.getInt(c2.getColumnIndex("id")));
+            command.setCommandid(c2.getInt(c2.getColumnIndex("commandid")));
+            command.setPage(c2.getString(c2.getColumnIndex("page")));
+            command.setTitle(c2.getString(c2.getColumnIndex("title")));
+            mRealm.copyToRealm(command);
+        }
+
+        Cursor c3 = mDbHelper.getAllQuiz();
+
+        while (c3.moveToNext()) {
+            Quiz command = mRealm.createObject(Quiz.class);
+            command.setId(c3.getInt(c3.getColumnIndex("_id")));
+            command.setName(c3.getString(c3.getColumnIndex("name")));
+            command.setDifficulty(c3.getInt(c3.getColumnIndex("difficulty")));
+            command.setDescription(c3.getString(c3.getColumnIndex("description")));
+            command.setType(c3.getInt(c3.getColumnIndex("type")));
+            command.setExtra(c3.getString(c3.getColumnIndex("extra")));
+            mRealm.copyToRealm(command);
+        }
+
+        mRealm.commitTransaction();
+        */
+
+        mAdapter = new MyAdapter(getContext(), mRealm.where(Command.class).findAll(), false);
+
+        // mAdapter = new CommandsAdapter(getActivity(), R.layout.row_command_child, mDbHelper.getAllCommands(BookmarkManager.getBookmarkIdsChain(getContext())), true);
     }
 
     /**
@@ -176,8 +228,8 @@ public class CommandsFragment extends Fragment implements AdapterView.OnItemClic
      */
     private void resetSearchResults()
     {
-        // Update mAdapter
-        mAdapter.updateCursor(mDbHelper.getAllCommands(BookmarkManager.getBookmarkIdsChain(getContext())), "");
+        mAdapter.updateRealmResults(mRealm.where(Command.class).findAll());
+        mAdapter.setSearchQuery("");
     }
 
     /**
@@ -187,38 +239,9 @@ public class CommandsFragment extends Fragment implements AdapterView.OnItemClic
      */
     private void search(String query)
     {
-        // Update mAdapter
-        mAdapter.updateCursor(mDbHelper.searchCommands(query), query);
+        RealmResults<Command> commands = mRealm.where(Command.class).contains("name", query).findAll();
+        mAdapter.updateRealmResults(commands);
+        mAdapter.setSearchQuery(query);
     }
 
-    @Override
-    public Loader<Cursor> onCreateLoader(int id, Bundle args)
-    {
-        // Create a new CursorLoader with the following query parameters.
-        return new CursorLoader(getActivity(), null, null, null, null, null) {
-            @Override
-            public Cursor loadInBackground()
-            {
-                return mDbHelper.getAllCommands(BookmarkManager.getBookmarkIdsChain(getContext()));
-            }
-        };
-    }
-
-    @Override
-    public void onLoadFinished(Loader<Cursor> loader, Cursor data)
-    {
-        // The asynchronous load is complete and the data
-        // is now available for use. Only now can we associate
-        // the queried Cursor with the SimpleCursorAdapter.
-        mAdapter.updateCursor(data, "");
-    }
-
-    @Override
-    public void onLoaderReset(Loader<Cursor> loader)
-    {
-        // For whatever reason, the Loader's data is now unavailable.
-        // Remove any references to the old data by replacing it with
-        // a null Cursor.
-        mAdapter.updateCursor(null, "");
-    }
 }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizFragment.java
index 5eaaf94..6e15528 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/QuizFragment.java
@@ -30,10 +30,14 @@ import com.inspiredandroid.linuxcommandbibliotheca.misc.Utils;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandsDBTableModel;
 import com.inspiredandroid.linuxcommandbibliotheca.models.DataHolder;
 import com.inspiredandroid.linuxcommandbibliotheca.models.LessonData;
+import com.inspiredandroid.linuxcommandbibliotheca.models.Quiz;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
 
 import java.util.ArrayList;
 
+import io.realm.Realm;
+import io.realm.RealmResults;
+
 /**
  * Created by Simon Schubert
  */
@@ -54,7 +58,7 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
 
     DataHolder data;
 
-    CommandsDbHelper databaseHelper;
+    Realm mRealm;
 
     public QuizFragment()
     {
@@ -65,7 +69,7 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
     {
         super.onCreate(savedInstanceState);
 
-        databaseHelper = new CommandsDbHelper(getContext());
+        mRealm = Realm.getInstance(getContext());
     }
 
     @Override
@@ -209,7 +213,7 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
     {
         super.onDestroy();
 
-        databaseHelper.close();
+        mRealm.close();
     }
 
     /**
@@ -445,25 +449,23 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
      */
     private LessonData getLesson()
     {
-
-        Cursor c = databaseHelper.getQuiz(20, data.usedCommandIds, 1);
+        RealmResults<Quiz> lesson = mRealm.where(Quiz.class).equalTo("type", 1).findAll();
+        //Cursor c = databaseHelper.getQuiz(20, data.usedCommandIds, 1);
 
         LessonData data = new LessonData();
 
-        int randomId = (int) (Math.random() * c.getCount());
+        int randomId = (int) (Math.random() * lesson.size());
 
-        if (c.moveToPosition(randomId)) {
-            data.command = c.getString(c.getColumnIndex(CommandsDBTableModel.COL_NAME));
-            data.question = c.getString(c.getColumnIndex(CommandsDBTableModel.COL_DESCRIPTION));
-            data.answer = c.getString(c.getColumnIndex("extra"));
+        Quiz quiz = lesson.get(randomId);
+        if (quiz != null) {
+            data.command = quiz.getName();
+            data.question = quiz.getDescription();
+            data.answer = quiz.getExtra();
         } else {
             getQuizData(0);
-            c.close();
             return null;
         }
 
-        c.close();
-
         return data;
     }
 
@@ -475,18 +477,12 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
      */
     private ArrayList<String> getAnswers(int count)
     {
-        Cursor c = databaseHelper.getQuiz(20, data.usedCommandIds, 0);
-
-        ArrayList<String> commands = new ArrayList<>();
-        while (c.moveToNext()) {
-            commands.add(c.getString(c.getColumnIndex(CommandsDBTableModel.COL_NAME)));
-        }
-
-        c.close();
+        RealmResults<Quiz> lesson = mRealm.where(Quiz.class).equalTo("type", 0).findAll();
+        //Cursor c = databaseHelper.getQuiz(20, data.usedCommandIds, 0);
 
         ArrayList<String> possibilities = new ArrayList<>();
         while (possibilities.size() < count) {
-            String randomPossibility = commands.get((int) (Math.random() * commands.size()));
+            String randomPossibility = lesson.get((int) (Math.random() * lesson.size())).getName();
             if (!possibilities.contains(randomPossibility)) {
                 possibilities.add(randomPossibility);
             }
@@ -548,14 +544,9 @@ public class QuizFragment extends Fragment implements View.OnClickListener {
      */
     private String getQuestionText(String command)
     {
-        Cursor c2 = databaseHelper.getQuizCommandFromName(command);
-        c2.moveToFirst();
-
-        String question = c2.getString(c2.getColumnIndex(CommandsDBTableModel.COL_DESCRIPTION));
-
-        c2.close();
+        Quiz quiz = mRealm.where(Quiz.class).equalTo("name", command).findFirst();
 
-        return question;
+        return quiz.getDescription();
     }
 
     /**
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/dialogs/QuizPreviousResultDialogFragment.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/dialogs/QuizPreviousResultDialogFragment.java
index 760758d..d1a4e23 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/dialogs/QuizPreviousResultDialogFragment.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/fragments/dialogs/QuizPreviousResultDialogFragment.java
@@ -16,10 +16,13 @@ import android.widget.TextView;
 import com.inspiredandroid.linuxcommandbibliotheca.CommandManActivity;
 import com.inspiredandroid.linuxcommandbibliotheca.R;
 import com.inspiredandroid.linuxcommandbibliotheca.models.CommandsDBTableModel;
+import com.inspiredandroid.linuxcommandbibliotheca.models.Quiz;
 import com.inspiredandroid.linuxcommandbibliotheca.sql.CommandsDbHelper;
 
 import java.util.ArrayList;
 
+import io.realm.Realm;
+
 /**
  * Created by Simon Schubert
  */
@@ -33,7 +36,7 @@ public class QuizPreviousResultDialogFragment extends DialogFragment implements
     // correct answer id
     int mCorrectAnswerId;
     // database
-    CommandsDbHelper mDatabaseHelper;
+    Realm mRealm;
 
     public static QuizPreviousResultDialogFragment getInstance(ArrayList<String> answers, int correctAnswer)
     {
@@ -52,7 +55,7 @@ public class QuizPreviousResultDialogFragment extends DialogFragment implements
     {
         super.onCreate(savedInstanceState);
 
-        mDatabaseHelper = new CommandsDbHelper(getContext());
+        mRealm = Realm.getInstance(getActivity());
     }
 
     /**
@@ -115,7 +118,7 @@ public class QuizPreviousResultDialogFragment extends DialogFragment implements
     {
         super.onDestroy();
 
-        mDatabaseHelper.close();
+        mRealm.close();
     }
 
     @Override
@@ -144,13 +147,8 @@ public class QuizPreviousResultDialogFragment extends DialogFragment implements
      */
     private void setCommandDescriptionForTextView(View view, int id, String command)
     {
-        Cursor c2 = mDatabaseHelper.getQuizCommandFromName(command);
-        c2.moveToFirst();
-
-        String description = c2.getString(c2.getColumnIndex(CommandsDBTableModel.COL_DESCRIPTION));
-        ((TextView) view.findViewById(id)).setText(description);
-
-        c2.close();
+        Quiz quiz = mRealm.where(Quiz.class).equalTo("name", command).findFirst();
+        ((TextView) view.findViewById(id)).setText(quiz.getDescription());
     }
 
     /**
@@ -160,11 +158,7 @@ public class QuizPreviousResultDialogFragment extends DialogFragment implements
      */
     private void setQuestionTextView(View view, int id, String command)
     {
-        Cursor c2 = mDatabaseHelper.getQuizCommandFromName(command);
-        c2.moveToFirst();
-
-        String question = c2.getString(c2.getColumnIndex(CommandsDBTableModel.COL_DESCRIPTION));
-        ((TextView) view.findViewById(id)).setText(String.format(getString(R.string.fragment_quiz_question), question));
-        c2.close();
+        Quiz quiz = mRealm.where(Quiz.class).equalTo("name", command).findFirst();
+        ((TextView) view.findViewById(id)).setText(String.format(getString(R.string.fragment_quiz_question), quiz.getDescription()));
     }
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/ClickInterface.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/ClickInterface.java
index 5833dde..0d26ea0 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/ClickInterface.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/interfaces/ClickInterface.java
@@ -6,7 +6,7 @@ package com.inspiredandroid.linuxcommandbibliotheca.interfaces;
 public interface ClickInterface {
 
     /**
-     * Clciked
+     * Clicked
      */
     void onClick();
 }
diff --git a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/sql/CommandsDbHelper.java b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/sql/CommandsDbHelper.java
index 93cc5ec..740a3af 100644
--- a/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/sql/CommandsDbHelper.java
+++ b/app/src/main/java/com/inspiredandroid/linuxcommandbibliotheca/sql/CommandsDbHelper.java
@@ -1,140 +1,11 @@
 package com.inspiredandroid.linuxcommandbibliotheca.sql;
 
-import android.content.Context;
-import android.database.Cursor;
-
-import com.inspiredandroid.linuxcommandbibliotheca.models.CommandsDBTableModel;
-import com.readystatesoftware.sqliteasset.SQLiteAssetHelper;
-
-import java.util.ArrayList;
 
 /**
  * Created by Simon Schubert
  * TODO: replace with realm(?)
  */
-public class CommandsDbHelper extends SQLiteAssetHelper {
-
-    // Update database version after update/schema change
-    public static final int DATABASE_VERSION = 4;
-    public static final String DATABASE_NAME = "commands.db";
-
-    public CommandsDbHelper(Context context)
-    {
-        super(context, DATABASE_NAME, null, DATABASE_VERSION);
-        // needs to be set to recreate database after version change
-        setForcedUpgrade();
-    }
-
-    /**
-     * Get total counts of commands
-     *
-     * @return total count
-     */
-    public int getCommandsCount()
-    {
-        Cursor cursor = getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS, null);
-        int count = cursor.getCount();
-        cursor.close();
-
-        return count;
-    }
-
-    /**
-     * Get all available commands
-     *
-     * @return
-     */
-    public Cursor getAllCommands(String bookmarks)
-    {
-        return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS + " ORDER BY case when " + CommandsDBTableModel.COL_ID + " in (" + bookmarks + ") then -1 else " + CommandsDBTableModel.COL_NAME + " COLLATE NOCASE end", null);
-        // return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS + " ORDER BY " + CommandsDBTableModel.COL_NAME + " COLLATE NOCASE ASC", null);
-    }
-
-    /**
-     * Search commands and sort in a useful way. Example search for "man"
-     * 1. man
-     * 2. manpath
-     * 3. xman
-     *
-     * @param query search
-     * @return
-     */
-    public Cursor searchCommands(String query)
-    {
-        return getReadableDatabase().rawQuery("Select * from " + CommandsDBTableModel.TABLE_COMMANDS + " WHERE " + CommandsDBTableModel.COL_NAME + " LIKE '%" + query + "%' " +
-                "ORDER BY " + CommandsDBTableModel.COL_NAME + " = '" + query + "' DESC," +
-                CommandsDBTableModel.COL_NAME + " LIKE '" + query + "%' DESC", null);
-    }
-
-    /**
-     * Fetch command from name
-     *
-     * @param name command
-     * @return
-     */
-    public Cursor getCommandFromName(String name)
-    {
-        return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS + " WHERE " + CommandsDBTableModel.COL_NAME + " LIKE '" + name + "'", null);
-    }
-
-    /**
-     * Fetch command from unique id
-     *
-     * @param id unique id
-     * @return
-     */
-    public Cursor getCommandFromId(long id)
-    {
-        return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDS + " WHERE " + CommandsDBTableModel.COL_ID + " = " + id, null);
-    }
-
-    /**
-     * Fetch command from unique id
-     *
-     * @param id unique id
-     * @return
-     */
-    public Cursor getCommandPagesFromId(long id)
-    {
-        return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDPAGES + " WHERE commandid = " + id, null);
-    }
-
-    /**
-     * Fetch command page
-     *
-     * @return
-     */
-    public Cursor getAllCommandPages()
-    {
-        return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_COMMANDPAGES, null);
-    }
-
-    /**
-     * @param difficulty maximum difficulty
-     * @param commands   list of commands which shouldn't be fetched because they were already used in the quiz session
-     * @return
-     */
-    public Cursor getQuiz(int difficulty, ArrayList<String> commands, int type)
-    {
-        String wherePart = CommandsDBTableModel.COL_NAME + " NOT LIKE ";
-        String whereClause = " AND type = " + type + " AND ";
-        for (String command : commands) {
-            whereClause += wherePart + "'" + command + "' AND ";
-        }
-
-        whereClause = whereClause.substring(0, whereClause.length() - 4);
+public class CommandsDbHelper {
 
-        return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_QUIZ + " WHERE " + CommandsDBTableModel.COL_DIFFICULTY + " <= '" + difficulty + "' " + whereClause, null);
-    }
 
-    /**
-     * Fetch quiz model from name
-     *
-     * @param name command
-     * @return
-     */
-    public Cursor getQuizCommandFromName(String name)
-    {
-        return getReadableDatabase().rawQuery("SELECT * FROM " + CommandsDBTableModel.TABLE_QUIZ + " WHERE " + CommandsDBTableModel.COL_NAME + " LIKE '" + name + "'", null);
-    }
 }
\ No newline at end of file
