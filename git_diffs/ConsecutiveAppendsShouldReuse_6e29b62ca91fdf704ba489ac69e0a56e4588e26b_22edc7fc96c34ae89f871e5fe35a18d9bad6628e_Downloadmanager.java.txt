diff --git a/app/src/androidTest/java/com/github/Doomsdayrs/apps/shosetsu/ExampleInstrumentedTest.java b/app/src/androidTest/java/com/github/doomsdayrs/apps/shosetsu/ExampleInstrumentedTest.java
similarity index 85%
rename from app/src/androidTest/java/com/github/Doomsdayrs/apps/shosetsu/ExampleInstrumentedTest.java
rename to app/src/androidTest/java/com/github/doomsdayrs/apps/shosetsu/ExampleInstrumentedTest.java
index ee84abcc7..74dd36e7b 100644
--- a/app/src/androidTest/java/com/github/Doomsdayrs/apps/shosetsu/ExampleInstrumentedTest.java
+++ b/app/src/androidTest/java/com/github/doomsdayrs/apps/shosetsu/ExampleInstrumentedTest.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu;
+package com.github.doomsdayrs.apps.shosetsu;
 
 import android.content.Context;
 import android.support.test.InstrumentationRegistry;
@@ -21,6 +21,6 @@ public class ExampleInstrumentedTest {
         // Context of the app under test.
         Context appContext = InstrumentationRegistry.getTargetContext();
 
-        assertEquals("com.github.Doomsdayrs.apps.shosetsu", appContext.getPackageName());
+        assertEquals("com.github.doomsdayrs.apps.shosetsu", appContext.getPackageName());
     }
 }
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/MainActivity.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/MainActivity.java
similarity index 80%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/MainActivity.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/MainActivity.java
index d57c1256c..26309b488 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/MainActivity.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/MainActivity.java
@@ -1,8 +1,9 @@
-package com.github.Doomsdayrs.apps.shosetsu;
+package com.github.doomsdayrs.apps.shosetsu;
 
 import android.Manifest;
 import android.content.Context;
 import android.net.ConnectivityManager;
+import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.design.widget.NavigationView;
@@ -14,14 +15,13 @@ import android.support.v7.widget.Toolbar;
 import android.util.Log;
 import android.view.MenuItem;
 
-import com.github.Doomsdayrs.apps.shosetsu.database.DBHelper;
-import com.github.Doomsdayrs.apps.shosetsu.database.Database;
-import com.github.Doomsdayrs.apps.shosetsu.download.Downloadmanager;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.CataloguesFragment;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.LibraryFragement;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.SettingsFragment;
-import com.github.Doomsdayrs.apps.shosetsu.settings.Settings;
-import com.github.Doomsdayrs.apps.shosetsu.settings.SettingsController;
+import com.github.doomsdayrs.apps.shosetsu.database.DBHelper;
+import com.github.doomsdayrs.apps.shosetsu.database.Database;
+import com.github.doomsdayrs.apps.shosetsu.fragment.CataloguesFragment;
+import com.github.doomsdayrs.apps.shosetsu.fragment.LibraryFragment;
+import com.github.doomsdayrs.apps.shosetsu.fragment.SettingsFragment;
+import com.github.doomsdayrs.apps.shosetsu.settings.Settings;
+import com.github.doomsdayrs.apps.shosetsu.settings.SettingsController;
 
 /**
  * This file is part of Shosetsu.
@@ -41,19 +41,21 @@ import com.github.Doomsdayrs.apps.shosetsu.settings.SettingsController;
  *
  * @author github.com/doomsdayrs
  */
+@SuppressWarnings("EmptyMethod")
 public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {
-    DBHelper helper;
     private DrawerLayout drawerLayout;
-    NavigationView navigationView;
+    private NavigationView navigationView;
 
-    private LibraryFragement libraryFragement = new LibraryFragement();
-    private CataloguesFragment cataloguesFragment = new CataloguesFragment();
-    private SettingsFragment settingsFragment = new SettingsFragment();
+    private final LibraryFragment libraryFragment = new LibraryFragment();
+    private final CataloguesFragment cataloguesFragment = new CataloguesFragment();
+    private final SettingsFragment settingsFragment = new SettingsFragment();
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+            requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
+        }
         // Settings setup
         SettingsController.view = getSharedPreferences("view", 0);
         SettingsController.download = getSharedPreferences("download", 0);
@@ -61,7 +63,6 @@ public class MainActivity extends AppCompatActivity implements NavigationView.On
         SettingsController.tracking = getSharedPreferences("tracking", 0);
         Settings.connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
         SettingsController.init();
-        Downloadmanager.context = this;
 
         //Set the content view
         setContentView(R.layout.activity_main);
@@ -78,14 +79,14 @@ public class MainActivity extends AppCompatActivity implements NavigationView.On
         toggle.syncState();
 
         // Sets up DB
-        helper = new DBHelper(this);
+        DBHelper helper = new DBHelper(this);
         Database.library = helper.getWritableDatabase();
 
         //Prevent the frag from changing on rotation
         if (savedInstanceState == null) {
             getSupportFragmentManager()
                     .beginTransaction()
-                    .replace(R.id.fragment_container, libraryFragement).commit();
+                    .replace(R.id.fragment_container, libraryFragment).commit();
             navigationView.setCheckedItem(R.id.nav_library);
         }
     }
@@ -97,11 +98,6 @@ public class MainActivity extends AppCompatActivity implements NavigationView.On
         else super.onBackPressed();
     }
 
-    @Override
-    protected void onResume() {
-        super.onResume();
-    }
-
     @Override
     public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {
         navigationView.setCheckedItem(menuItem);
@@ -110,7 +106,7 @@ public class MainActivity extends AppCompatActivity implements NavigationView.On
                 Log.e("Nav", "Library selected");
                 getSupportFragmentManager().beginTransaction()
                         .addToBackStack("tag")
-                        .replace(R.id.fragment_container, libraryFragement)
+                        .replace(R.id.fragment_container, libraryFragment)
                         .commit();
             }
             break;
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/LibraryNovelCardsAdapter.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/LibraryNovelCardsAdapter.java
similarity index 88%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/LibraryNovelCardsAdapter.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/LibraryNovelCardsAdapter.java
index 091e885ff..dfbd86062 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/LibraryNovelCardsAdapter.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/LibraryNovelCardsAdapter.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.adapters;
+package com.github.doomsdayrs.apps.shosetsu.adapters;
 
 import android.support.annotation.NonNull;
 import android.support.v4.app.FragmentManager;
@@ -12,9 +12,9 @@ import android.widget.TextView;
 
 import com.github.Doomsdayrs.api.novelreader_core.main.DefaultScrapers;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.novel.NovelFragment;
-import com.github.Doomsdayrs.apps.shosetsu.recycleObjects.NovelCard;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.fragment.novel.NovelFragment;
+import com.github.doomsdayrs.apps.shosetsu.recycleObjects.NovelCard;
 import com.squareup.picasso.Picasso;
 
 import java.util.ArrayList;
@@ -38,8 +38,8 @@ import java.util.ArrayList;
  * @author github.com/doomsdayrs
  */
 public class LibraryNovelCardsAdapter extends RecyclerView.Adapter<LibraryNovelCardsAdapter.NovelCardsViewHolder> {
-    private ArrayList<NovelCard> recycleCards;
-    private FragmentManager fragmentManager;
+    private final ArrayList<NovelCard> recycleCards;
+    private final FragmentManager fragmentManager;
 
     public LibraryNovelCardsAdapter(ArrayList<NovelCard> recycleCards, FragmentManager fragmentManager) {
         this.recycleCards = recycleCards;
@@ -73,8 +73,8 @@ public class LibraryNovelCardsAdapter extends RecyclerView.Adapter<LibraryNovelC
     }
 
     static class NovelCardsViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
-        ImageView library_card_image;
-        TextView library_card_title;
+        final ImageView library_card_image;
+        final TextView library_card_title;
 
 
         Formatter formatter;
@@ -88,7 +88,7 @@ public class LibraryNovelCardsAdapter extends RecyclerView.Adapter<LibraryNovelC
             itemView.setOnClickListener(this);
         }
 
-        public void setFormatter(Formatter formatter) {
+        void setFormatter(Formatter formatter) {
             this.formatter = formatter;
         }
 
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/SettingsAdapter.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/SettingsAdapter.java
similarity index 85%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/SettingsAdapter.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/SettingsAdapter.java
index 6a45d3108..da8408e94 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/SettingsAdapter.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/SettingsAdapter.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.adapters;
+package com.github.doomsdayrs.apps.shosetsu.adapters;
 
 import android.os.Bundle;
 import android.support.annotation.NonNull;
@@ -6,19 +6,18 @@ import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v7.widget.RecyclerView;
+import android.util.Log;
 import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.CheckBox;
 import android.widget.TextView;
 import android.widget.Toast;
 
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.enums.Types;
-import com.github.Doomsdayrs.apps.shosetsu.recycleObjects.SettingsCard;
-import com.github.Doomsdayrs.apps.shosetsu.settings.SettingsController;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.enums.Types;
+import com.github.doomsdayrs.apps.shosetsu.recycleObjects.SettingsCard;
+import com.github.doomsdayrs.apps.shosetsu.settings.SettingsController;
 
 import java.util.ArrayList;
 
@@ -41,8 +40,8 @@ import java.util.ArrayList;
  * @author github.com/doomsdayrs
  */
 public class SettingsAdapter extends RecyclerView.Adapter<SettingsAdapter.SettingsCardViewHolder> {
-    private ArrayList<SettingsCard> settingsCards;
-    private FragmentManager fragmentManager;
+    private final ArrayList<SettingsCard> settingsCards;
+    private final FragmentManager fragmentManager;
 
     public SettingsAdapter(ArrayList<SettingsCard> settingsCards, FragmentManager fragmentManager) {
         this.settingsCards = settingsCards;
@@ -68,9 +67,8 @@ public class SettingsAdapter extends RecyclerView.Adapter<SettingsAdapter.Settin
     }
 
     static class SettingsCardViewHolder extends RecyclerView.ViewHolder {
-        TextView library_card_title;
-        Types type;
-        FragmentManager fragmentManager;
+        final TextView library_card_title;
+        final FragmentManager fragmentManager;
 
         SettingsCardViewHolder(@NonNull View itemView, FragmentManager fragmentManager) {
             super(itemView);
@@ -79,15 +77,14 @@ public class SettingsAdapter extends RecyclerView.Adapter<SettingsAdapter.Settin
         }
 
         void setType(Types type) {
-            this.type = type;
             library_card_title.setOnClickListener(new onSettingsClick(type, fragmentManager));
             library_card_title.setText(type.toString());
         }
     }
 
     static class onSettingsClick implements View.OnClickListener {
-        Types type;
-        FragmentManager fragmentManager;
+        final Types type;
+        final FragmentManager fragmentManager;
 
         onSettingsClick(Types id, FragmentManager fragmentManager) {
             type = id;
@@ -124,15 +121,8 @@ public class SettingsAdapter extends RecyclerView.Adapter<SettingsAdapter.Settin
         CheckBox checkBox;
 
         public viewSettings() {
-            setHasOptionsMenu(true);
         }
 
-        @Override
-        public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-            inflater.inflate(R.menu.toolbar_settings, menu);
-        }
-
-
         @Override
         public void onSaveInstanceState(@NonNull Bundle outState) {
             super.onSaveInstanceState(outState);
@@ -141,6 +131,7 @@ public class SettingsAdapter extends RecyclerView.Adapter<SettingsAdapter.Settin
         @Nullable
         @Override
         public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+            Log.d("OnCreateView", "ViewSettings");
             View view = inflater.inflate(R.layout.fragment_settings_view, container, false);
             checkBox = view.findViewById(R.id.reader_nightMode_checkbox);
             checkBox.setChecked(!SettingsController.isReaderLightMode());
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/catalogue/CatalogueCardsAdapter.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/catalogue/CatalogueCardsAdapter.java
similarity index 78%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/catalogue/CatalogueCardsAdapter.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/catalogue/CatalogueCardsAdapter.java
index ce8fc55f4..4b3099d8e 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/catalogue/CatalogueCardsAdapter.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/catalogue/CatalogueCardsAdapter.java
@@ -1,6 +1,5 @@
-package com.github.Doomsdayrs.apps.shosetsu.adapters.catalogue;
+package com.github.doomsdayrs.apps.shosetsu.adapters.catalogue;
 
-import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.v4.app.FragmentManager;
 import android.support.v7.widget.RecyclerView;
@@ -13,10 +12,10 @@ import android.widget.TextView;
 import android.widget.Toast;
 
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.CatalogueFragement;
-import com.github.Doomsdayrs.apps.shosetsu.recycleObjects.CatalogueCard;
-import com.github.Doomsdayrs.apps.shosetsu.settings.SettingsController;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.fragment.CatalogueFragment;
+import com.github.doomsdayrs.apps.shosetsu.recycleObjects.CatalogueCard;
+import com.github.doomsdayrs.apps.shosetsu.settings.SettingsController;
 import com.squareup.picasso.Picasso;
 
 import java.util.ArrayList;
@@ -41,9 +40,8 @@ import java.util.ArrayList;
  */
 
 public class CatalogueCardsAdapter extends RecyclerView.Adapter<CatalogueCardsAdapter.CatalogueHolder> {
-    private ArrayList<CatalogueCard> recycleCards;
-    private FragmentManager fragmentManager;
-    private Context context;
+    private final ArrayList<CatalogueCard> recycleCards;
+    private final FragmentManager fragmentManager;
 
     public CatalogueCardsAdapter(ArrayList<CatalogueCard> recycleCards, FragmentManager fragmentManager) {
         this.recycleCards = recycleCards;
@@ -55,7 +53,6 @@ public class CatalogueCardsAdapter extends RecyclerView.Adapter<CatalogueCardsAd
     @Override
     public CatalogueHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {
         View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.catalogue_item_card, viewGroup, false);
-        context = viewGroup.getContext();
         return new CatalogueHolder(view, fragmentManager);
     }
 
@@ -80,19 +77,19 @@ public class CatalogueCardsAdapter extends RecyclerView.Adapter<CatalogueCardsAd
     }
 
     static class CatalogueHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
-        public ImageView library_card_image;
-        public TextView library_card_title;
-        public Formatter formatter;
-        FragmentManager fragmentManager;
+        final ImageView library_card_image;
+        final TextView library_card_title;
+        Formatter formatter;
+        final FragmentManager fragmentManager;
 
-        public CatalogueHolder(@NonNull View itemView, FragmentManager fragmentManager) {
+        CatalogueHolder(@NonNull View itemView, FragmentManager fragmentManager) {
             super(itemView);
             library_card_image = itemView.findViewById(R.id.catalogue_item_card_image);
             library_card_title = itemView.findViewById(R.id.catalogue_item_card_text);
             this.fragmentManager = fragmentManager;
         }
 
-        public void setFormatter(Formatter formatter) {
+        void setFormatter(Formatter formatter) {
             this.formatter = formatter;
             Log.d("FormatterSet", formatter.getName());
             itemView.setOnClickListener(this);
@@ -100,14 +97,14 @@ public class CatalogueCardsAdapter extends RecyclerView.Adapter<CatalogueCardsAd
 
         @Override
         public void onClick(View v) {
-            Log.d("ForrmatterSelection", formatter.getName());
+            Log.d("FormatterSelection", formatter.getName());
             if (SettingsController.isOnline()) {
-                CatalogueFragement catalogueFragement = new CatalogueFragement();
-                catalogueFragement.setFormatter(formatter);
+                CatalogueFragment catalogueFragment = new CatalogueFragment();
+                catalogueFragment.setFormatter(formatter);
                 setFormatter(formatter);
                 fragmentManager.beginTransaction()
                         .addToBackStack("tag")
-                        .replace(R.id.fragment_container, catalogueFragement)
+                        .replace(R.id.fragment_container, catalogueFragment)
                         .commit();
             } else Toast.makeText(v.getContext(), "You are not online", Toast.LENGTH_SHORT).show();
         }
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/catalogue/CatalogueNovelCardsAdapter.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/catalogue/CatalogueNovelCardsAdapter.java
similarity index 90%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/catalogue/CatalogueNovelCardsAdapter.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/catalogue/CatalogueNovelCardsAdapter.java
index 280d6adae..b734e1f7e 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/catalogue/CatalogueNovelCardsAdapter.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/catalogue/CatalogueNovelCardsAdapter.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.adapters.catalogue;
+package com.github.doomsdayrs.apps.shosetsu.adapters.catalogue;
 
 import android.support.annotation.NonNull;
 import android.support.v4.app.FragmentManager;
@@ -10,10 +10,9 @@ import android.widget.ImageView;
 import android.widget.TextView;
 
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.novel.NovelFragment;
-import com.github.Doomsdayrs.apps.shosetsu.recycleObjects.CatalogueNovelCard;
-import com.github.Doomsdayrs.apps.shosetsu.recycleObjects.NovelCard;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.fragment.novel.NovelFragment;
+import com.github.doomsdayrs.apps.shosetsu.recycleObjects.CatalogueNovelCard;
 import com.squareup.picasso.Picasso;
 
 import java.net.URI;
@@ -40,8 +39,8 @@ import java.util.List;
  */
 public class CatalogueNovelCardsAdapter extends RecyclerView.Adapter<CatalogueNovelCardsAdapter.NovelCardsViewHolder> {
     private static List<CatalogueNovelCard> recycleCards;
-    private FragmentManager fragmentManager;
-    private Formatter formatter;
+    private final FragmentManager fragmentManager;
+    private final Formatter formatter;
 
     public CatalogueNovelCardsAdapter(List<CatalogueNovelCard> recycleCards, FragmentManager fragmentManager, Formatter formatter) {
         if (CatalogueNovelCardsAdapter.recycleCards != null && !CatalogueNovelCardsAdapter.recycleCards.containsAll(recycleCards)) {
@@ -87,8 +86,8 @@ public class CatalogueNovelCardsAdapter extends RecyclerView.Adapter<CatalogueNo
     static class NovelCardsViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
         FragmentManager fragmentManager;
         Formatter formatter;
-        ImageView library_card_image;
-        TextView library_card_title;
+        final ImageView library_card_image;
+        final TextView library_card_title;
         URI uri;
 
         NovelCardsViewHolder(@NonNull View itemView) {
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/novel/ChaptersViewHolder.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/novel/ChaptersViewHolder.java
similarity index 73%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/novel/ChaptersViewHolder.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/novel/ChaptersViewHolder.java
index 9f1956e38..9b693832e 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/novel/ChaptersViewHolder.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/novel/ChaptersViewHolder.java
@@ -1,21 +1,22 @@
-package com.github.Doomsdayrs.apps.shosetsu.adapters.novel;
+package com.github.doomsdayrs.apps.shosetsu.adapters.novel;
 
 import android.content.Intent;
 import android.support.annotation.NonNull;
-import android.support.v4.app.FragmentManager;
 import android.support.v7.widget.RecyclerView;
+import android.util.Log;
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.TextView;
 
 import com.github.Doomsdayrs.api.novelreader_core.services.core.objects.NovelChapter;
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.download.DeleteItem;
-import com.github.Doomsdayrs.apps.shosetsu.download.DownloadItem;
-import com.github.Doomsdayrs.apps.shosetsu.download.Downloadmanager;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.novel.NovelFragmentChapterView;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.novel.NovelFragmentChapters;
-import com.github.Doomsdayrs.apps.shosetsu.settings.SettingsController;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.download.DeleteItem;
+import com.github.doomsdayrs.apps.shosetsu.download.DownloadItem;
+import com.github.doomsdayrs.apps.shosetsu.download.Download_Manager;
+import com.github.doomsdayrs.apps.shosetsu.fragment.novel.NovelFragmentChapterView;
+import com.github.doomsdayrs.apps.shosetsu.fragment.novel.NovelFragmentChapters;
+import com.github.doomsdayrs.apps.shosetsu.fragment.novel.StaticNovel;
+import com.github.doomsdayrs.apps.shosetsu.settings.SettingsController;
 
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -41,11 +42,10 @@ import org.json.JSONObject;
 public class ChaptersViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
 
     NovelChapter novelChapter;
-    FragmentManager fragmentManager;
-    TextView library_card_title;
-    ImageView bookmarked;
-    public ImageView download;
-    public boolean downloaded;
+    final TextView library_card_title;
+    final ImageView bookmarked;
+    public final ImageView download;
+    boolean downloaded;
 
     NovelFragmentChapters novelFragmentChapters;
 
@@ -57,11 +57,11 @@ public class ChaptersViewHolder extends RecyclerView.ViewHolder implements View.
         itemView.setOnClickListener(this);
         download.setOnClickListener(v -> {
             if (!downloaded) {
-                DownloadItem downloadItem = new DownloadItem(NovelChaptersAdapter.formatter, novelFragmentChapters.novelPage.title, novelChapter.chapterNum, novelFragmentChapters.novelURL, novelChapter.link, novelFragmentChapters);
-                Downloadmanager.addToDownload(downloadItem);
+                DownloadItem downloadItem = new DownloadItem(NovelChaptersAdapter.formatter, StaticNovel.novelPage.title, novelChapter.chapterNum, novelFragmentChapters.novelURL, novelChapter.link, novelFragmentChapters);
+                Download_Manager.addToDownload(downloadItem);
                 downloaded = true;
             } else {
-                if (Downloadmanager.delete(new DeleteItem(NovelChaptersAdapter.formatter, novelFragmentChapters.novelPage.title, novelChapter.chapterNum, novelFragmentChapters.novelURL, novelChapter.link)))
+                if (Download_Manager.delete(new DeleteItem(NovelChaptersAdapter.formatter, StaticNovel.novelPage.title, novelChapter.chapterNum, novelFragmentChapters.novelURL, novelChapter.link)))
                     download.setImageResource(R.drawable.ic_outline_arrow_drop_down_circle_24px);
                 downloaded = false;
             }
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/novel/NovelChaptersAdapter.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/novel/NovelChaptersAdapter.java
similarity index 86%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/novel/NovelChaptersAdapter.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/novel/NovelChaptersAdapter.java
index 883051c30..bdd392ffd 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/novel/NovelChaptersAdapter.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/novel/NovelChaptersAdapter.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.adapters.novel;
+package com.github.doomsdayrs.apps.shosetsu.adapters.novel;
 
 import android.support.annotation.NonNull;
 import android.support.v4.app.FragmentManager;
@@ -10,10 +10,10 @@ import android.view.ViewGroup;
 
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.objects.NovelChapter;
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.database.Database;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.novel.NovelFragmentChapters;
-import com.github.Doomsdayrs.apps.shosetsu.settings.SettingsController;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.database.Database;
+import com.github.doomsdayrs.apps.shosetsu.fragment.novel.NovelFragmentChapters;
+import com.github.doomsdayrs.apps.shosetsu.settings.SettingsController;
 
 import java.util.List;
 
@@ -40,11 +40,11 @@ public class NovelChaptersAdapter extends RecyclerView.Adapter<ChaptersViewHolde
     public static Formatter formatter;
 
 
-    private NovelFragmentChapters novelFragmentChapters;
-    private FragmentManager fragmentManager;
+    private final NovelFragmentChapters novelFragmentChapters;
+    private final FragmentManager fragmentManager;
 
     //Reference to the the NovelFragmentChapters array
-    public List<NovelChapter> novelChapters;
+    private final List<NovelChapter> novelChapters;
 
 
     public NovelChaptersAdapter(NovelFragmentChapters novelFragmentChapters, List<NovelChapter> novels, FragmentManager fragmentManager, Formatter formatter) {
@@ -67,7 +67,6 @@ public class NovelChaptersAdapter extends RecyclerView.Adapter<ChaptersViewHolde
         NovelChapter novelChapter = novelChapters.get(i);
 
         chaptersViewHolder.novelChapter = novelChapter;
-        chaptersViewHolder.fragmentManager = fragmentManager;
         chaptersViewHolder.library_card_title.setText(novelChapter.chapterNum);
         chaptersViewHolder.novelFragmentChapters = novelFragmentChapters;
         if (SettingsController.isBookMarked(novelChapter.link))
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/novel/SlidingNovelPageAdapter.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/novel/SlidingNovelPageAdapter.java
similarity index 93%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/novel/SlidingNovelPageAdapter.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/novel/SlidingNovelPageAdapter.java
index 74018a687..049c52285 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/adapters/novel/SlidingNovelPageAdapter.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/adapters/novel/SlidingNovelPageAdapter.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.adapters.novel;
+package com.github.doomsdayrs.apps.shosetsu.adapters.novel;
 
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
@@ -26,7 +26,7 @@ import java.util.List;
  * @author github.com/doomsdayrs
  */
 public class SlidingNovelPageAdapter extends FragmentPagerAdapter {
-    private List<Fragment> fragments;
+    private final List<Fragment> fragments;
 
     public SlidingNovelPageAdapter(FragmentManager fm, List<Fragment> fragments) {
         super(fm);
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/async/CataloguePageLoader.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/async/CataloguePageLoader.java
similarity index 72%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/async/CataloguePageLoader.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/async/CataloguePageLoader.java
index 5ac76760a..80e787265 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/async/CataloguePageLoader.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/async/CataloguePageLoader.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.async;
+package com.github.doomsdayrs.apps.shosetsu.async;
 
 import android.os.AsyncTask;
 import android.util.Log;
@@ -6,8 +6,8 @@ import android.view.View;
 
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.objects.Novel;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.CatalogueFragement;
-import com.github.Doomsdayrs.apps.shosetsu.recycleObjects.CatalogueNovelCard;
+import com.github.doomsdayrs.apps.shosetsu.fragment.CatalogueFragment;
+import com.github.doomsdayrs.apps.shosetsu.recycleObjects.CatalogueNovelCard;
 
 import java.io.IOException;
 import java.net.URI;
@@ -34,12 +34,12 @@ import java.util.List;
  * @author github.com/doomsdayrs
  */
 public class CataloguePageLoader extends AsyncTask<Integer, Void, Boolean> {
-    private CatalogueFragement catalogueFragement;
-    private Formatter formatter;
-    private ArrayList<CatalogueNovelCard> catalogueNovelCards;
+    private final CatalogueFragment catalogueFragment;
+    private final Formatter formatter;
+    private final ArrayList<CatalogueNovelCard> catalogueNovelCards;
 
-    public CataloguePageLoader(CatalogueFragement catalogueFragement, Formatter formatter, ArrayList<CatalogueNovelCard> catalogueNovelCards) {
-        this.catalogueFragement = catalogueFragement;
+    public CataloguePageLoader(CatalogueFragment catalogueFragment, Formatter formatter, ArrayList<CatalogueNovelCard> catalogueNovelCards) {
+        this.catalogueFragment = catalogueFragment;
         this.formatter = formatter;
         this.catalogueNovelCards = catalogueNovelCards;
     }
@@ -55,7 +55,7 @@ public class CataloguePageLoader extends AsyncTask<Integer, Void, Boolean> {
 
             for (Novel novel : novels)
                 catalogueNovelCards.add(new CatalogueNovelCard(novel.imageURL, novel.title, new URI(novel.link)));
-            catalogueFragement.library_view.post(() -> catalogueFragement.library_Adapter.notifyDataSetChanged());
+            catalogueFragment.library_view.post(() -> catalogueFragment.library_Adapter.notifyDataSetChanged());
 
             return true;
         } catch (IOException e) {
@@ -68,16 +68,16 @@ public class CataloguePageLoader extends AsyncTask<Integer, Void, Boolean> {
 
     @Override
     protected void onCancelled() {
-        catalogueFragement.progressBar.setVisibility(View.GONE);
+        catalogueFragment.progressBar.setVisibility(View.GONE);
     }
 
     @Override
     protected void onPreExecute() {
-        catalogueFragement.progressBar.setVisibility(View.VISIBLE);
+        catalogueFragment.progressBar.setVisibility(View.VISIBLE);
     }
 
     @Override
     protected void onPostExecute(Boolean aBoolean) {
-        catalogueFragement.progressBar.setVisibility(View.GONE);
+        catalogueFragment.progressBar.setVisibility(View.GONE);
     }
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/async/NovelChaptersLoader.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/async/NovelChaptersLoader.java
similarity index 87%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/async/NovelChaptersLoader.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/async/NovelChaptersLoader.java
index f99426d73..3bfae4956 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/async/NovelChaptersLoader.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/async/NovelChaptersLoader.java
@@ -1,10 +1,10 @@
-package com.github.Doomsdayrs.apps.shosetsu.async;
+package com.github.doomsdayrs.apps.shosetsu.async;
 
 import android.os.AsyncTask;
 import android.view.View;
 
 import com.github.Doomsdayrs.api.novelreader_core.services.core.objects.NovelPage;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.novel.NovelFragmentChapters;
+import com.github.doomsdayrs.apps.shosetsu.fragment.novel.NovelFragmentChapters;
 
 import java.io.IOException;
 
@@ -27,7 +27,7 @@ import java.io.IOException;
  * @author github.com/doomsdayrs
  */
 public class NovelChaptersLoader extends AsyncTask<Integer, Void, Boolean> {
-    private NovelFragmentChapters novelFragmentChapters;
+    private final NovelFragmentChapters novelFragmentChapters;
 
     public NovelChaptersLoader(NovelFragmentChapters novelFragmentChapters) {
         this.novelFragmentChapters = novelFragmentChapters;
@@ -45,8 +45,8 @@ public class NovelChaptersLoader extends AsyncTask<Integer, Void, Boolean> {
                 //TODO Difference calculation
 
                 if (!novelPage.novelChapters.get(novelPage.novelChapters.size() - 1).link
-                        .equals(novelFragmentChapters.novelChapters.get(novelFragmentChapters.novelChapters.size() - 1).link))
-                    novelFragmentChapters.novelChapters.addAll(novelPage.novelChapters);
+                        .equals(NovelFragmentChapters.novelChapters.get(NovelFragmentChapters.novelChapters.size() - 1).link))
+                    NovelFragmentChapters.novelChapters.addAll(novelPage.novelChapters);
                 return true;
             } catch (IOException e) {
                 e.printStackTrace();
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/async/NovelLoader.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/async/NovelLoader.java
similarity index 76%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/async/NovelLoader.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/async/NovelLoader.java
index 147dc0b7f..f069e0f52 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/async/NovelLoader.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/async/NovelLoader.java
@@ -1,12 +1,15 @@
-package com.github.Doomsdayrs.apps.shosetsu.async;
+package com.github.doomsdayrs.apps.shosetsu.async;
 
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.os.AsyncTask;
 import android.util.Log;
 import android.view.View;
 import android.widget.Toast;
 
-import com.github.Doomsdayrs.apps.shosetsu.fragment.novel.NovelFragment;
+import com.github.doomsdayrs.apps.shosetsu.fragment.novel.NovelFragment;
+import com.github.doomsdayrs.apps.shosetsu.fragment.novel.NovelFragmentChapters;
+import com.github.doomsdayrs.apps.shosetsu.fragment.novel.StaticNovel;
 
 import java.io.IOException;
 import java.net.SocketTimeoutException;
@@ -30,7 +33,8 @@ import java.net.SocketTimeoutException;
  * @author github.com/doomsdayrs
  */
 public class NovelLoader extends AsyncTask<Activity, Void, Boolean> {
-    private NovelFragment novelFragment;
+    private final NovelFragment novelFragment;
+    @SuppressLint("StaticFieldLeak")
     private Activity activity;
 
     public NovelLoader(NovelFragment novelFragment) {
@@ -41,12 +45,11 @@ public class NovelLoader extends AsyncTask<Activity, Void, Boolean> {
     @Override
     protected Boolean doInBackground(Activity... voids) {
         this.activity = voids[0];
-
+        StaticNovel.novelPage = null;
         Log.d("Loading", "Novel");
         try {
-            novelFragment.novelPage = novelFragment.formatter.parseNovel(novelFragment.url);
-            novelFragment.novelFragmentMain.novelPage = novelFragment.novelPage;
-            Log.d("Loaded Novel:", novelFragment.novelPage.title);
+            StaticNovel.novelPage = novelFragment.formatter.parseNovel(novelFragment.url);
+            Log.d("Loaded Novel:", StaticNovel.novelPage.title);
 
             return true;
         } catch (SocketTimeoutException e) {
@@ -65,17 +68,12 @@ public class NovelLoader extends AsyncTask<Activity, Void, Boolean> {
 
     }
 
-    @Override
-    protected void onCancelled() {
-        super.onCancelled();
-    }
-
     @Override
     protected void onPostExecute(Boolean aBoolean) {
         novelFragment.progressBar.setVisibility(View.GONE);
         if (aBoolean) {
             activity.runOnUiThread(() -> novelFragment.novelFragmentMain.setData());
-            activity.runOnUiThread(() -> novelFragment.novelFragmentChapters.setNovels(novelFragment.novelFragmentChapters.novelChapters));
+            activity.runOnUiThread(() -> novelFragment.novelFragmentChapters.setNovels(NovelFragmentChapters.novelChapters));
         }
     }
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/database/DBHelper.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/database/DBHelper.java
similarity index 93%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/database/DBHelper.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/database/DBHelper.java
index c83864e06..6b976f34b 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/database/DBHelper.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/database/DBHelper.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.database;
+package com.github.doomsdayrs.apps.shosetsu.database;
 
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
@@ -23,7 +23,7 @@ import android.database.sqlite.SQLiteOpenHelper;
  * @author github.com/doomsdayrs
  */
 public class DBHelper extends SQLiteOpenHelper {
-    static final String DB_NAME = "database.db";
+    private static final String DB_NAME = "database.db";
 
     public DBHelper(Context context) {
         super(context, DB_NAME, null, 2);
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/database/Database.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/database/Database.java
similarity index 90%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/database/Database.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/database/Database.java
index 807a4269c..22b6a693b 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/database/Database.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/database/Database.java
@@ -1,18 +1,20 @@
-package com.github.Doomsdayrs.apps.shosetsu.database;
+package com.github.doomsdayrs.apps.shosetsu.database;
 
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.util.Log;
 
 import com.github.Doomsdayrs.api.novelreader_core.services.core.objects.NovelPage;
-import com.github.Doomsdayrs.apps.shosetsu.download.Downloadmanager;
-import com.github.Doomsdayrs.apps.shosetsu.recycleObjects.NovelCard;
+import com.github.doomsdayrs.apps.shosetsu.download.Download_Manager;
+import com.github.doomsdayrs.apps.shosetsu.recycleObjects.NovelCard;
 
+import org.jetbrains.annotations.NotNull;
 import org.json.JSONException;
 import org.json.JSONObject;
 
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Objects;
 
 /**
  * This file is part of Shosetsu.
@@ -33,7 +35,6 @@ import java.util.Arrays;
  * @author github.com/doomsdayrs
  */
 public class Database {
-    static boolean ready = false;
     public static SQLiteDatabase library;
 
     public enum Tables {
@@ -46,6 +47,7 @@ public class Database {
             this.TABLE = table;
         }
 
+        @NotNull
         @Override
         public String toString() {
             return TABLE;
@@ -63,6 +65,7 @@ public class Database {
             this.COLUMN = column;
         }
 
+        @NotNull
         @Override
         public String toString() {
             return COLUMN;
@@ -70,16 +73,16 @@ public class Database {
     }
 
 
-    public static String create = "create TABLE if not exists " + Tables.TABLE_LIBRARY + " (" +
+    public static final String create = "create TABLE if not exists " + Tables.TABLE_LIBRARY + " (" +
             Columns.COLUMNS_NOVEL_URL + " text not null unique, " +
             Columns.COLUMN_FORMATTER_ID + " integer not null, " +
             Columns.COLUMN_SAVED_DATA + " text not null)";
 
-    public static String create2 = "create TABLE if not exists " + Tables.TABLE_BOOKMARKS + "(" +
+    public static final String create2 = "create TABLE if not exists " + Tables.TABLE_BOOKMARKS + "(" +
             Columns.COLUMN_CHAPTER_URL + " text unique not null, " +
             Columns.COLUMN_SAVED_DATA + " text)";
 
-    public static String create3 = "create TABLE if not exists " + Tables.TABLE_DOWNLOADS + "(" +
+    public static final String create3 = "create TABLE if not exists " + Tables.TABLE_DOWNLOADS + "(" +
             Columns.COLUMNS_NOVEL_URL + " text not null," +
             Columns.COLUMN_CHAPTER_URL + " text not null, " +
             Columns.COLUMN_SAVED_DATA + " text)";
@@ -92,12 +95,11 @@ public class Database {
      * @param chapterURL imageURL of the novel
      * @param savedData  JSON object containing scroll position and others
      */
-    public static boolean addBookMark(String chapterURL, JSONObject savedData) {
+    public static void addBookMark(String chapterURL, JSONObject savedData) {
         library.execSQL("insert into " + Tables.TABLE_BOOKMARKS + " (" + Columns.COLUMN_CHAPTER_URL + "," + Columns.COLUMN_SAVED_DATA + ") values('" +
                 chapterURL + "','" +
                 savedData.toString() + "')"
         );
-        return true;
     }
 
     public static void updateBookMark(String chapterURL, JSONObject savedData) {
@@ -161,22 +163,21 @@ public class Database {
         return library.delete(Tables.TABLE_DOWNLOADS.toString(), Columns.COLUMN_CHAPTER_URL + "='" + chapterURL + "' and " + Columns.COLUMNS_NOVEL_URL + "='" + novelURL + "'", null) > 0;
     }
 
-    public static boolean addSavedPath(String novelURL, String chapterURL, String chapterPath) {
+    public static void addSavedPath(String novelURL, String chapterURL, String chapterPath) {
         library.execSQL("insert into " + Tables.TABLE_DOWNLOADS + " (" + Columns.COLUMNS_NOVEL_URL + "," + Columns.COLUMN_CHAPTER_URL + "," + Columns.COLUMN_SAVED_DATA + ") values('" +
                 novelURL + "','" +
                 chapterURL + "','" +
                 chapterPath + "')"
         );
-        return true;
     }
 
 
     /**
      * Is the chapter saved
      *
-     * @param novelURL
-     * @param chapterURL
-     * @return
+     * @param novelURL URL of the novel
+     * @param chapterURL URL of the chapter
+     * @return true if saved, false otherwise
      */
     public static boolean isSaved(String novelURL, String chapterURL) {
         Cursor cursor = library.rawQuery("SELECT * from " + Tables.TABLE_DOWNLOADS + " where " + Columns.COLUMN_CHAPTER_URL + "='" + chapterURL + "' and " + Columns.COLUMNS_NOVEL_URL + "='" + novelURL + "'", null);
@@ -204,7 +205,7 @@ public class Database {
             cursor.moveToNext();
             String savedData = cursor.getString(cursor.getColumnIndex(Columns.COLUMN_SAVED_DATA.toString()));
             cursor.close();
-            return Downloadmanager.getText(savedData);
+            return Download_Manager.getText(savedData);
         }
     }
 
@@ -222,12 +223,12 @@ public class Database {
             data.put("authors", Arrays.toString(novelPage.authors).replaceAll("'", "\'"));
             data.put("imageURL", novelPage.imageURL);
         } catch (JSONException e) {
-            Log.e("JSONException", e.getMessage());
+            Log.e("JSONException", Objects.requireNonNull(e.getMessage()));
             return false;
         }
         library.execSQL("insert into " + Tables.TABLE_LIBRARY + "(" + Columns.COLUMNS_NOVEL_URL + "," + Columns.COLUMN_SAVED_DATA + "," + Columns.COLUMN_FORMATTER_ID + ") values('" +
                 novelURL + "','" +
-                data.toString().replaceAll("'","") + "'," +
+                data.toString().replaceAll("'", "") + "'," +
                 formatter + ")"
         );
         return true;
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/download/DeleteItem.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/download/DeleteItem.java
similarity index 96%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/download/DeleteItem.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/download/DeleteItem.java
index 3f443ac6e..4bf5102c9 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/download/DeleteItem.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/download/DeleteItem.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.download;
+package com.github.doomsdayrs.apps.shosetsu.download;
 
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
 
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/download/DownloadItem.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/download/DownloadItem.java
similarity index 89%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/download/DownloadItem.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/download/DownloadItem.java
index 42936ae7c..c50705430 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/download/DownloadItem.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/download/DownloadItem.java
@@ -1,8 +1,7 @@
-package com.github.Doomsdayrs.apps.shosetsu.download;
+package com.github.doomsdayrs.apps.shosetsu.download;
 
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
-import com.github.Doomsdayrs.apps.shosetsu.adapters.novel.ChaptersViewHolder;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.novel.NovelFragmentChapters;
+import com.github.doomsdayrs.apps.shosetsu.fragment.novel.NovelFragmentChapters;
 
 /**
  * This file is part of Shosetsu.
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/download/Downloadmanager.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/download/Download_Manager.java
similarity index 90%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/download/Downloadmanager.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/download/Download_Manager.java
index 58346134f..d8202f2ac 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/download/Downloadmanager.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/download/Download_Manager.java
@@ -1,12 +1,10 @@
-package com.github.Doomsdayrs.apps.shosetsu.download;
+package com.github.doomsdayrs.apps.shosetsu.download;
 
-import android.annotation.SuppressLint;
-import android.content.Context;
 import android.os.AsyncTask;
 import android.os.Environment;
 import android.util.Log;
 
-import com.github.Doomsdayrs.apps.shosetsu.database.Database;
+import com.github.doomsdayrs.apps.shosetsu.database.Database;
 
 import java.io.BufferedReader;
 import java.io.File;
@@ -34,20 +32,13 @@ import java.util.concurrent.TimeUnit;
  *
  * @author github.com/doomsdayrs
  */
-public class Downloadmanager {
-
-    public final String cleanName(String name) {
-        return name
-                .replaceAll("/", "");
-    }
+public class Download_Manager {
 
     private static final String downloadDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getPath();
 
 
-    private static ArrayList<DownloadItem> urlsToDownload = new ArrayList<>();
+    private static final ArrayList<DownloadItem> urlsToDownload = new ArrayList<>();
 
-    @SuppressLint("StaticFieldLeak")
-    public static Context context;
 
     public static void addToDownload(DownloadItem downloadItem) {
         urlsToDownload.add(0, downloadItem);
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/enums/Types.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/enums/Types.java
similarity index 88%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/enums/Types.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/enums/Types.java
index 5d70c21c8..9c30896ee 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/enums/Types.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/enums/Types.java
@@ -1,4 +1,6 @@
-package com.github.Doomsdayrs.apps.shosetsu.enums;
+package com.github.doomsdayrs.apps.shosetsu.enums;
+
+import org.jetbrains.annotations.NotNull;
 
 /**
  * This file is part of Shosetsu.
@@ -24,12 +26,13 @@ public enum Types {
     ADVANCED("advanced"),
     CREDITS("credits");
 
-    final String name;
+    private final String name;
 
     Types(String name) {
         this.name = name;
     }
 
+    @NotNull
     @Override
     public String toString() {
         return name;
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/CatalogueFragement.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/CatalogueFragment.java
similarity index 76%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/CatalogueFragement.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/CatalogueFragment.java
index e50b42664..1a5b8b234 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/CatalogueFragement.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/CatalogueFragment.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.fragment;
+package com.github.doomsdayrs.apps.shosetsu.fragment;
 
 import android.content.Context;
 import android.content.res.Configuration;
@@ -22,16 +22,17 @@ import android.widget.SearchView;
 
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.objects.Novel;
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.adapters.catalogue.CatalogueNovelCardsAdapter;
-import com.github.Doomsdayrs.apps.shosetsu.async.CataloguePageLoader;
-import com.github.Doomsdayrs.apps.shosetsu.recycleObjects.CatalogueNovelCard;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.adapters.catalogue.CatalogueNovelCardsAdapter;
+import com.github.doomsdayrs.apps.shosetsu.async.CataloguePageLoader;
+import com.github.doomsdayrs.apps.shosetsu.recycleObjects.CatalogueNovelCard;
 
 import java.io.IOException;
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Objects;
 import java.util.concurrent.ExecutionException;
 
 /**
@@ -52,40 +53,37 @@ import java.util.concurrent.ExecutionException;
  *
  * @author github.com/doomsdayrs
  */
-public class CatalogueFragement extends Fragment {
-    public static ArrayList<CatalogueNovelCard> libraryCards = new ArrayList<>();
-    static Formatter formatter;
-    static ArrayList<CatalogueNovelCard> searchResults = new ArrayList<>();
-    public SwipeRefreshLayout swipeRefreshLayout;
+public class CatalogueFragment extends Fragment {
+    private static ArrayList<CatalogueNovelCard> libraryCards = new ArrayList<>();
+    private static Formatter formatter;
+    private SwipeRefreshLayout swipeRefreshLayout;
     public RecyclerView library_view;
-    public int currentMaxPage = 1;
-    private SearchView searchView;
+    private int currentMaxPage = 1;
     private Context context;
     private boolean firstRun;
     public RecyclerView.Adapter library_Adapter;
-    private RecyclerView.LayoutManager library_layoutManager;
     public ProgressBar progressBar;
 
-    public CatalogueFragement() {
+    public CatalogueFragment() {
         setHasOptionsMenu(true);
         firstRun = true;
     }
 
     public void setFormatter(Formatter formatter) {
-        CatalogueFragement.formatter = formatter;
+        CatalogueFragment.formatter = formatter;
     }
 
     @Nullable
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-
+        Log.d("OnCreateView", "CatalogueFragment");
         View view = inflater.inflate(R.layout.fragment_catalogue, container, false);
         library_view = view.findViewById(R.id.fragment_catalogue_recycler);
         swipeRefreshLayout = view.findViewById(R.id.fragment_catalogue_refresh);
         swipeRefreshLayout.setOnRefreshListener(new refresh(this));
         progressBar = view.findViewById(R.id.fragment_catalogue_progress);
 
-        this.context = container.getContext();
+        this.context = Objects.requireNonNull(container).getContext();
         if (savedInstanceState == null) {
             Log.d("Process", "Loading up latest");
             if (firstRun) {
@@ -102,16 +100,17 @@ public class CatalogueFragement extends Fragment {
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         menu.clear();
         inflater.inflate(R.menu.toolbar_library, menu);
-        searchView = (SearchView) menu.findItem(R.id.library_search).getActionView();
+        SearchView searchView = (SearchView) menu.findItem(R.id.library_search).getActionView();
         searchView.setOnQueryTextListener(new SearchQuery());
         searchView.setOnCloseListener(new SearchClose());
     }
 
 
-    public void setLibraryCards(ArrayList<CatalogueNovelCard> recycleCards) {
+    private void setLibraryCards(ArrayList<CatalogueNovelCard> recycleCards) {
         if (library_view != null) {
             library_view.setHasFixedSize(false);
-            if (getActivity().getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT)
+            RecyclerView.LayoutManager library_layoutManager;
+            if (Objects.requireNonNull(getActivity()).getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT)
                 library_layoutManager = new GridLayoutManager(context, 2, GridLayoutManager.VERTICAL, false);
             else
                 library_layoutManager = new GridLayoutManager(context, 4, GridLayoutManager.VERTICAL, false);
@@ -140,26 +139,26 @@ public class CatalogueFragement extends Fragment {
     }
 
     class bottom extends RecyclerView.OnScrollListener {
-        CatalogueFragement catalogueFragement;
+        final CatalogueFragment catalogueFragment;
         boolean running = false;
 
-        bottom(CatalogueFragement catalogueFragement) {
-            this.catalogueFragement = catalogueFragement;
+        bottom(CatalogueFragment catalogueFragment) {
+            this.catalogueFragment = catalogueFragment;
         }
 
         @Override
         public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
 
             if (!running)
-                if (!catalogueFragement.library_view.canScrollVertically(1)) {
+                if (!catalogueFragment.library_view.canScrollVertically(1)) {
                     Log.d("CatalogueFragmentLoad", "Getting next page");
                     running = true;
-                    catalogueFragement.currentMaxPage++;
+                    catalogueFragment.currentMaxPage++;
                     try {
-                        if (new CataloguePageLoader(catalogueFragement, formatter, libraryCards).execute(catalogueFragement.currentMaxPage).get()) {
-                            catalogueFragement.library_view.post(() -> {
-                                catalogueFragement.library_Adapter.notifyDataSetChanged();
-                                catalogueFragement.library_view.addOnScrollListener(this);
+                        if (new CataloguePageLoader(catalogueFragment, formatter, libraryCards).execute(catalogueFragment.currentMaxPage).get()) {
+                            catalogueFragment.library_view.post(() -> {
+                                catalogueFragment.library_Adapter.notifyDataSetChanged();
+                                catalogueFragment.library_view.addOnScrollListener(this);
                             });
 
                             running = false;
@@ -177,29 +176,29 @@ public class CatalogueFragement extends Fragment {
 
 
     class refresh implements SwipeRefreshLayout.OnRefreshListener {
-        CatalogueFragement catalogueFragement;
+        final CatalogueFragment catalogueFragment;
 
-        refresh(CatalogueFragement catalogueFragement) {
-            this.catalogueFragement = catalogueFragement;
+        refresh(CatalogueFragment catalogueFragment) {
+            this.catalogueFragment = catalogueFragment;
         }
 
         @Override
         public void onRefresh() {
-            catalogueFragement.swipeRefreshLayout.setRefreshing(true);
+            catalogueFragment.swipeRefreshLayout.setRefreshing(true);
 
             libraryCards = new ArrayList<>();
             try {
                 Log.d("FragmentRefresh", "Refreshing catalogue data");
-                if (new CataloguePageLoader(catalogueFragement, formatter, libraryCards).execute().get()) {
+                if (new CataloguePageLoader(catalogueFragment, formatter, libraryCards).execute().get()) {
                     Log.d("FragmentRefresh", "Complete");
-                    catalogueFragement.library_Adapter.notifyDataSetChanged();
+                    catalogueFragment.library_Adapter.notifyDataSetChanged();
                 }
             } catch (ExecutionException e) {
                 e.printStackTrace();
             } catch (InterruptedException e) {
                 e.printStackTrace();
             }
-            catalogueFragement.swipeRefreshLayout.setRefreshing(false);
+            catalogueFragment.swipeRefreshLayout.setRefreshing(false);
         }
     }
 
@@ -216,7 +215,7 @@ public class CatalogueFragement extends Fragment {
         @Override
         public boolean onQueryTextSubmit(String query) {
             try {
-                searchResults = new querySearch().execute(query).get();
+                ArrayList<CatalogueNovelCard> searchResults = new querySearch().execute(query).get();
                 setLibraryCards(searchResults);
                 return true;
             } catch (ExecutionException e) {
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/CataloguesFragment.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/CataloguesFragment.java
similarity index 77%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/CataloguesFragment.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/CataloguesFragment.java
index edc351c3f..118df037f 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/CataloguesFragment.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/CataloguesFragment.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.fragment;
+package com.github.doomsdayrs.apps.shosetsu.fragment;
 
 import android.os.Bundle;
 import android.support.annotation.NonNull;
@@ -7,6 +7,7 @@ import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -15,11 +16,12 @@ import android.view.ViewGroup;
 
 import com.github.Doomsdayrs.api.novelreader_core.main.DefaultScrapers;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.adapters.catalogue.CatalogueCardsAdapter;
-import com.github.Doomsdayrs.apps.shosetsu.recycleObjects.CatalogueCard;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.adapters.catalogue.CatalogueCardsAdapter;
+import com.github.doomsdayrs.apps.shosetsu.recycleObjects.CatalogueCard;
 
 import java.util.ArrayList;
+import java.util.Objects;
 
 /**
  * This file is part of Shosetsu.
@@ -40,11 +42,7 @@ import java.util.ArrayList;
  * @author github.com/doomsdayrs
  */
 public class CataloguesFragment extends Fragment {
-    private FragmentManager fragmentManager;
     private ArrayList<CatalogueCard> cards = null;
-    private RecyclerView recyclerView;
-    private RecyclerView.Adapter adapter;
-    private RecyclerView.LayoutManager layoutManager;
 
     public CataloguesFragment() {
         setHasOptionsMenu(true);
@@ -58,7 +56,8 @@ public class CataloguesFragment extends Fragment {
     @Nullable
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        //TODO Conditional for turning formatters on and off
+        Log.d("OnCreateView", "CataloguesFragment");
+        //TODO Conditional for turning formatter on and off
         //TODO Conditional for languages
         //TODO Conditional for categories, maybe
         if (cards == null) {
@@ -68,14 +67,14 @@ public class CataloguesFragment extends Fragment {
 
             }
         }
-        fragmentManager = getFragmentManager();
+        FragmentManager fragmentManager = getFragmentManager();
 
         View view = inflater.inflate(R.layout.fragment_settings, container, false);
-        recyclerView = view.findViewById(R.id.fragment_settings_recycler);
+        RecyclerView recyclerView = view.findViewById(R.id.fragment_settings_recycler);
         if (recyclerView != null) {
             recyclerView.setHasFixedSize(true);
-            layoutManager = new LinearLayoutManager(container.getContext());
-            adapter = new CatalogueCardsAdapter(cards, fragmentManager);
+            RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(Objects.requireNonNull(container).getContext());
+            RecyclerView.Adapter adapter = new CatalogueCardsAdapter(cards, fragmentManager);
             recyclerView.setLayoutManager(layoutManager);
             recyclerView.setAdapter(adapter);
 
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/LibraryFragement.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/LibraryFragment.java
similarity index 76%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/LibraryFragement.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/LibraryFragment.java
index 7a2427c47..5bedbffb6 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/LibraryFragement.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/LibraryFragment.java
@@ -1,7 +1,8 @@
-package com.github.Doomsdayrs.apps.shosetsu.fragment;
+package com.github.doomsdayrs.apps.shosetsu.fragment;
 
 import android.content.Context;
 import android.content.res.Configuration;
+import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -16,12 +17,13 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.widget.SearchView;
 
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.adapters.LibraryNovelCardsAdapter;
-import com.github.Doomsdayrs.apps.shosetsu.database.Database;
-import com.github.Doomsdayrs.apps.shosetsu.recycleObjects.NovelCard;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.adapters.LibraryNovelCardsAdapter;
+import com.github.doomsdayrs.apps.shosetsu.database.Database;
+import com.github.doomsdayrs.apps.shosetsu.recycleObjects.NovelCard;
 
 import java.util.ArrayList;
+import java.util.Objects;
 
 /**
  * This file is part of Shosetsu.
@@ -41,16 +43,13 @@ import java.util.ArrayList;
  *
  * @author github.com/doomsdayrs
  */
-public class LibraryFragement extends Fragment {
+public class LibraryFragment extends Fragment {
     private static ArrayList<NovelCard> libraryCards = new ArrayList<>();
-    private SearchView searchView;
     private Context context;
     private RecyclerView library_view;
-    private RecyclerView.Adapter library_Adapter;
-    private RecyclerView.LayoutManager library_layoutManager;
 
 
-    public LibraryFragement() {
+    public LibraryFragment() {
         setHasOptionsMenu(true);
     }
 
@@ -66,7 +65,7 @@ public class LibraryFragement extends Fragment {
         View view = inflater.inflate(R.layout.fragment_library, container, false);
         library_view = view.findViewById(R.id.fragment_library_recycler);
 
-        this.context = container.getContext();
+        this.context = Objects.requireNonNull(container).getContext();
         setLibraryCards(libraryCards);
         return view;
     }
@@ -76,7 +75,7 @@ public class LibraryFragement extends Fragment {
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         menu.clear();
         inflater.inflate(R.menu.toolbar_library, menu);
-        searchView = (SearchView) menu.findItem(R.id.library_search).getActionView();
+        SearchView searchView = (SearchView) menu.findItem(R.id.library_search).getActionView();
         searchView.setOnQueryTextListener(new SearchQuery());
         searchView.setOnCloseListener(new SearchClose());
     }
@@ -85,11 +84,12 @@ public class LibraryFragement extends Fragment {
     private void setLibraryCards(ArrayList<NovelCard> recycleCards) {
         if (library_view != null) {
             library_view.setHasFixedSize(false);
-            if (getActivity().getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT)
+            RecyclerView.LayoutManager library_layoutManager;
+            if (Objects.requireNonNull(getActivity()).getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT)
                 library_layoutManager = new GridLayoutManager(context, 2, GridLayoutManager.VERTICAL, false);
             else
                 library_layoutManager = new GridLayoutManager(context, 4, GridLayoutManager.VERTICAL, false);
-            library_Adapter = new LibraryNovelCardsAdapter(recycleCards, getFragmentManager());
+            RecyclerView.Adapter library_Adapter = new LibraryNovelCardsAdapter(recycleCards, getFragmentManager());
             library_view.setLayoutManager(library_layoutManager);
             library_view.setAdapter(library_Adapter);
         }
@@ -113,7 +113,9 @@ public class LibraryFragement extends Fragment {
         public boolean onQueryTextChange(String newText) {
             Log.d("Library search", newText);
             ArrayList<NovelCard> recycleCards = new ArrayList<>(libraryCards);
-            recycleCards.removeIf(recycleCard -> !recycleCard.title.toLowerCase().contains(newText.toLowerCase()));
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
+                recycleCards.removeIf(recycleCard -> !recycleCard.title.toLowerCase().contains(newText.toLowerCase()));
+            }
             setLibraryCards(recycleCards);
             return recycleCards.size() != 0;
         }
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/SettingsFragment.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/SettingsFragment.java
similarity index 69%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/SettingsFragment.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/SettingsFragment.java
index 94ff6b81e..1652e6d96 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/SettingsFragment.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/SettingsFragment.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.fragment;
+package com.github.doomsdayrs.apps.shosetsu.fragment;
 
 import android.os.Bundle;
 import android.support.annotation.NonNull;
@@ -6,18 +6,18 @@ import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
+import android.util.Log;
 import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.View;
 import android.view.ViewGroup;
 
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.enums.Types;
-import com.github.Doomsdayrs.apps.shosetsu.adapters.SettingsAdapter;
-import com.github.Doomsdayrs.apps.shosetsu.recycleObjects.SettingsCard;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.adapters.SettingsAdapter;
+import com.github.doomsdayrs.apps.shosetsu.enums.Types;
+import com.github.doomsdayrs.apps.shosetsu.recycleObjects.SettingsCard;
 
 import java.util.ArrayList;
+import java.util.Objects;
 
 /**
  * This file is part of Shosetsu.
@@ -38,21 +38,12 @@ import java.util.ArrayList;
  * @author github.com/doomsdayrs
  */
 public class SettingsFragment extends Fragment {
-    static ArrayList<SettingsCard> cards = new ArrayList<>();
-    private RecyclerView recyclerView;
-    private RecyclerView.Adapter adapter;
-    private RecyclerView.LayoutManager layoutManager;
+    private static final ArrayList<SettingsCard> cards = new ArrayList<>();
 
     public SettingsFragment() {
-        setHasOptionsMenu(true);
+        // setHasOptionsMenu(true);
     }
 
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.toolbar_settings, menu);
-    }
-
-
     @Override
     public void onSaveInstanceState(@NonNull Bundle outState) {
         super.onSaveInstanceState(outState);
@@ -61,9 +52,9 @@ public class SettingsFragment extends Fragment {
     @Nullable
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-
+        Log.d("OnCreateView", "SettingsFragment");
         View view = inflater.inflate(R.layout.fragment_settings, container, false);
-        recyclerView = view.findViewById(R.id.fragment_settings_recycler);
+        RecyclerView recyclerView = view.findViewById(R.id.fragment_settings_recycler);
 
         if (savedInstanceState == null) {
             cards.add(new SettingsCard(Types.DOWNLOAD));
@@ -74,8 +65,8 @@ public class SettingsFragment extends Fragment {
         System.out.println(cards);
         if (recyclerView != null) {
             recyclerView.setHasFixedSize(true);
-            layoutManager = new LinearLayoutManager(container.getContext());
-            adapter = new SettingsAdapter(cards,getFragmentManager());
+            RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(Objects.requireNonNull(container).getContext());
+            RecyclerView.Adapter adapter = new SettingsAdapter(cards, getFragmentManager());
             recyclerView.setLayoutManager(layoutManager);
             recyclerView.setAdapter(adapter);
         }
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragment.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragment.java
similarity index 76%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragment.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragment.java
index a97a74b45..f7c2c618c 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragment.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragment.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.fragment.novel;
+package com.github.doomsdayrs.apps.shosetsu.fragment.novel;
 
 import android.os.Bundle;
 import android.support.annotation.NonNull;
@@ -14,11 +14,10 @@ import android.widget.ProgressBar;
 
 import com.github.Doomsdayrs.api.novelreader_core.main.DefaultScrapers;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
-import com.github.Doomsdayrs.api.novelreader_core.services.core.objects.NovelPage;
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.adapters.novel.SlidingNovelPageAdapter;
-import com.github.Doomsdayrs.apps.shosetsu.async.NovelLoader;
-import com.github.Doomsdayrs.apps.shosetsu.settings.SettingsController;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.adapters.novel.SlidingNovelPageAdapter;
+import com.github.doomsdayrs.apps.shosetsu.async.NovelLoader;
+import com.github.doomsdayrs.apps.shosetsu.settings.SettingsController;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -42,16 +41,12 @@ import java.util.List;
  * @author github.com/doomsdayrs
  */
 public class NovelFragment extends Fragment {
-    public View view;
+    private View view;
     public FragmentManager fragmentManager = null;
     public Formatter formatter;
     public String url;
-    public NovelPage novelPage;
-    SlidingNovelPageAdapter pagerAdapter;
     public NovelFragmentMain novelFragmentMain;
     public NovelFragmentChapters novelFragmentChapters;
-    public NovelFragmentTracking novelFragmentTracking;
-    ViewPager viewPager;
     public ProgressBar progressBar;
 
 
@@ -65,13 +60,12 @@ public class NovelFragment extends Fragment {
         Log.d("Saving Instance State", "NovelFragment");
         outState.putString("imageURL", url);
         outState.putInt("formatter", formatter.getID());
-        outState.putSerializable("page", novelPage);
     }
 
     @Nullable
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        Log.d("OnCreate", "NovelFragment ###");
+        Log.d("OnCreateView", "NovelFragment");
         view = inflater.inflate(R.layout.fragment_novel, container, false);
         progressBar = view.findViewById(R.id.fragment_novel_progress);
         novelFragmentMain = new NovelFragmentMain();
@@ -82,7 +76,6 @@ public class NovelFragment extends Fragment {
         if (savedInstanceState == null) {
             if (SettingsController.isOnline()) {
                 setViewPager();
-
                 new NovelLoader(this).execute(getActivity());
             } else {
                 //TODO, Offline data loading
@@ -90,31 +83,26 @@ public class NovelFragment extends Fragment {
         } else {
             url = savedInstanceState.getString("imageURL");
             formatter = DefaultScrapers.formatters.get(savedInstanceState.getInt("formatter") - 1);
-            novelPage = (NovelPage) savedInstanceState.getSerializable("page");
-            Log.d("NovelPage", novelPage.toString());
             setViewPager();
         }
-        Log.d("OnCreate", "NovelFragment Completed ###");
         return view;
     }
 
 
-    void setViewPager() {
+    private void setViewPager() {
         Log.d("ViewPager", "Loading");
-        viewPager = view.findViewById(R.id.fragment_novel_viewpager);
+        ViewPager viewPager = view.findViewById(R.id.fragment_novel_viewpager);
         Log.d("ViewPager", "Loaded:" + viewPager);
 
         List<Fragment> fragments = new ArrayList<>();
         // Sets the data
         {
             novelFragmentChapters.setFormatter(formatter);
-            novelFragmentChapters.novelPage = novelPage;
             novelFragmentChapters.setNovelURL(url);
             novelFragmentChapters.setFragmentManager(fragmentManager);
 
             novelFragmentMain.url = url;
             novelFragmentMain.formatter = formatter;
-            novelFragmentMain.novelFragmentChapters = novelFragmentChapters;
         }
         // Add the fragments
         {
@@ -124,7 +112,7 @@ public class NovelFragment extends Fragment {
             fragments.add(novelFragmentChapters);
         }
 
-        pagerAdapter = new SlidingNovelPageAdapter(getChildFragmentManager(), fragments);
+        SlidingNovelPageAdapter pagerAdapter = new SlidingNovelPageAdapter(getChildFragmentManager(), fragments);
         viewPager.setAdapter(pagerAdapter);
     }
 
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentChapterView.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentChapterView.java
similarity index 72%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentChapterView.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentChapterView.java
index 721ddbb8f..e1bc5dfa8 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentChapterView.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentChapterView.java
@@ -1,6 +1,7 @@
-package com.github.Doomsdayrs.apps.shosetsu.fragment.novel;
+package com.github.doomsdayrs.apps.shosetsu.fragment.novel;
 
 import android.os.AsyncTask;
+import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.v7.app.AppCompatActivity;
@@ -17,15 +18,17 @@ import android.widget.TextView;
 
 import com.github.Doomsdayrs.api.novelreader_core.main.DefaultScrapers;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.database.Database;
-import com.github.Doomsdayrs.apps.shosetsu.settings.Settings;
-import com.github.Doomsdayrs.apps.shosetsu.settings.SettingsController;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.database.Database;
+import com.github.doomsdayrs.apps.shosetsu.settings.Settings;
+import com.github.doomsdayrs.apps.shosetsu.settings.SettingsController;
 
+import org.jetbrains.annotations.NotNull;
 import org.json.JSONException;
 import org.json.JSONObject;
 
 import java.io.IOException;
+import java.util.Objects;
 import java.util.concurrent.ExecutionException;
 
 /**
@@ -47,19 +50,18 @@ import java.util.concurrent.ExecutionException;
  * @author github.com/doomsdayrs
  */
 public class NovelFragmentChapterView extends AppCompatActivity {
-    Toolbar toolbar;
-    ScrollView scrollView;
-    TextView textView;
-    Formatter formatter;
-    String URL;
-    String novelURL;
-    String text;
+    private ScrollView scrollView;
+    private TextView textView;
+    private Formatter formatter;
+    private String URL;
+    private String novelURL;
+    private String text;
 
-    MenuItem bookmark;
+    private MenuItem bookmark;
 
 
-    int a = 0;
-    boolean bookmarked;
+    private int a = 0;
+    private boolean bookmarked;
 
     @Override
     protected void onSaveInstanceState(Bundle outState) {
@@ -89,7 +91,7 @@ public class NovelFragmentChapterView extends AppCompatActivity {
         return true;
     }
 
-    public void setThemeMode() {
+    private void setThemeMode() {
         scrollView.setBackgroundColor(Settings.ReaderTextBackgroundColor);
         textView.setBackgroundColor(Settings.ReaderTextBackgroundColor);
         textView.setTextColor(Settings.ReaderTextColor);
@@ -97,9 +99,7 @@ public class NovelFragmentChapterView extends AppCompatActivity {
 
 
     @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        if (item == null)
-            return false;
+    public boolean onOptionsItemSelected(@NotNull MenuItem item) {
         Log.d("item", item.toString());
         switch (item.getItemId()) {
             case R.id.chapter_view_nightMode: {
@@ -140,28 +140,46 @@ public class NovelFragmentChapterView extends AppCompatActivity {
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        Log.d("OnCreate", "NovelFragmentChapterView");
         setContentView(R.layout.fragment_novel_chapter_view);
         {
             novelURL = getIntent().getStringExtra("novelURL");
-            toolbar = findViewById(R.id.toolbar);
+            Toolbar toolbar = findViewById(R.id.toolbar);
             setSupportActionBar(toolbar);
             //getSupportActionBar().setDisplayHomeAsUpEnabled(true);
             formatter = DefaultScrapers.formatters.get(getIntent().getIntExtra("formatter", -1) - 1);
             scrollView = findViewById(R.id.fragment_novel_scroll);
-            scrollView.setOnScrollChangeListener((v, scrollX, scrollY, oldScrollX, oldScrollY) -> {
-                if (bookmarked)
-                    if (a % 5 == 0) {
-                        int y = scrollView.getScrollY();
-                        JSONObject jsonObject = new JSONObject();
-                        Log.d("ScrollSave", Integer.toString(y));
-                        try {
-                            jsonObject.put("y", y);
-                            SettingsController.setScroll(URL, jsonObject);
-                        } catch (JSONException e) {
-                            e.printStackTrace();
-                        }
-                    } else a++;
-            });
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+                scrollView.setOnScrollChangeListener((v, scrollX, scrollY, oldScrollX, oldScrollY) -> {
+                    if (bookmarked)
+                        if (a % 5 == 0) {
+                            int y = scrollView.getScrollY();
+                            JSONObject jsonObject = new JSONObject();
+                            Log.d("ScrollSave", Integer.toString(y));
+                            try {
+                                jsonObject.put("y", y);
+                                SettingsController.setScroll(URL, jsonObject);
+                            } catch (JSONException e) {
+                                e.printStackTrace();
+                            }
+                        } else a++;
+                });
+            } else {
+                scrollView.getViewTreeObserver().addOnScrollChangedListener(() -> {
+                    if (bookmarked)
+                        if (a % 5 == 0) {
+                            int y = scrollView.getScrollY();
+                            JSONObject jsonObject = new JSONObject();
+                            Log.d("ScrollSave", Integer.toString(y));
+                            try {
+                                jsonObject.put("y", y);
+                                SettingsController.setScroll(URL, jsonObject);
+                            } catch (JSONException e) {
+                                e.printStackTrace();
+                            }
+                        } else a++;
+                });
+            }
             textView = findViewById(R.id.fragment_novel_chapter_view_text);
             textView.setOnClickListener(new click(toolbar));
         }
@@ -173,10 +191,10 @@ public class NovelFragmentChapterView extends AppCompatActivity {
             formatter = DefaultScrapers.formatters.get(savedInstanceState.getInt("formatter") - 1);
             text = savedInstanceState.getString("text");
         } else URL = getIntent().getStringExtra("url");
-        Log.d("URL", URL);
+        Log.d("URL", Objects.requireNonNull(URL));
 
         if (getIntent().getBooleanExtra("downloaded", false))
-            text = Database.getSaved(novelURL, URL).replaceAll("\n", "\n\n");
+            text = Objects.requireNonNull(Database.getSaved(novelURL, URL)).replaceAll("\n", "\n\n");
         else if (text == null)
             if (URL != null) {
                 try {
@@ -193,7 +211,7 @@ public class NovelFragmentChapterView extends AppCompatActivity {
 
 
     static class click implements View.OnClickListener {
-        Toolbar toolbar;
+        final Toolbar toolbar;
         boolean visible = true;
 
 
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentChapters.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentChapters.java
similarity index 88%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentChapters.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentChapters.java
index 69fed44ab..f32daa375 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentChapters.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentChapters.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.fragment.novel;
+package com.github.doomsdayrs.apps.shosetsu.fragment.novel;
 
 import android.content.Context;
 import android.os.Bundle;
@@ -21,9 +21,9 @@ import com.github.Doomsdayrs.api.novelreader_core.main.DefaultScrapers;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.objects.NovelChapter;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.objects.NovelPage;
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.adapters.novel.NovelChaptersAdapter;
-import com.github.Doomsdayrs.apps.shosetsu.async.NovelChaptersLoader;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.adapters.novel.NovelChaptersAdapter;
+import com.github.doomsdayrs.apps.shosetsu.async.NovelChaptersLoader;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -50,11 +50,10 @@ import java.util.Objects;
  */
 public class NovelFragmentChapters extends Fragment {
     public static List<NovelChapter> novelChapters = new ArrayList<>();
-    public boolean reversed;
+    private boolean reversed;
     public RecyclerView recyclerView;
-    public int currentMaxPage = 1;
+    private int currentMaxPage = 1;
     public Formatter formatter;
-    public NovelPage novelPage;
     public String novelURL;
     private FragmentManager fragmentManager;
     public NovelChaptersAdapter adapter;
@@ -88,7 +87,7 @@ public class NovelFragmentChapters extends Fragment {
     @Nullable
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        Log.d("OnCreate", "NovelFragmentChapters");
+        Log.d("OnCreateView", "NovelFragmentChapters");
         View view = inflater.inflate(R.layout.fragment_novel_chapters, container, false);
         recyclerView = view.findViewById(R.id.fragment_novel_chapters_recycler);
         progressBar = view.findViewById(R.id.fragment_novel_chapters_progress);
@@ -99,7 +98,6 @@ public class NovelFragmentChapters extends Fragment {
         }
         setNovels(novelChapters);
         this.context = Objects.requireNonNull(container).getContext();
-        Log.d("OnCreate", "Complete");
         return view;
     }
 
@@ -120,7 +118,7 @@ public class NovelFragmentChapters extends Fragment {
     }
 
     static class onFilter implements MenuItem.OnMenuItemClickListener {
-        NovelFragmentChapters novelFragmentChapters;
+        final NovelFragmentChapters novelFragmentChapters;
 
         onFilter(NovelFragmentChapters novelFragmentChapters) {
             this.novelFragmentChapters = novelFragmentChapters;
@@ -128,7 +126,7 @@ public class NovelFragmentChapters extends Fragment {
 
         @Override
         public boolean onMenuItemClick(MenuItem item) {
-            Collections.reverse(novelFragmentChapters.novelChapters);
+            Collections.reverse(novelChapters);
             novelFragmentChapters.reversed = true;
             return novelFragmentChapters.recyclerView.post(() -> novelFragmentChapters.adapter.notifyDataSetChanged());
         }
@@ -136,7 +134,7 @@ public class NovelFragmentChapters extends Fragment {
 
 
     static class bottom extends RecyclerView.OnScrollListener {
-        NovelFragmentChapters novelFragmentChapters;
+        final NovelFragmentChapters novelFragmentChapters;
         boolean running = false;
 
         bottom(NovelFragmentChapters novelFragmentChapters) {
@@ -150,14 +148,14 @@ public class NovelFragmentChapters extends Fragment {
                 if (!novelFragmentChapters.recyclerView.canScrollVertically(1)) {
                     Log.d("ScrollLoad", "Loading...");
                     if (novelFragmentChapters.reversed)
-                        Collections.reverse(novelFragmentChapters.novelChapters);
+                        Collections.reverse(novelChapters);
                     running = true;
                     novelFragmentChapters.currentMaxPage++;
                     new NovelChaptersLoader(novelFragmentChapters).execute(novelFragmentChapters.currentMaxPage);
                     Log.d("ScrollLoad", "Completed.");
                     running = false;
                     if (novelFragmentChapters.reversed)
-                        Collections.reverse(novelFragmentChapters.novelChapters);
+                        Collections.reverse(novelChapters);
                 }
         }
     }
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentMain.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentMain.java
similarity index 81%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentMain.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentMain.java
index 1a265e834..f84e2ee7e 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentMain.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentMain.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.fragment.novel;
+package com.github.doomsdayrs.apps.shosetsu.fragment.novel;
 
 import android.os.Bundle;
 import android.support.annotation.NonNull;
@@ -17,8 +17,8 @@ import com.github.Doomsdayrs.api.novelreader_core.main.DefaultScrapers;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.objects.NovelChapter;
 import com.github.Doomsdayrs.api.novelreader_core.services.core.objects.NovelPage;
-import com.github.Doomsdayrs.apps.shosetsu.R;
-import com.github.Doomsdayrs.apps.shosetsu.database.Database;
+import com.github.doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.database.Database;
 import com.squareup.picasso.Picasso;
 
 import org.json.JSONArray;
@@ -48,22 +48,20 @@ import java.util.Arrays;
 public class NovelFragmentMain extends Fragment {
     public Formatter formatter;
     public String url;
-    public NovelPage novelPage;
-    ImageView imageView;
-    TextView title;
-    TextView author;
-    TextView description;
-    TextView formatterName;
-    public FloatingActionButton floatingActionButton;
-    public NovelFragmentChapters novelFragmentChapters;
+    private ImageView imageView;
+    private TextView title;
+    private TextView author;
+    private TextView description;
+    private TextView formatterName;
+    private FloatingActionButton floatingActionButton;
 
-    boolean inLibrary = false;
+    private boolean inLibrary = false;
 
     public NovelFragmentMain() {
         setHasOptionsMenu(true);
     }
 
-    public void inLibary() {
+    private void inLibrary() {
         this.inLibrary = true;
     }
 
@@ -73,13 +71,12 @@ public class NovelFragmentMain extends Fragment {
         Log.d("Saving Instance State", "NovelFragmentMain");
         outState.putString("imageURL", url);
         outState.putInt("formatter", formatter.getID());
-        outState.putSerializable("page", novelPage);
     }
 
     @Nullable
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        Log.d("OnCreate", "NovelFragmentMain");
+        Log.d("OnCreateView", "NovelFragmentMain");
         View view = inflater.inflate(R.layout.fragment_novel_main, container, false);
         {
             imageView = view.findViewById(R.id.fragment_novel_image);
@@ -95,39 +92,36 @@ public class NovelFragmentMain extends Fragment {
         if (savedInstanceState != null) {
             url = savedInstanceState.getString("imageURL");
             formatter = DefaultScrapers.formatters.get(savedInstanceState.getInt("formatter") - 1);
-            novelPage = (NovelPage) savedInstanceState.getSerializable("page");
         }
 
 
         if (Database.inLibrary(url))
-            inLibary();
+            inLibrary();
 
         if (inLibrary)
             floatingActionButton.setImageResource(R.drawable.ic_add_circle_black_24dp);
 
-        if (novelPage != null)
+        if (StaticNovel.novelPage != null)
             setData();
-
-        Log.d("OnCreate", "NovelFragmentMain Complete");
         return view;
     }
 
     public void setData() {
-        title.setText(novelPage.title);
-        author.setText(Arrays.toString(novelPage.authors));
-        description.setText(novelPage.description);
-        NovelFragmentChapters.novelChapters = novelPage.novelChapters;
+        title.setText(StaticNovel.novelPage.title);
+        author.setText(Arrays.toString(StaticNovel.novelPage.authors));
+        description.setText(StaticNovel.novelPage.description);
+        NovelFragmentChapters.novelChapters =StaticNovel. novelPage.novelChapters;
         Picasso.get()
-                .load(novelPage.imageURL)
+                .load(StaticNovel.novelPage.imageURL)
                 .into(imageView);
         floatingActionButton.show();
         formatterName.setText(formatter.getName());
     }
 
     static class addToLibrary implements FloatingActionButton.OnClickListener {
-        NovelFragmentMain novelFragmentMain;
+        final NovelFragmentMain novelFragmentMain;
 
-        public addToLibrary(NovelFragmentMain novelFragmentMain) {
+        addToLibrary(NovelFragmentMain novelFragmentMain) {
             this.novelFragmentMain = novelFragmentMain;
         }
 
@@ -151,7 +145,7 @@ public class NovelFragmentMain extends Fragment {
                     e.printStackTrace();
                 }
 
-                if (Database.addToLibrary(novelFragmentMain.formatter.getID(), novelFragmentMain.novelPage, novelFragmentMain.url, savedData)) {
+                if (Database.addToLibrary(novelFragmentMain.formatter.getID(), StaticNovel.novelPage, novelFragmentMain.url, savedData)) {
                     novelFragmentMain.inLibrary = true;
                     novelFragmentMain.floatingActionButton.setImageResource(R.drawable.ic_add_circle_black_24dp);
                 } else
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentTracking.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentTracking.java
similarity index 89%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentTracking.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentTracking.java
index 1f9755332..909154d50 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentTracking.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/NovelFragmentTracking.java
@@ -1,10 +1,10 @@
-package com.github.Doomsdayrs.apps.shosetsu.fragment.novel;
+package com.github.doomsdayrs.apps.shosetsu.fragment.novel;
 
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentManager;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -27,13 +27,13 @@ import android.view.ViewGroup;
  *
  * @author github.com/doomsdayrs
  */
+@SuppressWarnings("unused")
 public class NovelFragmentTracking extends Fragment {
 
-
-
     @Nullable
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        Log.d("OnCreateView", "OnCreateView");
         return super.onCreateView(inflater, container, savedInstanceState);
     }
 
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/novel/ChapterCard.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/StaticNovel.java
similarity index 68%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/novel/ChapterCard.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/StaticNovel.java
index a556f376a..acce84428 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/novel/ChapterCard.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/fragment/novel/StaticNovel.java
@@ -1,4 +1,6 @@
-package com.github.Doomsdayrs.apps.shosetsu.recycleObjects.novel;
+package com.github.doomsdayrs.apps.shosetsu.fragment.novel;
+
+import com.github.Doomsdayrs.api.novelreader_core.services.core.objects.NovelPage;
 
 /**
  * This file is part of Shosetsu.
@@ -14,18 +16,10 @@ package com.github.Doomsdayrs.apps.shosetsu.recycleObjects.novel;
  * along with Shosetsu.  If not, see https://www.gnu.org/licenses/ .
  * ====================================================================
  * Shosetsu
- * 9 / June / 2019
+ * 18 / 06 / 2019
  *
  * @author github.com/doomsdayrs
  */
-public class ChapterCard {
-    private final String name;
-    private final String chapter;
-    private final String URL;
-
-    public ChapterCard(String name, String chapter, String url) {
-        this.name = name;
-        this.chapter = chapter;
-        URL = url;
-    }
+public class StaticNovel {
+    public static NovelPage novelPage;
 }
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/CatalogueCard.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/CatalogueCard.java
similarity index 91%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/CatalogueCard.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/CatalogueCard.java
index 7c8d9e0aa..9c79db765 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/CatalogueCard.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/CatalogueCard.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.recycleObjects;
+package com.github.doomsdayrs.apps.shosetsu.recycleObjects;
 
 import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
 
@@ -21,7 +21,7 @@ import com.github.Doomsdayrs.api.novelreader_core.services.core.dep.Formatter;
  * @author github.com/doomsdayrs
  */
 public class CatalogueCard extends RecycleCard {
-    public Formatter formatter;
+    public final Formatter formatter;
 
     public CatalogueCard(Formatter formatter) {
         super(formatter.getName());
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/CatalogueNovelCard.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/CatalogueNovelCard.java
similarity index 77%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/CatalogueNovelCard.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/CatalogueNovelCard.java
index 31e24d9bd..3e25a56b4 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/CatalogueNovelCard.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/CatalogueNovelCard.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.recycleObjects;
+package com.github.doomsdayrs.apps.shosetsu.recycleObjects;
 
 import java.net.URI;
 
@@ -21,9 +21,9 @@ import java.net.URI;
  * @author github.com/doomsdayrs
  */
 public class CatalogueNovelCard {
-    public String libraryImageResource;
-    public String title;
-    public String URL;
+    public final String libraryImageResource;
+    public final String title;
+    public final String URL;
 
     public CatalogueNovelCard(String libraryImageResource, String title, URI URL) {
         this.libraryImageResource = libraryImageResource;
@@ -31,9 +31,4 @@ public class CatalogueNovelCard {
         this.URL = URL.getPath();
     }
 
-    public CatalogueNovelCard(String title, URI URL) {
-        this.libraryImageResource = null;
-        this.title = title;
-        this.URL = URL.getPath();
-    }
 }
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/NovelCard.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/NovelCard.java
similarity index 84%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/NovelCard.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/NovelCard.java
index ee94f7b93..3665943a1 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/NovelCard.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/NovelCard.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.recycleObjects;
+package com.github.doomsdayrs.apps.shosetsu.recycleObjects;
 
 /**
  * This file is part of Shosetsu.
@@ -19,10 +19,10 @@ package com.github.Doomsdayrs.apps.shosetsu.recycleObjects;
  * @author github.com/doomsdayrs
  */
 public class NovelCard {
-    public String title;
-    public String novelURL;
-    public String imageURL;
-    public int formatterID;
+    public final String title;
+    public final String novelURL;
+    public final String imageURL;
+    public final int formatterID;
 
     public NovelCard(String title, String novelURL, String imageURL, int formatterID) {
         this.title = title;
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/RecycleCard.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/RecycleCard.java
similarity index 70%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/RecycleCard.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/RecycleCard.java
index 57274162a..ba022a17c 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/RecycleCard.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/RecycleCard.java
@@ -1,6 +1,6 @@
-package com.github.Doomsdayrs.apps.shosetsu.recycleObjects;
+package com.github.doomsdayrs.apps.shosetsu.recycleObjects;
 
-import com.github.Doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.R;
 
 /**
  * This file is part of Shosetsu.
@@ -21,15 +21,10 @@ import com.github.Doomsdayrs.apps.shosetsu.R;
  * @author github.com/doomsdayrs
  */
 public class RecycleCard {
-    public int libraryImageResource;
-    public String libraryText;
+    public final int libraryImageResource;
+    public final String libraryText;
 
-    public RecycleCard(int libraryImageResource, String libraryText) {
-        this.libraryImageResource = libraryImageResource;
-        this.libraryText = libraryText;
-    }
-
-    public RecycleCard(String libraryText) {
+    RecycleCard(String libraryText) {
         this.libraryImageResource = R.drawable.ic_close_black_24dp;
         this.libraryText = libraryText;
     }
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/SettingsCard.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/SettingsCard.java
similarity index 86%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/SettingsCard.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/SettingsCard.java
index 543975bfc..350efaa01 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/recycleObjects/SettingsCard.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/recycleObjects/SettingsCard.java
@@ -1,7 +1,7 @@
-package com.github.Doomsdayrs.apps.shosetsu.recycleObjects;
+package com.github.doomsdayrs.apps.shosetsu.recycleObjects;
 
 
-import com.github.Doomsdayrs.apps.shosetsu.enums.Types;
+import com.github.doomsdayrs.apps.shosetsu.enums.Types;
 
 /**
  * This file is part of Shosetsu.
@@ -23,7 +23,7 @@ import com.github.Doomsdayrs.apps.shosetsu.enums.Types;
  */
 public class SettingsCard {
 
-    public Types ID;
+    public final Types ID;
 
     public SettingsCard(Types ID) {
         this.ID = ID;
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/settings/Settings.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/settings/Settings.java
similarity index 92%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/settings/Settings.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/settings/Settings.java
index 99880c572..0226fbdbd 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/settings/Settings.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/settings/Settings.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.settings;
+package com.github.doomsdayrs.apps.shosetsu.settings;
 
 import android.graphics.Color;
 import android.net.ConnectivityManager;
@@ -22,6 +22,7 @@ import android.net.ConnectivityManager;
  * @author github.com/doomsdayrs
  */
 public class Settings {
+    @SuppressWarnings("unused")
     public static float ReaderTextSize = 1;
     public static int ReaderTextColor = Color.BLACK;
     public static int ReaderTextBackgroundColor = Color.WHITE;
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/settings/SettingsController.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/settings/SettingsController.java
similarity index 92%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/settings/SettingsController.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/settings/SettingsController.java
index 48b889798..a789b5a2a 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/settings/SettingsController.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/settings/SettingsController.java
@@ -1,12 +1,11 @@
-package com.github.Doomsdayrs.apps.shosetsu.settings;
+package com.github.doomsdayrs.apps.shosetsu.settings;
 
 import android.content.SharedPreferences;
 import android.graphics.Color;
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
 
-import com.github.Doomsdayrs.apps.shosetsu.database.Database;
-import com.github.Doomsdayrs.apps.shosetsu.fragment.novel.NovelFragmentChapters;
+import com.github.doomsdayrs.apps.shosetsu.database.Database;
 
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -96,7 +95,8 @@ public class SettingsController {
         if (isBookMarked(chapterURL)) {
             return !Database.removeBookMarked(chapterURL);
         } else {
-            return Database.addBookMark(chapterURL, saveData);
+            Database.addBookMark(chapterURL, saveData);
+            return true;
         }
     }
 
@@ -104,10 +104,12 @@ public class SettingsController {
         Database.updateBookMark(chapterURL, saveData);
     }
 
+    @SuppressWarnings({"EmptyMethod", "unused"})
     public static boolean isTrackingEnabled() {
         return tracking.getBoolean("enabled", false);
     }
 
+    @SuppressWarnings({"EmptyMethod", "unused"})
     public static void addTracker() {
     }
 }
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/tracking/Anilist.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/tracking/Anilist.java
similarity index 78%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/tracking/Anilist.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/tracking/Anilist.java
index faa560ffc..9cc4aa283 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/tracking/Anilist.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/tracking/Anilist.java
@@ -1,4 +1,4 @@
-package com.github.Doomsdayrs.apps.shosetsu.tracking;
+package com.github.doomsdayrs.apps.shosetsu.tracking;
 
 /**
  * This file is part of Shosetsu.
@@ -19,12 +19,16 @@ package com.github.Doomsdayrs.apps.shosetsu.tracking;
  * @author github.com/doomsdayrs
  */
 //TODO add this shit
-public class Anilist {
+
+@SuppressWarnings({"EmptyMethod", "unused"})
+class Anilist {
+    @SuppressWarnings("EmptyMethod")
     public static void main(String[] args) {
 
     }
 
-    void auth(String username,String password){
+    @SuppressWarnings("EmptyMethod")
+    void auth(String username, String password){
 
     }
 }
diff --git a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/tracking/Trackers.java b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/tracking/Trackers.java
similarity index 79%
rename from app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/tracking/Trackers.java
rename to app/src/main/java/com/github/doomsdayrs/apps/shosetsu/tracking/Trackers.java
index b556df632..5df3717ca 100644
--- a/app/src/main/java/com/github/Doomsdayrs/apps/shosetsu/tracking/Trackers.java
+++ b/app/src/main/java/com/github/doomsdayrs/apps/shosetsu/tracking/Trackers.java
@@ -1,8 +1,8 @@
-package com.github.Doomsdayrs.apps.shosetsu.tracking;
+package com.github.doomsdayrs.apps.shosetsu.tracking;
 
 import android.content.res.Resources;
 
-import com.github.Doomsdayrs.apps.shosetsu.R;
+import com.github.doomsdayrs.apps.shosetsu.R;
 
 /**
  * This file is part of Shosetsu.
@@ -22,17 +22,19 @@ import com.github.Doomsdayrs.apps.shosetsu.R;
  *
  * @author github.com/doomsdayrs
  */
+@SuppressWarnings("unused")
 public enum Trackers {
-    ANILIST(getString(R.string.anilist), 1);
-    final String name;
-    final int id;
+    ANILIST(getString(R.string.anilist), 1),
+    MYANIMELIST(getString(R.string.myanimelist), 2);
+    private final String name;
+    private final int id;
 
     Trackers(String name, int id) {
         this.name = name;
         this.id = id;
     }
 
-    static String getString(int id) {
+    private static String getString(int id) {
         return Resources.getSystem().getString(id);
     }
 
diff --git a/app/src/test/java/com/github/Doomsdayrs/apps/shosetsu/ExampleUnitTest.java b/app/src/test/java/com/github/doomsdayrs/apps/shosetsu/ExampleUnitTest.java
similarity index 77%
rename from app/src/test/java/com/github/Doomsdayrs/apps/shosetsu/ExampleUnitTest.java
rename to app/src/test/java/com/github/doomsdayrs/apps/shosetsu/ExampleUnitTest.java
index c2739fabd..b47555ad2 100644
--- a/app/src/test/java/com/github/Doomsdayrs/apps/shosetsu/ExampleUnitTest.java
+++ b/app/src/test/java/com/github/doomsdayrs/apps/shosetsu/ExampleUnitTest.java
@@ -1,8 +1,8 @@
-package com.github.Doomsdayrs.apps.shosetsu;
+package com.github.doomsdayrs.apps.shosetsu;
 
 import org.junit.Test;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
 
 /**
  * Example local unit test, which will execute on the development machine (host).
