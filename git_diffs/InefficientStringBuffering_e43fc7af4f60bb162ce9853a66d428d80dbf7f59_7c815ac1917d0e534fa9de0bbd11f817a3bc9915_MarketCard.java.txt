diff --git a/app/src/main/java/com/example/honza/aeonsend/GeneratedSetupActivity.java b/app/src/main/java/com/example/honza/aeonsend/GeneratedSetupActivity.java
index 86c04ec..d0c2451 100644
--- a/app/src/main/java/com/example/honza/aeonsend/GeneratedSetupActivity.java
+++ b/app/src/main/java/com/example/honza/aeonsend/GeneratedSetupActivity.java
@@ -24,7 +24,7 @@ public class GeneratedSetupActivity extends AppCompatActivity implements TabLayo
     private ViewPager viewPager;
 
     @Override
-    public void onCreate(@Nullable Bundle savedInstanceState) {
+    public void onCreate(@Nullable final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.generated_setup);
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_setup);
diff --git a/app/src/main/java/com/example/honza/aeonsend/MainActivity.java b/app/src/main/java/com/example/honza/aeonsend/MainActivity.java
index 9c61735..7ee4312 100644
--- a/app/src/main/java/com/example/honza/aeonsend/MainActivity.java
+++ b/app/src/main/java/com/example/honza/aeonsend/MainActivity.java
@@ -20,7 +20,7 @@ import com.example.honza.aeonsend.adapter.MarketGridViewAdapter;
 import com.example.honza.aeonsend.adapter.MarketListViewAdapter;
 import com.example.honza.aeonsend.cards.Card;
 import com.example.honza.aeonsend.database.DatabaseHandler;
-import com.example.honza.aeonsend.database.MarketCardList;
+import com.example.honza.aeonsend.database.MarketSetupCardList;
 import com.example.honza.aeonsend.enums.CardType;
 
 public class MainActivity extends AppCompatActivity  {
@@ -171,11 +171,11 @@ public class MainActivity extends AppCompatActivity  {
     private void setAdapter() {
         switch (currentViewMode) {
             case VIEW_MODE_LISTVIEW:
-                marketListViewAdapter = new MarketListViewAdapter(this, MarketCardList.getMarketCards());
+                marketListViewAdapter = new MarketListViewAdapter(this, MarketSetupCardList.getMarketSetupCards());
                 listView.setAdapter(marketListViewAdapter);
                 break;
             case VIEW_MODE_GRIDVIEW:
-                marketGridViewAdapter = new MarketGridViewAdapter(this, MarketCardList.getMarketCards());
+                marketGridViewAdapter = new MarketGridViewAdapter(this, MarketSetupCardList.getMarketSetupCards());
                 gridView.setAdapter(marketGridViewAdapter);
                 break;
         }
diff --git a/app/src/main/java/com/example/honza/aeonsend/Pager.java b/app/src/main/java/com/example/honza/aeonsend/Pager.java
index 6951ca7..7590158 100644
--- a/app/src/main/java/com/example/honza/aeonsend/Pager.java
+++ b/app/src/main/java/com/example/honza/aeonsend/Pager.java
@@ -2,6 +2,7 @@ package com.example.honza.aeonsend;
 
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentPagerAdapter;
 import android.support.v4.app.FragmentStatePagerAdapter;
 
 import com.example.honza.aeonsend.fragments.CharactersFragment;
diff --git a/app/src/main/java/com/example/honza/aeonsend/adapter/MarketGridViewAdapter.java b/app/src/main/java/com/example/honza/aeonsend/adapter/MarketGridViewAdapter.java
index a847f01..ddefb07 100644
--- a/app/src/main/java/com/example/honza/aeonsend/adapter/MarketGridViewAdapter.java
+++ b/app/src/main/java/com/example/honza/aeonsend/adapter/MarketGridViewAdapter.java
@@ -10,8 +10,8 @@ import android.widget.ImageView;
 import android.widget.TextView;
 
 import com.example.honza.aeonsend.R;
-import com.example.honza.aeonsend.cards.MarketCard;
-import com.example.honza.aeonsend.database.MarketCardList;
+import com.example.honza.aeonsend.cards.MarketSetupCard;
+import com.example.honza.aeonsend.database.MarketSetupCardList;
 
 /**
  * Created by honza on 14.9.17.
@@ -20,16 +20,16 @@ import com.example.honza.aeonsend.database.MarketCardList;
 public class MarketGridViewAdapter extends BaseAdapter {
 
     private final Context mContext;
-    private final MarketCard[] marketCards;
+    private final MarketSetupCard[] marketSetupCards;
 
-    public MarketGridViewAdapter(Context mContext, MarketCard[] marketCards) {
+    public MarketGridViewAdapter(Context mContext, MarketSetupCard[] marketSetupCards) {
         this.mContext = mContext;
-        this.marketCards = marketCards;
+        this.marketSetupCards = marketSetupCards;
     }
 
     @Override
     public int getCount() {
-        return MarketCardList.getMarketCards().length;
+        return MarketSetupCardList.getMarketSetupCards().length;
     }
 
     @Override
@@ -46,18 +46,18 @@ public class MarketGridViewAdapter extends BaseAdapter {
 
     @Override
     public View getView(int position, View view, ViewGroup viewGroup) {
-        final MarketCard marketCard = marketCards[position];
+        final MarketSetupCard marketSetupCard = marketSetupCards[position];
 
         if (view == null) {
             final LayoutInflater layoutInflater = LayoutInflater.from(mContext);
-            view = layoutInflater.inflate(R.layout.grid_item_market_card, null);
+            view = layoutInflater.inflate(R.layout.grid_item_marketsetup_card, null);
         }
 
         final ImageView imageView = view.findViewById(R.id.grid_market_setup_image);
         final TextView textView = view.findViewById(R.id.grid_market_setup_text);
 
-        imageView.setImageResource(marketCard.getImage());
-        textView.setText(marketCard.getName());
+        imageView.setImageResource(marketSetupCard.getImage());
+        textView.setText(marketSetupCard.getName());
 
         return view;
     }
diff --git a/app/src/main/java/com/example/honza/aeonsend/adapter/MarketListViewAdapter.java b/app/src/main/java/com/example/honza/aeonsend/adapter/MarketListViewAdapter.java
index e69b886..7f76234 100644
--- a/app/src/main/java/com/example/honza/aeonsend/adapter/MarketListViewAdapter.java
+++ b/app/src/main/java/com/example/honza/aeonsend/adapter/MarketListViewAdapter.java
@@ -11,8 +11,8 @@ import android.widget.ImageView;
 import android.widget.TextView;
 
 import com.example.honza.aeonsend.R;
-import com.example.honza.aeonsend.cards.MarketCard;
-import com.example.honza.aeonsend.database.MarketCardList;
+import com.example.honza.aeonsend.cards.MarketSetupCard;
+import com.example.honza.aeonsend.database.MarketSetupCardList;
 
 /**
  * Created by honza on 14.9.17.
@@ -21,16 +21,16 @@ import com.example.honza.aeonsend.database.MarketCardList;
 public class MarketListViewAdapter extends BaseAdapter {
 
     private final Context mContext;
-    private final MarketCard[] marketCards;
+    private final MarketSetupCard[] marketSetupCards;
 
-    public MarketListViewAdapter(Context mContext, MarketCard[] marketCards) {
+    public MarketListViewAdapter(Context mContext, MarketSetupCard[] marketSetupCards) {
         this.mContext = mContext;
-        this.marketCards = marketCards;
+        this.marketSetupCards = marketSetupCards;
     }
 
     @Override
     public int getCount() {
-        return MarketCardList.getMarketCards().length;
+        return MarketSetupCardList.getMarketSetupCards().length;
     }
 
     @Override
@@ -47,7 +47,7 @@ public class MarketListViewAdapter extends BaseAdapter {
 
     @Override
     public View getView(int position, View convertView, ViewGroup parent) {
-        final MarketCard marketCard = marketCards[position];
+        final MarketSetupCard marketSetupCard = marketSetupCards[position];
 
         if (convertView == null) {
             final LayoutInflater layoutInflater = LayoutInflater.from(mContext);
@@ -61,14 +61,14 @@ public class MarketListViewAdapter extends BaseAdapter {
         final TextView textSpellDistribution = convertView.findViewById(R.id.textSpellCardDistribution);
 
 
-        imageView.setImageResource(marketCard.getImage());
+        imageView.setImageResource(marketSetupCard.getImage());
         imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);
-        textMarketSetupName.setText(marketCard.getName());
+        textMarketSetupName.setText(marketSetupCard.getName());
         textMarketSetupName.setAllCaps(true);
         textMarketSetupName.setTypeface(null, Typeface.BOLD);
-        textGemDistribution.setText("Gems: " + MarketCard.toStringPriceRange(MarketCard.mapPriceRangeFromArray(marketCard.getGemsPriceList())));
-        textRelicDistribution.setText("Relics: " + MarketCard.toStringPriceRange(MarketCard.mapPriceRangeFromArray(marketCard.getRelicsPriceList())));
-        textSpellDistribution.setText("Spells: " + MarketCard.toStringPriceRange(MarketCard.mapPriceRangeFromArray(marketCard.getSpellsPriceList())));
+        textGemDistribution.setText("Gems: " + MarketSetupCard.toStringPriceRange(MarketSetupCard.mapPriceRangeFromArray(marketSetupCard.getGemsPriceList())));
+        textRelicDistribution.setText("Relics: " + MarketSetupCard.toStringPriceRange(MarketSetupCard.mapPriceRangeFromArray(marketSetupCard.getRelicsPriceList())));
+        textSpellDistribution.setText("Spells: " + MarketSetupCard.toStringPriceRange(MarketSetupCard.mapPriceRangeFromArray(marketSetupCard.getSpellsPriceList())));
 
         return convertView;
     }
diff --git a/app/src/main/java/com/example/honza/aeonsend/cards/Card.java b/app/src/main/java/com/example/honza/aeonsend/cards/Card.java
index b59b5e8..07ae514 100644
--- a/app/src/main/java/com/example/honza/aeonsend/cards/Card.java
+++ b/app/src/main/java/com/example/honza/aeonsend/cards/Card.java
@@ -7,16 +7,18 @@ import com.example.honza.aeonsend.enums.Expansion;
 import com.example.honza.aeonsend.enums.PriceRange;
 import com.example.honza.aeonsend.enums.TableColumns;
 
+import java.io.Serializable;
+
 /**
  * Created by honza on 3.9.17.
  */
 
-public class Card {
-    private int id;
-    private String name;
-    private CardType type;
-    private String picture;
-    private Expansion expansion;
+public class Card implements Serializable{
+    protected int id;
+    protected String name;
+    protected CardType type;
+    protected String picture;
+    protected Expansion expansion;
 
     public Card(int id, String name, CardType type, String picture, Expansion expansion) {
         this.id = id;
diff --git a/app/src/main/java/com/example/honza/aeonsend/cards/MarketCard.java b/app/src/main/java/com/example/honza/aeonsend/cards/MarketSetupCard.java
similarity index 91%
rename from app/src/main/java/com/example/honza/aeonsend/cards/MarketCard.java
rename to app/src/main/java/com/example/honza/aeonsend/cards/MarketSetupCard.java
index c52d57c..8f732cc 100644
--- a/app/src/main/java/com/example/honza/aeonsend/cards/MarketCard.java
+++ b/app/src/main/java/com/example/honza/aeonsend/cards/MarketSetupCard.java
@@ -12,7 +12,7 @@ import java.util.Map;
  * Created by honza on 14.9.17.
  */
 
-public class MarketCard {
+public class MarketSetupCard {
     private String name;
     private int image;
     private int numberOfGems;
@@ -23,8 +23,8 @@ public class MarketCard {
     private PriceRange[] relicsPriceList;
     private PriceRange[] spellsPriceList;
 
-    public MarketCard(String name, int image, PriceRange[] gemsPriceList,
-                      PriceRange[] relicsPriceList, PriceRange[] spellsPriceList) {
+    public MarketSetupCard(String name, int image, PriceRange[] gemsPriceList,
+                           PriceRange[] relicsPriceList, PriceRange[] spellsPriceList) {
         this.name = name;
         this.image = image;
         this.gemsPriceList = gemsPriceList;
@@ -35,7 +35,7 @@ public class MarketCard {
         this.numberOfSpells = getNumberOfSpells();
 
         if (numberOfGems + numberofRelics + numberOfSpells != 9) {
-            Log.d("CreateMarketCard", "MarketCard: " + name + ", has wrong number of Supply Cards." +
+            Log.d("CreateMarketCard", "MarketSetupCard: " + name + ", has wrong number of Supply Cards." +
                     " Number of provided supply cards is: " + numberOfGems + numberofRelics + numberOfSpells);
         }
     }
diff --git a/app/src/main/java/com/example/honza/aeonsend/cards/NemesisCard.java b/app/src/main/java/com/example/honza/aeonsend/cards/NemesisCard.java
index 64b0a29..72638e6 100644
--- a/app/src/main/java/com/example/honza/aeonsend/cards/NemesisCard.java
+++ b/app/src/main/java/com/example/honza/aeonsend/cards/NemesisCard.java
@@ -4,6 +4,8 @@ import com.example.honza.aeonsend.enums.CardType;
 import com.example.honza.aeonsend.enums.Expansion;
 import com.example.honza.aeonsend.enums.PriceRange;
 
+import java.io.Serializable;
+
 /**
  * Created by honza on 3.9.17.
  */
diff --git a/app/src/main/java/com/example/honza/aeonsend/database/CardList.java b/app/src/main/java/com/example/honza/aeonsend/database/CardList.java
index 816ba75..4da7465 100644
--- a/app/src/main/java/com/example/honza/aeonsend/database/CardList.java
+++ b/app/src/main/java/com/example/honza/aeonsend/database/CardList.java
@@ -32,7 +32,7 @@ public class CardList {
     private static NemesisCard[] nemesisCardList = {
             new NemesisCard("Blight Lord", CardType.NEMESIS, "nemesis_blightlord", Expansion.NAMELESS, "Add an additional supply pile consisting of a number of Tainted Jades equal to the number of players plus four. Place the Tainted Track next to this mat. " +
                     "Place the Blight Lord token on the first space of the Tainted Track."),
-            new NemesisCard("Carapace Queen", CardType.NEMESIS, "nemesis_carapacequeen", Expansion.BASIC, "Place the Husk Track next to this mat, Place two husks into play on thr first two spaces of the Husk Track."),
+            new NemesisCard("Carapace Queen", CardType.NEMESIS, "nemesis_carapacequeen", Expansion.BASIC, "Place the Husk Track next to this mat. Place two husks into play on the first two spaces of the Husk Track."),
             new NemesisCard("Crooked Mask", CardType.NEMESIS, "nemesis_crookedmask", Expansion.BASIC, "Shuffle all of the corruption cards together and place them facedown to form the corruption deck."),
             new NemesisCard("Horde-Crone", CardType.NEMESIS, "nemesis_hordecrone", Expansion.DEPTHS, "Shuffle all of the trogg cards together and place them facedown to form the trogg deck. Draw a card from the trogg deck and place it into play"),
             new NemesisCard("Prince of Gluttons", CardType.NEMESIS, "nemesis_princeofgluttons", Expansion.BASIC, "Place one gem from each gem supply, starting with the most expensive, faceup in a pile next to this mat. This pile is the devoured pile."),
diff --git a/app/src/main/java/com/example/honza/aeonsend/database/MarketCardList.java b/app/src/main/java/com/example/honza/aeonsend/database/MarketSetupCardList.java
similarity index 74%
rename from app/src/main/java/com/example/honza/aeonsend/database/MarketCardList.java
rename to app/src/main/java/com/example/honza/aeonsend/database/MarketSetupCardList.java
index 1912f22..cd933ec 100644
--- a/app/src/main/java/com/example/honza/aeonsend/database/MarketCardList.java
+++ b/app/src/main/java/com/example/honza/aeonsend/database/MarketSetupCardList.java
@@ -1,53 +1,53 @@
 package com.example.honza.aeonsend.database;
 
 import com.example.honza.aeonsend.R;
-import com.example.honza.aeonsend.cards.MarketCard;
+import com.example.honza.aeonsend.cards.MarketSetupCard;
 import com.example.honza.aeonsend.enums.PriceRange;
 
 /**
  * Created by honza on 14.9.17.
  */
 
-public class MarketCardList {
+public class MarketSetupCardList {
 
-    private static MarketCard[] marketCards = {
-            new MarketCard("Random Setup", R.drawable.market_setup_random,
+    private static MarketSetupCard[] marketSetupCards = {
+            new MarketSetupCard("Random Setup", R.drawable.market_setup_random,
                     new PriceRange[]{PriceRange.ANY, PriceRange.ANY, PriceRange.ANY},
                     new PriceRange[]{PriceRange.ANY, PriceRange.ANY},
                     new PriceRange[]{PriceRange.ANY, PriceRange.ANY, PriceRange.ANY, PriceRange.ANY}),
 
-            new MarketCard("Market Setup 1", R.drawable.market_setup_1,
+            new MarketSetupCard("Market Setup 1", R.drawable.market_setup_1,
                     new PriceRange[]{PriceRange.LESSTHANFOUR, PriceRange.FOUR, PriceRange.ANY},
                     new PriceRange[]{PriceRange.ANY, PriceRange.ANY},
                     new PriceRange[]{PriceRange.LESSTHANFIVE, PriceRange.LESSTHANFIVE, PriceRange.MORETHANFIVE, PriceRange.MORETHANFIVE}),
 
-            new MarketCard("Market Setup 2", R.drawable.market_setup_2,
+            new MarketSetupCard("Market Setup 2", R.drawable.market_setup_2,
                     new PriceRange[]{PriceRange.MORETHANTHREE, PriceRange.MORETHANTHREE, PriceRange.MORETHANTHREE},
                     new PriceRange[]{PriceRange.MORETHANFOUR, PriceRange.ANY},
                     new PriceRange[]{PriceRange.LESSTHANSIX, PriceRange.LESSTHANSIX, PriceRange.LESSTHANSIX, PriceRange.MORETHANSIX}),
 
-            new MarketCard("Market Setup 3", R.drawable.market_setup_3,
+            new MarketSetupCard("Market Setup 3", R.drawable.market_setup_3,
                     new PriceRange[]{PriceRange.LESSTHANFOUR, PriceRange.FOURORFIVE, PriceRange.FOURORFIVE},
                     new PriceRange[]{PriceRange.ANY},
                     new PriceRange[]{PriceRange.THREE, PriceRange.FOUR, PriceRange.MORETHANFIVE, PriceRange.MORETHANFIVE, PriceRange.MORETHANFIVE}),
 
-            new MarketCard("Market Setup 4", R.drawable.market_setup_4,
+            new MarketSetupCard("Market Setup 4", R.drawable.market_setup_4,
                     new PriceRange[]{PriceRange.MORETHANFOUR, PriceRange.ANY, PriceRange.ANY},
                     new PriceRange[]{PriceRange.LESSTHANFOUR, PriceRange.MORETHANFOUR, PriceRange.ANY},
                     new PriceRange[]{PriceRange.LESSTHANFIVE, PriceRange.MORETHANFIVE, PriceRange.ANY}),
 
-            new MarketCard("Market Setup 5", R.drawable.market_setup_5,
+            new MarketSetupCard("Market Setup 5", R.drawable.market_setup_5,
                     new PriceRange[]{PriceRange.TWO, PriceRange.THREE, PriceRange.FOUR, PriceRange.FIVE},
                     new PriceRange[]{PriceRange.ANY},
                     new PriceRange[]{PriceRange.FOUR, PriceRange.FIVE, PriceRange.SIX, PriceRange.MORETHANSIX}),
 
-            new MarketCard("Market Setup 6", R.drawable.market_setup_6,
+            new MarketSetupCard("Market Setup 6", R.drawable.market_setup_6,
                     new PriceRange[]{PriceRange.THREE, PriceRange.FOUR},
                     new PriceRange[]{PriceRange.LESSTHANFOUR, PriceRange.MORETHANFOUR, PriceRange.ANY},
                     new PriceRange[]{PriceRange.THREEORFOUR, PriceRange.FIVEORSIX, PriceRange.FIVEORSIX, PriceRange.MORETHANSIX})
     };
 
-    public static MarketCard[] getMarketCards() {
-        return marketCards;
+    public static MarketSetupCard[] getMarketSetupCards() {
+        return marketSetupCards;
     }
 }
diff --git a/app/src/main/java/com/example/honza/aeonsend/fragments/CharactersFragment.java b/app/src/main/java/com/example/honza/aeonsend/fragments/CharactersFragment.java
index 1ed27d4..888ced2 100644
--- a/app/src/main/java/com/example/honza/aeonsend/fragments/CharactersFragment.java
+++ b/app/src/main/java/com/example/honza/aeonsend/fragments/CharactersFragment.java
@@ -2,8 +2,10 @@ package com.example.honza.aeonsend.fragments;
 
 import android.database.sqlite.SQLiteDatabase;
 import android.os.Bundle;
+import android.os.Handler;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
+import android.support.v4.widget.SwipeRefreshLayout;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -13,12 +15,11 @@ import com.example.honza.aeonsend.R;
 import com.example.honza.aeonsend.adapter.GeneratedMarketGridViewAdapter;
 import com.example.honza.aeonsend.cards.Card;
 import com.example.honza.aeonsend.cards.CharacterCard;
-import com.example.honza.aeonsend.cards.NemesisCard;
-import com.example.honza.aeonsend.database.CardList;
 import com.example.honza.aeonsend.database.DatabaseHandler;
 import com.example.honza.aeonsend.enums.CardType;
 import com.example.honza.aeonsend.enums.Expansion;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
@@ -31,10 +32,55 @@ public class CharactersFragment extends Fragment {
 
     private GridView gridView;
     private GeneratedMarketGridViewAdapter generatedMarketGridViewAdapter;
+    private List<Card> characterCards;
+    private SwipeRefreshLayout swipeRefreshLayout;
 
     @Nullable
     @Override
-    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+    public View onCreateView(final LayoutInflater inflater, @Nullable final ViewGroup container, @Nullable final Bundle savedInstanceState) {
+
+        if (savedInstanceState == null) {
+            getCharacterCards();
+        } else {
+            characterCards = (List) savedInstanceState.getSerializable("characterCards");
+        }
+
+        final View view = inflater.inflate(R.layout.characters_fragment, container, false);
+
+        swipeRefreshLayout = (SwipeRefreshLayout) view.findViewById(R.id.character_swiperefresh);
+        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
+            @Override
+            public void onRefresh() {
+                swipeRefreshLayout.setRefreshing(true);
+                (new Handler()).postDelayed(new Runnable() {
+                    @Override
+                    public void run() {
+                        getCharacterCards();
+                        generatedMarketGridViewAdapter = new GeneratedMarketGridViewAdapter(view.getContext(), characterCards);
+                        gridView.invalidateViews();
+                        gridView.setAdapter(generatedMarketGridViewAdapter);
+                        swipeRefreshLayout.setRefreshing(false);
+                    }
+                }, 1500);
+            }
+        });
+
+        gridView = view.findViewById(R.id.characters_fragment_gridview);
+        generatedMarketGridViewAdapter = new GeneratedMarketGridViewAdapter(view.getContext(), characterCards);
+        gridView.setAdapter(generatedMarketGridViewAdapter);
+
+        return view;
+    }
+
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+        outState.putSerializable("characterCards", (Serializable) characterCards);
+    }
+
+    private void getCharacterCards() {
+
+        characterCards = new ArrayList<>();
 
         // TODO fake value - expansion will be taken from user's choice, but Expansion.BASIC is always included
         Expansion[] expansions = {Expansion.BASIC};
@@ -46,8 +92,6 @@ public class CharactersFragment extends Fragment {
         // Get all nemesis cards from DB
         List<Card> cards = dh.getAll(db, CardType.CHARACTER, expansions);
 
-        List<Card> characterCards = new ArrayList<>();
-
         for (int i = 0; i < 4; i++) {
             Random random = new Random();
             int value = random.nextInt(cards.size());
@@ -57,13 +101,7 @@ public class CharactersFragment extends Fragment {
 
             characterCards.add(characterCard);
         }
+        dh.close();
 
-        View view = inflater.inflate(R.layout.characters_fragment, container, false);
-
-        gridView = view.findViewById(R.id.characters_fragment_gridview);
-        generatedMarketGridViewAdapter = new GeneratedMarketGridViewAdapter(view.getContext(), characterCards);
-        gridView.setAdapter(generatedMarketGridViewAdapter);
-
-        return view;
     }
 }
diff --git a/app/src/main/java/com/example/honza/aeonsend/fragments/MarketFragment.java b/app/src/main/java/com/example/honza/aeonsend/fragments/MarketFragment.java
index c844b0a..70fbadf 100644
--- a/app/src/main/java/com/example/honza/aeonsend/fragments/MarketFragment.java
+++ b/app/src/main/java/com/example/honza/aeonsend/fragments/MarketFragment.java
@@ -2,9 +2,10 @@ package com.example.honza.aeonsend.fragments;
 
 import android.database.sqlite.SQLiteDatabase;
 import android.os.Bundle;
+import android.os.Handler;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
-import android.util.Log;
+import android.support.v4.widget.SwipeRefreshLayout;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -13,18 +14,14 @@ import android.widget.GridView;
 import com.example.honza.aeonsend.R;
 import com.example.honza.aeonsend.adapter.GeneratedMarketGridViewAdapter;
 import com.example.honza.aeonsend.cards.Card;
-import com.example.honza.aeonsend.cards.CharacterCard;
-import com.example.honza.aeonsend.cards.GemCard;
-import com.example.honza.aeonsend.cards.MarketCard;
-import com.example.honza.aeonsend.cards.RelicCard;
-import com.example.honza.aeonsend.cards.SpellCard;
-import com.example.honza.aeonsend.database.CardList;
+import com.example.honza.aeonsend.cards.MarketSetupCard;
 import com.example.honza.aeonsend.database.DatabaseHandler;
-import com.example.honza.aeonsend.database.MarketCardList;
+import com.example.honza.aeonsend.database.MarketSetupCardList;
 import com.example.honza.aeonsend.enums.CardType;
 import com.example.honza.aeonsend.enums.Expansion;
 import com.example.honza.aeonsend.enums.PriceRange;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
@@ -37,53 +34,61 @@ public class MarketFragment extends Fragment {
 
     private GridView gridView;
     private GeneratedMarketGridViewAdapter generatedMarketGridViewAdapter;
-    private List<Card> chosenCards = new ArrayList<>();
+    private List<Card> chosenCards;
     private DatabaseHandler mHandler = null;
     private SQLiteDatabase mDatabase = null;
     private Expansion[] expansions = null;
+    private SwipeRefreshLayout swipeRefreshLayout;
 
     @Nullable
     @Override
     public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
 
-        // Get DatabaseHandler and Database
-        mHandler = DatabaseHandler.getInstance(getContext());
-        mDatabase = mHandler.getReadableDatabase();
-
-        //TODO fake value of MarketCard - marketcard will be taken from user's choice, Expansion[] is set to Basic
-        MarketCard marketCard = MarketCardList.getMarketCards()[3];
-        expansions = new Expansion[]{Expansion.BASIC, Expansion.DEPTHS, Expansion.NAMELESS};
-
-        // Create supply of cards for market
-        Card[] cards = new Card[9];
-
-        for (PriceRange priceRange: marketCard.getGemsPriceList()) {
-            addToChosenCardList(priceRange, CardType.GEM);
-        }
-
-        for (PriceRange priceRange: marketCard.getRelicsPriceList()) {
-            addToChosenCardList(priceRange, CardType.RELIC);
+        if (savedInstanceState == null) {
+            getChosenCards();
+        } else {
+            chosenCards = (List) savedInstanceState.getSerializable("chosenCards");
         }
 
-        for (PriceRange priceRange: marketCard.getSpellsPriceList()) {
-            addToChosenCardList(priceRange, CardType.SPELL);
-        }
-
-        View view = inflater.inflate(R.layout.market_fragment, container, false);
-
-        for (Card card: chosenCards) {
-            Log.d("MFRAG", "onCreateView: " + card);
-        }
+        final View view = inflater.inflate(R.layout.market_fragment, container, false);
+
+        swipeRefreshLayout = (SwipeRefreshLayout) view.findViewById(R.id.market_swiperefresh);
+        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
+            @Override
+            public void onRefresh() {
+                swipeRefreshLayout.setRefreshing(true);
+                (new Handler()).postDelayed(new Runnable() {
+                    @Override
+                    public void run() {
+                        getChosenCards();
+                        generatedMarketGridViewAdapter = new GeneratedMarketGridViewAdapter(view.getContext(), chosenCards);
+                        gridView.invalidateViews();
+                        gridView.setAdapter(generatedMarketGridViewAdapter);
+                        swipeRefreshLayout.setRefreshing(false);
+                    }
+                }, 1500);
+            }
+        });
 
         gridView = view.findViewById(R.id.market_fragment_gridview);
         generatedMarketGridViewAdapter = new GeneratedMarketGridViewAdapter(view.getContext(), chosenCards);
         gridView.setAdapter(generatedMarketGridViewAdapter);
 
-
-        mDatabase.close();
         return view;
     }
 
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+        outState.putSerializable("chosenCards", (Serializable) chosenCards);
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+
+    }
+
     private void addToChosenCardList(PriceRange priceRange, CardType type) {
         try {
             // Get cards based on Price
@@ -99,4 +104,32 @@ public class MarketFragment extends Fragment {
             e.printStackTrace();
         }
     }
+
+    private void getChosenCards() {
+
+        // Get DatabaseHandler and Database
+        mHandler = DatabaseHandler.getInstance(getContext());
+        mDatabase = mHandler.getReadableDatabase();
+        chosenCards = new ArrayList<>();
+
+        //TODO fake value of MarketSetupCard - marketcard will be taken from user's choice, Expansion[] is set to Basic
+        MarketSetupCard marketSetupCard = MarketSetupCardList.getMarketSetupCards()[3];
+        expansions = new Expansion[]{Expansion.BASIC, Expansion.DEPTHS, Expansion.NAMELESS};
+
+        // Create supply of cards for market
+
+        for (PriceRange priceRange : marketSetupCard.getGemsPriceList()) {
+            addToChosenCardList(priceRange, CardType.GEM);
+        }
+
+        for (PriceRange priceRange : marketSetupCard.getRelicsPriceList()) {
+            addToChosenCardList(priceRange, CardType.RELIC);
+        }
+
+        for (PriceRange priceRange : marketSetupCard.getSpellsPriceList()) {
+            addToChosenCardList(priceRange, CardType.SPELL);
+        }
+
+        mDatabase.close();
+    }
 }
diff --git a/app/src/main/java/com/example/honza/aeonsend/fragments/NemesisFragment.java b/app/src/main/java/com/example/honza/aeonsend/fragments/NemesisFragment.java
index 9c82d1e..c49faae 100644
--- a/app/src/main/java/com/example/honza/aeonsend/fragments/NemesisFragment.java
+++ b/app/src/main/java/com/example/honza/aeonsend/fragments/NemesisFragment.java
@@ -1,9 +1,11 @@
 package com.example.honza.aeonsend.fragments;
 
 import android.database.sqlite.SQLiteDatabase;
+import android.os.Handler;
 import android.support.v4.app.Fragment;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
+import android.support.v4.widget.SwipeRefreshLayout;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -11,14 +13,17 @@ import android.widget.ImageView;
 import android.widget.TextView;
 
 import com.example.honza.aeonsend.R;
+import com.example.honza.aeonsend.adapter.GeneratedMarketGridViewAdapter;
 import com.example.honza.aeonsend.cards.Card;
 import com.example.honza.aeonsend.cards.NemesisCard;
 import com.example.honza.aeonsend.database.CardList;
 import com.example.honza.aeonsend.database.DatabaseHandler;
 import com.example.honza.aeonsend.enums.CardType;
 import com.example.honza.aeonsend.enums.Expansion;
+import com.example.honza.aeonsend.enums.PriceRange;
 import com.example.honza.aeonsend.utils.Constants;
 
+import java.io.Serializable;
 import java.util.List;
 import java.util.Random;
 
@@ -28,10 +33,57 @@ import java.util.Random;
 
 public class NemesisFragment extends Fragment {
 
+    private NemesisCard nemesisCard;
+    private SwipeRefreshLayout swipeRefreshLayout;
+    private ImageView imageView;
+    private TextView textView;
+
     @Nullable
     @Override
     public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, Bundle savedInstanceState) {
 
+        if (savedInstanceState == null) {
+            getNemesisCard();
+        } else {
+            nemesisCard = (NemesisCard) savedInstanceState.getSerializable("nemesisCard");
+        }
+        // Create View and display chosen Nemesis
+        View view = inflater.inflate(R.layout.nemesis_fragment, container, false);
+
+        swipeRefreshLayout = (SwipeRefreshLayout) view.findViewById(R.id.nemesis_swiperefresh);
+        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
+            @Override
+            public void onRefresh() {
+                swipeRefreshLayout.setRefreshing(true);
+                (new Handler()).postDelayed(new Runnable() {
+                    @Override
+                    public void run() {
+                        getNemesisCard();
+                        imageView.setImageResource(getResources().getIdentifier(nemesisCard.getPicture(), Constants.DRAWABLEDEFTYPE, Constants.PACKAGENAME));
+                        textView.setText(nemesisCard.getSetupDescription());
+                        swipeRefreshLayout.setRefreshing(false);
+                    }
+                }, 1500);
+            }
+        });
+
+        imageView = view.findViewById(R.id.nemesis_fragment_image);
+        textView = view.findViewById(R.id.nemesis_fragment_text_setup_description);
+
+        imageView.setImageResource(getResources().getIdentifier(nemesisCard.getPicture(), Constants.DRAWABLEDEFTYPE, Constants.PACKAGENAME));
+        textView.setText(nemesisCard.getSetupDescription());
+
+        return view;
+    }
+
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+        outState.putSerializable("nemesisCard", nemesisCard);
+    }
+
+    private void getNemesisCard() {
+
         // TODO fake value - expansion will be taken from user's choice, but Expansion.BASIC is always included
         Expansion[] expansions = {Expansion.BASIC, Expansion.DEPTHS, Expansion.NAMELESS};
 
@@ -46,18 +98,9 @@ public class NemesisFragment extends Fragment {
         Random random = new Random();
         int value = random.nextInt(cards.size());
 
-        NemesisCard nemesisCard = (NemesisCard) cards.get(value);
-
-        // Create View and display chosen Nemesis
-        View view =  inflater.inflate(R.layout.nemesis_fragment, container, false);
-        ImageView imageView = view.findViewById(R.id.nemesis_fragment_image);
-        TextView textView = view.findViewById(R.id.nemesis_fragment_text_setup_description);
-
-        imageView.setImageResource(getResources().getIdentifier(nemesisCard.getPicture(), Constants.DRAWABLEDEFTYPE, Constants.PACKAGENAME));
-        textView.setText(nemesisCard.getSetupDescription());
+        nemesisCard = (NemesisCard) cards.get(value);
 
         dh.close();
 
-        return view;
     }
 }
