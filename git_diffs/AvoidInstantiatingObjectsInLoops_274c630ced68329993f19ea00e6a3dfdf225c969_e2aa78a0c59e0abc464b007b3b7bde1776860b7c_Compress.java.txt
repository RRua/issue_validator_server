diff --git a/app/src/main/java/com/gabm/fancyplaces/FancyPlacesApplication.java b/app/src/main/java/com/gabm/fancyplaces/FancyPlacesApplication.java
index 456ea8f..b8c135b 100644
--- a/app/src/main/java/com/gabm/fancyplaces/FancyPlacesApplication.java
+++ b/app/src/main/java/com/gabm/fancyplaces/FancyPlacesApplication.java
@@ -37,7 +37,7 @@ public class FancyPlacesApplication extends Application {
     static public final int MAP_DEFAULT_DURATION = 3000;
 
     public static String TMP_IMAGE_FULL_PATH = "";
-    public static String TMP_IMAGE_FOLDER ="";
+    public static String TMP_FOLDER ="";
     public static String EXTERNAL_EXPORT_DIR = "";
     private static LocationHandler locationHandler = null;
 
@@ -46,8 +46,8 @@ public class FancyPlacesApplication extends Application {
         super.onCreate();
 
         // tmp file dir
-        TMP_IMAGE_FOLDER = getExternalCacheDir().getAbsolutePath();
-        TMP_IMAGE_FULL_PATH = TMP_IMAGE_FOLDER + File.separator + com.gabm.fancyplaces.FancyPlacesApplication.TMP_IMAGE_FILENAME;
+        TMP_FOLDER = getExternalCacheDir().getAbsolutePath();
+        TMP_IMAGE_FULL_PATH = TMP_FOLDER + File.separator + com.gabm.fancyplaces.FancyPlacesApplication.TMP_IMAGE_FILENAME;
 
         // external export dir
         EXTERNAL_EXPORT_DIR = Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + getResources().getString(R.string.app_name) + File.separator;
diff --git a/app/src/main/java/com/gabm/fancyplaces/functional/Compress.java b/app/src/main/java/com/gabm/fancyplaces/functional/Compression.java
similarity index 58%
rename from app/src/main/java/com/gabm/fancyplaces/functional/Compress.java
rename to app/src/main/java/com/gabm/fancyplaces/functional/Compression.java
index 8dc8041..61e82b2 100644
--- a/app/src/main/java/com/gabm/fancyplaces/functional/Compress.java
+++ b/app/src/main/java/com/gabm/fancyplaces/functional/Compression.java
@@ -8,12 +8,15 @@ import java.io.BufferedOutputStream;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.zip.ZipEntry;
+import java.util.zip.ZipInputStream;
 import java.util.zip.ZipOutputStream;
 
-public class Compress {
+public class Compression {
     private static final int BUFFER = 2048;
 
     public static void zip(String folder, String zipFile)
@@ -62,5 +65,54 @@ public class Compress {
         return inFiles;
     }
 
+    public static boolean unzip(String zipFile, String path)
+    {
+        InputStream is;
+        ZipInputStream zis;
+        try
+        {
+            String filename;
+            is = new FileInputStream(zipFile);
+            zis = new ZipInputStream(new BufferedInputStream(is));
+            ZipEntry ze;
+            byte[] buffer = new byte[1024];
+            int count;
+
+            while ((ze = zis.getNextEntry()) != null)
+            {
+                // zapis do souboru
+                filename = ze.getName();
+
+                // Need to create directories if not exists, or
+                // it will generate an Exception...
+                if (ze.isDirectory()) {
+                    File fmd = new File(path + filename);
+                    fmd.mkdirs();
+                    continue;
+                }
+
+                FileOutputStream fout = new FileOutputStream(path + filename);
+
+                // cteni zipu a zapis
+                while ((count = zis.read(buffer)) != -1)
+                {
+                    fout.write(buffer, 0, count);
+                }
+
+                fout.close();
+                zis.closeEntry();
+            }
+
+            zis.close();
+        }
+        catch(IOException e)
+        {
+            e.printStackTrace();
+            return false;
+        }
+
+        return true;
+    }
+
 
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/gabm/fancyplaces/functional/GPXExporter.java b/app/src/main/java/com/gabm/fancyplaces/functional/GPXExporter.java
index ebca318..a9a01fc 100644
--- a/app/src/main/java/com/gabm/fancyplaces/functional/GPXExporter.java
+++ b/app/src/main/java/com/gabm/fancyplaces/functional/GPXExporter.java
@@ -19,6 +19,7 @@ package com.gabm.fancyplaces.functional;
 
 import android.os.Build;
 
+import com.gabm.fancyplaces.FancyPlacesApplication;
 import com.gabm.fancyplaces.data.FancyPlace;
 
 import java.io.File;
@@ -111,41 +112,33 @@ public class GPXExporter implements IExporter {
     }
 
     @Override
-    public boolean WriteToFile(List<FancyPlace> fpList,  String baseFolder, String fileNameWithoutExt) {
+    public boolean WriteToFile(List<FancyPlace> fpList, String fileNameWithExt) {
 
         boolean success = false;
-        String baseFolderTmp = baseFolder + File.separator + "tmp";
+        String baseFolderTmp = FancyPlacesApplication.TMP_FOLDER + File.separator + "export";
         File folderTmp = new File(baseFolderTmp);
         folderTmp.mkdirs();
         try {
-            writeGpxFile(fpList, baseFolderTmp, fileNameWithoutExt + ".gpx");
-            Compress.zip(baseFolderTmp, baseFolder + fileNameWithoutExt + ".zip");
+            writeGpxFile(fpList, baseFolderTmp, "FancyPlaces.gpx");
+            Compression.zip(baseFolderTmp, fileNameWithExt);
 
             success = true;
         } catch (IOException e) {
             e.printStackTrace();
         } finally {
-            DeleteRecursive(folderTmp);
+            Utilities.deleteRecursive(folderTmp);
         }
 
         return success;
     }
 
-    void DeleteRecursive(File fileOrDirectory) {
-        if (fileOrDirectory.isDirectory())
-            for (File child : fileOrDirectory.listFiles())
-                DeleteRecursive(child);
-
-        fileOrDirectory.delete();
-    }
-
     @Override
-    public boolean WriteToFile(FancyPlace fancyPlace, String baseFolder, String fileNameWithoutExt) {
+    public boolean WriteToFile(FancyPlace fancyPlace, String fileNameWithExt) {
 
         List<FancyPlace> fpList = new ArrayList<>();
         fpList.add(fancyPlace);
 
-        return WriteToFile(fpList, baseFolder, fileNameWithoutExt);
+        return WriteToFile(fpList, fileNameWithExt);
     }
 
     protected String escapeXML(String input) {
diff --git a/app/src/main/java/com/gabm/fancyplaces/functional/GPXImporterSax.java b/app/src/main/java/com/gabm/fancyplaces/functional/GPXImporterSax.java
index 8566b19..0d41061 100644
--- a/app/src/main/java/com/gabm/fancyplaces/functional/GPXImporterSax.java
+++ b/app/src/main/java/com/gabm/fancyplaces/functional/GPXImporterSax.java
@@ -17,6 +17,7 @@
 
 package com.gabm.fancyplaces.functional;
 
+import com.gabm.fancyplaces.FancyPlacesApplication;
 import com.gabm.fancyplaces.data.FancyPlace;
 
 import org.xml.sax.InputSource;
@@ -35,7 +36,25 @@ import java.util.List;
  */
 public class GPXImporterSax implements IImporter {
     @Override
-    public List<FancyPlace> ReadFancyPlaces(File file) {
+    public List<FancyPlace> ReadFancyPlaces(String fileName) {
+
+        File tmpFolder = new File(FancyPlacesApplication.TMP_FOLDER + File.separator + "import");
+        List<FancyPlace> result = new ArrayList<>();
+        if (!Compression.unzip(fileName, tmpFolder.getAbsolutePath()))
+            return result;
+
+        result = ReadGXPFile(new File(tmpFolder.getAbsolutePath() + File.separator + "FancyPlaces.gpx"));
+
+
+        Utilities.deleteRecursive(tmpFolder);
+
+        return result;
+    }
+
+
+
+    List<FancyPlace> ReadGXPFile(File file)
+    {
         List<FancyPlace> resultList = new ArrayList<>();
 
         try {
diff --git a/app/src/main/java/com/gabm/fancyplaces/functional/GpxFileContentHandler.java b/app/src/main/java/com/gabm/fancyplaces/functional/GpxFileContentHandler.java
index df63928..389f6b9 100644
--- a/app/src/main/java/com/gabm/fancyplaces/functional/GpxFileContentHandler.java
+++ b/app/src/main/java/com/gabm/fancyplaces/functional/GpxFileContentHandler.java
@@ -21,10 +21,7 @@ package com.gabm.fancyplaces.functional;
  * Created by gabm on 19/11/15.
  */
 import java.io.File;
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
 import java.util.ArrayList;
-import java.util.Date;
 import java.util.List;
 
 import org.xml.sax.Attributes;
@@ -32,8 +29,6 @@ import org.xml.sax.ContentHandler;
 import org.xml.sax.Locator;
 import org.xml.sax.SAXException;
 
-import android.location.Location;
-
 import com.gabm.fancyplaces.FancyPlacesApplication;
 import com.gabm.fancyplaces.data.FancyPlace;
 import com.gabm.fancyplaces.data.ImageFile;
@@ -70,7 +65,7 @@ public class GpxFileContentHandler implements ContentHandler {
         if (localName.equalsIgnoreCase("link") && isInsideFPTag)
         {
             ImageFile tmpImg = new ImageFile(baseDir + File.separator + atts.getValue("href").trim().substring(5));
-            String tmpImgFileName = FancyPlacesApplication.TMP_IMAGE_FOLDER + File.separator + Utilities.shuffleFileName("Img_", "");
+            String tmpImgFileName = FancyPlacesApplication.TMP_FOLDER + File.separator + Utilities.shuffleFileName("Img_", "");
             tmpImg.copy(tmpImgFileName);
             curFancyPlace.setImage(new ImageFile(tmpImgFileName));
         }
diff --git a/app/src/main/java/com/gabm/fancyplaces/functional/IExporter.java b/app/src/main/java/com/gabm/fancyplaces/functional/IExporter.java
index 1194e5f..bcbaf08 100644
--- a/app/src/main/java/com/gabm/fancyplaces/functional/IExporter.java
+++ b/app/src/main/java/com/gabm/fancyplaces/functional/IExporter.java
@@ -26,7 +26,7 @@ import java.util.List;
  * Created by gabm on 08/06/15.
  */
 public interface IExporter {
-    boolean WriteToFile(List<FancyPlace> fpList, String baseFolder, String fileNameWithoutExt);
+    boolean WriteToFile(List<FancyPlace> fpList, String fileNameWithExt);
 
-    boolean WriteToFile(FancyPlace fancyPlace,  String baseFolder, String fileNameWithoutExt);
+    boolean WriteToFile(FancyPlace fancyPlace, String fileNameWithExt);
 }
diff --git a/app/src/main/java/com/gabm/fancyplaces/functional/IImporter.java b/app/src/main/java/com/gabm/fancyplaces/functional/IImporter.java
index bc78ac7..0113b8e 100644
--- a/app/src/main/java/com/gabm/fancyplaces/functional/IImporter.java
+++ b/app/src/main/java/com/gabm/fancyplaces/functional/IImporter.java
@@ -26,5 +26,5 @@ import java.util.List;
  * Created by gabm on 19/11/15.
  */
 public interface IImporter {
-    List<FancyPlace> ReadFancyPlaces(File file);
+    List<FancyPlace> ReadFancyPlaces(String fileName);
 }
diff --git a/app/src/main/java/com/gabm/fancyplaces/functional/Utilities.java b/app/src/main/java/com/gabm/fancyplaces/functional/Utilities.java
index 08a451d..1740286 100644
--- a/app/src/main/java/com/gabm/fancyplaces/functional/Utilities.java
+++ b/app/src/main/java/com/gabm/fancyplaces/functional/Utilities.java
@@ -17,6 +17,7 @@
 
 package com.gabm.fancyplaces.functional;
 
+import java.io.File;
 import java.text.SimpleDateFormat;
 import java.util.Date;
 
@@ -31,4 +32,13 @@ public class Utilities {
 
         return prefix + timeStamp + suffix;
     }
+
+    public static void deleteRecursive(File fileOrDirectory) {
+        if (fileOrDirectory.isDirectory())
+            for (File child : fileOrDirectory.listFiles())
+                deleteRecursive(child);
+
+        fileOrDirectory.delete();
+    }
+
 }
diff --git a/app/src/main/java/com/gabm/fancyplaces/ui/MainWindow.java b/app/src/main/java/com/gabm/fancyplaces/ui/MainWindow.java
index 949ae2c..9662174 100644
--- a/app/src/main/java/com/gabm/fancyplaces/ui/MainWindow.java
+++ b/app/src/main/java/com/gabm/fancyplaces/ui/MainWindow.java
@@ -180,16 +180,6 @@ public class MainWindow extends AppCompatActivity implements OnFancyPlaceSelecte
             case OnFancyPlaceSelectedListener.INTENT_CREATE_NEW:
                 showSEPActivityForResult(getApplicationContext(), new FancyPlace(), ShowEditPlace.MODE_EDIT);
                 break;
-            case OnFancyPlaceSelectedListener.INTENT_EXPORT_TO_GPX:
-                GPXExporter exporter = new GPXExporter();
-
-                if (exporter.WriteToFile(fp, FancyPlacesApplication.EXTERNAL_EXPORT_DIR, "export")) {
-                    Toast.makeText(getApplicationContext(), "File successfully exported to: " + FancyPlacesApplication.EXTERNAL_EXPORT_DIR + "export.zip", Toast.LENGTH_SHORT).show();
-                } else {
-                    Toast.makeText(getApplicationContext(), "File export failed!", Toast.LENGTH_SHORT).show();
-
-                }
-                break;
         }
     }
 
@@ -418,7 +408,7 @@ public class MainWindow extends AppCompatActivity implements OnFancyPlaceSelecte
                 GPXExporter exporter = new GPXExporter();
 
                 File exportFile = new File(FancyPlacesApplication.EXTERNAL_EXPORT_DIR, Utilities.shuffleFileName("FancyPlaces_", "") + ".zip");
-                if (exporter.WriteToFile(fancyPlaceArrayAdapter.getSelectedFancyPlaces(), FancyPlacesApplication.EXTERNAL_EXPORT_DIR, Utilities.shuffleFileName("FancyPlaces_", ""))) {
+                if (exporter.WriteToFile(fancyPlaceArrayAdapter.getSelectedFancyPlaces(), exportFile.getAbsolutePath())) {
                     Toast.makeText(getApplicationContext(), getString(R.string.gpx_export_successful) + exportFile.getAbsolutePath(), Toast.LENGTH_LONG).show();
                 } else {
                     Toast.makeText(getApplicationContext(), getString(R.string.gpx_export_failed), Toast.LENGTH_LONG).show();
@@ -430,9 +420,7 @@ public class MainWindow extends AppCompatActivity implements OnFancyPlaceSelecte
                 return true;
             case R.id.main_window_import:
                 GPXImporterSax importerSax = new GPXImporterSax();
-                String importFileName = FancyPlacesApplication.EXTERNAL_EXPORT_DIR + "Exported" + File.separator + "FancyPlaces.gpx";
-                File importFile = new File(importFileName);
-                List<FancyPlace> readFPs = importerSax.ReadFancyPlaces(importFile);
+                List<FancyPlace> readFPs = importerSax.ReadFancyPlaces("");
                 updateFPDatabase(readFPs);
                 return true;
         }
