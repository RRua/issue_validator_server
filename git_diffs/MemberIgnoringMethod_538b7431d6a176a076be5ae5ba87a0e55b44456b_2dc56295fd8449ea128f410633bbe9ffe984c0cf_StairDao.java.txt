diff --git a/app/src/main/java/at/h4x/amsprung/SearchActivity.java b/app/src/main/java/at/h4x/amsprung/SearchActivity.java
index eb3b8e4..5de1adb 100644
--- a/app/src/main/java/at/h4x/amsprung/SearchActivity.java
+++ b/app/src/main/java/at/h4x/amsprung/SearchActivity.java
@@ -44,13 +44,11 @@ public class SearchActivity extends AppCompatActivity implements StationsAdapter
         searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override
             public boolean onQueryTextSubmit(String query) {
-                MinLog.i("### submit %s", query);
                 return false;
             }
 
             @Override
             public boolean onQueryTextChange(String newText) {
-                MinLog.i("### change %s", newText);
                 updateStations(newText);
                 return false;
             }
diff --git a/app/src/main/java/at/h4x/amsprung/StationDetailsActivity.java b/app/src/main/java/at/h4x/amsprung/StationDetailsActivity.java
index 1e7f842..2e73d2e 100644
--- a/app/src/main/java/at/h4x/amsprung/StationDetailsActivity.java
+++ b/app/src/main/java/at/h4x/amsprung/StationDetailsActivity.java
@@ -24,7 +24,6 @@ import java.util.List;
 
 import at.h4x.amsprung.room.AppDatabase;
 import at.h4x.amsprung.room.model.FavouriteStation;
-import at.h4x.amsprung.room.model.Stair;
 import at.h4x.amsprung.room.model.Station;
 import at.h4x.amsprung.room.model.StationViewHistoryDao;
 import at.h4x.amsprung.room.model.StationViewHistory;
@@ -32,7 +31,6 @@ import at.h4x.amsprung.util.MinLog;
 import at.h4x.amsprung.util.OkHttpClientProvider;
 import at.h4x.amsprung.wienerlinienapi.LineBadgeHelper;
 import at.h4x.amsprung.wienerlinienapi.MonitorInfoAsyncTask;
-import at.h4x.amsprung.wienerlinienapi.MonitorInfosForStairsAsyncTask;
 import at.h4x.amsprung.wienerlinienapi.MonitorInfosForStationAsyncTask;
 
 public class StationDetailsActivity extends AppCompatActivity {
@@ -172,7 +170,6 @@ public class StationDetailsActivity extends AppCompatActivity {
             @Override
             protected void onPostExecute(Void aVoid) {
                 updateFavMenuOptions();
-                MinLog.d("### inserted");
             }
         }.execute();
     }
@@ -189,7 +186,6 @@ public class StationDetailsActivity extends AppCompatActivity {
             @Override
             protected void onPostExecute(Void aVoid) {
                 updateFavMenuOptions();
-                MinLog.d("### deleted");
             }
         }.execute();
     }
@@ -229,24 +225,6 @@ public class StationDetailsActivity extends AppCompatActivity {
         }.execute(station);
     }
 
-    void loadAndDisplayMonitorsForStairs(List<Stair> stairs) {
-        new MonitorInfosForStairsAsyncTask(OkHttpClientProvider.get(StationDetailsActivity.this), new Gson()){
-            @Override
-            protected void onPostExecute(List<MonitorInfoAsyncTask.MonitorInfo> monitorInfos) {
-                super.onPostExecute(monitorInfos);
-
-                if (adapter == null) {
-                    adapter = new DeparturesAdapter(monitorInfos);
-                    recycler.setAdapter(adapter);
-                } else {
-                    adapter = new DeparturesAdapter(monitorInfos);
-                    recycler.swapAdapter(adapter, true);
-                }
-                swipeRefresh.setRefreshing(false);
-            }
-        }.execute(stairs);
-    }
-
     void displayStation(final Station station) {
         if (station != null && station.getName() != null) {
 
diff --git a/app/src/main/java/at/h4x/amsprung/UpdateAppDatabaseService.java b/app/src/main/java/at/h4x/amsprung/UpdateAppDatabaseService.java
index 3f514eb..2f2a262 100644
--- a/app/src/main/java/at/h4x/amsprung/UpdateAppDatabaseService.java
+++ b/app/src/main/java/at/h4x/amsprung/UpdateAppDatabaseService.java
@@ -29,8 +29,6 @@ import at.h4x.amsprung.room.model.LineRoute;
 import at.h4x.amsprung.room.model.LineRouteDao;
 import at.h4x.amsprung.room.model.LineType;
 import at.h4x.amsprung.room.model.LineDao;
-import at.h4x.amsprung.room.model.Stair;
-import at.h4x.amsprung.room.model.StairDao;
 import at.h4x.amsprung.room.model.Station;
 import at.h4x.amsprung.room.model.StationDao;
 import at.h4x.amsprung.room.model.Stop;
@@ -48,18 +46,6 @@ public class UpdateAppDatabaseService extends Service {
     public static final char SEPARATOR = ';';
     public static final char QUOTE_CHAR = '"';
 
-    public static final int IDX_STAIR_ID = 0;
-    public static final int IDX_STAIR_LINE_ID = 1;
-    public static final int IDX_STAIR_STOP_ID = 2;
-    public static final int IDX_STAIR_DIRECTION = 3;
-    public static final int IDX_STAIR_ORDER = 4;
-    public static final int IDX_STAIR_RBL_NUM = 5;
-    public static final int IDX_STAIR_AREA = 6;
-    public static final int IDX_STAIR_PLATFORM = 7;
-    public static final int IDX_STAIR_LAT = 8;
-    public static final int IDX_STAIR_LON = 9;
-    public static final int IDX_STAIR_STATUS = 10;
-
     private HandlerThread serviceThread;
     private Handler serviceHandler;
 
@@ -151,7 +137,6 @@ public class UpdateAppDatabaseService extends Service {
             line = r.readNext();
             for(int i=0; i<line.length; i++) {
                 header.put(line[i].toLowerCase(Locale.ROOT), i);
-                MinLog.v("stop import header %s -> %d", line[i].toLowerCase(Locale.ROOT), i);
             }
 
             while ((line = r.readNext()) != null) {
@@ -188,46 +173,6 @@ public class UpdateAppDatabaseService extends Service {
         }
     }
 
-    private void importStairs(StairDao stairDao) {
-        try {
-            int updateCount = 0;
-            int insertCount = 0;
-
-            String[] line = null;
-            CSVReader r = new CSVReader(new InputStreamReader(this.getResources().openRawResource(R.raw.wienerlinien_ogd_steige)), SEPARATOR, QUOTE_CHAR);
-
-            // parse header
-            Map<String, Integer> header = new HashMap<String, Integer>();
-            line = r.readNext();
-            for(int i=0; i<line.length; i++) {
-                header.put(line[i].toLowerCase(Locale.ROOT), i);
-            }
-
-            while ((line = r.readNext()) != null) {
-                Stair stair = new Stair();
-                stair.setId(Integer.valueOf(line[IDX_STAIR_ID]));
-                stair.setLineId(Integer.valueOf(line[IDX_STAIR_LINE_ID]));
-                stair.setStopId(Integer.valueOf(line[IDX_STAIR_STOP_ID]));
-                try {
-                    stair.setRbl(Integer.valueOf(line[IDX_STAIR_RBL_NUM]));
-                } catch (NumberFormatException e){
-                    // mehhhh somtimes they just don't have one
-                }
-
-                if (stairDao.byId(stair.getId()) == null) {
-                    stairDao.insert(stair);
-                    insertCount++;
-                } else {
-                    stairDao.update(stair);
-                    updateCount++;
-                }
-            }
-            MinLog.i("done importing stairs, (%d updated, %d inserted)", updateCount, insertCount);
-        } catch (IOException e) {
-            MinLog.d(e, "could not read stair-definitions");
-        }
-    }
-
     private void importStations(StationDao stationDao) {
         int updateCount = 0;
         int insertCount = 0;
diff --git a/app/src/main/java/at/h4x/amsprung/room/AppDatabase.java b/app/src/main/java/at/h4x/amsprung/room/AppDatabase.java
index ede0878..4b6fd75 100644
--- a/app/src/main/java/at/h4x/amsprung/room/AppDatabase.java
+++ b/app/src/main/java/at/h4x/amsprung/room/AppDatabase.java
@@ -16,7 +16,6 @@ import at.h4x.amsprung.room.model.Line;
 import at.h4x.amsprung.room.model.LineDao;
 import at.h4x.amsprung.room.model.LineRoute;
 import at.h4x.amsprung.room.model.LineRouteDao;
-import at.h4x.amsprung.room.model.Stair;
 import at.h4x.amsprung.room.model.Station;
 import at.h4x.amsprung.room.model.StationDao;
 import at.h4x.amsprung.room.model.StationViewHistory;
@@ -29,13 +28,12 @@ import at.h4x.amsprung.room.model.StopDao;
  * Docs: https://developer.android.com/topic/libraries/architecture/room
  */
 // TODO: re-evaluate setting exportSchema to false (just false to silence lint atm.)
-@Database(entities = {Stop.class, Station.class, Stair.class, Line.class, LineRoute.class, FavouriteStation.class, StationViewHistory.class}, version = 3, exportSchema = false)
+@Database(entities = {Stop.class, Station.class, Line.class, LineRoute.class, FavouriteStation.class, StationViewHistory.class}, version = 3, exportSchema = false)
 public abstract class AppDatabase extends RoomDatabase{
 
     private static volatile AppDatabase INSTANCE;
 
     public abstract StopDao stopDao();
-    // public abstract StairDao stairDao();
     public abstract StationDao stationDao();
     public abstract LineDao lineDao();
     public abstract LineRouteDao lineRoute();
diff --git a/app/src/main/java/at/h4x/amsprung/room/model/LineDao.java b/app/src/main/java/at/h4x/amsprung/room/model/LineDao.java
index c056663..84ffd29 100644
--- a/app/src/main/java/at/h4x/amsprung/room/model/LineDao.java
+++ b/app/src/main/java/at/h4x/amsprung/room/model/LineDao.java
@@ -11,9 +11,6 @@ import androidx.room.Update;
 
 import java.util.List;
 
-import at.h4x.amsprung.room.model.Line;
-import at.h4x.amsprung.room.model.Stair;
-
 @Dao
 public interface LineDao {
     @Query("select * from " + Line.TABLE_NAME)
@@ -34,9 +31,6 @@ public interface LineDao {
     @Delete
     void delete(Line line);
 
-    @Query("select * from " + Line.TABLE_NAME + " where " + Line.C_ID + " in (select " + Stair.FK_LINE_ID + " from " + Stair.TABLE_NAME + " where " + Stair.FK_STOP_ID + " = :stopId)")
-    List<Line> getLinesForStopId(int stopId);
-
     @Query("select * from " + Line.TABLE_NAME + " where " + Line.C_ID + " in (select " + LineRoute.C_LINE_ID + " from " + LineRoute.TABLE_NAME + " where " + LineRoute.C_STOP_ID + " in (select " + Stop.C_ID + " from " + Stop.TABLE_NAME + " where " + Stop.C_STATION_ID + " = :stationId))")
     List<Line> getLinesForStationId(int stationId);
 }
diff --git a/app/src/main/java/at/h4x/amsprung/room/model/Stair.java b/app/src/main/java/at/h4x/amsprung/room/model/Stair.java
deleted file mode 100644
index 63c7a91..0000000
--- a/app/src/main/java/at/h4x/amsprung/room/model/Stair.java
+++ /dev/null
@@ -1,33 +0,0 @@
-// SPDX-FileCopyrightText: 2021 Michael Pöhn <michael.poehn@fsfe.org>
-// SPDX-License-Identifier: GPL-3.0-or-later
-
-package at.h4x.amsprung.room.model;
-
-import androidx.room.ColumnInfo;
-import androidx.room.Entity;
-import androidx.room.PrimaryKey;
-
-import lombok.Getter;
-import lombok.Setter;
-
-@Entity(tableName = Stair.TABLE_NAME)
-public class Stair {
-
-    public static final String TABLE_NAME = "stair";
-    public static final String C_ID = "id";
-    public static final String C_RBL = "rbl";
-    public static final String FK_STOP_ID = "stop_id";
-    public static final String FK_LINE_ID = "line_id";
-
-    @PrimaryKey
-    @Getter @Setter int id;
-
-    @ColumnInfo(name = C_RBL)
-    @Getter @Setter int rbl;
-
-    @ColumnInfo(name = FK_STOP_ID)
-    @Getter @Setter int stopId;
-
-    @ColumnInfo(name = FK_LINE_ID)
-    @Getter @Setter int lineId;
-}
diff --git a/app/src/main/java/at/h4x/amsprung/room/model/StairDao.java b/app/src/main/java/at/h4x/amsprung/room/model/StairDao.java
deleted file mode 100644
index 6b00ae0..0000000
--- a/app/src/main/java/at/h4x/amsprung/room/model/StairDao.java
+++ /dev/null
@@ -1,39 +0,0 @@
-// SPDX-FileCopyrightText: 2021 Michael Pöhn <michael.poehn@fsfe.org>
-// SPDX-License-Identifier: GPL-3.0-or-later
-
-package at.h4x.amsprung.room.model;
-
-import androidx.room.Dao;
-import androidx.room.Delete;
-import androidx.room.Insert;
-import androidx.room.Query;
-import androidx.room.Update;
-
-import java.util.List;
-
-import at.h4x.amsprung.room.model.Stair;
-
-@Dao
-public interface StairDao {
-
-    @Query("select * from " + Stair.TABLE_NAME)
-    List<Stair> getAll();
-
-    @Query("select * from " + Stair.TABLE_NAME + " where " + Stair.C_ID + " = :id")
-    Stair byId(int id);
-
-    @Query("select * from " + Stair.TABLE_NAME + " where " + Stair.C_ID + " in (:ids)")
-    List<Stair> byIds(int... ids);
-
-    @Query("select * from " + Stair.TABLE_NAME + " where " + Stair.FK_STOP_ID + " = :stopId")
-    List<Stair> getStairsForStopId(int stopId);
-
-    @Insert
-    void insert(Stair... stairs);
-
-    @Update
-    void update(Stair... stairs);
-
-    @Delete
-    void delete(Stair stair);
-}
diff --git a/app/src/main/java/at/h4x/amsprung/wienerlinienapi/MonitorInfosForStairsAsyncTask.java b/app/src/main/java/at/h4x/amsprung/wienerlinienapi/MonitorInfosForStairsAsyncTask.java
deleted file mode 100644
index bd50bb7..0000000
--- a/app/src/main/java/at/h4x/amsprung/wienerlinienapi/MonitorInfosForStairsAsyncTask.java
+++ /dev/null
@@ -1,64 +0,0 @@
-// SPDX-FileCopyrightText: 2021 Michael Pöhn <michael.poehn@fsfe.org>
-// SPDX-License-Identifier: GPL-3.0-or-later
-
-package at.h4x.amsprung.wienerlinienapi;
-
-import com.google.gson.Gson;
-
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-
-import at.h4x.amsprung.room.model.Stair;
-import at.h4x.amsprung.util.MinLog;
-import okhttp3.OkHttpClient;
-import okhttp3.Request;
-import okhttp3.Response;
-
-/**
- * Created by uniq on 26.04.17.
- */
-
-public class MonitorInfosForStairsAsyncTask extends WienerLinienApiAsyncTask<List<Stair>, Void, List<MonitorInfoAsyncTask.MonitorInfo>>{
-
-    private final OkHttpClient okHttpClient;
-    private final Gson gson;
-
-    public MonitorInfosForStairsAsyncTask(OkHttpClient okHttpClient, Gson gson) {
-        this.okHttpClient = okHttpClient;
-        this.gson = gson;
-    }
-
-    @Override
-    protected List<MonitorInfoAsyncTask.MonitorInfo> doInBackground(List<Stair>... params) {
-        List<MonitorInfoAsyncTask.MonitorInfo> monitorInfos = new ArrayList<MonitorInfoAsyncTask.MonitorInfo>();
-        if (params != null) {
-            for (List<Stair> stairs : params) {
-                if (stairs != null) {
-                    for (Stair stair : stairs) {
-                        if (stair != null && stair.getRbl() != 0) {
-                            final String url = API_BASE_URL + "?rbl="
-                                    + stair.getRbl()
-                                    + "&activateTrafficInfo=stoerungkurz&activateTrafficInfo=stoerunglang&activateTrafficInfo=aufzugsinfo";
-                            MinLog.v("url: %s", url);
-
-                            Request request = new Request.Builder().url(url).build();
-                            try {
-                                Response response = okHttpClient.newCall(request).execute();
-                                String responseString = response.body().string();
-                                MinLog.v("response: %s", responseString);
-                                MonitorInfoAsyncTask.MonitorInfo i = gson.fromJson(responseString, MonitorInfoAsyncTask.MonitorInfo.class);
-                                if (i != null){
-                                    monitorInfos.add(i);
-                                }
-                            } catch (IOException e) {
-                                MinLog.e(e, "http request failed (url: '" + url + "')");
-                            }
-                        }
-                    }
-                }
-            }
-        }
-        return monitorInfos;
-    }
-}
