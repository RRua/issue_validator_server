diff --git a/app/src/main/java/com/sdex/activityrunner/shortcut/AddShortcutDialogFragment.java b/app/src/main/java/com/sdex/activityrunner/shortcut/AddShortcutDialogFragment.java
deleted file mode 100644
index ead9039..0000000
--- a/app/src/main/java/com/sdex/activityrunner/shortcut/AddShortcutDialogFragment.java
+++ /dev/null
@@ -1,106 +0,0 @@
-package com.sdex.activityrunner.shortcut;
-
-import android.app.Dialog;
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.design.widget.TextInputLayout;
-import android.support.v4.app.DialogFragment;
-import android.support.v7.app.AlertDialog;
-import android.text.TextUtils;
-import android.view.View;
-import android.widget.EditText;
-import android.widget.ImageView;
-
-import com.bumptech.glide.request.RequestOptions;
-import com.sdex.activityrunner.R;
-import com.sdex.activityrunner.db.activity.ActivityModel;
-import com.sdex.activityrunner.db.history.HistoryModel;
-import com.sdex.activityrunner.glide.GlideApp;
-import com.sdex.activityrunner.intent.LaunchParams;
-import com.sdex.activityrunner.intent.converter.HistoryToLaunchParamsConverter;
-import com.sdex.activityrunner.intent.converter.LaunchParamsToIntentConverter;
-import com.sdex.activityrunner.util.IntentUtils;
-import com.sdex.activityrunner.util.ObjectsCompat;
-
-public class AddShortcutDialogFragment extends DialogFragment {
-
-  public static final String TAG = "AddShortcutDialogFragment";
-
-  public static final String ARG_ACTIVITY_MODEL = "arg_activity_model";
-  public static final String ARG_HISTORY_MODEL = "arg_history_model";
-
-  public static AddShortcutDialogFragment newInstance(ActivityModel activityModel) {
-    Bundle args = new Bundle(1);
-    args.putSerializable(AddShortcutDialogFragment.ARG_ACTIVITY_MODEL, activityModel);
-    AddShortcutDialogFragment fragment = new AddShortcutDialogFragment();
-    fragment.setArguments(args);
-    return fragment;
-  }
-
-  public static AddShortcutDialogFragment newInstance(HistoryModel historyModel) {
-    Bundle args = new Bundle(1);
-    args.putSerializable(AddShortcutDialogFragment.ARG_HISTORY_MODEL, historyModel);
-    AddShortcutDialogFragment fragment = new AddShortcutDialogFragment();
-    fragment.setArguments(args);
-    return fragment;
-  }
-
-  @NonNull
-  @Override
-  public Dialog onCreateDialog(Bundle savedInstanceState) {
-    final ActivityModel activityModel =
-      (ActivityModel) ObjectsCompat.requireNonNull(getArguments())
-        .getSerializable(ARG_ACTIVITY_MODEL);
-    final HistoryModel historyModel =
-      (HistoryModel) ObjectsCompat.requireNonNull(getArguments())
-        .getSerializable(ARG_HISTORY_MODEL);
-
-    AlertDialog.Builder builder =
-      new AlertDialog.Builder(ObjectsCompat.requireNonNull(getActivity()));
-    View view = View.inflate(getActivity(), R.layout.dialog_add_shortcut, null);
-    final TextInputLayout labelViewLayout = view.findViewById(R.id.value_layout);
-    final EditText textName = view.findViewById(R.id.shortcut_name);
-    if (activityModel != null) {
-      textName.setText(activityModel.getName());
-      textName.setSelection(textName.getText().length());
-    }
-    final ImageView imageIcon = view.findViewById(R.id.app_icon);
-    GlideApp.with(this)
-      .load(activityModel != null ? activityModel : R.mipmap.ic_launcher)
-      .apply(new RequestOptions()
-        .fitCenter())
-      .into(imageIcon);
-    builder.setTitle(R.string.context_action_edit)
-      .setView(view)
-      .setPositiveButton(R.string.context_action_shortcut, null)
-      .setNegativeButton(android.R.string.cancel, null);
-    AlertDialog alertDialog = builder.create();
-    alertDialog.setOnShowListener(dialog -> alertDialog.getButton(AlertDialog.BUTTON_POSITIVE)
-      .setOnClickListener(v -> {
-        labelViewLayout.setError(null);
-        String shortcutName = textName.getText().toString();
-        if (TextUtils.isEmpty(shortcutName)) {
-          labelViewLayout.setError(getString(R.string.shortcut_name_empty));
-          return;
-        }
-        if (activityModel != null) {
-          activityModel.setName(shortcutName);
-          IntentUtils.createLauncherIcon(getActivity(), activityModel);
-        } else {
-          createHistoryModelShortcut(historyModel, shortcutName);
-        }
-        dismiss();
-      }));
-    return alertDialog;
-  }
-
-  private void createHistoryModelShortcut(HistoryModel historyModel, String shortcutName) {
-    HistoryToLaunchParamsConverter historyToLaunchParamsConverter =
-      new HistoryToLaunchParamsConverter(historyModel);
-    LaunchParams launchParams = historyToLaunchParamsConverter.convert();
-    LaunchParamsToIntentConverter converter = new LaunchParamsToIntentConverter(launchParams);
-    Intent intent = converter.convert();
-    IntentUtils.createLauncherIcon(getActivity(), shortcutName, intent, R.mipmap.ic_launcher);
-  }
-}
diff --git a/app/src/main/java/com/sdex/activityrunner/shortcut/AddShortcutDialogFragment.kt b/app/src/main/java/com/sdex/activityrunner/shortcut/AddShortcutDialogFragment.kt
new file mode 100644
index 0000000..637bb33
--- /dev/null
+++ b/app/src/main/java/com/sdex/activityrunner/shortcut/AddShortcutDialogFragment.kt
@@ -0,0 +1,99 @@
+package com.sdex.activityrunner.shortcut
+
+import android.app.Dialog
+import android.os.Bundle
+import android.support.design.widget.TextInputLayout
+import android.support.v4.app.DialogFragment
+import android.support.v7.app.AlertDialog
+import android.text.TextUtils
+import android.view.View
+import android.widget.EditText
+import android.widget.ImageView
+import com.bumptech.glide.request.RequestOptions
+import com.sdex.activityrunner.R
+import com.sdex.activityrunner.db.activity.ActivityModel
+import com.sdex.activityrunner.db.history.HistoryModel
+import com.sdex.activityrunner.glide.GlideApp
+import com.sdex.activityrunner.intent.converter.HistoryToLaunchParamsConverter
+import com.sdex.activityrunner.intent.converter.LaunchParamsToIntentConverter
+import com.sdex.activityrunner.util.IntentUtils
+
+class AddShortcutDialogFragment : DialogFragment() {
+
+  override fun onCreateDialog(savedInstanceState: Bundle?): Dialog {
+    val activityModel = arguments?.getSerializable(ARG_ACTIVITY_MODEL) as ActivityModel?
+    val historyModel = arguments?.getSerializable(ARG_HISTORY_MODEL) as HistoryModel?
+
+    val builder = AlertDialog.Builder(activity!!)
+    val view = View.inflate(activity, R.layout.dialog_add_shortcut, null)
+    val labelViewLayout = view.findViewById<TextInputLayout>(R.id.value_layout)
+    val textName = view.findViewById<EditText>(R.id.shortcut_name)
+
+    textName.setText(activityModel?.name)
+    textName.setSelection(textName.text.length)
+
+    val imageIcon = view.findViewById<ImageView>(R.id.app_icon)
+    GlideApp.with(this)
+      .load(activityModel)
+      .error(R.mipmap.ic_launcher)
+      .apply(RequestOptions()
+        .fitCenter())
+      .into(imageIcon)
+    builder.setTitle(R.string.context_action_edit)
+      .setView(view)
+      .setPositiveButton(R.string.context_action_shortcut, null)
+      .setNegativeButton(android.R.string.cancel, null)
+    val alertDialog = builder.create()
+    alertDialog.setOnShowListener { _ ->
+      alertDialog.getButton(AlertDialog.BUTTON_POSITIVE)
+        .setOnClickListener { _ ->
+          labelViewLayout.error = null
+          val shortcutName = textName.text.toString()
+          if (TextUtils.isEmpty(shortcutName)) {
+            labelViewLayout.error = getString(R.string.shortcut_name_empty)
+            return@setOnClickListener
+          }
+          if (activityModel != null) {
+            activityModel.name = shortcutName
+            IntentUtils.createLauncherIcon(activity, activityModel)
+          } else {
+            createHistoryModelShortcut(historyModel!!, shortcutName)
+          }
+          dismiss()
+        }
+    }
+    return alertDialog
+  }
+
+  private fun createHistoryModelShortcut(historyModel: HistoryModel, shortcutName: String) {
+    val historyToLaunchParamsConverter = HistoryToLaunchParamsConverter(historyModel)
+    val launchParams = historyToLaunchParamsConverter.convert()
+    val converter = LaunchParamsToIntentConverter(launchParams)
+    val intent = converter.convert()
+    IntentUtils.createLauncherIcon(activity, shortcutName, intent, R.mipmap.ic_launcher)
+  }
+
+  companion object {
+
+    const val TAG = "AddShortcutDialogFragment"
+
+    const val ARG_ACTIVITY_MODEL = "arg_activity_model"
+    const val ARG_HISTORY_MODEL = "arg_history_model"
+
+    fun newInstance(activityModel: ActivityModel): AddShortcutDialogFragment {
+      val args = Bundle(1)
+      args.putSerializable(AddShortcutDialogFragment.ARG_ACTIVITY_MODEL, activityModel)
+      val fragment = AddShortcutDialogFragment()
+      fragment.arguments = args
+      return fragment
+    }
+
+    fun newInstance(historyModel: HistoryModel): AddShortcutDialogFragment {
+      val args = Bundle(1)
+      args.putSerializable(AddShortcutDialogFragment.ARG_HISTORY_MODEL, historyModel)
+      val fragment = AddShortcutDialogFragment()
+      fragment.arguments = args
+      return fragment
+    }
+  }
+}
diff --git a/app/src/main/java/com/sdex/activityrunner/shortcut/ShortcutHandlerActivity.java b/app/src/main/java/com/sdex/activityrunner/shortcut/ShortcutHandlerActivity.java
deleted file mode 100644
index ac86190..0000000
--- a/app/src/main/java/com/sdex/activityrunner/shortcut/ShortcutHandlerActivity.java
+++ /dev/null
@@ -1,27 +0,0 @@
-package com.sdex.activityrunner.shortcut;
-
-import android.app.Activity;
-import android.content.ComponentName;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-
-import com.sdex.activityrunner.util.RunActivityTask;
-
-public class ShortcutHandlerActivity extends Activity {
-
-  public static final String ARG_PACKAGE_NAME = "arg_package_name";
-  public static final String ARG_CLASS_NAME = "arg_class_name";
-
-  @Override
-  protected void onCreate(@Nullable Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-    String packageName = getIntent().getStringExtra(ARG_PACKAGE_NAME);
-    String className = getIntent().getStringExtra(ARG_CLASS_NAME);
-    if (packageName != null && className != null) {
-      ComponentName componentName = new ComponentName(packageName, className);
-      RunActivityTask task = new RunActivityTask(componentName);
-      task.execute();
-    }
-    finish();
-  }
-}
diff --git a/app/src/main/java/com/sdex/activityrunner/shortcut/ShortcutHandlerActivity.kt b/app/src/main/java/com/sdex/activityrunner/shortcut/ShortcutHandlerActivity.kt
new file mode 100644
index 0000000..755069a
--- /dev/null
+++ b/app/src/main/java/com/sdex/activityrunner/shortcut/ShortcutHandlerActivity.kt
@@ -0,0 +1,28 @@
+package com.sdex.activityrunner.shortcut
+
+import android.app.Activity
+import android.content.ComponentName
+import android.os.Bundle
+
+import com.sdex.activityrunner.util.RunActivityTask
+
+class ShortcutHandlerActivity : Activity() {
+
+  override fun onCreate(savedInstanceState: Bundle?) {
+    super.onCreate(savedInstanceState)
+    val packageName = intent.getStringExtra(ARG_PACKAGE_NAME)
+    val className = intent.getStringExtra(ARG_CLASS_NAME)
+    if (packageName != null && className != null) {
+      val componentName = ComponentName(packageName, className)
+      val task = RunActivityTask(componentName)
+      task.execute()
+    }
+    finish()
+  }
+
+  companion object {
+
+    const val ARG_PACKAGE_NAME = "arg_package_name"
+    const val ARG_CLASS_NAME = "arg_class_name"
+  }
+}
