diff --git a/app/src/main/java/biz/binarysolutions/weatherusa/MainActivity.java b/app/src/main/java/biz/binarysolutions/weatherusa/MainActivity.java
index e390ca8..8eb880b 100644
--- a/app/src/main/java/biz/binarysolutions/weatherusa/MainActivity.java
+++ b/app/src/main/java/biz/binarysolutions/weatherusa/MainActivity.java
@@ -6,11 +6,9 @@ import android.app.Dialog;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.location.Location;
 import android.location.LocationManager;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.provider.Settings;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -233,15 +231,6 @@ public class MainActivity
 		forecastHandler = new ForecastHandler(this, this);
 	}
 	
-	/**
-	 * 
-	 */
-	private void goToSettings() {
-		
-		Intent settings = new Intent(this, PreferencesActivity.class);
-    	startActivity(settings);
-	}	
-	
 	/**
 	 * 
 	 */
@@ -249,32 +238,6 @@ public class MainActivity
 		startActivity(new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS));
 	}
 	
-	/**
-	 * 
-	 * @param preferences
-	 * @return
-	 */
-	private boolean shouldRefreshLocation(SharedPreferences preferences) {
-	
-		String key          = getString(R.string.preferences_locationUpdates_key);
-		String defaultValue = getString(R.string.preferences_locationUpdates_default_value);
-		
-		return preferences.getBoolean(key, Boolean.getBoolean(defaultValue));
-	}
-
-	/**
-	 * 
-	 * @param preferences
-	 * @return
-	 */
-	private boolean shouldRefreshForecast(SharedPreferences preferences) {
-	
-		String key          = getString(R.string.preferences_forecastUpdates_key);
-		String defaultValue = getString(R.string.preferences_forecastUpdates_default_value);
-		
-		return preferences.getBoolean(key, Boolean.getBoolean(defaultValue));
-	}
-	
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
@@ -291,28 +254,14 @@ public class MainActivity
 		setButtonListeners();
 
 		AdHandler.initialize(this);
-	}
-	
-	@Override
-	protected void onResume() {
-		
-		SharedPreferences preferences = 
-			PreferenceManager.getDefaultSharedPreferences(this);
-		
-		if (shouldRefreshLocation(preferences)) {
-			refreshLocation();
-		}
-		
-		if (shouldRefreshForecast(preferences)) {
-			refreshForecast();
-		}
-		
-		super.onResume();
+
+		refreshLocation();
+		refreshForecast();
 	}
 
 	@Override
 	public void onPause() {
-		//TODO: is saving preferences necessary?
+		//TODO: this is saving location only, refactor it!
 		Preferences.save(getPreferences(MODE_PRIVATE), locationHandler);
 		super.onPause();
 	}
@@ -329,10 +278,6 @@ public class MainActivity
 		
 	 	switch (item.getItemId()) {
 	 	
-	 	case R.id.menuItemSettings:
-	 		goToSettings();
-	 		return true;
-	 	
 	 	case R.id.menuItemRefreshForecast:
 	 		refreshForecast();
 	 		return true;
diff --git a/app/src/main/java/biz/binarysolutions/weatherusa/PreferencesActivity.java b/app/src/main/java/biz/binarysolutions/weatherusa/PreferencesActivity.java
deleted file mode 100644
index 78794af..0000000
--- a/app/src/main/java/biz/binarysolutions/weatherusa/PreferencesActivity.java
+++ /dev/null
@@ -1,48 +0,0 @@
-package biz.binarysolutions.weatherusa;
-
-import android.content.SharedPreferences;
-import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
-import android.os.Bundle;
-import android.preference.PreferenceActivity;
-
-/**
- * 
- *
- */
-public class PreferencesActivity extends PreferenceActivity 
-	implements OnSharedPreferenceChangeListener {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        
-        addPreferencesFromResource(R.xml.preferences);
-    }
-
-	@Override
-	protected void onResume() {
-		super.onResume();
-		
-		getPreferenceScreen().
-    		getSharedPreferences().
-    			registerOnSharedPreferenceChangeListener(this);
-	}
-
-	@Override
-	protected void onPause() {
-		super.onPause();
-		
-        getPreferenceScreen().
-    		getSharedPreferences().
-    			unregisterOnSharedPreferenceChangeListener(this); 		
-	}
-
-	@Override
-	public void onSharedPreferenceChanged
-		(
-				SharedPreferences sharedPreferences, 
-				String            key
-		) {
-		// do nothing
-	}	
-}
