diff --git a/app/src/main/java/com/example/halftough/webcomreader/activities/ReadChapter/ComicPageView.java b/app/src/main/java/com/example/halftough/webcomreader/activities/ReadChapter/ComicPageView.java
index f65cf4b..eda0793 100644
--- a/app/src/main/java/com/example/halftough/webcomreader/activities/ReadChapter/ComicPageView.java
+++ b/app/src/main/java/com/example/halftough/webcomreader/activities/ReadChapter/ComicPageView.java
@@ -10,7 +10,6 @@ import android.graphics.RectF;
 import android.graphics.drawable.Drawable;
 import android.support.annotation.Nullable;
 import android.util.AttributeSet;
-import android.util.Log;
 import android.view.MotionEvent;
 import android.view.SurfaceView;
 
@@ -35,10 +34,9 @@ public class ComicPageView extends SurfaceView implements Runnable, Target {
     private ValueAnimator slideAnimator, xAnimator, yAnimator, wAnimator, hAnimator;
 
     private TouchState touchState = TouchState.EMPTY;
-    private boolean zoomed = false;
     private float startX1, startY1, startX2, startY2;
     private float x1f, y1f, x2f, y2f;
-    private int imgWidth, imgHeight, padX, padY, sPadX, sPadY;
+    private int imgWidth, imgHeight, padX, padY, initPadX, initPadY, startPadX, startPadY;
     private int slide;
     private int slideOffset;
     private float currentZoom;
@@ -93,7 +91,7 @@ public class ComicPageView extends SurfaceView implements Runnable, Target {
         switch(event.getAction()& MotionEvent.ACTION_MASK){
             case ACTION_DOWN:
                 saveStartPoint1(event.getX(), event.getY());
-                if(zoomed)
+                if(currentZoom > noZoom)
                     touchState = TouchState.MOVE;
                 else
                     touchState = TouchState.DOWN;
@@ -102,10 +100,6 @@ public class ComicPageView extends SurfaceView implements Runnable, Target {
                 if(touchState == TouchState.SWIPE){
                     swipeEnd(event.getX());
                 }
-                if(zoomed){
-//                  // TODO
-                    zoomed = false;
-                }
                 touchState = TouchState.EMPTY;
                 return false;
             case ACTION_POINTER_DOWN:
@@ -115,12 +109,14 @@ public class ComicPageView extends SurfaceView implements Runnable, Target {
                 }
                 break;
             case ACTION_POINTER_UP:
-                endZoom();
+                if(touchState == TouchState.ZOOM) {
+                    endZoom();
+                }
                 break;
             case ACTION_MOVE:
                 switch(touchState){
                     case MOVE:
-                        // TODO
+                            move(event.getX(), event.getY());
                         break;
                     case DOWN:
                         if( Math.abs(event.getX()- startX1) > slideOffset ){
@@ -138,13 +134,12 @@ public class ComicPageView extends SurfaceView implements Runnable, Target {
         }
         return true;
     }
-
     private void endZoom() {
         if(currentZoom < noZoom){
             int newW = Math.round(pageImg.getWidth()*noZoom);
             int newH = Math.round(pageImg.getHeight()*noZoom);
-            int newX = sPadX;
-            int newY = sPadY;
+            int newX = initPadX;
+            int newY = initPadY;
 
             animateZoom(newX, newY, newW, newH, (long)((noZoom-currentZoom)/(noZoom-minZoom)*FIX_ZOOM_SPEED));
             currentZoom = noZoom;
@@ -155,6 +150,8 @@ public class ComicPageView extends SurfaceView implements Runnable, Target {
     private void saveStartPoint1(float x, float y) {
         startX1 = x;
         startY1 = y;
+        startPadX = padX;
+        startPadY = padY;
     }
 
     private void saveStartPoint2(float x, float y) {
@@ -192,23 +189,32 @@ public class ComicPageView extends SurfaceView implements Runnable, Target {
         adjustPadding();
     }
 
+    private void move(float x, float y) {
+        padX = (int) (startPadX+x-startX1);
+        padY = (int) (startPadY+y-startY1);
+        adjustPadding();
+    }
+
     private void adjustPadding() {
+        // if negative zoom, keep centered
         if(currentZoom<noZoom){
             padX = (getWidth()-imgWidth)/2;
             padY = (getHeight()-imgHeight)/2;
         }
         else {
+            // if current width < screen, center X
             if(imgWidth < getWidth()){
-                padX = padX = (getWidth()-imgWidth)/2;
+                padX = (getWidth()-imgWidth)/2;
             }
-            else {
+            else { // if not, don't let it move outside view
                 padX = Math.max(padX, getWidth() - imgWidth);
                 padX = Math.min(padX, 0);
             }
+            // if current width < screen, center Y
             if(imgHeight < getHeight()){
                 padY = (getHeight()-imgHeight)/2;
             }
-            else {
+            else { // if not, don't let it move outside view
                 padY = Math.max(padY, getHeight() - imgHeight);
                 padY = Math.min(padY, 0);
             }
@@ -309,7 +315,6 @@ public class ComicPageView extends SurfaceView implements Runnable, Target {
                     canvas.save();
                     canvas.drawColor(Color.WHITE);
                     if (pageImg != null) {
-                        //Rect src = new Rect(0,0, pageImg.getWidth(),pageImg.getHeight());
                         RectF des = new RectF(padX+slide, padY, imgWidth+padX+slide, imgHeight+padY);
                         canvas.drawBitmap(pageImg, null, des, paint);
                     }
@@ -353,8 +358,8 @@ public class ComicPageView extends SurfaceView implements Runnable, Target {
                 padX = (getWidth()-imgWidth)/2;
                 padY = 0;
             }
-            sPadX = padX;
-            sPadY = padY;
+            initPadX = padX;
+            initPadY = padY;
             maxZoom = MAX_ZOOM_MOD*noZoom;
             minZoom = MIN_ZOOM_MOD*noZoom;
         }
