diff --git a/app/src/main/java/at/h4x/amsprung/ActivityAbout.java b/app/src/main/java/at/h4x/amsprung/ActivityAbout.java
deleted file mode 100644
index 6aea49e..0000000
--- a/app/src/main/java/at/h4x/amsprung/ActivityAbout.java
+++ /dev/null
@@ -1,22 +0,0 @@
-// SPDX-FileCopyrightText: 2021 Michael Pöhn <michael.poehn@fsfe.org>
-// SPDX-License-Identifier: GPL-3.0-or-later
-
-package at.h4x.amsprung;
-
-import android.os.Bundle;
-import android.os.PersistableBundle;
-
-import androidx.appcompat.app.AppCompatActivity;
-
-/**
- * Created by uniq on 15.10.15.
- */
-public class ActivityAbout extends AppCompatActivity {
-
-    @Override
-    public void onCreate(Bundle savedInstanceState, PersistableBundle persistentState) {
-        super.onCreate(savedInstanceState, persistentState);
-
-        setContentView(R.layout.activity_about);
-    }
-}
diff --git a/app/src/main/java/at/h4x/amsprung/DebugActivity.java b/app/src/main/java/at/h4x/amsprung/DebugActivity.java
index aa7504b..bedcd74 100644
--- a/app/src/main/java/at/h4x/amsprung/DebugActivity.java
+++ b/app/src/main/java/at/h4x/amsprung/DebugActivity.java
@@ -15,10 +15,10 @@ public class DebugActivity extends AppCompatActivity {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_debug);
 
-        findViewById(R.id.btn_launch_main_activity).setOnClickListener(new View.OnClickListener() {
+        findViewById(R.id.btn_launch_home_activity).setOnClickListener(new View.OnClickListener() {
             @Override
-            public void onClick(View v) {
-                startActivity(new Intent(DebugActivity.this, MainActivity.class));
+            public void onClick(View view) {
+                startActivity(new Intent(DebugActivity.this, HomeActivity.class));
             }
         });
         findViewById(R.id.btn_launch_nearby_stops_activity).setOnClickListener(new View.OnClickListener() {
diff --git a/app/src/main/java/at/h4x/amsprung/MainActivity.java b/app/src/main/java/at/h4x/amsprung/MainActivity.java
deleted file mode 100644
index 6eef04c..0000000
--- a/app/src/main/java/at/h4x/amsprung/MainActivity.java
+++ /dev/null
@@ -1,156 +0,0 @@
-// SPDX-FileCopyrightText: 2021 Michael Pöhn <michael.poehn@fsfe.org>
-// SPDX-License-Identifier: GPL-3.0-or-later
-
-package at.h4x.amsprung;
-
-import android.annotation.SuppressLint;
-import android.content.Context;
-import android.location.Criteria;
-import android.location.Location;
-import android.location.LocationListener;
-import android.location.LocationManager;
-
-import androidx.appcompat.app.AppCompatActivity;
-import android.os.Bundle;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.widget.Toast;
-
-import java.util.List;
-
-import at.h4x.amsprung.util.MinLog;
-import at.h4x.amsprung.wienerlinienapi.MonitorInfoAsyncTask;
-
-public class MainActivity extends AppCompatActivity {
-
-    @SuppressLint("NewApi")
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
-
-        LocationManager locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
-
-        Location fakeLocation = new Location(LocationManager.GPS_PROVIDER);
-        fakeLocation.setLongitude(48.20887);
-        fakeLocation.setLatitude(16.37246);
-        fakeLocation.setAccuracy(0.5F);
-        fakeLocation.setTime(System.currentTimeMillis());
-        fakeLocation.setElapsedRealtimeNanos(System.currentTimeMillis());
-        // locationManager.addTestProvider(LocationManager.NETWORK_PROVIDER, false, false, false, false, false, true, true, 0, 5);
-        // locationManager.setTestProviderEnabled(LocationManager.NETWORK_PROVIDER, true);
-        // locationManager.setTestProviderLocation(LocationManager.NETWORK_PROVIDER, fakeLocation);
-
-        Criteria locationUpdateCriteria = new Criteria();
-        locationUpdateCriteria.setAccuracy(Criteria.ACCURACY_COARSE); // ACCURACY_FINE
-        locationUpdateCriteria.setAltitudeRequired(false);
-        locationUpdateCriteria.setBearingAccuracy(Criteria.NO_REQUIREMENT);
-        locationUpdateCriteria.setBearingRequired(false);
-        locationUpdateCriteria.setCostAllowed(false);
-        locationUpdateCriteria.setHorizontalAccuracy(Criteria.ACCURACY_LOW);
-        locationUpdateCriteria.setPowerRequirement(Criteria.POWER_HIGH);
-        locationUpdateCriteria.setSpeedAccuracy(Criteria.NO_REQUIREMENT);
-        locationUpdateCriteria.setSpeedRequired(false);
-        locationUpdateCriteria.setVerticalAccuracy(Criteria.NO_REQUIREMENT);
-
-        //locationManager.requestSingleUpdate(locationUpdateCriteria, locationListener, getMainLooper());
-        //locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 100, 0.0F, locationListener);
-        //locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 1000, 1, locationListener);
-
-        //locationListener.onLocationChanged(fakeLocation);
-
-        /*
-        int spectrumStart = 140;
-        int spectrumWidth = 10;
-        for(int i = spectrumStart; i < spectrumStart + spectrumWidth; i++){
-            MonitorInfoAsyncTask a = new MonitorInfoAsyncTask(){
-                @Override
-                protected void onPostExecute(List<MonitorInfoAsyncTask.MonitorInfo> monitorInfos) {
-                for(MonitorInfo monitorInfo : monitorInfos) {
-                    if (monitorInfo != null && monitorInfo.getData() != null && monitorInfo.getData().getMonitors() != null) {
-                        for (Monitor m : monitorInfo.getData().getMonitors()) {
-                            // TODO: do stuff with monitor info
-                            StringBuilder sb = new StringBuilder();
-                            sb.append("{'rbl': ");
-                            sb.append(m.getLocationStop().getProperties().getAttributes().getRbl().toString());
-                            sb.append(", 'title': '");
-                            sb.append(m.getLocationStop().getProperties().getTitle());
-                            sb.append("', 'lat': ");
-                            sb.append(m.getLocationStop().getGeometry().getCoordinates().get(0));
-                            sb.append(", 'lng': ");
-                            sb.append(m.getLocationStop().getGeometry().getCoordinates().get(1));
-                            sb.append("}");
-                            MinLog.v(sb.toString());
-                        }
-                    }
-                }
-                }
-            };
-            a.execute(i);
-        }
-        */
-
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        // Inflate the menu; this adds items to the action bar if it is present.
-        getMenuInflater().inflate(R.menu.menu_main, menu);
-        return true;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        // Handle action bar item clicks here. The action bar will
-        // automatically handle clicks on the Home/Up button, so long
-        // as you specify a parent activity in AndroidManifest.xml.
-        int id = item.getItemId();
-
-        //noinspection SimplifiableIfStatement
-        if (id == R.id.action_settings) {
-            return true;
-        }
-
-        return super.onOptionsItemSelected(item);
-    }
-
-
-
-    private final LocationListener locationListener = new LocationListener() {
-        @Override
-        public void onLocationChanged(Location location) {
-            MinLog.d("locationListener.onLocationChange");
-            Toast.makeText(MainActivity.this, "locationListener.onLocationChange", Toast.LENGTH_SHORT).show();
-
-            MonitorInfoAsyncTask a = new MonitorInfoAsyncTask(){
-                @Override
-                protected void onPostExecute(List<MonitorInfo> monitorInfos) {
-                    super.onPostExecute(monitorInfos);
-                    // TODO: do stuff with monitor infos
-                    //for(MonitorInfo monitorInfo : monitorInfos) {
-                    //    MinLog.v("%s %d %s", monitorInfo.getMessage().getValue(), monitorInfo.getMessage().getMessageCode(), monitorInfo.getMessage().getServerTime());
-                    //}
-                }
-            };
-            a.execute();
-        }
-
-        @Override
-        public void onStatusChanged(String s, int i, Bundle bundle) {
-            MinLog.d("locationListener.onStatusChange");
-            Toast.makeText(MainActivity.this, "locationListener.onStatusChange", Toast.LENGTH_SHORT).show();
-        }
-
-        @Override
-        public void onProviderEnabled(String s) {
-            MinLog.d("locationListener.onProviderEnabled");
-            Toast.makeText(MainActivity.this, "locationListener.onProviderEnabled", Toast.LENGTH_SHORT).show();
-        }
-
-        @Override
-        public void onProviderDisabled(String s) {
-            MinLog.d("locationListener.onProviderDisabled");
-            Toast.makeText(MainActivity.this, "locationListener.onProviderDisabled", Toast.LENGTH_SHORT).show();
-        }
-    };
-}
diff --git a/app/src/main/java/at/h4x/amsprung/UpdateAppDatabaseService.java b/app/src/main/java/at/h4x/amsprung/UpdateAppDatabaseService.java
index a89ef56..32432e5 100644
--- a/app/src/main/java/at/h4x/amsprung/UpdateAppDatabaseService.java
+++ b/app/src/main/java/at/h4x/amsprung/UpdateAppDatabaseService.java
@@ -124,7 +124,7 @@ public class UpdateAppDatabaseService extends Service {
             public void run() {
 
                 PendingIntent pi = PendingIntent.getActivity(UpdateAppDatabaseService.this, 0,
-                        new Intent(UpdateAppDatabaseService.this, MainActivity.class), 0);
+                        new Intent(UpdateAppDatabaseService.this, HomeActivity.class), 0);
 
                 Notification n =
                         new NotificationCompat.Builder(UpdateAppDatabaseService.this, NotificationHelper.DEBUG_CHANNEL_ID)
