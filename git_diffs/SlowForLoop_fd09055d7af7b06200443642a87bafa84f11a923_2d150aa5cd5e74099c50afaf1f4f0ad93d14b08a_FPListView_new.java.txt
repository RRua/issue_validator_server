diff --git a/app/src/main/java/com/gabm/fancyplaces/ui/FPListView.java b/app/src/main/java/com/gabm/fancyplaces/ui/FPListView.java
index 4edc1ce..60f2d89 100644
--- a/app/src/main/java/com/gabm/fancyplaces/ui/FPListView.java
+++ b/app/src/main/java/com/gabm/fancyplaces/ui/FPListView.java
@@ -22,9 +22,7 @@ import android.content.Context;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 
-// replacement for
-import com.melnykov.fab.FloatingActionButton;
-// import android.support.design.widget.FloatingActionButton;
+import android.support.design.widget.FloatingActionButton;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -63,8 +61,8 @@ public class FPListView extends TabItem {
 
         // add places to list
         fancyPlacesList = (ListView) v.findViewById(R.id.fp_list_view);
-        com.melnykov.fab.FloatingActionButton fab = (com.melnykov.fab.FloatingActionButton) v.findViewById(R.id.fp_list_fab);
-        fab.attachToListView(fancyPlacesList);
+        FloatingActionButton fab = (FloatingActionButton) v.findViewById(R.id.fp_list_fab);
+        //!!!??? fab.attachToListView(fancyPlacesList);
 
         // set on click listener
         fab.setOnClickListener(new View.OnClickListener() {
diff --git a/app/src/main/java/com/gabm/fancyplaces/ui/FPListView_new.java b/app/src/main/java/com/gabm/fancyplaces/ui/FPListView_new.java
deleted file mode 100644
index 03401a6..0000000
--- a/app/src/main/java/com/gabm/fancyplaces/ui/FPListView_new.java
+++ /dev/null
@@ -1,149 +0,0 @@
-/*
- * Copyright (C) 2015 Matthias Gabriel
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- */
-
-package com.gabm.fancyplaces.ui;
-
-import android.app.Activity;
-import android.content.Context;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.ListView;
-
-import com.gabm.fancyplaces.R;
-import com.gabm.fancyplaces.functional.IOnListModeChangeListener;
-import com.gabm.fancyplaces.functional.OnFancyPlaceSelectedListener;
-import com.melnykov.fab.FloatingActionButton;
-
-import java.util.ArrayList;
-import java.util.List;
-
-// replacement for
-// import android.support.design.widget.android.support.design.widget.;
-
-/**
- * Created by gabm on 15/05/15.
- */
-public class FPListView_new extends TabItem {
-
-    private OnFancyPlaceSelectedListener fancyPlaceSelectedCallback = null;
-    private ListView fancyPlacesList = null;
-    private MainWindow parent = null;
-    private List<IOnListModeChangeListener> onListModeChangeListeners = new ArrayList<>();
-
-
-
-    public static FPListView_new newInstance() {
-        FPListView_new result = new FPListView_new();
-
-        return result;
-    }
-
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        View v = inflater.inflate(R.layout.fancy_places_list_view, container, false);
-
-        // add places to list
-        fancyPlacesList = (ListView) v.findViewById(R.id.fp_list_view);
-        android.support.design.widget.FloatingActionButton fab = (android.support.design.widget.FloatingActionButton) v.findViewById(R.id.fp_list_fab);
-        //!!! fab.attachToListView(fancyPlacesList);
-
-        // set on click listener
-        fab.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                fancyPlaceSelectedCallback.onFancyPlaceSelected(0, OnFancyPlaceSelectedListener.INTENT_CREATE_NEW);
-            }
-        });
-
-
-        // set adapter
-        fancyPlacesList.setAdapter(parent.fancyPlaceArrayAdapter);
-
-        // add on mode change listener
-        onListModeChangeListeners.add(parent.fancyPlaceArrayAdapter);
-        changeListMode(IOnListModeChangeListener.MODE_NORMAL);
-
-        return v;
-    }
-
-    @Deprecated
-    @Override
-    public void onAttach(Activity activity) {
-        super.onAttach(activity);
-
-        try {
-            fancyPlaceSelectedCallback = (MainWindow) activity;
-            onListModeChangeListeners.add((MainWindow) activity);
-
-            parent = (MainWindow) activity;
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-    }
-
-    @Override
-    public String getTitle(Context context) {
-        return context.getString(R.string.fp_list_view_title);
-    }
-
-    public void setMultiSelectMode(int newMode) {
-        changeListMode(newMode);
-    }
-
-    protected void changeListMode(int newMode) {
-        if (newMode == IOnListModeChangeListener.MODE_NORMAL) {
-            // add click listener
-            fancyPlacesList.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-                public void onItemClick(AdapterView<?> parent, View view,
-                                        int position, long id) {
-                    fancyPlaceSelectedCallback.onFancyPlaceSelected(position, OnFancyPlaceSelectedListener.INTENT_VIEW);
-                }
-            });
-
-            fancyPlacesList.setOnItemLongClickListener(
-                    new AdapterView.OnItemLongClickListener() {
-                        @Override
-                        public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, long l) {
-                            changeListMode(IOnListModeChangeListener.MODE_MULTI_SELECT);
-                            parent.fancyPlaceArrayAdapter.toggleSelected(i);
-                            return true;
-                        }
-                    });
-        }
-        if (newMode == IOnListModeChangeListener.MODE_MULTI_SELECT) {
-            fancyPlacesList.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-                @Override
-                public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-                    parent.fancyPlaceArrayAdapter.toggleSelected(i);
-                }
-            });
-            fancyPlacesList.setOnItemLongClickListener(null);
-        }
-
-        notifyListeners(newMode);
-    }
-
-    protected void notifyListeners(int newMode) {
-        for (int i = 0; i < onListModeChangeListeners.size(); i++)
-            onListModeChangeListeners.get(i).onListModeChange(newMode);
-    }
-}
\ No newline at end of file
diff --git a/app/src/main/java/com/gabm/fancyplaces/ui/FPOsmDroidView.java b/app/src/main/java/com/gabm/fancyplaces/ui/FPOsmDroidView.java
index a2a9902..fb5fbed 100644
--- a/app/src/main/java/com/gabm/fancyplaces/ui/FPOsmDroidView.java
+++ b/app/src/main/java/com/gabm/fancyplaces/ui/FPOsmDroidView.java
@@ -22,9 +22,7 @@ import android.content.Context;
 import android.location.Location;
 import android.os.Bundle;
 
-//!!!
-import com.melnykov.fab.FloatingActionButton;
-// import android.support.design.widget.FloatingActionButton;
+import android.support.design.widget.FloatingActionButton;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
diff --git a/app/src/main/java/com/gabm/fancyplaces/ui/FPOsmDroidView_new.java b/app/src/main/java/com/gabm/fancyplaces/ui/FPOsmDroidView_new.java
deleted file mode 100644
index d4d2a31..0000000
--- a/app/src/main/java/com/gabm/fancyplaces/ui/FPOsmDroidView_new.java
+++ /dev/null
@@ -1,143 +0,0 @@
-/*
- * Copyright (C) 2015 Matthias Gabriel
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- */
-
-package com.gabm.fancyplaces.ui;
-
-import android.app.Activity;
-import android.content.Context;
-import android.location.Location;
-import android.os.Bundle;
-import android.support.design.widget.FloatingActionButton;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Toast;
-
-import com.gabm.fancyplaces.FancyPlacesApplication;
-import com.gabm.fancyplaces.R;
-import com.gabm.fancyplaces.functional.LocationHandler;
-import com.gabm.fancyplaces.functional.OnFancyPlaceSelectedListener;
-import com.gabm.fancyplaces.functional.OsmMapHandler;
-
-import org.osmdroid.tileprovider.tilesource.TileSourceFactory;
-
-//!!! import com.melnykov.fab.FloatingActionButton;
-
-/**
- * Created by gabm on 23/05/15.
- */
-public class FPOsmDroidView_new extends TabItem implements LocationHandler.OnLocationUpdatedListener {
-
-    private OsmMapViewScrollWorkaround mMapView = null;
-    private OsmMapHandler mapHandler = null;
-    private OnFancyPlaceSelectedListener fancyPlaceSelectedCallback = null;
-    private MainWindow parent = null;
-    private LocationHandler locationHandler = null;
-
-    public static FPOsmDroidView_new newInstance() {
-        FPOsmDroidView_new result = new FPOsmDroidView_new();
-
-        return result;
-    }
-
-    @Override
-    public String getTitle(Context context) {
-        return context.getString(R.string.fp_map_view_title);
-    }
-
-    @Override
-    public void onLocationUpdated(Location location) {
-        mapHandler.setCamera(location.getLatitude(), location.getLongitude(), FancyPlacesApplication.MAP_DEFAULT_ZOOM_FAR);
-        mapHandler.setCurrentLocationMarker(location.getLatitude(), location.getLongitude(), getString(R.string.your_location));
-    }
-
-    @Override
-    public void onLocationUpdating() {
-        getActivity().runOnUiThread(
-                new Runnable() {
-                    @Override
-                    public void run() {
-                        Toast.makeText(getActivity(), R.string.updating_location, Toast.LENGTH_SHORT).show();
-                    }
-                }
-        );
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View v = inflater.inflate(R.layout.fancy_places_osmview, container, false);
-
-        mMapView = (OsmMapViewScrollWorkaround) v.findViewById(R.id.fp_map_view);
-        // mMapView.setTileSource(TileSourceFactory.MAPQUESTOSM);
-        mMapView.setTileSource(TileSourceFactory.MAPNIK);
-        mMapView.setMultiTouchControls(true);
-        mMapView.setTilesScaledToDpi(true);
-        // mMapView.setWorkaroundEnabled(true);
-
-        mapHandler = new OsmMapHandler(mMapView, fancyPlaceSelectedCallback);
-        mapHandler.setAdapter(parent.fancyPlaceArrayAdapter);
-
-        locationHandler = FancyPlacesApplication.getLocationHandler(getActivity().getApplication());
-        locationHandler.addOnLocationUpdatedListener(this);
-        locationHandler.updateLocation(false);
-
-        // add fab callback
-        FloatingActionButton fab = (FloatingActionButton) v.findViewById(R.id.fp_map_fab);
-        fab.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                fancyPlaceSelectedCallback.onFancyPlaceSelected(0, OnFancyPlaceSelectedListener.INTENT_CREATE_NEW);
-            }
-        });
-
-
-        return v;
-    }
-
-    @Override
-    public void onViewStateRestored(Bundle savedInstanceState) {
-        super.onViewStateRestored(savedInstanceState);
-        locationHandler.updateLocation(false);
-    }
-
-    @Override
-    public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-    }
-
-
-    @Override
-    public void onDestroyView() {
-        locationHandler.removeOnLocationUpdatedListener(this);
-        super.onDestroyView();
-
-    }
-
-    @Deprecated
-    @Override
-    public void onAttach(Activity activity) {
-        super.onAttach(activity);
-
-        try {
-            fancyPlaceSelectedCallback = (MainWindow) activity;
-            parent = (MainWindow) activity;
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-    }
-
-}
