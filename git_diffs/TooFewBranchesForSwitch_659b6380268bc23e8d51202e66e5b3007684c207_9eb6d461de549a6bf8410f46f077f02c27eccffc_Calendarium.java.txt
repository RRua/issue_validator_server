diff --git a/app/src/main/java/com/dev/xavier/tempusromanum/Calendarium.java b/app/src/main/java/com/dev/xavier/tempusromanum/Calendarium.java
index 9afbf2b..aab7aae 100644
--- a/app/src/main/java/com/dev/xavier/tempusromanum/Calendarium.java
+++ b/app/src/main/java/com/dev/xavier/tempusromanum/Calendarium.java
@@ -19,10 +19,26 @@ import java.util.GregorianCalendar;
  *    See the License for the specific language governing permissions and
  *    limitations under the License.
  */
-public class Calendarium {
-    public static String tempus(Date p_tempus)
+public class Calendarium
+{
+    public enum InitiumCalendarii
     {
-        Calendar calendarium = Calendar.getInstance();
+        SINE, // les années ne sont pas affichées
+        ANNO_DOMINI, // les années sont comptées depuis JC
+        AB_URBE_CONDITA, // les années sont comptées depuis la création de Rome
+    }
+
+    /**
+     * @param p_tempus date a convertir en latin
+     * @param p_est si true, la traduction commence par "Est ..."
+     * @param p_nomenDiei si true, ajoute le jour de la semaine
+     * @param p_initium Point de référence pour les années.
+     * @param p_eraBrevis si true, l’erre sera abrégée (A.D. ou  A.U.C.), sinon elle sera en toute lettre.
+     * @return
+     */
+    public static String tempus(Date p_tempus, boolean p_est, boolean p_nomenDiei, InitiumCalendarii p_initium, boolean p_eraBrevis)
+    {
+        Calendar calendarium = new GregorianCalendar();
         calendarium.setTime(p_tempus);
 
         int dies = calendarium.get(Calendar.DAY_OF_MONTH);
@@ -30,9 +46,16 @@ public class Calendarium {
         int idus = idusMensium(mensis);
         int nonae = idus-8;
         int dieiMensis=calendarium.getActualMaximum(Calendar.DAY_OF_MONTH);
+        int diesHebdomadis=calendarium.get(Calendar.DAY_OF_WEEK);
 
         StringBuilder summa=new StringBuilder();
 
+        if (p_est)
+            summa.append("Est ");
+
+        if (p_nomenDiei)
+            summa.append(nomenDiei(diesHebdomadis));
+
         if (dies==1)
             summa	.append("kalendis ")
                     .append(mensesRomaniAblativus(mensis));
@@ -67,20 +90,64 @@ public class Calendarium {
             summa 	.append("pridie kalendas ")
                     .append(mensesRomaniAccusativus(mensis+1));
 
-        String annusRomanus = romanusNumerus(calendarium.get(Calendar.YEAR));
+        if (p_initium == InitiumCalendarii.AB_URBE_CONDITA)
+        {
+            int annus=calendarium.get(Calendar.YEAR);
+
+            // si est ante diem undecimum kalendas maias, annum uno minuit quia Roma ante diem undecimum kalendas maias aedificata est.
+            if (calendarium.get(Calendar.MONTH) < Calendar.APRIL || (calendarium.get(Calendar.MONTH) == Calendar.APRIL) && (calendarium.get(Calendar.DAY_OF_MONTH) < 21))
+                annus--;
+
+            // Quia Roma in DCCLIII aedificatus est.
+            if (calendarium.get(GregorianCalendar.ERA) == GregorianCalendar.AD)
+                annus+=753;
+            else
+                annus=754-annus;
+
+            boolean anteUrbemConditam=false;
+            if (annus<=0)
+            {
+                annus=-annus+1;
+                anteUrbemConditam=true;
+            }
 
-        switch (calendarium.get(Calendar.ERA)) {
-            case GregorianCalendar.AD:
-                summa.append(" ").append(annusRomanus).append(" A.D.");
-                break;
-            case GregorianCalendar.BC:
-                summa.append(" ").append(annusRomanus).append(" B.C.");
-                break;
+            String annusRomanus = romanusNumerus(annus);
+
+            if (anteUrbemConditam)
+                summa.append(" ").append(annusRomanus).append(p_eraBrevis ? " Ant.U.C." : " ante Urbem conditam.");
+            else
+                summa.append(" ").append(annusRomanus).append(p_eraBrevis ? " A.U.C." : " ab Urbe condita.");
+        }
+        else if (p_initium == InitiumCalendarii.ANNO_DOMINI)
+        {
+            String annusRomanus = romanusNumerus(calendarium.get(Calendar.YEAR));
+            if (calendarium.get(GregorianCalendar.ERA) == GregorianCalendar.AD)
+                summa.append(" ").append(annusRomanus).append(p_eraBrevis ? " A.D." : " anno domini.");
+            else
+                summa.append(" ").append(annusRomanus).append(p_eraBrevis ? " A.C.N." : " ante christum natum.");
         }
+        else
+            summa.append(".");
 
         return summa.toString();
     }
 
+    private static String nomenDiei (int p_diesHebdomadis)
+    {
+        switch (p_diesHebdomadis)
+        {
+            case Calendar.SUNDAY: return "dies solis ";
+            case Calendar.MONDAY : return "dies lunae ";
+            case Calendar.TUESDAY : return "dies Martis ";
+            case Calendar.WEDNESDAY : return "dies Mercurii ";
+            case Calendar.THURSDAY : return "dies Jovis ";
+            case Calendar.FRIDAY : return "dies Veneris ";
+            case Calendar.SATURDAY : return "dies Saturni ";
+        }
+
+        throw new IllegalArgumentException (String.valueOf(p_diesHebdomadis));
+    }
+
     private static int idusMensium(int p_mensis)
     {
         if (p_mensis == 1 || p_mensis == 2 || p_mensis==4 || p_mensis==6 || p_mensis==8 || p_mensis==9 || p_mensis==11 || p_mensis==12)
@@ -156,7 +223,7 @@ public class Calendarium {
             case 19 :	return "undevincesimum";
         }
 
-        return "error";
+        throw new IllegalArgumentException (String.valueOf(p_arg));
     }
 
     private static String romanusNumerus(int p_numerus)
@@ -177,4 +244,4 @@ public class Calendarium {
         }
         return sb.toString();
     }
-}
+}
\ No newline at end of file
diff --git a/app/src/main/java/com/dev/xavier/tempusromanum/MainActivity.java b/app/src/main/java/com/dev/xavier/tempusromanum/MainActivity.java
index 2f4c605..9973b63 100644
--- a/app/src/main/java/com/dev/xavier/tempusromanum/MainActivity.java
+++ b/app/src/main/java/com/dev/xavier/tempusromanum/MainActivity.java
@@ -110,7 +110,7 @@ public class MainActivity extends AppCompatActivity implements SharedPreferences
             public void onClick(View view) {
                 // Force today date
                 updateDate(true);
-                Snackbar.make(view, "The date has been reset", Snackbar.LENGTH_LONG)
+                Snackbar.make(view, getString(R.string.date_reset), Snackbar.LENGTH_LONG)
                         .setAction("Action", null).show();
             }
         });
@@ -150,7 +150,7 @@ public class MainActivity extends AppCompatActivity implements SharedPreferences
                         newd = 1;
                     }
                 }
-                if(d!= null)
+                if(d != null)
                 {
                     updateDay = newd != d;
                     d = newd;
@@ -219,8 +219,8 @@ public class MainActivity extends AppCompatActivity implements SharedPreferences
             }
             date = c.getTime();
         }
-        //  + " --- " + date.toGMTString()
-        outputDate.setText(Calendarium.tempus(date));
+        // TODO convertir à la nouvelle api
+        outputDate.setText(Calendarium.tempus(date, false, false, Calendarium.InitiumCalendarii.ANNO_DOMINI, true));
         Calendar calendar = Calendar.getInstance();
         calendar.setTime(date);
         lockTextWatcher = true;
@@ -278,10 +278,19 @@ public class MainActivity extends AppCompatActivity implements SharedPreferences
     @Override
     public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
 
+        /*
         if (key.equals("font_size")) {
             // Update widget
             updateWidget();
         }
+        */
+        switch (key)
+        {
+            case "font_size":
+            case "font_color":
+                updateWidget();
+                break;
+        }
     }
 
     @Override
diff --git a/app/src/main/java/com/dev/xavier/tempusromanum/TempusRomanumWidget.java b/app/src/main/java/com/dev/xavier/tempusromanum/TempusRomanumWidget.java
index 894c599..acf9a39 100644
--- a/app/src/main/java/com/dev/xavier/tempusromanum/TempusRomanumWidget.java
+++ b/app/src/main/java/com/dev/xavier/tempusromanum/TempusRomanumWidget.java
@@ -13,6 +13,8 @@ import android.util.TypedValue;
 import android.widget.RemoteViews;
 import android.widget.Toast;
 
+import androidx.core.content.ContextCompat;
+
 import java.util.Calendar;
 import java.util.Date;
 
@@ -40,8 +42,15 @@ public class TempusRomanumWidget extends AppWidgetProvider {
 
         // Chargement des préférences
         SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(context);
-        String defaultFontSize = context.getResources().getString(R.string.default_font_size);
-        int fontSize = Integer.valueOf(pref.getString(context.getString(R.string.saved_font_size), defaultFontSize));
+
+        // 1.1 font size
+        final int fontSize = Integer.valueOf(pref.getString(context.getString(R.string.saved_font_size), context.getString(R.string.default_font_size)));
+
+        // 1.2 font color
+        final String colorName = pref.getString(context.getString(R.string.saved_font_color), context.getString(R.string.default_font_color));
+        final int colorResId = context.getResources().getIdentifier(colorName,"color", context.getPackageName());
+        final int fontColor = ContextCompat.getColor(context, colorResId);
+
 
         // Faut-il calculer la mise à jour ?
         if(currentDate != null)
@@ -60,8 +69,8 @@ public class TempusRomanumWidget extends AppWidgetProvider {
         }
 
         // Calcul de la date en latin
-        CharSequence widgetText = Calendarium.tempus(currentDate);
-
+        // TODO convertir à la nouvelle api
+        CharSequence widgetText = Calendarium.tempus(currentDate, false, false, Calendarium.InitiumCalendarii.ANNO_DOMINI, true);
 
         // Construct the RemoteViews object
         RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.tempus_romanum_widget);
@@ -69,7 +78,7 @@ public class TempusRomanumWidget extends AppWidgetProvider {
         // Set font size
         views.setTextViewTextSize(R.id.appwidget_text, TypedValue.COMPLEX_UNIT_SP,fontSize);
         // Set font color
-        // TODO views.setTextColor();
+        views.setTextColor(R.id.appwidget_text, fontColor);
 
         // Instruct the widget manager to update the widget
         appWidgetManager.updateAppWidget(appWidgetId, views);
@@ -82,7 +91,6 @@ public class TempusRomanumWidget extends AppWidgetProvider {
             intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
             intent.setComponent(new ComponentName(context.getPackageName(), MainActivity.class.getName()));
             PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, 0);
-            // RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.tempus_romanum_widget);
             views.setOnClickPendingIntent(R.id.appwidget_text, pendingIntent);
             appWidgetManager.updateAppWidget(appWidgetId, views);
         } catch (ActivityNotFoundException e) {
