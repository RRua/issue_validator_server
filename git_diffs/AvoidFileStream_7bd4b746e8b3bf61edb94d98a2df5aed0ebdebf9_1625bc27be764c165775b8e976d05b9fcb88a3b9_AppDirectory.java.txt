diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java
index cc07f4c0..e49bbaf6 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java
@@ -7,8 +7,6 @@ import android.view.ViewGroup;
 import android.widget.ImageButton;
 import android.widget.LinearLayout;
 
-import java.io.File;
-
 import ch.bailu.aat.R;
 import ch.bailu.aat.dispatcher.CurrentLocationSource;
 import ch.bailu.aat.dispatcher.EditorSource;
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
index 0db65238..7930df46 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
@@ -10,8 +10,6 @@ import android.widget.AdapterView;
 import android.widget.AdapterView.OnItemClickListener;
 import android.widget.LinearLayout;
 
-import java.io.File;
-
 import ch.bailu.aat.R;
 import ch.bailu.aat.description.ContentDescription;
 import ch.bailu.aat.description.PathDescription;
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
index df04b0fe..441fe41a 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
@@ -11,7 +11,6 @@ import android.view.ViewGroup;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 
-import java.io.File;
 import java.io.IOException;
 
 import ch.bailu.aat.R;
diff --git a/app/src/main/java/ch/bailu/aat/activities/ExternalListActivity.java b/app/src/main/java/ch/bailu/aat/activities/ExternalListActivity.java
index 7a1c5769..9c4510d2 100644
--- a/app/src/main/java/ch/bailu/aat/activities/ExternalListActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/ExternalListActivity.java
@@ -2,8 +2,6 @@ package ch.bailu.aat.activities;
 
 import android.content.Intent;
 
-import java.io.File;
-
 import ch.bailu.aat.R;
 import ch.bailu.aat.description.ContentDescription;
 import ch.bailu.aat.description.DateDescription;
diff --git a/app/src/main/java/ch/bailu/aat/activities/MainActivity.java b/app/src/main/java/ch/bailu/aat/activities/MainActivity.java
index a80aeb1b..d96660e2 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MainActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MainActivity.java
@@ -13,7 +13,6 @@ import ch.bailu.aat.preferences.SolidExternalDirectory;
 import ch.bailu.aat.preferences.SolidFile;
 import ch.bailu.aat.preferences.SolidPreset;
 import ch.bailu.aat.util.fs.AppDirectory;
-import ch.bailu.aat.util.fs.JFile;
 import ch.bailu.aat.util.ui.AppLayout;
 import ch.bailu.aat.views.AbsLabelTextView;
 import ch.bailu.aat.views.ContentView;
diff --git a/app/src/main/java/ch/bailu/aat/activities/MapFeatureListActivity.java b/app/src/main/java/ch/bailu/aat/activities/MapFeatureListActivity.java
index 29143d10..c4464782 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MapFeatureListActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MapFeatureListActivity.java
@@ -1,7 +1,6 @@
 package ch.bailu.aat.activities;
 
 import android.content.Intent;
-import android.content.res.AssetManager;
 
 import ch.bailu.aat.util.AppIntent;
 import ch.bailu.aat.util.fs.foc.FocAsset;
diff --git a/app/src/main/java/ch/bailu/aat/activities/OverlayListActivity.java b/app/src/main/java/ch/bailu/aat/activities/OverlayListActivity.java
index 3408ad9e..33cdcaaf 100644
--- a/app/src/main/java/ch/bailu/aat/activities/OverlayListActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/OverlayListActivity.java
@@ -2,8 +2,6 @@ package ch.bailu.aat.activities;
 
 import android.content.Intent;
 
-import java.io.File;
-
 import ch.bailu.aat.R;
 import ch.bailu.aat.description.ContentDescription;
 import ch.bailu.aat.description.DateDescription;
diff --git a/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java b/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java
index b7fcf547..709662e6 100644
--- a/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java
@@ -5,8 +5,8 @@ import android.os.Bundle;
 import android.widget.LinearLayout;
 
 import ch.bailu.aat.R;
+import ch.bailu.aat.menus.DirectoryMenu;
 import ch.bailu.aat.preferences.SolidPreset;
-import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.aat.views.ContentView;
 import ch.bailu.aat.views.MainControlBar;
 import ch.bailu.aat.views.description.MultiView;
@@ -65,12 +65,10 @@ public class PreferencesActivity extends AbsDispatcher {
     protected void onActivityResult(int requestCode,
                                     int resultCode,
                                     Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
+        DirectoryMenu.onActivityResult(this, requestCode, resultCode, data);
+    }
 
-        if (data != null)
-            AppLog.d(this, data.toString());
 
-    }
     @Override
     public void onResumeWithService() {
         super.onResumeWithService();
diff --git a/app/src/main/java/ch/bailu/aat/activities/TrackListActivity.java b/app/src/main/java/ch/bailu/aat/activities/TrackListActivity.java
index 48d4ebb9..68851a11 100644
--- a/app/src/main/java/ch/bailu/aat/activities/TrackListActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/TrackListActivity.java
@@ -2,8 +2,6 @@ package ch.bailu.aat.activities;
 
 import android.content.Intent;
 
-import java.io.File;
-
 import ch.bailu.aat.R;
 import ch.bailu.aat.description.AverageSpeedDescription;
 import ch.bailu.aat.description.ContentDescription;
diff --git a/app/src/main/java/ch/bailu/aat/coordinates/SrtmCoordinates.java b/app/src/main/java/ch/bailu/aat/coordinates/SrtmCoordinates.java
index 7cb4a817..8854e607 100644
--- a/app/src/main/java/ch/bailu/aat/coordinates/SrtmCoordinates.java
+++ b/app/src/main/java/ch/bailu/aat/coordinates/SrtmCoordinates.java
@@ -4,7 +4,6 @@ import android.content.Context;
 
 import org.mapsforge.core.model.LatLong;
 
-import java.io.File;
 import java.util.Locale;
 
 import ch.bailu.aat.preferences.SolidDataDirectory;
@@ -87,7 +86,7 @@ public class SrtmCoordinates extends Coordinates implements LatLongE6Interface {
     
     public Foc toFile(Foc base) {
         Foc old = toSRTMFile(base);
-        if (old.isReachable()) return old;
+        if (old.exists()) return old;
         
         return base.child("/dem3/"+ toExtString() + ".hgt.zip");
     }
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/CustomFileSource.java b/app/src/main/java/ch/bailu/aat/dispatcher/CustomFileSource.java
index d863bcbb..bc3375f1 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/CustomFileSource.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/CustomFileSource.java
@@ -4,8 +4,6 @@ import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
 
-import java.io.File;
-
 import ch.bailu.aat.gpx.GpxFileWrapper;
 import ch.bailu.aat.gpx.InfoID;
 import ch.bailu.aat.util.AppBroadcaster;
diff --git a/app/src/main/java/ch/bailu/aat/gpx/writer/GpxListWriter.java b/app/src/main/java/ch/bailu/aat/gpx/writer/GpxListWriter.java
index 3d9863e6..d46dcead 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/writer/GpxListWriter.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/writer/GpxListWriter.java
@@ -1,7 +1,6 @@
 package ch.bailu.aat.gpx.writer;
 
 import java.io.Closeable;
-import java.io.File;
 import java.io.IOException;
 
 import ch.bailu.aat.gpx.GpxList;
diff --git a/app/src/main/java/ch/bailu/aat/gpx/writer/GpxWriter.java b/app/src/main/java/ch/bailu/aat/gpx/writer/GpxWriter.java
index 27f2f611..7a77e0e1 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/writer/GpxWriter.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/writer/GpxWriter.java
@@ -1,9 +1,6 @@
 package ch.bailu.aat.gpx.writer;
 
 import java.io.BufferedWriter;
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStreamWriter;
 import java.util.Locale;
diff --git a/app/src/main/java/ch/bailu/aat/gpx/writer/TrackWriter.java b/app/src/main/java/ch/bailu/aat/gpx/writer/TrackWriter.java
index d327a051..929923eb 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/writer/TrackWriter.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/writer/TrackWriter.java
@@ -1,7 +1,5 @@
 package ch.bailu.aat.gpx.writer;
 
-import java.io.File;
-import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.util.Locale;
 
diff --git a/app/src/main/java/ch/bailu/aat/gpx/writer/WayWriter.java b/app/src/main/java/ch/bailu/aat/gpx/writer/WayWriter.java
index cdc9b608..577e83ad 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/writer/WayWriter.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/writer/WayWriter.java
@@ -1,6 +1,5 @@
 package ch.bailu.aat.gpx.writer;
 
-import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.util.Locale;
 
diff --git a/app/src/main/java/ch/bailu/aat/map/layer/control/FileControlBarLayer.java b/app/src/main/java/ch/bailu/aat/map/layer/control/FileControlBarLayer.java
index ac3ae9ed..549c39ca 100644
--- a/app/src/main/java/ch/bailu/aat/map/layer/control/FileControlBarLayer.java
+++ b/app/src/main/java/ch/bailu/aat/map/layer/control/FileControlBarLayer.java
@@ -5,8 +5,6 @@ import android.view.View;
 
 import org.mapsforge.core.model.Point;
 
-import java.io.File;
-
 import ch.bailu.aat.R;
 import ch.bailu.aat.activities.AbsGpxListActivity;
 import ch.bailu.aat.description.AverageSpeedDescription;
@@ -192,7 +190,7 @@ public class FileControlBarLayer extends ControlBarLayer {
         if (node != null && selectedFile != null) {
             Foc file = FocAndroid.factory(acontext,selectedFile);
 
-            if (file.isReachable()) {
+            if (file.exists()) {
                 if        (v == action) {
                     new FileMenu(acontext, file).showAsPopup(acontext, v);
                 } else if (v == overlay) {
diff --git a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgePreview.java b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgePreview.java
index 544a2db4..7a0b93bb 100644
--- a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgePreview.java
+++ b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgePreview.java
@@ -14,8 +14,6 @@ import org.mapsforge.map.layer.Layer;
 import org.mapsforge.map.util.MapPositionUtil;
 import org.mapsforge.map.view.FrameBuffer;
 
-import java.io.File;
-import java.io.FileOutputStream;
 import java.io.OutputStream;
 
 import ch.bailu.aat.gpx.GpxInformation;
diff --git a/app/src/main/java/ch/bailu/aat/menus/ContentMenu.java b/app/src/main/java/ch/bailu/aat/menus/ContentMenu.java
index 0b900b0a..5a61f450 100644
--- a/app/src/main/java/ch/bailu/aat/menus/ContentMenu.java
+++ b/app/src/main/java/ch/bailu/aat/menus/ContentMenu.java
@@ -1,7 +1,6 @@
 package ch.bailu.aat.menus;
 
 
-import android.net.Uri;
 import android.view.ContextMenu;
 import android.view.Menu;
 import android.view.MenuItem;
diff --git a/app/src/main/java/ch/bailu/aat/menus/DirectoryMenu.java b/app/src/main/java/ch/bailu/aat/menus/DirectoryMenu.java
index 5d1b1921..70a63952 100644
--- a/app/src/main/java/ch/bailu/aat/menus/DirectoryMenu.java
+++ b/app/src/main/java/ch/bailu/aat/menus/DirectoryMenu.java
@@ -5,11 +5,13 @@ import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
+import android.os.Build;
 import android.view.ContextMenu;
 import android.view.Menu;
 import android.view.MenuItem;
 
 import ch.bailu.aat.R;
+import ch.bailu.aat.preferences.Storage;
 import ch.bailu.aat.util.Clipboard;
 import ch.bailu.aat.util.fs.FileIntent;
 import ch.bailu.aat.preferences.SolidFile;
@@ -18,7 +20,10 @@ import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.simpleio.foc.Foc;
 
 public class DirectoryMenu extends AbsMenu {
-    private MenuItem view, get, clipboard, permission;
+    private static final int BROWSE_DIR = DirectoryMenu.class.getSimpleName().hashCode();
+    private static String browseDirKey=null;
+
+    private MenuItem browse, view, get, clipboard;
 
     private final Activity acontext;
 
@@ -31,10 +36,13 @@ public class DirectoryMenu extends AbsMenu {
 
     @Override
     public void inflate(Menu menu) {
+        if (Build.VERSION.SDK_INT >= 21) {
+            browse = menu.add("Pick directory...*");
+        }
+
         view = menu.add(R.string.file_view);
         get = menu.add(R.string.file_view);
         clipboard = menu.add(R.string.clipboard_copy);
-        permission = menu.add("Ask for permission*");
     }
 
     @Override
@@ -53,7 +61,12 @@ public class DirectoryMenu extends AbsMenu {
     public boolean onItemClick(MenuItem item) {
         Context c = sdirectory.getContext();
 
-        if (item == view) {
+        if (item == browse) {
+            Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);
+            browseDirKey = sdirectory.getKey();
+            acontext.startActivityForResult(intent, BROWSE_DIR);
+
+        } else if  (item == view) {
             FileIntent.view(c, new Intent(), sdirectory.getValueAsFile());
 
         } else if (item == get) {
@@ -64,20 +77,17 @@ public class DirectoryMenu extends AbsMenu {
             new Clipboard(c).setText(sdirectory.getLabel(),
                     sdirectory.getValueAsString());
 
-        } else if (item == permission) {
-            new AndroidVolumes(sdirectory.getContext()).
-                    askForPermission(acontext, sdirectory.getValueAsFile());
-
-            Foc content = new AndroidVolumes(c).toScopedContentHack(c, sdirectory.getValueAsFile());
-            AppLog.d(this, content.toString());
-
-
-            sdirectory.setValue(content.toString());
-
-        } else {
-            return false;
         }
         return true;
     }
 
+    public static void onActivityResult(Context c, int requestCode, int resultCode, Intent data) {
+        if (requestCode == DirectoryMenu.BROWSE_DIR) {
+            if (resultCode == Activity.RESULT_OK && data != null && DirectoryMenu.browseDirKey != null) {
+                String value = data.getData().toString();
+                Storage.global(c).writeString(browseDirKey, value);
+                browseDirKey = null;
+            }
+        }
+    }
 }
diff --git a/app/src/main/java/ch/bailu/aat/menus/FileMenu.java b/app/src/main/java/ch/bailu/aat/menus/FileMenu.java
index 5f3d62ca..c688d531 100644
--- a/app/src/main/java/ch/bailu/aat/menus/FileMenu.java
+++ b/app/src/main/java/ch/bailu/aat/menus/FileMenu.java
@@ -1,7 +1,6 @@
 package ch.bailu.aat.menus;
 
 import android.app.Activity;
-import android.net.Uri;
 import android.view.ContextMenu;
 import android.view.Menu;
 import android.view.MenuItem;
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidDataDirectory.java b/app/src/main/java/ch/bailu/aat/preferences/SolidDataDirectory.java
index ac93432e..cd77f804 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidDataDirectory.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidDataDirectory.java
@@ -2,7 +2,6 @@ package ch.bailu.aat.preferences;
 
 import android.content.Context;
 
-import java.io.File;
 import java.util.ArrayList;
 
 import ch.bailu.aat.R;
@@ -65,7 +64,7 @@ public class SolidDataDirectory extends SolidFile {
 
         for (Foc vol : volumes.getVolumes()) {
             Foc aat_data = vol.child(AppDirectory.DIR_AAT_DATA);
-            if (aat_data.isReachable()==false)
+            if (aat_data.exists()==false)
                 add_w(list, vol, aat_data);
         }
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidExternalDirectory.java b/app/src/main/java/ch/bailu/aat/preferences/SolidExternalDirectory.java
index 19bfd5d3..6ce27c5f 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidExternalDirectory.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidExternalDirectory.java
@@ -2,7 +2,6 @@ package ch.bailu.aat.preferences;
 
 import android.content.Context;
 
-import java.io.File;
 import java.util.ArrayList;
 
 import ch.bailu.aat.R;
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidFile.java b/app/src/main/java/ch/bailu/aat/preferences/SolidFile.java
index eead806b..7a462773 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidFile.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidFile.java
@@ -1,10 +1,8 @@
 package ch.bailu.aat.preferences;
 
-import java.io.File;
 import java.util.ArrayList;
 
 import ch.bailu.aat.R;
-import ch.bailu.aat.util.fs.JFile;
 import ch.bailu.aat.util.fs.foc.FocAndroid;
 import ch.bailu.simpleio.foc.Foc;
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidMapsForgeDirectory.java b/app/src/main/java/ch/bailu/aat/preferences/SolidMapsForgeDirectory.java
index 3dc4c367..4e6a8f3b 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidMapsForgeDirectory.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidMapsForgeDirectory.java
@@ -2,7 +2,6 @@ package ch.bailu.aat.preferences;
 
 import android.content.Context;
 
-import java.io.File;
 import java.util.ArrayList;
 
 import ch.bailu.aat.util.fs.AppDirectory;
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidOverlayFile.java b/app/src/main/java/ch/bailu/aat/preferences/SolidOverlayFile.java
index 9f24cf0e..ec456ec6 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidOverlayFile.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidOverlayFile.java
@@ -24,7 +24,7 @@ public class SolidOverlayFile  implements SolidTypeInterface {
 
 
     public void setPath(Foc file) {
-        if (file.isReachable()) {
+        if (file.exists()) {
             path.setValue(file.toString());
             enabled.setValue(true);
         }
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidPreset.java b/app/src/main/java/ch/bailu/aat/preferences/SolidPreset.java
index 2b0349d7..49db84d7 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidPreset.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidPreset.java
@@ -2,8 +2,6 @@ package ch.bailu.aat.preferences;
 
 import android.content.Context;
 
-import java.io.File;
-
 import ch.bailu.aat.R;
 import ch.bailu.aat.util.fs.AppDirectory;
 import ch.bailu.simpleio.foc.Foc;
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidTileCacheDirectory.java b/app/src/main/java/ch/bailu/aat/preferences/SolidTileCacheDirectory.java
index 027a0b4d..fa72db32 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidTileCacheDirectory.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidTileCacheDirectory.java
@@ -2,7 +2,6 @@ package ch.bailu.aat.preferences;
 
 import android.content.Context;
 
-import java.io.File;
 import java.util.ArrayList;
 
 import ch.bailu.aat.R;
@@ -83,7 +82,7 @@ public class SolidTileCacheDirectory extends SolidFile {
         for (Foc vol : volumes.getVolumes()) {
             final Foc aat = vol.child(AppDirectory.DIR_AAT_DATA + "/" + AppDirectory.DIR_TILES);
 
-            if (aat.isReachable()==false)
+            if (aat.exists()==false)
                 add_ro(list, vol, aat);
         }
 
diff --git a/app/src/main/java/ch/bailu/aat/services/background/ProcessThread.java b/app/src/main/java/ch/bailu/aat/services/background/ProcessThread.java
index e2e63d41..905fccb1 100644
--- a/app/src/main/java/ch/bailu/aat/services/background/ProcessThread.java
+++ b/app/src/main/java/ch/bailu/aat/services/background/ProcessThread.java
@@ -1,7 +1,6 @@
 package ch.bailu.aat.services.background;
 
 import java.io.Closeable;
-import java.util.concurrent.ArrayBlockingQueue;
 
 public abstract class ProcessThread extends Thread implements Closeable, ThreadControl {
 
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/CachedTileObject.java b/app/src/main/java/ch/bailu/aat/services/cache/CachedTileObject.java
index feb8a165..cfc180ac 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/CachedTileObject.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/CachedTileObject.java
@@ -49,7 +49,7 @@ public class CachedTileObject extends TileObject {
             public long bgOnProcess() {
                 long size = MIN_SIZE;
 
-                if (!toFile(sc.getContext()).isReachable()) {
+                if (!toFile(sc.getContext()).exists()) {
                     OutputStream out = null;
                     ObjectHandle handle = sc.getCacheService().getObject(sourceID);
 
@@ -96,7 +96,7 @@ public class CachedTileObject extends TileObject {
     }
 
     private boolean isLoadable(Context c) {
-        return toFile(c).isReachable();
+        return toFile(c).exists();
     }
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/ObjectHandle.java b/app/src/main/java/ch/bailu/aat/services/cache/ObjectHandle.java
index 86f203e8..355d8d62 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/ObjectHandle.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/ObjectHandle.java
@@ -2,8 +2,6 @@ package ch.bailu.aat.services.cache;
 
 import android.content.Context;
 
-import java.io.File;
-
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.util.fs.foc.FocAndroid;
 import ch.bailu.simpleio.foc.Foc;
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/elevation/RasterInitializer.java b/app/src/main/java/ch/bailu/aat/services/cache/elevation/RasterInitializer.java
index 0e8ab537..8509ed21 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/elevation/RasterInitializer.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/elevation/RasterInitializer.java
@@ -6,7 +6,6 @@ import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.background.ProcessHandle;
 import ch.bailu.aat.services.cache.ObjectHandle;
 import ch.bailu.aat.util.AppBroadcaster;
-import ch.bailu.aat.util.ui.AppLog;
 
 public class RasterInitializer extends ProcessHandle {
 
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/elevation/SubTilePainter.java b/app/src/main/java/ch/bailu/aat/services/cache/elevation/SubTilePainter.java
index 25b02904..3bebee09 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/elevation/SubTilePainter.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/elevation/SubTilePainter.java
@@ -7,7 +7,6 @@ import ch.bailu.aat.services.background.ProcessHandle;
 import ch.bailu.aat.services.cache.ObjectHandle;
 import ch.bailu.aat.services.dem.tile.Dem3Tile;
 import ch.bailu.aat.util.AppBroadcaster;
-import ch.bailu.aat.util.ui.AppLog;
 
 public class SubTilePainter extends ProcessHandle {
     private final Dem3Tile tile;
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/loader/Dem3TileLoader.java b/app/src/main/java/ch/bailu/aat/services/dem/loader/Dem3TileLoader.java
index c027f1ec..2d107b10 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/loader/Dem3TileLoader.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/loader/Dem3TileLoader.java
@@ -5,7 +5,6 @@ import android.content.Context;
 import android.content.Intent;
 
 import java.io.Closeable;
-import java.io.File;
 
 import ch.bailu.aat.coordinates.SrtmCoordinates;
 import ch.bailu.aat.services.ServiceContext;
@@ -118,7 +117,7 @@ public class Dem3TileLoader implements Closeable {
     private void downloadNow(SrtmCoordinates c) {
         Foc target = c.toFile(scontext.getContext());
 
-        if (target.isReachable() == false) {
+        if (target.exists() == false) {
             DownloadHandle handle = new DownloadHandle(c.toURL(), target);
             scontext.getBackgroundService().download(handle);
         }
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/updater/ElevationUpdaterEntry.java b/app/src/main/java/ch/bailu/aat/services/dem/updater/ElevationUpdaterEntry.java
index fe51ab98..1f240eea 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/updater/ElevationUpdaterEntry.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/updater/ElevationUpdaterEntry.java
@@ -38,7 +38,7 @@ public class ElevationUpdaterEntry {
     
 
     private void addSRTMTile(SrtmCoordinates c) {
-        if (c.toFile(scontext.getContext()).isReachable()) {
+        if (c.toFile(scontext.getContext()).exists()) {
             tiles.put(c.hashCode(),c);
         }
     }
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/AbsDatabase.java b/app/src/main/java/ch/bailu/aat/services/directory/AbsDatabase.java
index b6729b95..0b6ac878 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/AbsDatabase.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/AbsDatabase.java
@@ -4,7 +4,6 @@ import android.database.Cursor;
 import android.database.sqlite.SQLiteException;
 
 import java.io.Closeable;
-import java.io.File;
 
 import ch.bailu.simpleio.foc.Foc;
 
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/DirectoryService.java b/app/src/main/java/ch/bailu/aat/services/directory/DirectoryService.java
index 6599cf0d..bf8df72f 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/DirectoryService.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/DirectoryService.java
@@ -5,10 +5,8 @@ import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteCantOpenDatabaseException;
 
-import java.io.File;
 import java.io.IOException;
 
-import ch.bailu.aat.util.fs.AppDirectory;
 import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.aat.preferences.SolidDirectoryQuery;
 import ch.bailu.aat.services.ServiceContext;
@@ -43,7 +41,11 @@ public class DirectoryService extends VirtualService implements OnSharedPreferen
 
 
     private void openDir() {
+        AppLog.d(this, sdirectory.getValueAsString());
+        AppLog.d(this, sdirectory.getValueAsFile().toString());
+
         if (isDirReadable()) {
+
             open();
         } else {
             logNoAccess();
@@ -63,10 +65,11 @@ public class DirectoryService extends VirtualService implements OnSharedPreferen
 
 
     private void open() {
-        final Foc db = AppDirectory.getCacheDb(getDir());
+        final String dbPath =
+                SummaryConfig.getWriteableDBPath(getContext(), getDir());
 
         try {
-            openDataBase(getSContext(), db);
+            openDataBase(getSContext(), dbPath);
 
         } catch (Exception e) {
             database=AbsDatabase.NULL_DATABASE;
@@ -91,11 +94,11 @@ public class DirectoryService extends VirtualService implements OnSharedPreferen
 
 
 
-    private void openDataBase(ServiceContext sc, Foc path) throws IOException, SQLiteCantOpenDatabaseException {
+    private void openDataBase(ServiceContext sc, String dbPath) throws IOException, SQLiteCantOpenDatabaseException {
         database.close();
         database = new GpxDatabase(
                 sc,
-                path);
+                dbPath);
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/DirectorySynchronizer.java b/app/src/main/java/ch/bailu/aat/services/directory/DirectorySynchronizer.java
index 5071c69c..d8c71077 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/DirectorySynchronizer.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/DirectorySynchronizer.java
@@ -23,7 +23,6 @@ import ch.bailu.aat.services.cache.GpxObject;
 import ch.bailu.aat.services.cache.GpxObjectStatic;
 import ch.bailu.aat.services.cache.ObjectHandle;
 import ch.bailu.aat.util.AppBroadcaster;
-import ch.bailu.aat.util.fs.AppDirectory;
 import ch.bailu.aat.util.fs.foc.FocAndroid;
 import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.simpleio.foc.Foc;
@@ -116,11 +115,11 @@ public class DirectorySynchronizer  implements Closeable {
 
 
         private GpxDatabase openDatabase()  throws Exception {
-            final Foc file = AppDirectory.getCacheDb(directory);
+            final String dbPath = SummaryConfig.getWriteableDBPath(scontext.getContext(), directory);
             final String query[] = {GpxDbConstants.KEY_FILENAME};
 
-            dbAccessTime = file.lastModified();
-            return new GpxDatabase(scontext, file, query);
+            dbAccessTime = new File(dbPath).lastModified();
+            return new GpxDatabase(scontext, dbPath, query);
         }
 
         @Override
@@ -193,7 +192,7 @@ public class DirectorySynchronizer  implements Closeable {
         private void removeFileFromDatabase(String name) throws IOException {
             final Foc file = directory.child(name);
 
-            AppDirectory.getPreviewFile(file).rm();
+            SummaryConfig.getWriteablePreviewFile(scontext.getContext(), file).rm();
             database.deleteEntry(file);
         }
 
@@ -324,7 +323,7 @@ public class DirectorySynchronizer  implements Closeable {
         public void start() {
             Foc gpxFile = FocAndroid.factory(scontext.getContext(), pendingHandle.toString());
 
-            Foc previewImageFile = AppDirectory.getPreviewFile(gpxFile);
+            Foc previewImageFile = SummaryConfig.getWriteablePreviewFile(scontext.getContext(), gpxFile);
             GpxInformation info =
                     new GpxFileWrapper(gpxFile, pendingHandle.getGpxList());
 
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/GpxDatabase.java b/app/src/main/java/ch/bailu/aat/services/directory/GpxDatabase.java
index bc89ae1f..b7ddb1ed 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/GpxDatabase.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/GpxDatabase.java
@@ -23,7 +23,7 @@ public class GpxDatabase extends AbsDatabase{
 
 
 
-    public GpxDatabase (ServiceContext sc, Foc path, String[] k)
+    public GpxDatabase (ServiceContext sc, String path, String[] k)
             throws IOException, SQLiteCantOpenDatabaseException{
 
         keys = k;
@@ -31,16 +31,15 @@ public class GpxDatabase extends AbsDatabase{
         database = openDatabase(path);
     }
 
-    public GpxDatabase (ServiceContext sc, Foc path)
+    public GpxDatabase (ServiceContext sc, String path)
             throws IOException, SQLiteCantOpenDatabaseException {
 
         this(sc, path, GpxDbConstants.KEY_LIST_NEW);
     }
 
 
-    private SQLiteDatabase openDatabase(Foc path) throws IOException, SQLiteCantOpenDatabaseException {
-        path.mkParents();
-        return new GpxDbOpenHelper(context, path).getReadableDatabase();    
+    private SQLiteDatabase openDatabase(String path) throws IOException, SQLiteCantOpenDatabaseException {
+        return new GpxDbOpenHelper(context, path).getReadableDatabase();
     }
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/GpxDbOpenHelper.java b/app/src/main/java/ch/bailu/aat/services/directory/GpxDbOpenHelper.java
index 6b5c8308..8c9f5bee 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/GpxDbOpenHelper.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/GpxDbOpenHelper.java
@@ -4,48 +4,44 @@ import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
 
-import java.io.File;
+public class GpxDbOpenHelper extends SQLiteOpenHelper {
 
-import ch.bailu.aat.util.fs.AndroidVolumes;
-import ch.bailu.simpleio.foc.Foc;
 
-public class GpxDbOpenHelper extends SQLiteOpenHelper {
-         private GpxDbOpenHelper(Context context, String name) {
-           super(context, name, null, GpxDbConstants.DB_VERSION);
-        }
 
-         
-         public GpxDbOpenHelper(Context context, Foc file) {
-             this(context, file.toString());
-         }
-         
-        @Override
-        public void onCreate(SQLiteDatabase db) {
-           db.execSQL(buildCreateExpression());
-        }
-        
-        private String buildCreateExpression() {
-            StringBuilder expression= new StringBuilder();
-            expression
+
+    public GpxDbOpenHelper(Context context, String path) {
+        super(context, path, null, GpxDbConstants.DB_VERSION);
+    }
+
+
+
+    @Override
+    public void onCreate(SQLiteDatabase db) {
+        db.execSQL(buildCreateExpression());
+    }
+
+    private String buildCreateExpression() {
+        StringBuilder expression= new StringBuilder();
+        expression
                 .append("CREATE TABLE ")
                 .append(GpxDbConstants.DB_TABLE)
                 .append(" (");
-            
-            for (int i = 0; i<GpxDbConstants.KEY_LIST_OLD.length; i++) {
-                if (i> 0) expression.append(", ");
-                expression.append(GpxDbConstants.KEY_LIST_OLD[i]).append(" ").append(GpxDbConstants.TYPE_LIST_OLD[i]);
-            }
-            expression.append(")");
-            return expression.toString();
-        }
 
-        @Override
-        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
-           db.execSQL("DROP TABLE IF EXISTS " + GpxDbConstants.DB_TABLE);
-           onCreate(db);
+        for (int i = 0; i<GpxDbConstants.KEY_LIST_OLD.length; i++) {
+            if (i> 0) expression.append(", ");
+            expression.append(GpxDbConstants.KEY_LIST_OLD[i]).append(" ").append(GpxDbConstants.TYPE_LIST_OLD[i]);
         }
-        
-        @Override
-        public void onOpen(SQLiteDatabase db) {}
+        expression.append(")");
+        return expression.toString();
+    }
+
+    @Override
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+        db.execSQL("DROP TABLE IF EXISTS " + GpxDbConstants.DB_TABLE);
+        onCreate(db);
+    }
+
+    @Override
+    public void onOpen(SQLiteDatabase db) {}
 }
 
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/GpxInformationDbEntry.java b/app/src/main/java/ch/bailu/aat/services/directory/GpxInformationDbEntry.java
index 9c28ddd8..3321da87 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/GpxInformationDbEntry.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/GpxInformationDbEntry.java
@@ -2,8 +2,6 @@ package ch.bailu.aat.services.directory;
 
 import android.database.Cursor;
 
-import java.io.File;
-
 import ch.bailu.aat.coordinates.BoundingBoxE6;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.simpleio.foc.Foc;
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/GpxInformationDbEntryAndFile.java b/app/src/main/java/ch/bailu/aat/services/directory/GpxInformationDbEntryAndFile.java
index 686920af..ef8e9181 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/GpxInformationDbEntryAndFile.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/GpxInformationDbEntryAndFile.java
@@ -3,7 +3,6 @@ package ch.bailu.aat.services.directory;
 import android.database.Cursor;
 
 import java.io.Closeable;
-import java.io.File;
 
 import ch.bailu.aat.gpx.GpxList;
 import ch.bailu.aat.services.ServiceContext;
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/IteratorAbstract.java b/app/src/main/java/ch/bailu/aat/services/directory/IteratorAbstract.java
index e22c6507..e6a7fa85 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/IteratorAbstract.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/IteratorAbstract.java
@@ -7,8 +7,6 @@ import android.content.SharedPreferences;
 import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
 import android.database.Cursor;
 
-import java.io.File;
-
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.util.AppBroadcaster;
 import ch.bailu.aat.preferences.SolidDirectoryQuery;
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/IteratorFollowFile.java b/app/src/main/java/ch/bailu/aat/services/directory/IteratorFollowFile.java
index d35d0b30..7ef40efd 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/IteratorFollowFile.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/IteratorFollowFile.java
@@ -3,7 +3,6 @@ package ch.bailu.aat.services.directory;
 import android.database.Cursor;
 
 import java.io.Closeable;
-import java.io.File;
 import java.io.IOException;
 
 import ch.bailu.aat.gpx.GpxInformation;
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/IteratorSimple.java b/app/src/main/java/ch/bailu/aat/services/directory/IteratorSimple.java
index 23c3c203..19f0f8cb 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/IteratorSimple.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/IteratorSimple.java
@@ -2,8 +2,6 @@ package ch.bailu.aat.services.directory;
 
 import android.database.Cursor;
 
-import java.io.File;
-
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.simpleio.foc.Foc;
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/IteratorSummary.java b/app/src/main/java/ch/bailu/aat/services/directory/IteratorSummary.java
index 888094f5..8502b8f1 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/IteratorSummary.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/IteratorSummary.java
@@ -2,8 +2,6 @@ package ch.bailu.aat.services.directory;
 
 import android.database.Cursor;
 
-import java.io.File;
-
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.gpx.InfoID;
 import ch.bailu.aat.services.ServiceContext;
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/SummaryConfig.java b/app/src/main/java/ch/bailu/aat/services/directory/SummaryConfig.java
new file mode 100644
index 00000000..af4e1b40
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/services/directory/SummaryConfig.java
@@ -0,0 +1,50 @@
+package ch.bailu.aat.services.directory;
+
+import android.content.Context;
+
+import ch.bailu.aat.util.fs.AppDirectory;
+import ch.bailu.simpleio.foc.Foc;
+import ch.bailu.simpleio.foc.FocFile;
+
+public class SummaryConfig {
+
+
+    public static String getWriteableDBPath(Context context, Foc dir) {
+        return getWriteableSummaryDir(context, dir)
+                .child(AppDirectory.FILE_CACHE_DB)
+                .toString();
+    }
+
+
+    public static Foc getWriteableSummaryDir(Context context, Foc dir) {
+        Foc summaryDir;
+
+        if (dir instanceof FocFile && dir.mkdirs() && dir.canWrite()) {
+            summaryDir = dir.child(AppDirectory.DIR_CACHE);
+        } else {
+
+            summaryDir = new FocFile(context.getCacheDir())
+                    .child("summary")
+                    .child(String.valueOf(dir.hashCode()));
+        }
+        summaryDir.mkdirs();
+
+        return summaryDir;
+
+    }
+
+
+    static public Foc getWriteablePreviewFile(Context context, Foc gpxFile)  {
+        String name = gpxFile.getName();
+        Foc dir = gpxFile.parent();
+
+        dir = getWriteableSummaryDir(context, dir);
+
+        return dir.child(name + AppDirectory.PREVIEW_EXTENSION);
+
+    }
+
+    public static Foc getReadablePreviewFile(Context context, Foc gpxFile) {
+        return getWriteablePreviewFile(context, gpxFile);
+    }
+}
diff --git a/app/src/main/java/ch/bailu/aat/services/location/AutopauseTrigger.java b/app/src/main/java/ch/bailu/aat/services/location/AutopauseTrigger.java
index 21d22951..bf5b3aeb 100644
--- a/app/src/main/java/ch/bailu/aat/services/location/AutopauseTrigger.java
+++ b/app/src/main/java/ch/bailu/aat/services/location/AutopauseTrigger.java
@@ -3,7 +3,6 @@ package ch.bailu.aat.services.location;
 import android.content.Context;
 
 import ch.bailu.aat.preferences.SolidAutopause;
-import ch.bailu.aat.util.ui.AppLog;
 
 
 public class AutopauseTrigger extends LocationStackChainedItem {
diff --git a/app/src/main/java/ch/bailu/aat/services/render/Renderer.java b/app/src/main/java/ch/bailu/aat/services/render/Renderer.java
index 8b99ee8e..cc25bbe5 100644
--- a/app/src/main/java/ch/bailu/aat/services/render/Renderer.java
+++ b/app/src/main/java/ch/bailu/aat/services/render/Renderer.java
@@ -17,7 +17,6 @@ import org.mapsforge.map.reader.MapFile;
 import org.mapsforge.map.rendertheme.XmlRenderTheme;
 import org.mapsforge.map.rendertheme.rule.RenderThemeFuture;
 
-import java.io.File;
 import java.util.ArrayList;
 
 import ch.bailu.aat.util.ui.AppLog;
diff --git a/app/src/main/java/ch/bailu/aat/services/tileremover/StateMachine.java b/app/src/main/java/ch/bailu/aat/services/tileremover/StateMachine.java
index e3ab2ffd..3b439ad7 100644
--- a/app/src/main/java/ch/bailu/aat/services/tileremover/StateMachine.java
+++ b/app/src/main/java/ch/bailu/aat/services/tileremover/StateMachine.java
@@ -2,8 +2,6 @@ package ch.bailu.aat.services.tileremover;
 
 import android.content.Context;
 
-import java.io.File;
-
 import ch.bailu.aat.preferences.SolidTrimIndex;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.util.AppBroadcaster;
diff --git a/app/src/main/java/ch/bailu/aat/services/tileremover/StateRemove.java b/app/src/main/java/ch/bailu/aat/services/tileremover/StateRemove.java
index 778cb7ba..98ecdb56 100644
--- a/app/src/main/java/ch/bailu/aat/services/tileremover/StateRemove.java
+++ b/app/src/main/java/ch/bailu/aat/services/tileremover/StateRemove.java
@@ -1,10 +1,8 @@
 package ch.bailu.aat.services.tileremover;
 
-import java.io.File;
 import java.util.Iterator;
 
 import ch.bailu.aat.util.AppBroadcaster;
-import ch.bailu.aat.util.fs.JFile;
 import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.simpleio.foc.Foc;
 
diff --git a/app/src/main/java/ch/bailu/aat/services/tileremover/StateRemoveAll.java b/app/src/main/java/ch/bailu/aat/services/tileremover/StateRemoveAll.java
index 06298744..4a9a06d4 100644
--- a/app/src/main/java/ch/bailu/aat/services/tileremover/StateRemoveAll.java
+++ b/app/src/main/java/ch/bailu/aat/services/tileremover/StateRemoveAll.java
@@ -1,10 +1,7 @@
 package ch.bailu.aat.services.tileremover;
 
 
-import java.io.File;
-
 import ch.bailu.aat.util.AppBroadcaster;
-import ch.bailu.aat.util.fs.JFile;
 import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.simpleio.foc.Foc;
 
diff --git a/app/src/main/java/ch/bailu/aat/services/tileremover/StateScan.java b/app/src/main/java/ch/bailu/aat/services/tileremover/StateScan.java
index 9822eeb6..929b0998 100644
--- a/app/src/main/java/ch/bailu/aat/services/tileremover/StateScan.java
+++ b/app/src/main/java/ch/bailu/aat/services/tileremover/StateScan.java
@@ -1,6 +1,5 @@
 package ch.bailu.aat.services.tileremover;
 
-import java.io.File;
 import java.io.IOException;
 
 import ch.bailu.aat.preferences.SolidTileCacheDirectory;
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/TrackCrashRestorer.java b/app/src/main/java/ch/bailu/aat/services/tracker/TrackCrashRestorer.java
index 9ce5faa5..0bf5802d 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/TrackCrashRestorer.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/TrackCrashRestorer.java
@@ -2,7 +2,6 @@ package ch.bailu.aat.services.tracker;
 
 import android.content.Context;
 
-import java.io.File;
 import java.io.IOException;
 
 import ch.bailu.aat.R;
@@ -20,7 +19,7 @@ public class TrackCrashRestorer{
         
         Foc source = AppDirectory.getLogFile(context);
 
-        if (source.isReachable()) {
+        if (source.exists()) {
             
             GpxList track = readFile(source);
             if (track.getPointList().size() > TrackLogger.MIN_TRACKPOINTS) { 
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/TrackLogger.java b/app/src/main/java/ch/bailu/aat/services/tracker/TrackLogger.java
index dc4dd958..bf498d95 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/TrackLogger.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/TrackLogger.java
@@ -2,7 +2,6 @@ package ch.bailu.aat.services.tracker;
 
 import android.content.Context;
 
-import java.io.File;
 import java.io.IOException;
 
 import ch.bailu.aat.gpx.GpxAttributesStatic;
@@ -92,10 +91,10 @@ public class TrackLogger extends Logger {
             writer.close();
 
             if (track.getPointList().size()>MIN_TRACKPOINTS) {
-                new File(logFile.toString()).renameTo(new File(generateTargetFile(context, presetIndex).toString()));
+                logFile.move(generateTargetFile(context, presetIndex));
 
             } else{
-                logFile.rm();
+                logFile.remove();
             }
 
         } catch (IOException e) {
diff --git a/app/src/main/java/ch/bailu/aat/test/TestGpx.java b/app/src/main/java/ch/bailu/aat/test/TestGpx.java
index ec3243fb..e9941be6 100644
--- a/app/src/main/java/ch/bailu/aat/test/TestGpx.java
+++ b/app/src/main/java/ch/bailu/aat/test/TestGpx.java
@@ -2,7 +2,6 @@ package ch.bailu.aat.test;
 
 import android.content.Context;
 
-import java.io.File;
 import java.io.IOException;
 
 import ch.bailu.aat.gpx.GpxList;
@@ -12,7 +11,6 @@ import ch.bailu.aat.preferences.SolidMockLocationFile;
 import ch.bailu.aat.preferences.SolidString;
 import ch.bailu.aat.util.fs.foc.FocAndroid;
 import ch.bailu.simpleio.foc.Foc;
-import ch.bailu.simpleio.foc.FocFile;
 
 public class TestGpx extends UnitTest {
 
@@ -40,7 +38,7 @@ public class TestGpx extends UnitTest {
         SolidString mockLocation = new SolidMockLocationFile(getContext());
         
         Foc testFile = FocAndroid.factory(getContext(), mockLocation.getValueAsString());
-        assertTrue("Mock file not defined.", testFile.isReachable());
+        assertTrue("Mock file not defined.", testFile.exists());
         return testFile;
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/test/TestGpxLogRecovery.java b/app/src/main/java/ch/bailu/aat/test/TestGpxLogRecovery.java
index c521f494..26ebd74e 100644
--- a/app/src/main/java/ch/bailu/aat/test/TestGpxLogRecovery.java
+++ b/app/src/main/java/ch/bailu/aat/test/TestGpxLogRecovery.java
@@ -2,15 +2,8 @@ package ch.bailu.aat.test;
 
 import android.content.Context;
 
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
 import java.io.IOException;
-import java.nio.channels.FileChannel;
 
-import ch.bailu.aat.util.fs.AppDirectory;
-import ch.bailu.aat.preferences.SolidPreset;
-import ch.bailu.aat.services.tracker.TrackLogger;
 import ch.bailu.simpleio.foc.Foc;
 
 public class TestGpxLogRecovery extends TestGpx {
@@ -26,11 +19,11 @@ public class TestGpxLogRecovery extends TestGpx {
         /*
         Foc testFile = getTestFile();
         Foc logFile = AppDirectory.getDataDirectory(getContext(), AppDirectory.DIR_LOG).child("log.gpx");
-        assertFalse(logFile.toString() + " is in use.", logFile.isReachable());
+        assertFalse(logFile.toString() + " is in use.", logFile.exists());
         
         
         copyFile(testFile, logFile);
-        assertTrue("Test failed: '" + logFile.toString() + "' does not exist." ,logFile.isReachable());
+        assertTrue("Test failed: '" + logFile.toString() + "' does not exist." ,logFile.exists());
 
         
         testFile(logFile, testFile);
@@ -39,7 +32,7 @@ public class TestGpxLogRecovery extends TestGpx {
         assertEquals(true, targetDirectory.isDir());
         
         new TrackLogger(getContext(), new SolidPreset(this.getContext() ).getIndex()).close();
-        assertEquals(logFile.isReachable(), false);
+        assertEquals(logFile.exists(), false);
         
         String fileList[] = targetDirectory.list();
         
diff --git a/app/src/main/java/ch/bailu/aat/test/UnitTest.java b/app/src/main/java/ch/bailu/aat/test/UnitTest.java
index bede42bf..7125f08b 100644
--- a/app/src/main/java/ch/bailu/aat/test/UnitTest.java
+++ b/app/src/main/java/ch/bailu/aat/test/UnitTest.java
@@ -4,8 +4,6 @@ import android.content.Context;
 
 import junit.framework.Assert;
 
-import java.io.File;
-
 import ch.bailu.aat.util.fs.AppDirectory;
 import ch.bailu.aat.util.ContextWrapperInterface;
 import ch.bailu.simpleio.foc.Foc;
diff --git a/app/src/main/java/ch/bailu/aat/util/AppPermission.java b/app/src/main/java/ch/bailu/aat/util/AppPermission.java
index 8a2035ab..53e15e66 100644
--- a/app/src/main/java/ch/bailu/aat/util/AppPermission.java
+++ b/app/src/main/java/ch/bailu/aat/util/AppPermission.java
@@ -28,11 +28,7 @@ public class AppPermission {
 
 
     public static boolean checkLocation(Context context) {
-        if (Build.VERSION.SDK_INT < 23) {
-            return true;
-        } else {
-            return checkLocationSdk23(context);
-        }
+        return Build.VERSION.SDK_INT < 23 || checkLocationSdk23(context);
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/util/NominatimApi.java b/app/src/main/java/ch/bailu/aat/util/NominatimApi.java
index d8a9b7ca..875b903a 100644
--- a/app/src/main/java/ch/bailu/aat/util/NominatimApi.java
+++ b/app/src/main/java/ch/bailu/aat/util/NominatimApi.java
@@ -2,7 +2,6 @@ package ch.bailu.aat.util;
 
 import android.content.Context;
 
-import java.io.File;
 import java.io.UnsupportedEncodingException;
 import java.net.URLEncoder;
 
diff --git a/app/src/main/java/ch/bailu/aat/util/OverpassApi.java b/app/src/main/java/ch/bailu/aat/util/OverpassApi.java
index 581dc4b4..eea317bd 100644
--- a/app/src/main/java/ch/bailu/aat/util/OverpassApi.java
+++ b/app/src/main/java/ch/bailu/aat/util/OverpassApi.java
@@ -2,7 +2,6 @@ package ch.bailu.aat.util;
 
 import android.content.Context;
 
-import java.io.File;
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
 import java.net.URLEncoder;
diff --git a/app/src/main/java/ch/bailu/aat/util/TextBackup.java b/app/src/main/java/ch/bailu/aat/util/TextBackup.java
index ae52f841..a1f3bc7e 100644
--- a/app/src/main/java/ch/bailu/aat/util/TextBackup.java
+++ b/app/src/main/java/ch/bailu/aat/util/TextBackup.java
@@ -1,6 +1,5 @@
 package ch.bailu.aat.util;
 
-import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStreamWriter;
 
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/AFile.java b/app/src/main/java/ch/bailu/aat/util/fs/AFile.java
index 8abcd3c9..e4be5384 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/AFile.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/AFile.java
@@ -2,8 +2,6 @@ package ch.bailu.aat.util.fs;
 
 import android.content.Context;
 
-import java.io.File;
-
 import ch.bailu.aat.R;
 import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.simpleio.foc.Foc;
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/AndroidVolumes.java b/app/src/main/java/ch/bailu/aat/util/fs/AndroidVolumes.java
index 7c55c93c..dade9cae 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/AndroidVolumes.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/AndroidVolumes.java
@@ -4,12 +4,10 @@ import android.annotation.TargetApi;
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
-import android.net.Uri;
 import android.os.Build;
 import android.os.Environment;
 import android.os.storage.StorageManager;
 import android.os.storage.StorageVolume;
-import android.provider.DocumentsContract;
 
 import java.io.File;
 import java.util.List;
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/AppDirectory.java b/app/src/main/java/ch/bailu/aat/util/fs/AppDirectory.java
index 107809f4..6b6f9776 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/AppDirectory.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/AppDirectory.java
@@ -2,36 +2,22 @@ package ch.bailu.aat.util.fs;
 
 import android.content.Context;
 
-import java.io.BufferedInputStream;
-import java.io.BufferedOutputStream;
 import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
 import java.io.IOException;
 import java.util.Locale;
 
 import ch.bailu.aat.preferences.SolidDataDirectory;
 import ch.bailu.aat.preferences.SolidTileCacheDirectory;
-import ch.bailu.aat.util.fs.foc.FocAndroid;
 import ch.bailu.simpleio.foc.Foc;
 
 public class AppDirectory  {
 
-
     //////////////////////////////////////////////////////////////////////////////////////
-/*    public static File getDataDirectory(Context c, File sub) {
-        return getDataDirectory(c, sub.toString());
-    }*/
-
-
     public static Foc getDataDirectory(Context c, String sub) {
-        final Foc p = FocAndroid.factory(c, new SolidDataDirectory(c).getValueAsString()).child(sub);
-        p.mkdirs();
-        return p;
+        return new SolidDataDirectory(c).getValueAsFile().child(sub);
     }
 
     public static final String DIR_AAT_DATA = "aat_data/";
-
     public static final String DIR_TILES = "tiles/";
     public static final String DIR_TILES_OSMDROID = "osmdroid/tiles/";
 
@@ -60,12 +46,7 @@ public class AppDirectory  {
     public static final String DIR_CACHE = "cache/";
     public static final String FILE_CACHE_DB="summary.db";
     
-    public static Foc getCacheDb(Foc pendingDirectory) {
-        final Foc p = pendingDirectory.child(DIR_CACHE);
-        p.mkdirs();
-        return p.child(FILE_CACHE_DB);
-    }
-    
+
 
     public static final String DIR_EDIT = "overlay/draft";
     public static final String FILE_DRAFT= "draft.gpx";
@@ -86,9 +67,7 @@ public class AppDirectory  {
 
 
     private static Foc getTileCacheDirectory(Context c) {
-        final Foc p = new SolidTileCacheDirectory(c).getValueAsFile();
-        p.mkdirs();
-        return p;
+        return new SolidTileCacheDirectory(c).getValueAsFile();
     }
     //////////////////////////////////////////////////////////////////////////////////////////////////
     
@@ -97,7 +76,7 @@ public class AppDirectory  {
     
     ///////////////////////////////////////////////////////////////////////////////////////
     private static final String PRESET_PREFIX = "activity";
-    private static final String PREVIEW_EXTENSION = ".preview";
+    public static final String PREVIEW_EXTENSION = ".preview";
 
     static public Foc getTrackListDirectory(Context c, int i) {
         return getDataDirectory(c,getPresetPrefix(i));
@@ -112,15 +91,7 @@ public class AppDirectory  {
     }
 
 
-    static public Foc getPreviewFile(Foc path)  {
-        String name = path.getName();
-        Foc directory = path.parent();
 
-        Foc cdir = directory.child(DIR_CACHE);
-        cdir.mkdirs();
-        return cdir.child(name+ PREVIEW_EXTENSION);
-    }
-    
     
 
     ////////////////////////////////////////////////////////////////////////////////////////
@@ -140,9 +111,9 @@ public class AppDirectory  {
         do {
             file = directory.child(generateFileName(prefix, x, extension));
             x++;
-        } while (file.isReachable() && x < 999);
+        } while (file.exists() && x < 999);
 
-        if (file.isReachable()) throw new IOException();
+        if (file.exists()) throw new IOException();
 
         return file;
     }
@@ -182,31 +153,4 @@ public class AppDirectory  {
         return name.toString();
     }
 
-    
-    public static void copyFile(File source, File target) throws IOException {
-        if (source.exists()) {
-            BufferedInputStream   reader = new BufferedInputStream(new FileInputStream(source));
-            BufferedOutputStream  writer = new BufferedOutputStream(new FileOutputStream(target, false));
-            
-            try {
-                int oneByte;
-                while ( (oneByte= reader.read()) != -1) {
-                    writer.write( oneByte );
-                }
-                
-            } catch( IOException ex ) {
-                throw new IOException("ERROR while copying " + source.getPath() + " to " + target.getPath());
-            } finally {
-                reader.close();
-                writer.close();
-            }
-            
-        } else {
-            throw new IOException("ERROR: " + source.getPath() + " does not exist.");
-        }
-    }
-
-
-
-
 }
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/FileAction.java b/app/src/main/java/ch/bailu/aat/util/fs/FileAction.java
index f2f0d8f5..e10248b2 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/FileAction.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/FileAction.java
@@ -11,7 +11,6 @@ import ch.bailu.aat.preferences.SolidDirectoryQuery;
 import ch.bailu.aat.preferences.SolidMockLocationFile;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.util.Clipboard;
-import ch.bailu.aat.util.fs.foc.FocContent;
 import ch.bailu.aat.util.ui.AppDialog;
 import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.aat.util.ui.AppSelectDirectoryDialog;
@@ -115,7 +114,7 @@ public class FileAction   {
     public static void copyToDir(Context context, Foc src, Foc destDir) throws Exception {
         final Foc dest = destDir.child(src.getName());
 
-        if (dest == null || dest.isReachable()) {
+        if (dest == null || dest.exists()) {
             AFile.logErrorExists(context, dest);
         } else {
             src.cp(dest);
@@ -144,8 +143,8 @@ public class FileAction   {
                     Foc source = directory.child(file.getName());
                     Foc target = directory.child(edit.getText().toString());
 
-                    if (source.isReachable()) {
-                        if (target.isReachable()) {
+                    if (source.exists()) {
+                        if (target.exists()) {
                             AFile.logErrorExists(activity, target);
                         } else {
                             source.mv(target);
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/foc/FocAsset.java b/app/src/main/java/ch/bailu/aat/util/fs/foc/FocAsset.java
index 8eef614d..75370426 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/foc/FocAsset.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/foc/FocAsset.java
@@ -43,7 +43,7 @@ public class FocAsset extends Foc {
     }
 
     @Override
-    public boolean rm() {
+    public boolean remove() {
         return false;
     }
 
@@ -57,10 +57,6 @@ public class FocAsset extends Foc {
         return null;
     }
 
-    @Override
-    public boolean mv(Foc target) {
-        return false;
-    }
 
     @Override
     public Foc child(String name) {
@@ -103,7 +99,7 @@ public class FocAsset extends Foc {
     }
 
     @Override
-    public boolean isReachable() {
+    public boolean exists() {
         return false;
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/foc/FocContent.java b/app/src/main/java/ch/bailu/aat/util/fs/foc/FocContent.java
index 01ae93b3..1f5ff5b4 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/foc/FocContent.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/foc/FocContent.java
@@ -23,7 +23,7 @@ public class FocContent extends Foc {
 
 
     @Override
-    public boolean rm() {
+    public boolean remove() {
         return resolver.delete(uri,null,null) > 0;
     }
 
@@ -56,11 +56,6 @@ public class FocContent extends Foc {
         }
     }
 
-    @Override
-    public boolean mv(Foc target) {
-        return false;
-    }
-
     @Override
     public Foc child(String name) {
         return new FocContent(resolver, Uri.parse(this.toString() + "/" + name));
@@ -108,7 +103,7 @@ public class FocContent extends Foc {
     }
 
     @Override
-    public boolean isReachable() {
+    public boolean exists() {
         return false;
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/views/PreviewView.java b/app/src/main/java/ch/bailu/aat/views/PreviewView.java
index ca71faa5..32a06927 100644
--- a/app/src/main/java/ch/bailu/aat/views/PreviewView.java
+++ b/app/src/main/java/ch/bailu/aat/views/PreviewView.java
@@ -5,16 +5,14 @@ import android.content.Context;
 import android.content.Intent;
 import android.widget.ImageView;
 
-import java.io.File;
-
+import ch.bailu.aat.services.directory.SummaryConfig;
 import ch.bailu.aat.util.AppBroadcaster;
-import ch.bailu.aat.util.fs.AppDirectory;
 import ch.bailu.aat.util.AppIntent;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.cache.ImageObject;
 import ch.bailu.aat.services.cache.ObjectHandle;
+import ch.bailu.aat.util.fs.foc.FocAndroid;
 import ch.bailu.simpleio.foc.Foc;
-import ch.bailu.simpleio.foc.FocFile;
 
 public class PreviewView extends ImageView {
     private boolean isAttached=false;
@@ -32,7 +30,8 @@ public class PreviewView extends ImageView {
     
     
     public void setFilePath(String fileID) {
-        final Foc file = AppDirectory.getPreviewFile(new FocFile(new File(fileID)));
+        final Foc file = SummaryConfig
+                .getReadablePreviewFile(getContext(), FocAndroid.factory(getContext(), fileID));
         setPreviewPath(file);
         loadAndDisplayImage();
     }
diff --git a/app/src/main/java/ch/bailu/aat/views/TagEditor.java b/app/src/main/java/ch/bailu/aat/views/TagEditor.java
index 0ce0d12d..a7ad820f 100644
--- a/app/src/main/java/ch/bailu/aat/views/TagEditor.java
+++ b/app/src/main/java/ch/bailu/aat/views/TagEditor.java
@@ -6,13 +6,11 @@ import android.content.Intent;
 import android.text.InputType;
 import android.widget.EditText;
 
-import java.io.File;
 import java.io.IOException;
 
 import ch.bailu.aat.util.AppBroadcaster;
 import ch.bailu.aat.util.AppIntent;
 import ch.bailu.aat.util.TextBackup;
-import ch.bailu.aat.util.fs.foc.FocAndroid;
 import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.simpleio.foc.Foc;
 
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/AddOverlayDialog.java b/app/src/main/java/ch/bailu/aat/views/preferences/AddOverlayDialog.java
index 8eaeae27..13da6edb 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/AddOverlayDialog.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/AddOverlayDialog.java
@@ -4,8 +4,6 @@ import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
 
-import java.io.File;
-
 import ch.bailu.aat.preferences.SolidOverlayFileList;
 import ch.bailu.simpleio.foc.Foc;
 
diff --git a/simpleio/src/main/java/ch/bailu/simpleio/foc/Foc.java b/simpleio/src/main/java/ch/bailu/simpleio/foc/Foc.java
index 0aac8a6c..8d4173cc 100644
--- a/simpleio/src/main/java/ch/bailu/simpleio/foc/Foc.java
+++ b/simpleio/src/main/java/ch/bailu/simpleio/foc/Foc.java
@@ -7,7 +7,16 @@ import java.io.OutputStream;
 
 public abstract class Foc {
 
-    public abstract boolean rm();
+    public abstract boolean remove() throws IOException, SecurityException;
+
+    public boolean rm() {
+        try {
+            return remove();
+        } catch (IOException e) {
+            return false;
+        }
+    }
+
     public boolean rmdir() {
         return isDir() && rm();
     }
@@ -33,15 +42,13 @@ public abstract class Foc {
     }
 
 
+
     public abstract boolean mkdir();
     public boolean mkdirs() {
-        if (isReachable() == false) {
-            Foc parent = parent();
-            if (parent != null && parent.mkdirs())
-                return mkdir();
-        }
+        if (exists()) return isDir();
 
-        return isDir();
+        Foc parent = parent();
+        return parent != null && parent.mkdirs() && mkdir();
     }
 
     public boolean mkParents() {
@@ -51,31 +58,48 @@ public abstract class Foc {
 
     public abstract Foc parent();
 
-    public abstract boolean mv(Foc target);
 
-    public boolean cp(Foc copy) {
+
+    public boolean move(Foc target) throws IOException , SecurityException {
+        return copy(target) && remove();
+    }
+
+
+    public boolean mv(Foc target) {
         try {
-            copy(copy);
+            return move(target);
         } catch (Exception e) {
             return false;
         }
-        return true;
     }
 
 
-    public void copy(Foc copy) throws Exception {
+
+
+    public boolean copy(Foc copy) throws IOException, SecurityException {
         OutputStream out = null;
 
         try {
             out = copy.openW();
             copy(out);
+            return true;
 
         } finally {
             if (out != null) out.close();
         }
     }
 
-    private void copy(OutputStream out) throws Exception {
+    public boolean cp(Foc copy) {
+        try {
+            return copy(copy);
+        } catch (Exception e) {
+            return false;
+        }
+    }
+
+
+
+    private void copy(OutputStream out) throws IOException, SecurityException {
         InputStream in = null;
 
         try {
@@ -97,17 +121,8 @@ public abstract class Foc {
     }
 
     public abstract Foc child(String name);
-
     public abstract String getName();
 
-    public boolean canOnlyRead() {
-        return canRead() && ! canWrite();
-    }
-
-    public abstract long length();
-
-
-
     public abstract static class Execute {
         public abstract void execute(Foc child);
     }
@@ -119,17 +134,20 @@ public abstract class Foc {
 
     public abstract boolean isDir();
     public abstract boolean isFile();
-    public abstract boolean isReachable();
+    public abstract boolean exists();
 
+    public boolean canOnlyRead() {
+        return canRead() && ! canWrite();
+    }
     public abstract boolean canRead();
     public abstract boolean canWrite();
 
+    public abstract long length();
     public abstract long lastModified();
 
     public abstract InputStream openR() throws IOException;
     public abstract OutputStream openW() throws IOException;
 
-
     public static void close(Closeable toClose) {
         try {
             if (toClose != null)
@@ -139,4 +157,9 @@ public abstract class Foc {
         }
     }
 
+
+    @Override
+    public int hashCode() {
+        return toString().hashCode();
+    }
 }
diff --git a/simpleio/src/main/java/ch/bailu/simpleio/foc/FocFile.java b/simpleio/src/main/java/ch/bailu/simpleio/foc/FocFile.java
index dc8aa3b0..6928772f 100644
--- a/simpleio/src/main/java/ch/bailu/simpleio/foc/FocFile.java
+++ b/simpleio/src/main/java/ch/bailu/simpleio/foc/FocFile.java
@@ -16,30 +16,25 @@ public class FocFile extends Foc {
     public FocFile(String f) {
         file = new File(f);
     }
-
     public FocFile(File f) {
         file = f;
     }
 
 
     @Override
-    public boolean rm() {
-        try {
-            return file.delete();
-        } catch (SecurityException e) {
-            return false;
-        }
+    public boolean remove() throws SecurityException {
+        return file.delete();
     }
 
 
     @Override
     public boolean mkdirs() {
-        return file.mkdirs();
+        return isDir() || file.mkdirs();
     }
 
     @Override
     public boolean mkdir() {
-        return file.mkdir();
+        return isDir() || file.mkdir();
     }
 
     @Override
@@ -51,13 +46,13 @@ public class FocFile extends Foc {
     }
 
     @Override
-    public boolean mv(Foc target) {
+    public boolean move(Foc target) throws IOException {
         if (target instanceof FocFile) {
             FocFile targetFile = (FocFile) target;
 
-            return file.renameTo(targetFile.file);
+            return file.renameTo(targetFile.file) || super.move(target);
         }
-        return false;
+        return super.move(target);
     }
 
     @Override
@@ -78,7 +73,7 @@ public class FocFile extends Foc {
 
     @Override
     public String toString() {
-        return file.getAbsolutePath();
+        return file.toString();
     }
 
 
@@ -129,7 +124,7 @@ public class FocFile extends Foc {
     }
 
     @Override
-    public boolean isReachable() {
+    public boolean exists() {
         return file.exists();
     }
 
@@ -156,6 +151,9 @@ public class FocFile extends Foc {
 
     @Override
     public OutputStream openW() throws IOException {
-        return new FileOutputStream(file);
+        if (mkParents())
+            return new FileOutputStream(file);
+
+        throw new IOException();
     }
 }
diff --git a/simpleio/src/main/java/ch/bailu/simpleio/parser/MapFeaturesPreparser.java b/simpleio/src/main/java/ch/bailu/simpleio/parser/MapFeaturesPreparser.java
index bfeedbc9..60f6d65e 100644
--- a/simpleio/src/main/java/ch/bailu/simpleio/parser/MapFeaturesPreparser.java
+++ b/simpleio/src/main/java/ch/bailu/simpleio/parser/MapFeaturesPreparser.java
@@ -36,7 +36,7 @@ public class MapFeaturesPreparser {
 
             try {
                 new MapFeaturesPreparser(
-                        new FocFile(args[0]),
+                        new FocFile (args[0]),
                         new FocFile (args[1]),
                         new FocFile (args[2]));
             } catch (IOException e) {
