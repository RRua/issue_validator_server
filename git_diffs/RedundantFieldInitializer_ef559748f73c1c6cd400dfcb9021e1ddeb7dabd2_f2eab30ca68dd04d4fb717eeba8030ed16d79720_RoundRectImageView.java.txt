diff --git a/play_widget/src/main/java/com/cleveroad/play_widget/OnShadowChangeListener.java b/play_widget/src/main/java/com/cleveroad/play_widget/OnShadowChangeListener.java
index 0ead00a..692bb78 100644
--- a/play_widget/src/main/java/com/cleveroad/play_widget/OnShadowChangeListener.java
+++ b/play_widget/src/main/java/com/cleveroad/play_widget/OnShadowChangeListener.java
@@ -1,5 +1,16 @@
 package com.cleveroad.play_widget;
 
-public interface OnShadowChangeListener {
+/**
+ * Interface for shadow change listener.
+ */
+interface OnShadowChangeListener {
+
+    /**
+     * Set shadow percentages for diffusers.
+     *
+     * @param bigDiffuserShadowPercentage    shadow percentage for big diffuser (0.0f - 1.0f)
+     * @param mediumDiffuserShadowPercentage shadow percentage for medium diffuser (0.0f - 1.0f)
+     * @param smallDiffuserShadowPercentage  shadow percentage for small diffuser (0.0f - 1.0f)
+     */
     void shadowChanged(float bigDiffuserShadowPercentage, float mediumDiffuserShadowPercentage, float smallDiffuserShadowPercentage);
 }
diff --git a/play_widget/src/main/java/com/cleveroad/play_widget/PlayLayout.java b/play_widget/src/main/java/com/cleveroad/play_widget/PlayLayout.java
index 4297559..2972043 100644
--- a/play_widget/src/main/java/com/cleveroad/play_widget/PlayLayout.java
+++ b/play_widget/src/main/java/com/cleveroad/play_widget/PlayLayout.java
@@ -22,6 +22,7 @@ import android.support.annotation.DrawableRes;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.design.widget.FloatingActionButton;
+import android.support.v4.content.ContextCompat;
 import android.util.AttributeSet;
 import android.util.Log;
 import android.view.LayoutInflater;
@@ -33,6 +34,10 @@ import android.view.animation.OvershootInterpolator;
 import android.widget.ImageView;
 import android.widget.RelativeLayout;
 
+import com.cleveroad.play_widget.internal.DiffuserView;
+import com.cleveroad.play_widget.internal.ProgressLineView;
+import com.cleveroad.play_widget.internal.RoundRectImageView;
+
 /**
  * PlayLayout View implementation
  */
@@ -159,12 +164,12 @@ public class PlayLayout extends RelativeLayout implements OnShadowChangeListener
             setImageDrawable(d);
         }
 
-        int bigDiffuserColor = typedArrayValues.getColor(R.styleable.PlayWidget_pw_big_diffuser_color, Utils.getColor(getResources(), R.color.pw_circle_color));
-        int mediumDiffuserColor = typedArrayValues.getColor(R.styleable.PlayWidget_pw_medium_diffuser_color, Utils.getColor(getResources(), R.color.pw_circle_color_translucent));
+        int bigDiffuserColor = typedArrayValues.getColor(R.styleable.PlayWidget_pw_big_diffuser_color, ContextCompat.getColor(getContext(), R.color.pw_circle_color));
+        int mediumDiffuserColor = typedArrayValues.getColor(R.styleable.PlayWidget_pw_medium_diffuser_color, ContextCompat.getColor(getContext(), R.color.pw_circle_color_translucent));
 
-        setProgressLineColor(typedArrayValues.getColor(R.styleable.PlayWidget_pw_progress_line_color, Utils.getColor(getResources(), R.color.pw_progress_line_color)));
-        setProgressCompleteColor(typedArrayValues.getColor(R.styleable.PlayWidget_pw_progress_complete_line_color, Utils.getColor(getResources(), R.color.pw_progress_complete_color)));
-        setProgressBallColor(typedArrayValues.getColor(R.styleable.PlayWidget_pw_progress_ball_color, Utils.getColor(getResources(), R.color.pw_progress_ball_color)));
+        setProgressLineColor(typedArrayValues.getColor(R.styleable.PlayWidget_pw_progress_line_color, ContextCompat.getColor(getContext(), R.color.pw_progress_line_color)));
+        setProgressCompleteColor(typedArrayValues.getColor(R.styleable.PlayWidget_pw_progress_complete_line_color, ContextCompat.getColor(getContext(), R.color.pw_progress_complete_color)));
+        setProgressBallColor(typedArrayValues.getColor(R.styleable.PlayWidget_pw_progress_ball_color, ContextCompat.getColor(getContext(), R.color.pw_progress_ball_color)));
 
         ColorStateList lFabBackgroundTint = typedArrayValues.getColorStateList(R.styleable.PlayWidget_pw_play_button_background_tint);
         if (lFabBackgroundTint != null)
@@ -176,20 +181,20 @@ public class PlayLayout extends RelativeLayout implements OnShadowChangeListener
 
         //big diffuser
         mIvBackground.setColor(bigDiffuserColor);
-        mBigShadowDrawable = new ShadowDrawable(getResources(), true);
+        mBigShadowDrawable = new ShadowDrawable(getContext(), true);
         mBigShadowDrawable.hideShadow(false);
         setupDiffuserView(mBigDiffuserImageView, mBigShadowDrawable);
 
         //medium diffuser
         mMediumDiffuserImageView.setColor(mediumDiffuserColor);
         mMediumDiffuserImageView.setMustDrawRevealAnimation(true);
-        mMediumShadowDrawable = new ShadowDrawable(getResources());
+        mMediumShadowDrawable = new ShadowDrawable(getContext());
         setupDiffuserView(mMediumDiffuserImageView, mMediumShadowDrawable);
         mMediumDiffuserImageView.setScaleX(0.0f);
         mMediumDiffuserImageView.setScaleY(0.0f);
 
         //small diffuser
-        mSmallShadowDrawable = new ShadowDrawable(getResources());
+        mSmallShadowDrawable = new ShadowDrawable(getContext());
         mSmallShadowDrawable.setup(mSmallDiffuserFullSize / 2.0f, mSmallDiffuserShadowWidth);
         setupDiffuserView(mSmallDiffuserImageView, mSmallShadowDrawable);
         mSmallShadowDrawable.hideShadow(false);
@@ -711,7 +716,7 @@ public class PlayLayout extends RelativeLayout implements OnShadowChangeListener
      * @param colorRes Color resource color for big diffuser
      */
     public void setBigDiffuserColorResource(@ColorRes int colorRes) {
-        setBigDiffuserColor(Utils.getColor(getResources(), colorRes));
+        setBigDiffuserColor(ContextCompat.getColor(getContext(), colorRes));
     }
 
     /**
@@ -730,7 +735,7 @@ public class PlayLayout extends RelativeLayout implements OnShadowChangeListener
      * @param colorRes Color resource color for medium diffuser
      */
     public void setMediumDiffuserColorResource(@ColorRes int colorRes) {
-        setMediumDiffuserColor(Utils.getColor(getResources(), colorRes));
+        setMediumDiffuserColor(ContextCompat.getColor(getContext(), colorRes));
     }
 
     /**
@@ -853,7 +858,7 @@ public class PlayLayout extends RelativeLayout implements OnShadowChangeListener
      * @param colorRes Color res Color for progress line
      */
     public void setProgressLineColorResource(@ColorRes int colorRes) {
-        setProgressLineColor(Utils.getColor(getResources(), colorRes));
+        setProgressLineColor(ContextCompat.getColor(getContext(), colorRes));
     }
 
     /**
@@ -872,7 +877,7 @@ public class PlayLayout extends RelativeLayout implements OnShadowChangeListener
      * @param colorRes Color res Color for progress complete line
      */
     public void setProgressCompleteColorResource(@ColorRes int colorRes) {
-        setProgressCompleteColor(Utils.getColor(getResources(), colorRes));
+        setProgressCompleteColor(ContextCompat.getColor(getContext(), colorRes));
     }
 
     /**
@@ -891,7 +896,7 @@ public class PlayLayout extends RelativeLayout implements OnShadowChangeListener
      * @param colorRes Color resource Color for progress ball indicator
      */
     public void setProgressBallColorResource(@ColorRes int colorRes) {
-        setProgressBallColor(Utils.getColor(getResources(), colorRes));
+        setProgressBallColor(ContextCompat.getColor(getContext(), colorRes));
     }
 
     private boolean isOpenInner() {
@@ -1180,8 +1185,9 @@ public class PlayLayout extends RelativeLayout implements OnShadowChangeListener
                 };
     }
 
-    public static abstract class ShadowPercentageProvider {
 
+
+    public static abstract class ShadowPercentageProvider {
         private boolean allowChangeShadow = false;
 
         private OnShadowChangeListener shadowChangedListener;
diff --git a/play_widget/src/main/java/com/cleveroad/play_widget/ShadowDrawable.java b/play_widget/src/main/java/com/cleveroad/play_widget/ShadowDrawable.java
index 7211268..8f6471c 100644
--- a/play_widget/src/main/java/com/cleveroad/play_widget/ShadowDrawable.java
+++ b/play_widget/src/main/java/com/cleveroad/play_widget/ShadowDrawable.java
@@ -2,6 +2,7 @@ package com.cleveroad.play_widget;
 
 import android.animation.Animator;
 import android.animation.ObjectAnimator;
+import android.content.Context;
 import android.content.res.Resources;
 import android.graphics.Canvas;
 import android.graphics.ColorFilter;
@@ -14,7 +15,11 @@ import android.graphics.RectF;
 import android.graphics.Shader;
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
+import android.support.v4.content.ContextCompat;
 
+/**
+ * Drawable that draw shadow for diffusers. provide methods for changing shadow size
+ */
 class ShadowDrawable extends Drawable {
     private static final int SHADOW_ANIMATION_DURATION = 350;
 
@@ -34,19 +39,19 @@ class ShadowDrawable extends Drawable {
     private final int mShadowMiddleColor;
     private final int mShadowEndColor;
 
-    public ShadowDrawable(Resources resources) {
-        this(resources, false);
+    public ShadowDrawable(Context context) {
+        this(context, false);
     }
 
-    public ShadowDrawable(Resources resources, boolean hard) {
+    public ShadowDrawable(Context context, boolean hard) {
         if (hard) {
-            mShadowStartColor = Utils.getColor(resources, R.color.pw_shadow_start_color_hard);
-            mShadowMiddleColor = Utils.getColor(resources, R.color.pw_shadow_mid_color_hard);
-            mShadowEndColor = Utils.getColor(resources, R.color.pw_shadow_end_color_hard);
+            mShadowStartColor = ContextCompat.getColor(context, R.color.pw_shadow_start_color_hard);
+            mShadowMiddleColor = ContextCompat.getColor(context, R.color.pw_shadow_mid_color_hard);
+            mShadowEndColor = ContextCompat.getColor(context, R.color.pw_shadow_end_color_hard);
         } else {
-            mShadowStartColor = Utils.getColor(resources, R.color.pw_shadow_start_color);
-            mShadowMiddleColor = Utils.getColor(resources, R.color.pw_shadow_mid_color);
-            mShadowEndColor = Utils.getColor(resources, R.color.pw_shadow_end_color);
+            mShadowStartColor = ContextCompat.getColor(context, R.color.pw_shadow_start_color);
+            mShadowMiddleColor = ContextCompat.getColor(context, R.color.pw_shadow_mid_color);
+            mShadowEndColor = ContextCompat.getColor(context, R.color.pw_shadow_end_color);
         }
 
         mCornerShadowPaint = new Paint(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);
@@ -79,6 +84,10 @@ class ShadowDrawable extends Drawable {
 
     }
 
+    /**
+     * set shadow size multiplier allow change shadow size in percents.
+     * @param multiplier size in percents;
+     */
     public void setShadowSizeMultiplier(float multiplier) {
         mShadowSizeMultiplier = multiplier;
         setShadowSize(mFinalShadowSize, true);
diff --git a/play_widget/src/main/java/com/cleveroad/play_widget/Utils.java b/play_widget/src/main/java/com/cleveroad/play_widget/Utils.java
deleted file mode 100644
index 2e274e9..0000000
--- a/play_widget/src/main/java/com/cleveroad/play_widget/Utils.java
+++ /dev/null
@@ -1,17 +0,0 @@
-package com.cleveroad.play_widget;
-
-import android.annotation.TargetApi;
-import android.content.res.Resources;
-import android.os.Build;
-import android.support.annotation.ColorRes;
-
-class Utils {
-    @TargetApi(Build.VERSION_CODES.M)
-    public static int getColor(Resources resources, @ColorRes int colorRes) {
-        if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
-            return resources.getColor(colorRes, null);
-        }
-        //noinspection deprecation
-        return resources.getColor(colorRes);
-    }
-}
diff --git a/play_widget/src/main/java/com/cleveroad/play_widget/VisualizerShadowChanger.java b/play_widget/src/main/java/com/cleveroad/play_widget/VisualizerShadowChanger.java
index 6b262ca..0cbfdea 100644
--- a/play_widget/src/main/java/com/cleveroad/play_widget/VisualizerShadowChanger.java
+++ b/play_widget/src/main/java/com/cleveroad/play_widget/VisualizerShadowChanger.java
@@ -27,12 +27,16 @@ public class VisualizerShadowChanger extends PlayLayout.ShadowPercentageProvider
     private float[] mDbsPercentagesConcrete = new float[SOUND_INDEX_COEFFICIENTS.length];
     private Visualizer mVisualizer;
 
-    public VisualizerShadowChanger() {
-        mVisualizer = new Visualizer(0);
+    private VisualizerShadowChanger(int audioSessionId) {
+        mVisualizer = new Visualizer(audioSessionId);
         mVisualizer.setCaptureSize(Visualizer.getCaptureSizeRange()[1]);
         mVisualizer.setDataCaptureListener(this, Visualizer.getMaxCaptureRate(), false, true);
     }
 
+    public static VisualizerShadowChanger newInstance(int audioSessionId) {
+        return new VisualizerShadowChanger(audioSessionId);
+    }
+
     /**
      * Enable or disable visualisation. You should enable state on resume and disable on pause.
      *
diff --git a/play_widget/src/main/java/com/cleveroad/play_widget/DiffuserView.java b/play_widget/src/main/java/com/cleveroad/play_widget/internal/DiffuserView.java
similarity index 96%
rename from play_widget/src/main/java/com/cleveroad/play_widget/DiffuserView.java
rename to play_widget/src/main/java/com/cleveroad/play_widget/internal/DiffuserView.java
index 536cea7..371d31a 100644
--- a/play_widget/src/main/java/com/cleveroad/play_widget/DiffuserView.java
+++ b/play_widget/src/main/java/com/cleveroad/play_widget/internal/DiffuserView.java
@@ -1,4 +1,4 @@
-package com.cleveroad.play_widget;
+package com.cleveroad.play_widget.internal;
 
 import android.annotation.TargetApi;
 import android.content.Context;
@@ -11,7 +11,7 @@ import android.support.annotation.ColorInt;
 import android.util.AttributeSet;
 import android.widget.ImageView;
 
-class DiffuserView extends ImageView {
+public class DiffuserView extends ImageView {
 
     private float mRadiusPercentage = 0.0f;
     private boolean mDismissAnimation = false;
diff --git a/play_widget/src/main/java/com/cleveroad/play_widget/ProgressLineView.java b/play_widget/src/main/java/com/cleveroad/play_widget/internal/ProgressLineView.java
similarity index 93%
rename from play_widget/src/main/java/com/cleveroad/play_widget/ProgressLineView.java
rename to play_widget/src/main/java/com/cleveroad/play_widget/internal/ProgressLineView.java
index 8e42bb1..9f99767 100644
--- a/play_widget/src/main/java/com/cleveroad/play_widget/ProgressLineView.java
+++ b/play_widget/src/main/java/com/cleveroad/play_widget/internal/ProgressLineView.java
@@ -1,4 +1,4 @@
-package com.cleveroad.play_widget;
+package com.cleveroad.play_widget.internal;
 
 import android.annotation.TargetApi;
 import android.content.Context;
@@ -10,10 +10,13 @@ import android.graphics.PointF;
 import android.graphics.RectF;
 import android.os.Build;
 import android.support.annotation.ColorInt;
+import android.support.v4.content.ContextCompat;
 import android.util.AttributeSet;
 import android.widget.ImageView;
 
-class ProgressLineView extends ImageView {
+import com.cleveroad.play_widget.R;
+
+public class ProgressLineView extends ImageView {
 
     private static final int ADDITIONAL_PROGRESS_DEGREE = 20;
     private static final float BEGIN_PROGRESS_DEGREE = 180 - ADDITIONAL_PROGRESS_DEGREE;
@@ -67,20 +70,20 @@ class ProgressLineView extends ImageView {
         mLinePaint.setStyle(Paint.Style.STROKE);
         mLinePaint.setStrokeCap(Paint.Cap.ROUND);
         mLinePaint.setStrokeWidth(mProgressLineStrokeWidth);
-        setProgressLineColor(Utils.getColor(getContext().getResources(), R.color.pw_progress_line_color));
+        setProgressLineColor(ContextCompat.getColor(getContext(), R.color.pw_progress_line_color));
 
         mProgressPaint = new Paint();
         mProgressPaint.setAntiAlias(true);
         mProgressPaint.setStyle(Paint.Style.STROKE);
         mProgressPaint.setStrokeCap(Paint.Cap.ROUND);
         mProgressPaint.setStrokeWidth(mProgressCompleteLineStrokeWidth);
-        setProgressCompleteColor(Utils.getColor(getContext().getResources(), R.color.pw_progress_complete_color));
+        setProgressCompleteColor(ContextCompat.getColor(getContext(), R.color.pw_progress_complete_color));
 
         mProgressBallPaint = new Paint();
         mProgressBallPaint.setStyle(Paint.Style.FILL);
         mProgressBallPaint.setAntiAlias(true);
         mProgressBallPaint.setStrokeWidth(1);
-        setProgressBallColor(Utils.getColor(getContext().getResources(), R.color.pw_progress_ball_color));
+        setProgressBallColor(ContextCompat.getColor(getContext(), R.color.pw_progress_ball_color));
 
     }
 
diff --git a/play_widget/src/main/java/com/cleveroad/play_widget/RoundRectImageView.java b/play_widget/src/main/java/com/cleveroad/play_widget/internal/RoundRectImageView.java
similarity index 98%
rename from play_widget/src/main/java/com/cleveroad/play_widget/RoundRectImageView.java
rename to play_widget/src/main/java/com/cleveroad/play_widget/internal/RoundRectImageView.java
index 854f0bf..2cbe02d 100644
--- a/play_widget/src/main/java/com/cleveroad/play_widget/RoundRectImageView.java
+++ b/play_widget/src/main/java/com/cleveroad/play_widget/internal/RoundRectImageView.java
@@ -1,4 +1,4 @@
-package com.cleveroad.play_widget;
+package com.cleveroad.play_widget.internal;
 
 import android.annotation.TargetApi;
 import android.content.Context;
@@ -15,7 +15,7 @@ import android.util.AttributeSet;
 import android.view.View;
 import android.widget.ImageView;
 
-class RoundRectImageView extends ImageView {
+public class RoundRectImageView extends ImageView {
 
     private Paint mPaint;
     private Paint mMaskPaint;
diff --git a/sample/src/main/java/com/cleveroad/sample/MainActivity.java b/sample/src/main/java/com/cleveroad/sample/MainActivity.java
index a376909..947cca3 100644
--- a/sample/src/main/java/com/cleveroad/sample/MainActivity.java
+++ b/sample/src/main/java/com/cleveroad/sample/MainActivity.java
@@ -79,7 +79,7 @@ public class MainActivity extends AppCompatActivity {
     }
 
     private void startVisualiser() {
-        mShadowChanger = new VisualizerShadowChanger();
+        mShadowChanger = VisualizerShadowChanger.newInstance(0);
         mPlayLayout.setShadowProvider(mShadowChanger);
     }
 
