diff --git a/app/src/main/java/androdns/android/leetdreams/ch/androdns/StarredQueries.java b/app/src/main/java/androdns/android/leetdreams/ch/androdns/BookmarkedQueries.java
similarity index 67%
rename from app/src/main/java/androdns/android/leetdreams/ch/androdns/StarredQueries.java
rename to app/src/main/java/androdns/android/leetdreams/ch/androdns/BookmarkedQueries.java
index 6f0713c..89ca5d2 100644
--- a/app/src/main/java/androdns/android/leetdreams/ch/androdns/StarredQueries.java
+++ b/app/src/main/java/androdns/android/leetdreams/ch/androdns/BookmarkedQueries.java
@@ -2,7 +2,6 @@ package androdns.android.leetdreams.ch.androdns;
 
 import android.content.Context;
 import android.util.JsonWriter;
-import android.util.Log;
 
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -13,31 +12,28 @@ import org.xbill.DNS.Type;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
-import java.io.ObjectInputStream;
-import java.io.ObjectOutputStream;
 import java.io.OutputStreamWriter;
 import java.util.ArrayList;
-import java.util.Collections;
 
 
-public class StarredQueries {
-    private ArrayList<Session> starredList = new ArrayList<Session>();
-    private static final String starredFile = "starred.json";
+public class BookmarkedQueries {
+    private ArrayList<Session> bookmarks = new ArrayList<Session>();
+    private static final String bookmarkFile = "bookmarks.json";
     private Context context = null;
 
-    public StarredQueries(Context context) {
+    public BookmarkedQueries(Context context) {
         this.context = context;
     }
 
     public void save() {
         try {
 
-            FileOutputStream fos = context.openFileOutput(starredFile, Context.MODE_PRIVATE);
+            FileOutputStream fos = context.openFileOutput(bookmarkFile, Context.MODE_PRIVATE);
 
             JsonWriter writer = new JsonWriter(new OutputStreamWriter(fos, "UTF-8"));
             writer.setIndent("  ");
             writer.beginArray();
-            for (Session s : starredList) {
+            for (Session s : bookmarks) {
                 s.toJSON(writer);
             }
             writer.endArray();
@@ -50,7 +46,7 @@ public class StarredQueries {
     public String loadJSONStringFromFile() {
         String json = null;
         try {
-            InputStream is = context.openFileInput(starredFile);
+            InputStream is = context.openFileInput(bookmarkFile);
             int size = is.available();
             byte[] buffer = new byte[size];
             is.read(buffer);
@@ -64,7 +60,7 @@ public class StarredQueries {
     }
 
     public void load() {
-        starredList.clear();
+        bookmarks.clear();
         try {
             JSONTokener tokener = new JSONTokener(loadJSONStringFromFile());
             JSONArray jsa = new JSONArray(tokener);
@@ -73,7 +69,7 @@ public class StarredQueries {
                 Session s = new Session();
                 try {
                     s.fromJSON(obj);
-                    starredList.add(s);
+                    bookmarks.add(s);
                 } catch (JSONException je) {
                     je.printStackTrace();
                 }
@@ -82,40 +78,40 @@ public class StarredQueries {
         } catch (Exception e) {
             e.printStackTrace();
         }
-        if(starredList.isEmpty()){
-            starredList = getDefaultStarredList();
+        if(bookmarks.isEmpty()){
+            bookmarks = getDefaultBookmarks();
         }
     }
 
-    public void star(Session s) {
-        if(!isStarred(s)) {
-            starredList.add(s);
+    public void bookmark(Session s) {
+        if(!isBookmarked(s)) {
+            bookmarks.add(s);
         }
         save();
     }
 
-    public void unstar(Session s) {
-        starredList.remove(s);
+    public void removeBookmark(Session s) {
+        bookmarks.remove(s);
         save();
     }
 
-    public ArrayList<Session> getStarredList() {
-        return starredList;
+    public ArrayList<Session> getBookmarks() {
+        return bookmarks;
     }
 
-    public void setStarredList(ArrayList<Session> newlist) {
-        starredList = newlist;
+    public void setBookmarks(ArrayList<Session> newBookmarks) {
+        bookmarks = newBookmarks;
     }
 
-    public boolean isStarred(Session s){
-        return starredList.contains(s);
+    public boolean isBookmarked(Session s){
+        return bookmarks.contains(s);
     }
 
     public Session getSessionAt(int position) {
-        return getStarredList().get(position);
+        return getBookmarks().get(position);
     }
 
-    public ArrayList<Session> getDefaultStarredList() {
+    public ArrayList<Session> getDefaultBookmarks() {
 
         ArrayList<Session> defaultList = new ArrayList<Session>();
 
diff --git a/app/src/main/java/androdns/android/leetdreams/ch/androdns/StarredQueriesActivity.java b/app/src/main/java/androdns/android/leetdreams/ch/androdns/BookmarkedQueriesActivity.java
similarity index 63%
rename from app/src/main/java/androdns/android/leetdreams/ch/androdns/StarredQueriesActivity.java
rename to app/src/main/java/androdns/android/leetdreams/ch/androdns/BookmarkedQueriesActivity.java
index 1a03de3..3de0369 100644
--- a/app/src/main/java/androdns/android/leetdreams/ch/androdns/StarredQueriesActivity.java
+++ b/app/src/main/java/androdns/android/leetdreams/ch/androdns/BookmarkedQueriesActivity.java
@@ -9,17 +9,17 @@ import android.view.View;
 import android.widget.ListView;
 
 
-public class StarredQueriesActivity extends ListActivity {
+public class BookmarkedQueriesActivity extends ListActivity {
 
-    private StarredQueries starredQueries;
+    private BookmarkedQueries bookmarkedQueries;
 
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        starredQueries = new StarredQueries(getApplicationContext());
-        starredQueries.load();
+        bookmarkedQueries = new BookmarkedQueries(getApplicationContext());
+        bookmarkedQueries.load();
 
-        StarredQueryAdapter adapter = new StarredQueryAdapter(this,starredQueries.getStarredList().toArray(new Session[0]));
+        BookmarkedQueriesAdapter adapter = new BookmarkedQueriesAdapter(this, bookmarkedQueries.getBookmarks().toArray(new Session[0]));
         setListAdapter(adapter);
     }
 
@@ -27,7 +27,7 @@ public class StarredQueriesActivity extends ListActivity {
     protected void onListItemClick(ListView l, View v, int position, long id) {
         Intent resultIntent = new Intent();
         resultIntent.putExtra("entry", position);
-        resultIntent.putExtra("source", "starred");
+        resultIntent.putExtra("source", "bookmarks");
 
         setResult(Activity.RESULT_OK, resultIntent);
         finish();
diff --git a/app/src/main/java/androdns/android/leetdreams/ch/androdns/StarredQueryAdapter.java b/app/src/main/java/androdns/android/leetdreams/ch/androdns/BookmarkedQueriesAdapter.java
similarity index 83%
rename from app/src/main/java/androdns/android/leetdreams/ch/androdns/StarredQueryAdapter.java
rename to app/src/main/java/androdns/android/leetdreams/ch/androdns/BookmarkedQueriesAdapter.java
index b3f7fdc..80a5f5d 100644
--- a/app/src/main/java/androdns/android/leetdreams/ch/androdns/StarredQueryAdapter.java
+++ b/app/src/main/java/androdns/android/leetdreams/ch/androdns/BookmarkedQueriesAdapter.java
@@ -15,12 +15,12 @@ import org.xbill.DNS.Type;
  * Created by gryphius on 30.04.17.
  */
 
-public class StarredQueryAdapter extends ArrayAdapter<Session> {
+public class BookmarkedQueriesAdapter extends ArrayAdapter<Session> {
 
     private final Context context;
     private final Session[] values;
 
-    public StarredQueryAdapter(Context context, Session[] values) {
+    public BookmarkedQueriesAdapter(Context context, Session[] values) {
         super(context, -1, values);
         this.context = context;
         this.values = values;
@@ -30,7 +30,7 @@ public class StarredQueryAdapter extends ArrayAdapter<Session> {
     public View getView(int position, View convertView, ViewGroup parent) {
         LayoutInflater inflater = (LayoutInflater) context
                 .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-        View rowView = inflater.inflate(R.layout.sessiondisplay_starred, parent, false);
+        View rowView = inflater.inflate(R.layout.sessiondisplay_bookmark, parent, false);
 
 
         Session session = values[position];
@@ -40,7 +40,7 @@ public class StarredQueryAdapter extends ArrayAdapter<Session> {
             qname = qname+"@"+session.server;
         }
 
-        ((TextView) rowView.findViewById(R.id.starred_qname)).setText(qname);
+        ((TextView) rowView.findViewById(R.id.bookmarked_qname)).setText(qname);
 
         String type = ""+session.qtype;
         try {
@@ -49,7 +49,7 @@ public class StarredQueryAdapter extends ArrayAdapter<Session> {
                 type = type + "(" + txtType + ")";
             }
         } catch (InvalidTypeException e) {}
-        ((TextView) rowView.findViewById(R.id.starred_qtype)).setText(type);
+        ((TextView) rowView.findViewById(R.id.bookmarked_qtype)).setText(type);
 
         StringBuffer flagsBuffer = new StringBuffer();
 
@@ -78,7 +78,7 @@ public class StarredQueryAdapter extends ArrayAdapter<Session> {
             flagsBuffer.append("TCP ");
         }
 
-        ((TextView) rowView.findViewById(R.id.starred_flags)).setText(flagsBuffer.toString());
+        ((TextView) rowView.findViewById(R.id.bookmarked_flags)).setText(flagsBuffer.toString());
         return rowView;
     }
 
diff --git a/app/src/main/java/androdns/android/leetdreams/ch/androdns/DNSFormActivity.java b/app/src/main/java/androdns/android/leetdreams/ch/androdns/DNSFormActivity.java
index c31f709..406483b 100644
--- a/app/src/main/java/androdns/android/leetdreams/ch/androdns/DNSFormActivity.java
+++ b/app/src/main/java/androdns/android/leetdreams/ch/androdns/DNSFormActivity.java
@@ -59,7 +59,7 @@ public class DNSFormActivity extends AppCompatActivity implements AdapterView.On
     private static final String TAG = "AndroDNS";
     private Session activeSession = null;
     private History history;
-    private StarredQueries starred;
+    private BookmarkedQueries bookmarks;
     private DNSSECVerifier dnssecVerifier=null;
 
     @Override
@@ -74,8 +74,8 @@ public class DNSFormActivity extends AppCompatActivity implements AdapterView.On
         history = new History(getApplicationContext());
         history.load();
 
-        starred = new StarredQueries(getApplicationContext());
-        starred.load();
+        bookmarks = new BookmarkedQueries(getApplicationContext());
+        bookmarks.load();
     }
 
     @Override
@@ -186,7 +186,7 @@ public class DNSFormActivity extends AppCompatActivity implements AdapterView.On
         if (session.answer!=null){
             updateScreenState(session.answer,true);
         }
-        updateStarredImageState();
+        updateBookmarkImageState();
     }
 
     /**
@@ -206,8 +206,8 @@ public class DNSFormActivity extends AppCompatActivity implements AdapterView.On
                 startActivityForResult(historyIntent,1);
                 return true;
 
-            case R.id.action_star:
-                Intent starIntent = new Intent(this, StarredQueriesActivity.class);
+            case R.id.action_bookmark:
+                Intent starIntent = new Intent(this, BookmarkedQueriesActivity.class);
                 startActivityForResult(starIntent,1);
 
                 return true;
@@ -236,9 +236,9 @@ public class DNSFormActivity extends AppCompatActivity implements AdapterView.On
                         source="history";
                     }
                     switch (source){
-                        case "starred":
+                        case "bookmarks":
                             clearAnswer();
-                            setScreenState(starred.getSessionAt(returnValue));
+                            setScreenState(bookmarks.getSessionAt(returnValue));
                             break;
                         default: //"history
                             setScreenState(history.getSessionAt(returnValue));
@@ -413,7 +413,7 @@ public class DNSFormActivity extends AppCompatActivity implements AdapterView.On
         answerState.answerText = answerOutput;
 
         history.addEntry(session);
-        updateStarredImageState();
+        updateBookmarkImageState();
         updateStreenStateIfCurrent(session,answerState);
     }
 
@@ -445,42 +445,42 @@ public class DNSFormActivity extends AppCompatActivity implements AdapterView.On
     }
 
 
-    public void updateStarredImageState(){
+    public void updateBookmarkImageState(){
         runOnUiThread(new Runnable() {
             @Override
             public void run() {
-                ImageButton btn = (ImageButton)findViewById(R.id.btnStar);
+                ImageButton btn = (ImageButton)findViewById(R.id.btnBookmark);
                 Session sess = sessionFromScreenState();
-                if (starred.isStarred(sess)){
-                    btn.setImageResource(R.drawable.starred);
+                if (bookmarks.isBookmarked(sess)){
+                    btn.setImageResource(R.drawable.bookmarked);
                 } else {
-                    btn.setImageResource(R.drawable.notstarred);
+                    btn.setImageResource(R.drawable.notbookmarked);
                 }
 
             }
         });
     }
 
-    public void starUnstar(View view){
+    public void toggleBookmark(View view){
         final Session screenSession = sessionFromScreenState();
         AlertDialog.Builder adb = new AlertDialog.Builder(this);
 
-        final boolean currentlyStarred = starred.isStarred(screenSession);
+        final boolean currentlyBookmarked = bookmarks.isBookmarked(screenSession);
 
-        adb.setTitle("Add current query to favourites?");
-        if (currentlyStarred){
-            adb.setTitle("Remove current query from favourites?");
+        adb.setTitle("Bookmark current query?");
+        if (currentlyBookmarked){
+            adb.setTitle("Remove current query from bookmarks?");
         }
         adb.setIcon(android.R.drawable.ic_dialog_alert);
         adb.setPositiveButton("OK", new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialog, int which) {
-                        if (!currentlyStarred){
-                            starred.star(screenSession);
+                        if (!currentlyBookmarked){
+                            bookmarks.bookmark(screenSession);
                         } else {
-                            starred.unstar(screenSession);
+                            bookmarks.removeBookmark(screenSession);
                         }
-                        updateStarredImageState();
+                        updateBookmarkImageState();
                     }
                 });
                 adb.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
@@ -596,7 +596,7 @@ public class DNSFormActivity extends AppCompatActivity implements AdapterView.On
 
     public void queryButtonClicked(View view) {
         clearAnswer();
-        updateStarredImageState();
+        updateBookmarkImageState();
         hideKeyboard(this);
 
         Thread thread = new Thread(new Runnable() {
@@ -670,7 +670,7 @@ public class DNSFormActivity extends AppCompatActivity implements AdapterView.On
             (((EditText) findViewById(R.id.txtQTYPE))).setText(selectedNumber);
         }
 
-        updateStarredImageState();
+        updateBookmarkImageState();
     }
 
     @Override
@@ -691,7 +691,7 @@ public class DNSFormActivity extends AppCompatActivity implements AdapterView.On
             }catch (Exception e){}
         }
 
-        updateStarredImageState();
+        updateBookmarkImageState();
 
     }
 
