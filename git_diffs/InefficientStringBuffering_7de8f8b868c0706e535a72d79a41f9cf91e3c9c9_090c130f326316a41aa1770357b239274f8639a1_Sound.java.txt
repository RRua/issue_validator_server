diff --git a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/ACRATest.java b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/ACRATest.java
index 49eeba9b14..75bb48d884 100644
--- a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/ACRATest.java
+++ b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/ACRATest.java
@@ -3,8 +3,9 @@ package com.ichi2.anki.tests;
 import android.Manifest;
 import android.app.Instrumentation;
 import android.content.SharedPreferences;
+
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.rule.GrantPermissionRule;
-import androidx.test.runner.AndroidJUnit4;
 
 import com.ichi2.anki.AnkiDroidApp;
 import com.ichi2.anki.R;
@@ -23,8 +24,6 @@ import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import androidx.test.InstrumentationRegistry;
-
 import java.lang.reflect.Method;
 
 import timber.log.Timber;
@@ -35,7 +34,7 @@ import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertTrue;
 
 @SuppressWarnings("deprecation")
-@RunWith(AndroidJUnit4.class)
+@RunWith(androidx.test.runner.AndroidJUnit4.class)
 public class ACRATest {
 
     @Rule public GrantPermissionRule mRuntimePermissionRule =
@@ -71,7 +70,7 @@ public class ACRATest {
     public void testDebugConfiguration() throws Exception {
 
         // Debug mode overrides all saved state so no setup needed
-        setAcraConfig("Debug", AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getTargetContext()));
+        setAcraConfig("Debug", AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getInstrumentation().getTargetContext()));
         assertArrayEquals("Debug logcat arguments not set correctly",
                 app.getAcraCoreConfigBuilder().build().logcatArguments().toArray(),
                 new ImmutableList<>(debugLogcatArguments).toArray());
@@ -80,11 +79,11 @@ public class ACRATest {
 
     private void verifyDebugACRAPreferences() {
         assertTrue("ACRA was not disabled correctly",
-                AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getTargetContext())
+                AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getInstrumentation().getTargetContext())
                         .getBoolean(ACRA.PREF_DISABLE_ACRA, true));
         assertEquals("ACRA feedback was not turned off correctly",
                 AnkiDroidApp.FEEDBACK_REPORT_NEVER,
-                AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getTargetContext())
+                AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getInstrumentation().getTargetContext())
                         .getString(AnkiDroidApp.FEEDBACK_REPORT_KEY, "undefined"));
     }
 
@@ -92,23 +91,23 @@ public class ACRATest {
     public void testProductionConfigurationUserDisabled() throws Exception {
 
         // set up as if the user had prefs saved to disable completely
-        AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getTargetContext()).edit()
+        AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getInstrumentation().getTargetContext()).edit()
                 .putString(AnkiDroidApp.FEEDBACK_REPORT_KEY, AnkiDroidApp.FEEDBACK_REPORT_NEVER).commit();
 
         // ACRA initializes production logcat via annotation and we can't mock Build.DEBUG
         // That means we are restricted from verifying production logcat args and this is the debug case again
-        setAcraConfig("Production", AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getTargetContext()));
+        setAcraConfig("Production", AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getInstrumentation().getTargetContext()));
         verifyDebugACRAPreferences();
     }
 
     @Test
     public void testProductionConfigurationUserAsk() throws Exception {
         // set up as if the user had prefs saved to ask
-        AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getTargetContext()).edit()
+        AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getInstrumentation().getTargetContext()).edit()
                 .putString(AnkiDroidApp.FEEDBACK_REPORT_KEY, AnkiDroidApp.FEEDBACK_REPORT_ASK).commit();
 
         // If the user is set to ask, then it's production, with interaction mode dialog
-        setAcraConfig("Production", AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getTargetContext()));
+        setAcraConfig("Production", AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getInstrumentation().getTargetContext()));
         verifyACRANotDisabled();
 
         CoreConfiguration config = app.getAcraCoreConfigBuilder().build();
@@ -135,12 +134,12 @@ public class ACRATest {
         Timber.plant(new AnkiDroidApp.ProductionCrashReportingTree());
 
         // set up as if the user had prefs saved to full auto
-        AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getTargetContext()).edit()
+        AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getInstrumentation().getTargetContext()).edit()
                 .putString(AnkiDroidApp.FEEDBACK_REPORT_KEY, AnkiDroidApp.FEEDBACK_REPORT_ALWAYS).commit();
 
         // If the user is set to always, then it's production, with interaction mode toast
         // will be useful with ACRA 5.2.0
-        setAcraConfig("Production", AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getTargetContext()));
+        setAcraConfig("Production", AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getInstrumentation().getTargetContext()));
 
         // The same class/method combo is only sent once, so we face a new method each time (should test that system later)
         Exception crash = new Exception("testCrashReportSend at " + System.currentTimeMillis());
@@ -150,28 +149,28 @@ public class ACRATest {
         crash.setStackTrace(trace);
 
         // one send should work
-        CrashReportData crashData = new CrashReportDataFactory(InstrumentationRegistry.getTargetContext(),
+        CrashReportData crashData = new CrashReportDataFactory(InstrumentationRegistry.getInstrumentation().getTargetContext(),
                 AnkiDroidApp.getInstance().getAcraCoreConfigBuilder().build()).createCrashData(new ReportBuilder().exception(crash));
 
         assertTrue(new LimitingReportAdministrator().shouldSendReport(
-                InstrumentationRegistry.getTargetContext(),
+                InstrumentationRegistry.getInstrumentation().getTargetContext(),
                 AnkiDroidApp.getInstance().getAcraCoreConfigBuilder().build(),
                 crashData)
         );
 
         // A second send should not work
         assertFalse(new LimitingReportAdministrator().shouldSendReport(
-                InstrumentationRegistry.getTargetContext(),
+                InstrumentationRegistry.getInstrumentation().getTargetContext(),
                 AnkiDroidApp.getInstance().getAcraCoreConfigBuilder().build(),
                 crashData)
         );
 
         // Now let's clear data
-        AnkiDroidApp.deleteACRALimiterData(InstrumentationRegistry.getTargetContext());
+        AnkiDroidApp.deleteACRALimiterData(InstrumentationRegistry.getInstrumentation().getTargetContext());
 
         // A third send should work again
         assertTrue(new LimitingReportAdministrator().shouldSendReport(
-                InstrumentationRegistry.getTargetContext(),
+                InstrumentationRegistry.getInstrumentation().getTargetContext(),
                 AnkiDroidApp.getInstance().getAcraCoreConfigBuilder().build(),
                 crashData)
         );
@@ -180,18 +179,18 @@ public class ACRATest {
 
     private void verifyACRANotDisabled() {
         assertFalse("ACRA was not enabled correctly",
-                AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getTargetContext()).getBoolean(ACRA.PREF_DISABLE_ACRA, false));
+                AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getInstrumentation().getTargetContext()).getBoolean(ACRA.PREF_DISABLE_ACRA, false));
     }
 
 
     @Test
     public void testProductionConfigurationUserAlways() throws Exception {
         // set up as if the user had prefs saved to full auto
-        AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getTargetContext()).edit()
+        AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getInstrumentation().getTargetContext()).edit()
                 .putString(AnkiDroidApp.FEEDBACK_REPORT_KEY, AnkiDroidApp.FEEDBACK_REPORT_ALWAYS).commit();
 
         // If the user is set to always, then it's production, with interaction mode toast
-        setAcraConfig("Production", AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getTargetContext()));
+        setAcraConfig("Production", AnkiDroidApp.getSharedPrefs(InstrumentationRegistry.getInstrumentation().getTargetContext()));
         verifyACRANotDisabled();
 
         CoreConfiguration config = app.getAcraCoreConfigBuilder().build();
diff --git a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/CollectionTest.java b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/CollectionTest.java
index f3f54a8fbe..7fae486d4b 100644
--- a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/CollectionTest.java
+++ b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/CollectionTest.java
@@ -3,7 +3,6 @@ package com.ichi2.anki.tests;
 import android.Manifest;
 import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.rule.GrantPermissionRule;
-import androidx.test.runner.AndroidJUnit4;
 
 import com.ichi2.anki.CollectionHelper;
 
@@ -17,7 +16,7 @@ import static org.junit.Assert.assertNotNull;
  * This test case verifies that the directory initialization works even if the app is not yet fully initialized.
  */
 @SuppressWarnings("deprecation")
-@RunWith(AndroidJUnit4.class)
+@RunWith(androidx.test.runner.AndroidJUnit4.class)
 public class CollectionTest {
 
     @Rule
diff --git a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/ContentProviderTest.java b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/ContentProviderTest.java
index 2f090cb029..82756ae5a0 100644
--- a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/ContentProviderTest.java
+++ b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/ContentProviderTest.java
@@ -27,7 +27,6 @@ import android.database.Cursor;
 import android.net.Uri;
 import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.rule.GrantPermissionRule;
-import androidx.test.runner.AndroidJUnit4;
 import android.util.Log;
 
 import com.ichi2.anki.AbstractFlashcardViewer;
@@ -67,7 +66,7 @@ import static org.junit.Assert.fail;
  * These tests should cover all supported operations for each URI.
  */
 @SuppressWarnings("deprecation")
-@RunWith(AndroidJUnit4.class)
+@RunWith(androidx.test.runner.AndroidJUnit4.class)
 public class ContentProviderTest {
 
     @Rule
diff --git a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/NotificationChannelTest.java b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/NotificationChannelTest.java
index 3f906c119c..b280287983 100644
--- a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/NotificationChannelTest.java
+++ b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/NotificationChannelTest.java
@@ -22,7 +22,6 @@ import android.app.NotificationManager;
 import android.content.Context;
 import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.rule.GrantPermissionRule;
-import androidx.test.runner.AndroidJUnit4;
 
 import com.ichi2.anki.AnkiDroidApp;
 import com.ichi2.anki.NotificationChannels;
@@ -41,7 +40,7 @@ import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
 
 @SuppressWarnings("deprecation")
-@RunWith(AndroidJUnit4.class)
+@RunWith(androidx.test.runner.AndroidJUnit4.class)
 public class NotificationChannelTest {
 
     @Rule
diff --git a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/libanki/HttpTest.java b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/libanki/HttpTest.java
index 523f5479fe..5180eaa37f 100644
--- a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/libanki/HttpTest.java
+++ b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/libanki/HttpTest.java
@@ -13,10 +13,9 @@ import org.junit.runner.RunWith;
 
 import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.rule.GrantPermissionRule;
-import androidx.test.runner.AndroidJUnit4;
 
 @SuppressWarnings("deprecation")
-@RunWith(AndroidJUnit4.class)
+@RunWith(androidx.test.runner.AndroidJUnit4.class)
 public class HttpTest {
 
     @Rule
diff --git a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/libanki/ImportTest.java b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/libanki/ImportTest.java
index dc1ac5e584..7117dca6f8 100644
--- a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/libanki/ImportTest.java
+++ b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/libanki/ImportTest.java
@@ -19,7 +19,6 @@ package com.ichi2.anki.tests.libanki;
 import android.Manifest;
 import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.rule.GrantPermissionRule;
-import androidx.test.runner.AndroidJUnit4;
 
 import com.ichi2.anki.tests.Shared;
 import com.ichi2.libanki.Collection;
@@ -45,7 +44,7 @@ import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 
 @SuppressWarnings("deprecation")
-@RunWith(AndroidJUnit4.class)
+@RunWith(androidx.test.runner.AndroidJUnit4.class)
 public class ImportTest {
 
     @Rule
diff --git a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/libanki/MediaTest.java b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/libanki/MediaTest.java
index a8a7b029e2..fb534fe102 100644
--- a/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/libanki/MediaTest.java
+++ b/AnkiDroid/src/androidTest/java/com.ichi2.anki.tests/libanki/MediaTest.java
@@ -18,7 +18,6 @@ package com.ichi2.anki.tests.libanki;
 import android.Manifest;
 import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.rule.GrantPermissionRule;
-import androidx.test.runner.AndroidJUnit4;
 
 import com.ichi2.anki.BackupManager;
 import com.ichi2.anki.tests.Shared;
@@ -47,7 +46,7 @@ import static org.junit.Assert.assertTrue;
  * Unit tests for {@link Media}.
  */
 @SuppressWarnings("deprecation")
-@RunWith(AndroidJUnit4.class)
+@RunWith(androidx.test.runner.AndroidJUnit4.class)
 public class MediaTest {
 
     @Rule
diff --git a/AnkiDroid/src/androidTest/java/com/ichi2/anki/uitests/ActivityTestUI.java b/AnkiDroid/src/androidTest/java/com/ichi2/anki/uitests/ActivityTestUI.java
index 84bcd65ffb..ccf368a0d8 100644
--- a/AnkiDroid/src/androidTest/java/com/ichi2/anki/uitests/ActivityTestUI.java
+++ b/AnkiDroid/src/androidTest/java/com/ichi2/anki/uitests/ActivityTestUI.java
@@ -7,7 +7,6 @@ import androidx.test.espresso.ViewInteraction;
 import androidx.test.filters.LargeTest;
 import androidx.test.rule.ActivityTestRule;
 import androidx.test.rule.GrantPermissionRule;
-import androidx.test.runner.AndroidJUnit4;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewParent;
@@ -44,7 +43,7 @@ import static org.hamcrest.Matchers.is;
 
 @LargeTest
 @SuppressWarnings({"PMD.ExcessiveMethodLength", "deprecation"})
-@RunWith(AndroidJUnit4.class)
+@RunWith(androidx.test.runner.AndroidJUnit4.class)
 public class ActivityTestUI {
 
     @Rule
diff --git a/AnkiDroid/src/androidTest/java/com/ichi2/anki/uitests/CardBrowserPreviewUI.java b/AnkiDroid/src/androidTest/java/com/ichi2/anki/uitests/CardBrowserPreviewUI.java
index c57d6289ff..e4b7f9110e 100644
--- a/AnkiDroid/src/androidTest/java/com/ichi2/anki/uitests/CardBrowserPreviewUI.java
+++ b/AnkiDroid/src/androidTest/java/com/ichi2/anki/uitests/CardBrowserPreviewUI.java
@@ -8,7 +8,6 @@ import androidx.test.espresso.ViewInteraction;
 import androidx.test.espresso.matcher.ViewMatchers;
 import androidx.test.rule.ActivityTestRule;
 import androidx.test.rule.GrantPermissionRule;
-import androidx.test.runner.AndroidJUnit4;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewParent;
@@ -43,15 +42,13 @@ import static androidx.test.espresso.assertion.ViewAssertions.matches;
 import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
 import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
 import static androidx.test.espresso.matcher.ViewMatchers.withContentDescription;
-import static androidx.test.espresso.matcher.ViewMatchers.withId;
 import static androidx.test.espresso.matcher.ViewMatchers.withText;
-import static org.hamcrest.Matchers.allOf;
 import static org.hamcrest.Matchers.anything;
 import static org.hamcrest.Matchers.is;
 
 @androidx.test.filters.LargeTest
 @SuppressWarnings({"PMD.ExcessiveMethodLength", "deprecation"})
-@RunWith(AndroidJUnit4.class)
+@RunWith(androidx.test.runner.AndroidJUnit4.class)
 public class CardBrowserPreviewUI {
 
     @Rule
@@ -106,10 +103,10 @@ public class CardBrowserPreviewUI {
         }
 
         ViewInteraction appCompatSpinner = onView(
-                allOf(withId(R.id.note_type_spinner),
+                Matchers.allOf(ViewMatchers.withId(R.id.note_type_spinner),
                         childAtPosition(
                                 childAtPosition(
-                                        withId(R.id.CardEditorLayout),
+                                        ViewMatchers.withId(R.id.CardEditorLayout),
                                         0),
                                 1)));
         appCompatSpinner.perform(scrollTo(), click());
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java
index 9c735edc6e..529845fc31 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java
@@ -38,11 +38,9 @@ import android.os.Bundle;
 import android.os.Handler;
 import android.os.Message;
 import android.os.SystemClock;
-import android.os.Vibrator;
 import androidx.core.content.ContextCompat;
 import androidx.core.view.GestureDetectorCompat;
 import androidx.appcompat.app.ActionBar;
-import android.text.ClipboardManager;
 import android.text.SpannableString;
 import android.text.Spanned;
 import android.text.SpannedString;
@@ -96,6 +94,7 @@ import org.json.JSONObject;
 import java.io.File;
 import java.io.FileOutputStream;
 import java.io.IOException;
+import java.io.UnsupportedEncodingException;
 import java.lang.ref.WeakReference;
 import java.net.URLDecoder;
 import java.util.HashMap;
@@ -121,8 +120,6 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
      */
     public static final int RESULT_DEFAULT = 50;
     public static final int RESULT_NO_MORE_CARDS = 52;
-    public static final int RESULT_EDIT_CARD_RESET = 53;
-    public static final int RESULT_DECK_CLOSED = 55;
 
     /**
      * Available options performed by other activities.
@@ -160,7 +157,6 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
 
     // Type answer patterns
     private static final Pattern sTypeAnsPat = Pattern.compile("\\[\\[type:(.+?)\\]\\]");
-    private static final Pattern sTypeAnsTyped = Pattern.compile("typed=([^&]*)");
 
     /** to be sent to and from the card editor */
     private static Card sEditorCard;
@@ -222,7 +218,6 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
     /**
      * Variables to hold layout objects that we need to update or handle events for
      */
-    private View mMainLayout;
     private View mLookUpIcon;
     private FrameLayout mCardContainer;
     private WebView mCard;
@@ -250,7 +245,8 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
     protected RelativeLayout mTopBarLayout;
     private Chronometer mCardTimer;
     protected Whiteboard mWhiteboard;
-    private ClipboardManager mClipboard;
+    @SuppressWarnings("deprecation") // Tracked separately as #5023 on github
+    private android.text.ClipboardManager mClipboard;
 
     protected Card mCurrentCard;
     private int mCurrentEase;
@@ -352,8 +348,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
                 String lookupHint = getResources().getString(R.string.lookup_hint);
                 UIUtils.showThemedToast(AbstractFlashcardViewer.this, lookupHint, false);
             }
-            Vibrator vibratorManager = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);
-            vibratorManager.vibrate(50);
+            CompatHelper.getCompat().vibrate(AnkiDroidApp.getInstance().getApplicationContext(), 50);
             longClickHandler.postDelayed(startLongClickAction, 300);
         }
     };
@@ -408,6 +403,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
                     break;
                 default:
                     mCurrentEase = 0;
+                    break;
             }
         }
     };
@@ -434,6 +430,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
                     default:
                         longClickHandler.removeCallbacks(longClickTestRunnable);
                         mTouchStarted = false;
+                        break;
                 }
             }
             try {
@@ -450,6 +447,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
     protected DeckTask.TaskListener mDismissCardHandler = new DeckTask.TaskListener() {
         @Override
         public void onPreExecute() {
+            // do nothing
         }
 
 
@@ -470,6 +468,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
 
         @Override
         public void onCancelled() {
+            // do nothing
         }
     };
 
@@ -538,6 +537,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
 
         @Override
         public void onCancelled() {
+            // do nothing
         }
     };
 
@@ -613,6 +613,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
 
         @Override
         public void onCancelled() {
+            // do nothing
         }
     };
 
@@ -987,12 +988,13 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
     }
 
 
-    // These three methods use a deprecated API - they should be updated to possibly use its more modern version.
+    @SuppressWarnings("deprecation") // Tracked separately as #5023 on github
     protected boolean clipboardHasText() {
         return mClipboard != null && mClipboard.hasText();
     }
 
 
+    @SuppressWarnings("deprecation") // Tracked separately as #5023 on github
     private void clipboardSetText(CharSequence text) {
         if (mClipboard != null) {
             try {
@@ -1015,6 +1017,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
      *
      * @return the text in clipboard or the empty string.
      */
+    @SuppressWarnings("deprecation") // Tracked separately as #5023 on github
     private CharSequence clipboardGetText() {
         CharSequence text = mClipboard != null ? mClipboard.getText() : null;
         return text != null ? text : "";
@@ -1285,8 +1288,8 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
 
 
     // Set the content view to the one provided and initialize accessors.
+    @SuppressWarnings("deprecation") // Tracked separately as #5023 on github for clipboard
     protected void initLayout() {
-        mMainLayout = findViewById(R.id.main_layout);
         mCardContainer = (FrameLayout) findViewById(R.id.flashcard_frame);
 
         mTopBarLayout = (RelativeLayout) findViewById(R.id.top_bar);
@@ -1294,7 +1297,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
         mTouchLayer = (FrameLayout) findViewById(R.id.touch_layer);
         mTouchLayer.setOnTouchListener(mGestureListener);
         if (!mDisableClipboard) {
-            mClipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
+            mClipboard = (android.text.ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
         }
         mCardFrame.removeAllViews();
 
@@ -1414,11 +1417,9 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
     }
 
 
-    @SuppressLint({"NewApi", "SetJavaScriptEnabled"})
-    // because of setDisplayZoomControls.
+    @SuppressLint("SetJavaScriptEnabled") // they request we review carefully because of XSS security, we have
     private WebView createWebView() {
         WebView webView = new MyWebView(this);
-        webView.setWillNotCacheDrawing(true);
         webView.setScrollBarStyle(View.SCROLLBARS_OUTSIDE_OVERLAY);
         webView.getSettings().setDisplayZoomControls(false);
         webView.getSettings().setBuiltInZoomControls(true);
@@ -1436,6 +1437,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
             // Filter any links using the custom "playsound" protocol defined in Sound.java.
             // We play sounds through these links when a user taps the sound icon.
             @Override
+            @SuppressWarnings("deprecation") // tracked as #5017 in github
             public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 if (url.startsWith("playsound:")) {
                     // Send a message that will be handled on the UI thread.
@@ -1457,7 +1459,11 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
                 }
                 if (url.startsWith("typeentertext:")) {
                     // Store the text the javascript has send us…
-                    mTypeInput = URLDecoder.decode(url.replaceFirst("typeentertext:", ""));
+                    try {
+                        mTypeInput = URLDecoder.decode(url.replaceFirst("typeentertext:", ""), "UTF-8");
+                    } catch (UnsupportedEncodingException e) {
+                        Timber.e(e, "UTF-8 isn't supported as an encoding?");
+                    }
                     // … and show the answer.
                     mFlipCardLayout.performClick();
                     return true;
@@ -2467,6 +2473,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity {
      * Select Text in the webview and automatically sends the selected text to the clipboard. From
      * http://cosmez.blogspot.com/2010/04/webview-emulateshiftheld-on-android.html
      */
+    @SuppressWarnings("deprecation") // Tracked separately in Github as #5024
     private void selectAndCopyText() {
         try {
             KeyEvent shiftPressEvent = new KeyEvent(0, 0, KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_SHIFT_LEFT, 0, 0);
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/AnkiActivity.java b/AnkiDroid/src/main/java/com/ichi2/anki/AnkiActivity.java
index 144f41d84a..de177300b1 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/AnkiActivity.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/AnkiActivity.java
@@ -1,7 +1,6 @@
 
 package com.ichi2.anki;
 
-import android.annotation.SuppressLint;
 import android.app.NotificationManager;
 import android.app.PendingIntent;
 import android.content.Context;
@@ -451,7 +450,6 @@ public class AnkiActivity extends AppCompatActivity implements SimpleMessageDial
 
 
     // Restart the activity
-    @SuppressLint("NewApi")
     public void restartActivity() {
         Timber.i("AnkiActivity -- restartActivity()");
         Intent intent = new Intent();
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java b/AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java
index 287e82f900..6c2d2e068f 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java
@@ -305,6 +305,7 @@ public class AnkiDroidApp extends Application {
      *
      * @param localeCode The locale code of the language to set, system language if empty
      */
+    @SuppressWarnings("deprecation") // Tracked as #4729 in github
     public static void setLanguage(String localeCode) {
         Configuration config = getInstance().getResources().getConfiguration();
         Locale newLocale = LanguageUtil.getLocale(localeCode);
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java b/AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java
index 71c12b0f10..d6b827b1f1 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/BackupManager.java
@@ -20,6 +20,7 @@ import android.content.SharedPreferences;
 import android.os.StatFs;
 
 
+import com.ichi2.compat.CompatHelper;
 import com.ichi2.libanki.Collection;
 import com.ichi2.libanki.Utils;
 import java.io.BufferedInputStream;
@@ -210,8 +211,6 @@ public class BackupManager {
 
     /**
      * Get free disc space in bytes from path to Collection
-     * @param path
-     * @return
      */
     public static long getFreeDiscSpace(String path) {
         return getFreeDiscSpace(new File(path));
@@ -220,10 +219,7 @@ public class BackupManager {
 
     private static long getFreeDiscSpace(File file) {
         try {
-            StatFs stat = new StatFs(file.getParentFile().getPath());
-            long blocks = stat.getAvailableBlocks();
-            long blocksize = stat.getBlockSize();
-            return blocks * blocksize;
+            return CompatHelper.getCompat().getAvailableBytes(new StatFs(file.getParentFile().getPath()));
         } catch (IllegalArgumentException e) {
             Timber.e(e, "Free space could not be retrieved");
             return MIN_FREE_SPACE * 1024 * 1024;
@@ -241,9 +237,7 @@ public class BackupManager {
     public static boolean repairCollection(Collection col) {
         String deckPath = col.getPath();
         File deckFile = new File(deckPath);
-        if (col != null) {
-            col.close();
-        }
+        col.close();
 
         // repair file
         String execString = "sqlite3 " + deckPath + " .dump | sqlite3 " + deckPath + ".tmp";
@@ -327,7 +321,7 @@ public class BackupManager {
     }
 
 
-    public static boolean deleteDeckBackups(String colFile, int keepNumber) {
+    private static boolean deleteDeckBackups(String colFile, int keepNumber) {
         return deleteDeckBackups(getBackups(new File(colFile)), keepNumber);
     }
 
@@ -337,7 +331,7 @@ public class BackupManager {
     }
 
 
-    public static boolean deleteDeckBackups(File[] backups, int keepNumber) {
+    private static boolean deleteDeckBackups(File[] backups, int keepNumber) {
         if (backups == null) {
             return false;
         }
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java
index 585dce7d0b..d020c305cc 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java
@@ -18,7 +18,6 @@
 
 package com.ichi2.anki;
 
-import android.annotation.SuppressLint;
 import android.app.AlertDialog;
 import android.content.BroadcastReceiver;
 import android.content.Context;
@@ -32,7 +31,6 @@ import android.os.Handler;
 import android.os.SystemClock;
 import androidx.annotation.NonNull;
 import com.google.android.material.snackbar.Snackbar;
-import androidx.core.view.MenuItemCompat;
 import androidx.appcompat.app.ActionBar;
 import androidx.appcompat.widget.SearchView;
 import android.text.TextUtils;
@@ -229,7 +227,7 @@ public class CardBrowser extends NavigationDrawerActivity implements
                 mSearchTerms = savedFiltersObj.optString(searchName);
                 Timber.d("OnSelection using search terms: %s", mSearchTerms);
                 mSearchView.setQuery(mSearchTerms, false);
-                MenuItemCompat.expandActionView(mSearchItem);
+                mSearchItem.expandActionView();
                 searchCards();
             }
         }
@@ -577,7 +575,7 @@ public class CardBrowser extends NavigationDrawerActivity implements
             JSONObject savedFiltersObj = getCol().getConf().optJSONObject("savedFilters");
             mMySearchesItem.setVisible(savedFiltersObj != null && savedFiltersObj.length() > 0);
             mSearchItem = menu.findItem(R.id.action_search);
-            MenuItemCompat.setOnActionExpandListener(mSearchItem, new MenuItemCompat.OnActionExpandListener() {
+            mSearchItem.setOnActionExpandListener(new MenuItem.OnActionExpandListener() {
                 @Override
                 public boolean onMenuItemActionExpand(MenuItem item) {
                     return true;
@@ -594,7 +592,7 @@ public class CardBrowser extends NavigationDrawerActivity implements
                     return true;
                 }
             });
-            mSearchView = (SearchView) MenuItemCompat.getActionView(mSearchItem);
+            mSearchView = (SearchView) mSearchItem.getActionView();
             mSearchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
                 @Override
                 public boolean onQueryTextChange(String newText) {
@@ -602,11 +600,9 @@ public class CardBrowser extends NavigationDrawerActivity implements
                     return true;
                 }
 
-                @SuppressLint("RestrictedApi")
                 @Override
                 public boolean onQueryTextSubmit(String query) {
                     onSearch();
-                    //noinspection RestrictedApi
                     mSearchView.clearFocus();
                     return true;
                 }
@@ -968,7 +964,7 @@ public class CardBrowser extends NavigationDrawerActivity implements
         }
         if (!"".equals(mSearchTerms) && (mSearchView != null)) {
             mSearchView.setQuery(mSearchTerms, false);
-            MenuItemCompat.expandActionView(mSearchItem);
+            mSearchItem.expandActionView();
         }
         if (mSearchTerms.contains("deck:")) {
             searchText = mSearchTerms;
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CustomExceptionHandler.java b/AnkiDroid/src/main/java/com/ichi2/anki/CustomExceptionHandler.java
deleted file mode 100644
index 99397650c5..0000000000
--- a/AnkiDroid/src/main/java/com/ichi2/anki/CustomExceptionHandler.java
+++ /dev/null
@@ -1,218 +0,0 @@
-/***************************************************************************************
- * This program is free software; you can redistribute it and/or modify it under        *
- * the terms of the GNU General Public License as published by the Free Software        *
- * Foundation; either version 3 of the License, or (at your option) any later           *
- * version.                                                                             *
- *                                                                                      *
- * This program is distributed in the hope that it will be useful, but WITHOUT ANY      *
- * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A      *
- * PARTICULAR PURPOSE. See the GNU General Public License for more details.             *
- *                                                                                      *
- * You should have received a copy of the GNU General Public License along with         *
- * this program.  If not, see <http://www.gnu.org/licenses/>.                           *
- ****************************************************************************************/
-
-package com.ichi2.anki;
-
-import android.content.Context;
-import android.content.pm.PackageInfo;
-import android.content.pm.PackageManager;
-import android.os.Environment;
-import android.os.StatFs;
-import android.text.TextUtils;
-
-
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.PrintWriter;
-import java.io.StringWriter;
-import java.io.Writer;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.HashMap;
-import java.util.Locale;
-import java.util.TimeZone;
-
-import timber.log.Timber;
-
-public class CustomExceptionHandler implements Thread.UncaughtExceptionHandler {
-
-    private static CustomExceptionHandler sInstance;
-    private Thread.UncaughtExceptionHandler mPreviousHandler;
-    private Context mCurContext;
-    // private Random randomGenerator = new Random();
-
-    private HashMap<String, String> mInformation = new HashMap<>(20);
-
-
-    static CustomExceptionHandler getInstance() {
-        if (sInstance == null) {
-            sInstance = new CustomExceptionHandler();
-            Timber.i("New instance of custom exception handler");
-        }
-
-        return sInstance;
-    }
-
-
-    public void init(Context context) {
-        mPreviousHandler = Thread.getDefaultUncaughtExceptionHandler();
-        Thread.setDefaultUncaughtExceptionHandler(this);
-        mCurContext = context;
-    }
-
-
-    private long getAvailableInternalMemorySize() {
-        File path = Environment.getDataDirectory();
-        StatFs stat = new StatFs(path.getPath());
-        long blockSize = stat.getBlockSize();
-        long availableBlocks = stat.getAvailableBlocks();
-        return availableBlocks * blockSize;
-    }
-
-
-    private long getTotalInternalMemorySize() {
-        File path = Environment.getDataDirectory();
-        StatFs stat = new StatFs(path.getPath());
-        long blockSize = stat.getBlockSize();
-        long totalBlocks = stat.getBlockCount();
-        return totalBlocks * blockSize;
-    }
-
-
-    private void collectInformation() {
-        Timber.i("collectInformation");
-
-        if (mCurContext == null) {
-            return;
-        }
-
-        try {
-            Timber.i("collecting information");
-
-            PackageManager pm = mCurContext.getPackageManager();
-            PackageInfo pi = pm.getPackageInfo(mCurContext.getPackageName(), 0);
-
-            mInformation.put("VersionName", pi.versionName); // Version
-            mInformation.put("PackageName", pi.packageName); // Package name
-            mInformation.put("AndroidVersion", android.os.Build.VERSION.RELEASE); // Android version
-            mInformation.put("Board", android.os.Build.BOARD);
-            mInformation.put("Brand", android.os.Build.BRAND);
-            mInformation.put("Device", android.os.Build.DEVICE);
-            mInformation.put("Display", android.os.Build.DISPLAY);
-            // mInformation.put("FingerPrint", android.os.Build.FINGERPRINT);
-            mInformation.put("Host", android.os.Build.HOST);
-            mInformation.put("ID", android.os.Build.ID);
-            mInformation.put("Model", android.os.Build.MODEL);
-            mInformation.put("Product", android.os.Build.PRODUCT);
-            // mInformation.put("Tags", android.os.Build.TAGS);
-            mInformation.put("Time", Long.toString(android.os.Build.TIME));
-            // mInformation.put("Type", android.os.Build.TYPE);
-            // mInformation.put("User", android.os.Build.USER);
-            mInformation.put("TotalInternalMemory", Long.toString(getTotalInternalMemorySize()));
-            mInformation.put("AvailableInternalMemory", Long.toString(getAvailableInternalMemorySize()));
-            mInformation.put("Locale", AnkiDroidApp.getAppResources().getConfiguration().locale.toString());
-            Timber.i("Information collected");
-        } catch (Exception e) {
-            Timber.i(e.toString());
-        }
-    }
-
-
-    @Override
-    public void uncaughtException(Thread t, Throwable e) {
-        uncaughtException(t, e, null);
-    }
-
-
-    public void uncaughtException(Thread t, Throwable e, String origin) {
-        uncaughtException(t, e, origin, null);
-    }
-
-
-    public void uncaughtException(Thread t, Throwable e, String origin, String additionalInfo) {
-        Timber.i("uncaughtException");
-
-        collectInformation();
-
-        Date ts = new Date();
-        TimeZone tz = TimeZone.getDefault();
-
-        SimpleDateFormat df1 = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS", Locale.US);
-        SimpleDateFormat df2 = new SimpleDateFormat("Z", Locale.US);
-
-        df1.setTimeZone(TimeZone.getTimeZone("UTC"));
-
-        String reportgeneratedutc = String.format("%s", df1.format(ts));
-        String reportgeneratedtzoffset = String.format("%s", df2.format(ts));
-        String reportgeneratedtz = String.format("%s", tz.getID());
-
-        StringBuilder reportInformation = new StringBuilder(10000);
-
-        reportInformation.append(String.format("reportgeneratedutc=%s\n", reportgeneratedutc));
-        reportInformation.append(String.format("reportgeneratedtzoffset=%s\n", reportgeneratedtzoffset));
-        reportInformation.append(String.format("reportgeneratedtz=%s\n", reportgeneratedtz));
-
-        if (origin != null && origin.length() > 0) {
-            reportInformation.append(String.format("origin=%s\n", origin));
-        }
-
-        for (String key : mInformation.keySet()) {
-            String value = mInformation.get(key);
-
-            reportInformation.append(String.format(Locale.US, "%s=%s\n", key.toLowerCase(Locale.US), value));
-        }
-
-        if (additionalInfo != null && !TextUtils.isEmpty(additionalInfo)) {
-            reportInformation.append(String.format("additionalinformation=%s\n", additionalInfo));
-        }
-
-        reportInformation.append("stacktrace=\nBegin Stacktrace\n");
-
-        // Stack trace
-        final Writer result = new StringWriter();
-        final PrintWriter printWriter = new PrintWriter(result);
-        e.printStackTrace(printWriter);
-        reportInformation.append(String.format("%s\n", result.toString()));
-
-        reportInformation.append("End Stacktrace\n\nBegin Inner exceptions\n");
-
-        // Cause, inner exceptions
-        Throwable cause = e.getCause();
-        while (cause != null) {
-            cause.printStackTrace(printWriter);
-            reportInformation.append(String.format("%s\n", result.toString()));
-            cause = cause.getCause();
-        }
-        reportInformation.append("End Inner exceptions");
-
-        printWriter.close();
-
-        Timber.i("report infomation string created");
-        saveReportToFile(reportInformation.toString());
-
-        if (t != null) {
-            mPreviousHandler.uncaughtException(t, e);
-        }
-    }
-
-
-    private void saveReportToFile(String reportInformation) {
-        try {
-            Timber.i("saveReportFile");
-
-            Date currentDate = new Date();
-            SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMddHHmmss");
-            String filename = String.format("ad-%s.stacktrace", formatter.format(currentDate));
-
-            Timber.i("No external storage available");
-            FileOutputStream trace = mCurContext.openFileOutput(filename, Context.MODE_PRIVATE);
-            trace.write(reportInformation.getBytes());
-            trace.close();
-
-            Timber.i("report saved");
-        } catch (Exception e) {
-            Timber.i(e.toString());
-        }
-    }
-}
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/DeckOptions.java b/AnkiDroid/src/main/java/com/ichi2/anki/DeckOptions.java
index 3dd21f658b..533b45f0c1 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/DeckOptions.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/DeckOptions.java
@@ -270,18 +270,16 @@ public class DeckOptions extends AppCompatPreferenceActivity implements OnShared
                                             .content(R.string.full_sync_confirmation)
                                             .positiveText(R.string.dialog_ok)
                                             .negativeText(R.string.dialog_cancel)
-                                            .callback(new MaterialDialog.ButtonCallback() {
-                                                @Override
-                                                public void onPositive(MaterialDialog dialog) {
+                                            .onPositive((dialog, which) -> {
                                                     mCol.modSchemaNoCheck();
                                                     try {
                                                         remConf();
-                                                    } catch (ConfirmModSchemaException e) {
+                                                    } catch (ConfirmModSchemaException cmse) {
                                                         // This should never be reached as we just forced modSchema
-                                                        throw new RuntimeException(e);
+                                                        throw new RuntimeException(cmse);
                                                     }
                                                 }
-                                            })
+                                            )
                                             .build().show();
                                 }
                             }
@@ -580,6 +578,7 @@ public class DeckOptions extends AppCompatPreferenceActivity implements OnShared
 
 
     @Override
+    @SuppressWarnings("deprecation") // conversion to fragments tracked as #5019 in github
     protected void onCreate(Bundle icicle) {
         Themes.setThemeLegacy(this);
         super.onCreate(icicle);
@@ -690,6 +689,7 @@ public class DeckOptions extends AppCompatPreferenceActivity implements OnShared
     }
 
 
+    @SuppressWarnings("deprecation") // Tracked as #5019 on github
     protected void updateSummaries() {
         Resources res = getResources();
         // for all text preferences, set summary as current database value
@@ -734,6 +734,7 @@ public class DeckOptions extends AppCompatPreferenceActivity implements OnShared
     }
 
 
+    @SuppressWarnings("deprecation") // Tracked as #5019 on github
     protected void buildLists() {
         ListPreference deckConfPref = (ListPreference) findPreference("deckConf");
         ArrayList<JSONObject> confs = mCol.getDecks().allConf();
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java b/AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java
index 7abb03f59d..251ed163be 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java
@@ -181,15 +181,12 @@ public class DeckPicker extends NavigationDrawerActivity implements
     // LISTENERS
     // ----------------------------------------------------------------------------
 
-    private final OnClickListener mDeckExpanderClickListener = new OnClickListener() {
-        @Override
-        public void onClick(View view) {
-            Long did = (Long) view.getTag();
-            if (getCol().getDecks().children(did).size() > 0) {
-                getCol().getDecks().collpase(did);
-                updateDeckList();
-                dismissAllDialogFragments();
-            }
+    private final OnClickListener mDeckExpanderClickListener = view -> {
+        Long did = (Long) view.getTag();
+        if (getCol().getDecks().children(did).size() > 0) {
+            getCol().getDecks().collpase(did);
+            updateDeckList();
+            dismissAllDialogFragments();
         }
     };
 
@@ -375,7 +372,7 @@ public class DeckPicker extends NavigationDrawerActivity implements
         initNavigationDrawer(mainView);
         setTitle(getResources().getString(R.string.app_name));
 
-        mRecyclerView = (RecyclerView) findViewById(R.id.files);
+        mRecyclerView = findViewById(R.id.files);
 
         // specify a LinearLayoutManager and set up item dividers for the RecyclerView
         mRecyclerViewLayoutManager = new LinearLayoutManager(this);
@@ -390,14 +387,11 @@ public class DeckPicker extends NavigationDrawerActivity implements
         mDeckListAdapter.setDeckLongClickListener(mDeckLongClickListener);
         mRecyclerView.setAdapter(mDeckListAdapter);
 
-        mPullToSyncWrapper = (SwipeRefreshLayout) findViewById(R.id.pull_to_sync_wrapper);
+        mPullToSyncWrapper = findViewById(R.id.pull_to_sync_wrapper);
         mPullToSyncWrapper.setDistanceToTriggerSync(SWIPE_TO_SYNC_TRIGGER_DISTANCE);
-        mPullToSyncWrapper.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
-            @Override
-            public void onRefresh() {
-                mPullToSyncWrapper.setRefreshing(false);
-                sync();
-            }
+        mPullToSyncWrapper.setOnRefreshListener(() -> {
+            mPullToSyncWrapper.setRefreshing(false);
+            sync();
         });
 
         // Setup the FloatingActionButtons, should work everywhere with min API >= 15
@@ -441,59 +435,47 @@ public class DeckPicker extends NavigationDrawerActivity implements
     private boolean firstCollectionOpen() {
         if (CollectionHelper.hasStorageAccessPermission(this)) {
             // Show error dialog if collection could not be opened
-            if (CollectionHelper.getInstance().getColSafe(this) == null) {
-                return false;
-            }
+            return CollectionHelper.getInstance().getColSafe(this) != null;
         } else {
             // Request storage permission if we don't have it (e.g. on Android 6.0+)
             ActivityCompat.requestPermissions(this, new String[] {Manifest.permission.WRITE_EXTERNAL_STORAGE},
                     REQUEST_STORAGE_PERMISSION);
             return false;
         }
-        return true;
     }
 
     private void configureFloatingActionsMenu() {
-        final FloatingActionButton addDeckButton = (FloatingActionButton) findViewById(R.id.add_deck_action);
-        final FloatingActionButton addSharedButton = (FloatingActionButton) findViewById(R.id.add_shared_action);
-        final FloatingActionButton addNoteButton = (FloatingActionButton) findViewById(R.id.add_note_action);
-        addDeckButton.setOnClickListener(new OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                if (mActionsMenu == null) {
-                    return;
-                }
-                mActionsMenu.collapse();
-                mDialogEditText = new EditText(DeckPicker.this);
-                mDialogEditText.setSingleLine(true);
-                // mDialogEditText.setFilters(new InputFilter[] { mDeckNameFilter });
-                new MaterialDialog.Builder(DeckPicker.this)
-                        .title(R.string.new_deck)
-                        .positiveText(R.string.dialog_ok)
-                        .customView(mDialogEditText, true)
-                        .onPositive((dialog, which) -> {
-                            String deckName = mDialogEditText.getText().toString();
-                            Timber.i("DeckPicker:: Creating new deck...");
-                            getCol().getDecks().id(deckName, true);
-                            updateDeckList();
-                        })
-                        .negativeText(R.string.dialog_cancel)
-                        .show();
-            }
+        final FloatingActionButton addDeckButton = findViewById(R.id.add_deck_action);
+        final FloatingActionButton addSharedButton = findViewById(R.id.add_shared_action);
+        final FloatingActionButton addNoteButton = findViewById(R.id.add_note_action);
+        addDeckButton.setOnClickListener(view -> {
+            if (mActionsMenu == null) {
+                return;
+            }
+            mActionsMenu.collapse();
+            mDialogEditText = new EditText(DeckPicker.this);
+            mDialogEditText.setSingleLine(true);
+            // mDialogEditText.setFilters(new InputFilter[] { mDeckNameFilter });
+            new MaterialDialog.Builder(DeckPicker.this)
+                    .title(R.string.new_deck)
+                    .positiveText(R.string.dialog_ok)
+                    .customView(mDialogEditText, true)
+                    .onPositive((dialog, which) -> {
+                        String deckName = mDialogEditText.getText().toString();
+                        Timber.i("DeckPicker:: Creating new deck...");
+                        getCol().getDecks().id(deckName, true);
+                        updateDeckList();
+                    })
+                    .negativeText(R.string.dialog_cancel)
+                    .show();
         });
-        addSharedButton.setOnClickListener(new OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                mActionsMenu.collapse();
-                addSharedDeck();
-            }
+        addSharedButton.setOnClickListener(view -> {
+            mActionsMenu.collapse();
+            addSharedDeck();
         });
-        addNoteButton.setOnClickListener(new OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                mActionsMenu.collapse();
-                addNote();
-            }
+        addNoteButton.setOnClickListener(view -> {
+            mActionsMenu.collapse();
+            addNote();
         });
     }
 
@@ -861,17 +843,20 @@ public class DeckPicker extends NavigationDrawerActivity implements
         } else if (preferences.getBoolean("noSpaceLeft", false)) {
             // No space left
             showDialogFragment(DeckPickerBackupNoSpaceLeftDialog.newInstance());
-            preferences.edit().remove("noSpaceLeft").commit();
+            preferences.edit().remove("noSpaceLeft").apply();
         } else if (preferences.getString("lastVersion", "").equals("")) {
             // Fresh install
-            preferences.edit().putString("lastVersion", VersionUtils.getPkgVersionName()).commit();
+            preferences.edit().putString("lastVersion", VersionUtils.getPkgVersionName()).apply();
             onFinishedStartup();
         } else if (skip < 2 && !preferences.getString("lastVersion", "").equals(VersionUtils.getPkgVersionName())) {
             // AnkiDroid is being updated and a collection already exists. We check if we are upgrading
             // to a version that contains additions to the database integrity check routine that we would
             // like to run on all collections. A missing version number is assumed to be a fresh
             // installation of AnkiDroid and we don't run the check.
+            // FIXME to use new API and change from int to long is very problematic. It's strongly typed in the XML and needs handling
+            // FIXME or it isn't backwards compatible - blows up development and may hurt users
             int current = VersionUtils.getPkgVersionCode();
+            Timber.i("Current AnkiDroid version: %s", current);
             int previous;
             if (!preferences.contains("lastUpgradeVersion")) {
                 // Fresh install
@@ -879,6 +864,7 @@ public class DeckPicker extends NavigationDrawerActivity implements
             } else {
                 try {
                     previous = preferences.getInt("lastUpgradeVersion", current);
+                    Timber.i("Previous AnkiDroid version: %s", previous);
                 } catch (ClassCastException e) {
                     // Previous versions stored this as a string.
                     String s = preferences.getString("lastUpgradeVersion", "");
@@ -892,7 +878,7 @@ public class DeckPicker extends NavigationDrawerActivity implements
                     }
                 }
             }
-            preferences.edit().putInt("lastUpgradeVersion", current).commit();
+            preferences.edit().putInt("lastUpgradeVersion", current).apply();
 
             // New version, clear out old exception report limits
             AnkiDroidApp.deleteACRALimiterData(this);
@@ -931,17 +917,17 @@ public class DeckPicker extends NavigationDrawerActivity implements
             int upgradePrefsVersion = AnkiDroidApp.CHECK_PREFERENCES_AT_VERSION;
             int upgradeDbVersion = AnkiDroidApp.CHECK_DB_AT_VERSION;
 
-            if (previous < upgradeDbVersion || previous < upgradePrefsVersion) {
-                if (previous < upgradePrefsVersion && current >= upgradePrefsVersion) {
+            if (previous < upgradeDbVersion) {
+                if ((previous < upgradePrefsVersion) && (current >= upgradePrefsVersion)) {
                     Timber.i("showStartupScreensAndDialogs() running upgradePreferences()");
                     CompatHelper.removeHiddenPreferences(this.getApplicationContext());
                     upgradePreferences(previous);
                 }
-                // Integrity check loads asynchronously and then restart deckpicker when finished
-                if (previous < upgradeDbVersion && current >= upgradeDbVersion) {
+                // Integrity check loads asynchronously and then restart deck picker when finished
+                if (current >= upgradeDbVersion) {
                     Timber.i("showStartupScreensAndDialogs() running integrityCheck()");
                     integrityCheck();
-                } else if (previous < upgradePrefsVersion && current >= upgradePrefsVersion) {
+                } else if ((previous < upgradePrefsVersion) && (current >= upgradePrefsVersion)) {
                     // If integrityCheck() doesn't occur, but we did update preferences we should restart DeckPicker to
                     // proceed
                     restartActivity();
@@ -974,36 +960,36 @@ public class DeckPicker extends NavigationDrawerActivity implements
     }
 
 
-    private void upgradePreferences(int previousVersionCode) {
+    private void upgradePreferences(long previousVersionCode) {
         SharedPreferences preferences = AnkiDroidApp.getSharedPrefs(getBaseContext());
         // clear all prefs if super old version to prevent any errors
         if (previousVersionCode < 20300130) {
-            preferences.edit().clear().commit();
+            preferences.edit().clear().apply();
         }
         // when upgrading from before 2.5alpha35
         if (previousVersionCode < 20500135) {
             // Card zooming behaviour was changed the preferences renamed
             int oldCardZoom = preferences.getInt("relativeDisplayFontSize", 100);
             int oldImageZoom = preferences.getInt("relativeImageSize", 100);
-            preferences.edit().putInt("cardZoom", oldCardZoom).commit();
-            preferences.edit().putInt("imageZoom", oldImageZoom).commit();
+            preferences.edit().putInt("cardZoom", oldCardZoom).apply();
+            preferences.edit().putInt("imageZoom", oldImageZoom).apply();
             if (!preferences.getBoolean("useBackup", true)) {
-                preferences.edit().putInt("backupMax", 0).commit();
+                preferences.edit().putInt("backupMax", 0).apply();
             }
-            preferences.edit().remove("useBackup").commit();
-            preferences.edit().remove("intentAdditionInstantAdd").commit();
+            preferences.edit().remove("useBackup").apply();
+            preferences.edit().remove("intentAdditionInstantAdd").apply();
         }
 
         if (preferences.contains("fullscreenReview")) {
             // clear fullscreen flag as we use a integer
             try {
                 boolean old = preferences.getBoolean("fullscreenReview", false);
-                preferences.edit().putString("fullscreenMode", old ? "1": "0").commit();
+                preferences.edit().putString("fullscreenMode", old ? "1": "0").apply();
             } catch (ClassCastException e) {
                 // TODO:  can remove this catch as it was only here to fix an error in the betas
-                preferences.edit().remove("fullscreenMode").commit();
+                preferences.edit().remove("fullscreenMode").apply();
             }
-            preferences.edit().remove("fullscreenReview").commit();
+            preferences.edit().remove("fullscreenReview").apply();
         }
     }
 
@@ -1077,7 +1063,6 @@ public class DeckPicker extends NavigationDrawerActivity implements
 
     /**
      *  Show simple error dialog with just the message and OK button. Reload the activity when dialog closed.
-     * @param message
      */
     private void showSyncErrorMessage(String message) {
         String title = getResources().getString(R.string.sync_error);
@@ -1178,7 +1163,7 @@ public class DeckPicker extends NavigationDrawerActivity implements
                     mProgressDialog.dismiss();
                 }
                 if (result != null && result.getBoolean()) {
-                    String msg = "";
+                    String msg;
                     long shrunk = Math.round(result.getLong() / 1024.0);
                     if (shrunk > 0.0) {
                         msg = String.format(Locale.getDefault(),
@@ -1256,7 +1241,6 @@ public class DeckPicker extends NavigationDrawerActivity implements
     public void exit() {
         CollectionHelper.getInstance().closeCollection(false);
         finishWithoutAnimation();
-        System.exit(0);
     }
 
 
@@ -1440,7 +1424,7 @@ public class DeckPicker extends NavigationDrawerActivity implements
                         Editor editor = preferences.edit();
                         editor.putString("username", "");
                         editor.putString("hkey", "");
-                        editor.commit();
+                        editor.apply();
                         // then show not logged in dialog
                         showSyncErrorDialog(SyncErrorDialog.DIALOG_USER_NOT_LOGGED_IN_SYNC);
                     } else if (resultType.equals("noChanges")) {
@@ -1545,12 +1529,16 @@ public class DeckPicker extends NavigationDrawerActivity implements
                         && ((String) data.data[0]).length() > 0) {
                     // A full sync occurred
                     String dataString = (String) data.data[0];
-                    if (dataString.equals("upload")) {
-                        showSyncLogMessage(R.string.sync_log_uploading_message, syncMessage);
-                    } else if (dataString.equals("download")) {
-                        showSyncLogMessage(R.string.sync_log_downloading_message, syncMessage);
-                    } else {
-                        showSyncLogMessage(R.string.sync_database_acknowledge, syncMessage);
+                    switch (dataString) {
+                        case "upload":
+                            showSyncLogMessage(R.string.sync_log_uploading_message, syncMessage);
+                            break;
+                        case "download":
+                            showSyncLogMessage(R.string.sync_log_downloading_message, syncMessage);
+                            break;
+                        default:
+                            showSyncLogMessage(R.string.sync_database_acknowledge, syncMessage);
+                            break;
                     }
                 } else {
                     // Regular sync completed successfully
@@ -1690,7 +1678,7 @@ public class DeckPicker extends NavigationDrawerActivity implements
 
     public StudyOptionsFragment getFragment() {
         Fragment frag = getSupportFragmentManager().findFragmentById(R.id.studyoptions_fragment);
-        if (frag != null && (frag instanceof StudyOptionsFragment)) {
+        if ((frag instanceof StudyOptionsFragment)) {
             return (StudyOptionsFragment) frag;
         }
         return null;
@@ -1776,14 +1764,11 @@ public class DeckPicker extends NavigationDrawerActivity implements
             openStudyOptions(false);
         } else if (getCol().getSched().newDue() || getCol().getSched().revDue()) {
             // If there are no cards to review because of the daily study limit then give "Study more" option
-            UIUtils.showSnackbar(this, R.string.studyoptions_limit_reached, false, R.string.study_more, new OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    CustomStudyDialog d = CustomStudyDialog.newInstance(
-                            CustomStudyDialog.CONTEXT_MENU_LIMITS,
-                            getCol().getDecks().selected(), true);
-                    showDialogFragment(d);
-                }
+            UIUtils.showSnackbar(this, R.string.studyoptions_limit_reached, false, R.string.study_more, v -> {
+                CustomStudyDialog d = CustomStudyDialog.newInstance(
+                        CustomStudyDialog.CONTEXT_MENU_LIMITS,
+                        getCol().getDecks().selected(), true);
+                showDialogFragment(d);
             }, findViewById(R.id.root_layout), mSnackbarShowHideCallback);
             // Check if we need to update the fragment or update the deck list. The same checks
             // are required for all snackbars below.
@@ -1803,12 +1788,8 @@ public class DeckPicker extends NavigationDrawerActivity implements
             // If the deck is empty and has no children then show a message saying it's empty
             final Uri helpUrl = Uri.parse(getResources().getString(R.string.link_manual_getting_started));
             mayOpenUrl(helpUrl);
-            UIUtils.showSnackbar(this, R.string.empty_deck, false, R.string.help, new OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    openUrl(helpUrl);
-                }
-            }, findViewById(R.id.root_layout), mSnackbarShowHideCallback);
+            UIUtils.showSnackbar(this, R.string.empty_deck, false, R.string.help,
+                    v -> openUrl(helpUrl), findViewById(R.id.root_layout), mSnackbarShowHideCallback);
             if (mFragmented) {
                 openStudyOptions(false);
             } else {
@@ -1816,14 +1797,11 @@ public class DeckPicker extends NavigationDrawerActivity implements
             }
         } else {
             // Otherwise say there are no cards scheduled to study, and give option to do custom study
-            UIUtils.showSnackbar(this, R.string.studyoptions_empty_schedule, false, R.string.custom_study, new OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    CustomStudyDialog d = CustomStudyDialog.newInstance(
-                            CustomStudyDialog.CONTEXT_MENU_EMPTY_SCHEDULE,
-                            getCol().getDecks().selected(), true);
-                    showDialogFragment(d);
-                }
+            UIUtils.showSnackbar(this, R.string.studyoptions_empty_schedule, false, R.string.custom_study, v -> {
+                CustomStudyDialog d = CustomStudyDialog.newInstance(
+                        CustomStudyDialog.CONTEXT_MENU_EMPTY_SCHEDULE,
+                        getCol().getDecks().selected(), true);
+                showDialogFragment(d);
             }, findViewById(R.id.root_layout), mSnackbarShowHideCallback);
             if (mFragmented) {
                 openStudyOptions(false);
@@ -2193,13 +2171,10 @@ public class DeckPicker extends NavigationDrawerActivity implements
                     String msg = String.format(getResources().getString(R.string.empty_cards_count), cids.size());
                     ConfirmationDialog dialog = new ConfirmationDialog();
                     dialog.setArgs(msg);
-                    Runnable confirm = new Runnable() {
-                        @Override
-                        public void run() {
-                            getCol().remCards(Utils.arrayList2array(cids));
-                            UIUtils.showSimpleSnackbar(DeckPicker.this, String.format(
-                                    getResources().getString(R.string.empty_cards_deleted), cids.size()), false);
-                        }
+                    Runnable confirm = () -> {
+                        getCol().remCards(Utils.arrayList2array(cids));
+                        UIUtils.showSimpleSnackbar(DeckPicker.this, String.format(
+                                getResources().getString(R.string.empty_cards_deleted), cids.size()), false);
                     };
                     dialog.setConfirm(confirm);
                     showDialogFragment(dialog);
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/FieldEditText.java b/AnkiDroid/src/main/java/com/ichi2/anki/FieldEditText.java
index d5e7fcff71..85114ef138 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/FieldEditText.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/FieldEditText.java
@@ -4,16 +4,15 @@ package com.ichi2.anki;
 import android.content.Context;
 import android.graphics.drawable.Drawable;
 import android.util.AttributeSet;
-import android.widget.EditText;
 import android.widget.TextView;
+import androidx.appcompat.widget.AppCompatEditText;
 
 import com.ichi2.themes.Themes;
 
 
-public class FieldEditText extends EditText {
+public class FieldEditText extends AppCompatEditText {
 
     public static final String NEW_LINE = System.getProperty("line.separator");
-    public static final String NL_MARK = "newLineMark";
 
     private String mName;
     private int mOrd;
@@ -35,12 +34,6 @@ public class FieldEditText extends EditText {
     }
 
 
-    public FieldEditText(Context context, int ord, String name, String content) {
-        super(context);
-        init(ord, name, content);
-    }
-
-
     public TextView getLabel() {
         TextView label = new TextView(this.getContext());
         label.setText(mName);
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/FilteredDeckOptions.java b/AnkiDroid/src/main/java/com/ichi2/anki/FilteredDeckOptions.java
index e02bd9896b..c2d2e2671b 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/FilteredDeckOptions.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/FilteredDeckOptions.java
@@ -348,6 +348,7 @@ public class FilteredDeckOptions extends AppCompatPreferenceActivity implements
 
 
     @Override
+    @SuppressWarnings("deprecation") // Tracked as #5019 on github
     protected void onCreate(Bundle icicle) {
         Themes.setThemeLegacy(this);
         super.onCreate(icicle);
@@ -447,12 +448,13 @@ public class FilteredDeckOptions extends AppCompatPreferenceActivity implements
     }
 
 
+    @SuppressWarnings("deprecation") // conversion to fragments tracked in github as #5019
     protected void updateSummaries() {
         mAllowCommit = false;
         // for all text preferences, set summary as current database value
         for (String key : mPref.mValues.keySet()) {
             Preference pref = this.findPreference(key);
-            String value = null;
+            String value;
             if (pref == null) {
                 continue;
             } else if (pref instanceof CheckBoxPreference) {
@@ -488,6 +490,7 @@ public class FilteredDeckOptions extends AppCompatPreferenceActivity implements
     }
 
 
+    @SuppressWarnings("deprecation") // Tracked as #5019 on github
     protected void buildLists() {
         ListPreference newOrderPref = (ListPreference) findPreference("order");
         newOrderPref.setEntries(R.array.cram_deck_conf_order_labels);
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Info.java b/AnkiDroid/src/main/java/com/ichi2/anki/Info.java
index 6b49ca6179..0610c6bdb1 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/Info.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Info.java
@@ -18,6 +18,7 @@
 
 package com.ichi2.anki;
 
+import android.content.ClipData;
 import android.content.Context;
 import android.content.Intent;
 import android.content.res.Resources;
@@ -25,11 +26,9 @@ import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
 import androidx.appcompat.widget.Toolbar;
-import android.text.ClipboardManager;
 import android.util.TypedValue;
 import android.view.KeyEvent;
 import android.view.View;
-import android.view.View.OnClickListener;
 import android.webkit.WebChromeClient;
 import android.webkit.WebView;
 import android.widget.Button;
@@ -67,13 +66,13 @@ public class Info extends AnkiActivity {
 
         setContentView(R.layout.info);
         final View mainView = findViewById(android.R.id.content);
-        Toolbar toolbar = (Toolbar) mainView.findViewById(R.id.toolbar);
+        Toolbar toolbar = mainView.findViewById(R.id.toolbar);
         if (toolbar != null) {
             setSupportActionBar(toolbar);
         }
 
         setTitle(String.format("%s v%s", VersionUtils.getAppName(), VersionUtils.getPkgVersionName()));
-        webView = (WebView) findViewById(R.id.info);
+        webView = findViewById(R.id.info);
         webView.setWebChromeClient(new WebChromeClient() {
             public void onProgressChanged(WebView view, int progress) {
                 // Hide the progress indicator when the page has finished loaded
@@ -83,30 +82,27 @@ public class Info extends AnkiActivity {
             }
         });
 
-        Button marketButton = (Button) findViewById(R.id.market);
-        marketButton.setOnClickListener(new OnClickListener() {
-            @Override
-            public void onClick(View arg0) {
-                if (mType == TYPE_ABOUT) {
-                    if (CompatHelper.isKindle()) {
-                        Intent intent = new Intent("android.intent.action.VIEW",
-                                Uri.parse("http://www.amazon.com/gp/mas/dl/android?p=com.ichi2.anki"));
-                        startActivity(intent);
-                    } else {
-                        Info.this.startActivity(new Intent(Intent.ACTION_VIEW, Uri
-                                .parse("market://details?id=com.ichi2.anki")));
-                    }
-                    return;
+        Button marketButton = findViewById(R.id.market);
+        marketButton.setOnClickListener(arg0 -> {
+            if (mType == TYPE_ABOUT) {
+                if (CompatHelper.isKindle()) {
+                    Intent intent = new Intent("android.intent.action.VIEW",
+                            Uri.parse("http://www.amazon.com/gp/mas/dl/android?p=com.ichi2.anki"));
+                    startActivityWithoutAnimation(intent);
+                } else {
+                    Info.this.startActivityWithoutAnimation(new Intent(Intent.ACTION_VIEW, Uri
+                            .parse("market://details?id=com.ichi2.anki")));
                 }
-                setResult(RESULT_OK);
-                switch (mType) {
-                    case TYPE_NEW_VERSION:
-                        AnkiDroidApp.getSharedPrefs(Info.this.getBaseContext()).edit()
-                                .putString("lastVersion", VersionUtils.getPkgVersionName()).commit();
-                        break;
-                }
-                finishWithAnimation();
+                return;
+            }
+            setResult(RESULT_OK);
+            switch (mType) {
+                case TYPE_NEW_VERSION:
+                    AnkiDroidApp.getSharedPrefs(Info.this.getBaseContext()).edit()
+                            .putString("lastVersion", VersionUtils.getPkgVersionName()).apply();
+                    break;
             }
+            finishWithAnimation();
         });
 
         StringBuilder sb = new StringBuilder();
@@ -120,7 +116,7 @@ public class Info extends AnkiActivity {
                 webView.setBackgroundColor(typedValue.data);
                 getTheme().resolveAttribute(android.R.attr.textColor, typedValue, true);
                 String textColor = String.format("#%06X", (0xFFFFFF & typedValue.data)); // Color to hex string
-                sb.append("<html><style>body {color:"+textColor+";}</style>");
+                sb.append("<html><style>body {color:").append(textColor).append(";}</style>");
 
                 sb.append("<body text=\"#000000\" link=\"#E37068\" alink=\"#E37068\" vlink=\"#E37068\">");
                 sb.append(
@@ -142,25 +138,19 @@ public class Info extends AnkiActivity {
                 sb.append("</body></html>");
                 webView.loadDataWithBaseURL("", sb.toString(), "text/html", "utf-8", null);
                 ((Button) findViewById(R.id.market)).setText(res.getString(R.string.info_rate));
-                Button debugCopy = ((Button) findViewById(R.id.debug_info));
+                Button debugCopy = (findViewById(R.id.debug_info));
                 debugCopy.setText(res.getString(R.string.feedback_copy_debug));
                 debugCopy.setVisibility(View.VISIBLE);
-                debugCopy.setOnClickListener(new OnClickListener() {
-                    @Override
-                    public void onClick(View v) {
-                        copyDebugInfo();
-                    }
-                });
+                debugCopy.setOnClickListener(v -> copyDebugInfo());
                 break;
 
             case TYPE_NEW_VERSION:
                 getSupportActionBar().setDisplayHomeAsUpEnabled(false);
                 webView.loadUrl("file:///android_asset/changelog.html");
-                //webView.loadUrl("https://ankidroid.org/docs/changelog.html");
                 break;
 
             default:
-                finish();
+                finishWithoutAnimation();
                 break;
         }
     }
@@ -188,16 +178,14 @@ public class Info extends AnkiActivity {
      * @return debugInfo
      */
     public String copyDebugInfo() {
-        StringBuilder sb = new StringBuilder();
-        // AnkiDroid Version
-        sb.append("AnkiDroid Version = ").append(VersionUtils.getPkgVersionName()).append("\n\n");
-        // Android SDK
-        sb.append("Android Version = " + Build.VERSION.RELEASE).append("\n\n");
-        // ACRA install ID
-        sb.append("ACRA UUID = ").append(Installation.id(this)).append("\n");
-        String debugInfo = sb.toString();
-        ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
-        clipboard.setText(debugInfo);
+        String debugInfo = "AnkiDroid Version = " + VersionUtils.getPkgVersionName() + "\n\n" +
+                "Android Version = " + Build.VERSION.RELEASE + "\n\n" +
+                "ACRA UUID = " + Installation.id(this) + "\n";
+
+        android.content.ClipboardManager clipboardManager = (android.content.ClipboardManager)getSystemService(Context.CLIPBOARD_SERVICE);
+        if (clipboardManager != null) {
+            clipboardManager.setPrimaryClip(ClipData.newPlainText(this.getTitle(), debugInfo));
+        }
         return debugInfo;
     }
 }
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/IntentHandler.java b/AnkiDroid/src/main/java/com/ichi2/anki/IntentHandler.java
index 0cb72743a1..7cfbf49faa 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/IntentHandler.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/IntentHandler.java
@@ -115,12 +115,9 @@ public class IntentHandler extends Activity {
                         .title(title)
                         .content(errorMessage)
                         .positiveText(getResources().getString(R.string.dialog_ok))
-                        .callback(new MaterialDialog.ButtonCallback() {
-                            @Override
-                            public void onPositive(MaterialDialog dialog) {
+                        .onPositive((dialog, which) -> {
                                 finishWithFade();
-                            }
-                        })
+                            })
                         .build().show();
             }
         } else if ("com.ichi2.anki.DO_SYNC".equals(action)) {
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/ModelBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/ModelBrowser.java
index 33b494069b..3b489779ad 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/ModelBrowser.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/ModelBrowser.java
@@ -19,6 +19,9 @@ package com.ichi2.anki;
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.appcompat.app.ActionBar;
 import androidx.appcompat.widget.Toolbar;
 import android.view.LayoutInflater;
@@ -354,9 +357,7 @@ public class ModelBrowser extends AnkiActivity {
                 .title(R.string.model_browser_add)
                 .positiveText(R.string.dialog_ok)
                 .customView(addSelectionSpinner, true)
-                .callback(new MaterialDialog.ButtonCallback() {
-                    @Override
-                    public void onPositive(MaterialDialog dialog) {
+                .onPositive((dialog, which) -> {
                         mModelNameInput = new EditText(ModelBrowser.this);
                         mModelNameInput.setSingleLine();
 
@@ -375,17 +376,15 @@ public class ModelBrowser extends AnkiActivity {
                                 .title(R.string.model_browser_add)
                                 .positiveText(R.string.dialog_ok)
                                 .customView(mModelNameInput, true)
-                                .callback(new MaterialDialog.ButtonCallback() {
-                                    @Override
-                                    public void onPositive(MaterialDialog dialog) {
+                                .onPositive((innerDialog, innerWhich) -> {
                                         String modelName = mModelNameInput.getText().toString();
                                         addNewNoteType(modelName, addSelectionSpinner.getSelectedItemPosition());
                                     }
-                                })
+                                )
                                 .negativeText(R.string.dialog_cancel)
                                 .show();
                     }
-                })
+                )
                 .negativeText(R.string.dialog_cancel)
                 .show();
     }
@@ -425,6 +424,7 @@ public class ModelBrowser extends AnkiActivity {
                         JSONObject newModel = Models.addBasicModel(col);
                         oldModel.put("id", newModel.get("id"));
                         model = oldModel;
+                        break;
 
                 }
                 model.put("name", modelName);
@@ -501,9 +501,7 @@ public class ModelBrowser extends AnkiActivity {
                                 .positiveText(R.string.rename)
                                 .negativeText(R.string.dialog_cancel)
                                 .customView(mModelNameInput, true)
-                                .callback(new MaterialDialog.ButtonCallback() {
-                                    @Override
-                                    public void onPositive(MaterialDialog dialog) {
+                                .onPositive((dialog, which) -> {
                                         JSONObject model = mModels.get(mModelListPosition);
                                         String deckName = mModelNameInput.getText().toString()
                                                 .replaceAll("[\'\"\\n\\r\\[\\]\\(\\)]", "");
@@ -523,8 +521,8 @@ public class ModelBrowser extends AnkiActivity {
                                         } else {
                                             showToast(getResources().getString(R.string.toast_empty_name));
                                         }
-                                    }
-                                }).show();
+                                    })
+                                .show();
         } catch (JSONException e) {
             throw new RuntimeException(e);
         }
@@ -650,7 +648,7 @@ public class ModelBrowser extends AnkiActivity {
         }
 
         @Override
-        public View getView(int position, View convertView, ViewGroup parent) {
+        public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {
             DisplayPair item = getItem(position);
 
             if (convertView == null) {
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/ModelFieldEditor.java b/AnkiDroid/src/main/java/com/ichi2/anki/ModelFieldEditor.java
index 1be89c6ea3..c7701604f3 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/ModelFieldEditor.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/ModelFieldEditor.java
@@ -17,12 +17,11 @@
 package com.ichi2.anki;
 
 import android.os.Bundle;
+
 import androidx.appcompat.widget.Toolbar;
 import android.text.InputType;
 import android.view.Menu;
 import android.view.MenuItem;
-import android.view.View;
-import android.widget.AdapterView;
 import android.widget.ArrayAdapter;
 import android.widget.EditText;
 import android.widget.ListView;
@@ -62,12 +61,7 @@ public class ModelFieldEditor extends AnkiActivity {
     private ModelEditorContextMenu mContextMenu;
     private EditText mFieldNameInput;
 
-    private Runnable mConfirmDialogCancel = new Runnable() {
-        @Override
-        public void run() {
-            dismissContextMenu();
-        }
-    };
+    private Runnable mConfirmDialogCancel = () -> dismissContextMenu();
 
     // ----------------------------------------------------------------------------
     // ANDROID METHODS
@@ -79,8 +73,8 @@ public class ModelFieldEditor extends AnkiActivity {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.model_field_editor);
 
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        mFieldLabelView = (ListView) findViewById(R.id.note_type_editor_fields);
+        Toolbar toolbar = findViewById(R.id.toolbar);
+        mFieldLabelView = findViewById(R.id.note_type_editor_fields);
 
         if (toolbar != null) {
             setSupportActionBar(toolbar);
@@ -138,13 +132,10 @@ public class ModelFieldEditor extends AnkiActivity {
     private void createfieldLabels() {
         ArrayAdapter<String> mFieldLabelAdapter = new ArrayAdapter<>(this, R.layout.model_field_editor_list_item, mFieldLabels);
         mFieldLabelView.setAdapter(mFieldLabelAdapter);
-        mFieldLabelView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-            @Override
-            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                mContextMenu = ModelEditorContextMenu.newInstance(mFieldLabels.get(position), mContextMenuListener);
-                showDialogFragment(mContextMenu);
-                mCurrentPos = position;
-            }
+        mFieldLabelView.setOnItemClickListener((parent, view, position, id) -> {
+            mContextMenu = ModelEditorContextMenu.newInstance(mFieldLabels.get(position), mContextMenuListener);
+            showDialogFragment(mContextMenu);
+            mCurrentPos = position;
         });
     }
 
@@ -186,47 +177,40 @@ public class ModelFieldEditor extends AnkiActivity {
                 .title(R.string.model_field_editor_add)
                 .positiveText(R.string.dialog_ok)
                 .customView(mFieldNameInput, true)
-                .callback(new MaterialDialog.ButtonCallback() {
-
-                    @Override
-                    public void onPositive(MaterialDialog dialog) {
-                        String fieldName = mFieldNameInput.getText().toString()
-                                .replaceAll("[\'\"\\n\\r\\[\\]\\(\\)]", "");
-
-                        if (fieldName.length() == 0) {
-                            showToast(getResources().getString(R.string.toast_empty_name));
-                        } else if (containsField(fieldName)) {
-                            showToast(getResources().getString(R.string.toast_duplicate_field));
-                        } else {
-                            //Name is valid, now field is added
-                            try {
-                                mCol.modSchema();
+                .onPositive((dialog, which) -> {
+                    String fieldName = mFieldNameInput.getText().toString()
+                            .replaceAll("[\'\"\\n\\r\\[\\]\\(\\)]", "");
+
+                    if (fieldName.length() == 0) {
+                        showToast(getResources().getString(R.string.toast_empty_name));
+                    } else if (containsField(fieldName)) {
+                        showToast(getResources().getString(R.string.toast_duplicate_field));
+                    } else {
+                        //Name is valid, now field is added
+                        try {
+                            mCol.modSchema();
+                            DeckTask.launchDeckTask(DeckTask.TASK_TYPE_ADD_FIELD, mChangeFieldHandler,
+                                    new DeckTask.TaskData(new Object[]{mMod, fieldName}));
+                        } catch (ConfirmModSchemaException e) {
+
+                            //Create dialogue to for schema change
+                            ConfirmationDialog c = new ConfirmationDialog();
+                            c.setArgs(getResources().getString(R.string.full_sync_confirmation));
+                            Runnable confirm = () -> {
+                                mCol.modSchemaNoCheck();
+                                String fieldName1 = mFieldNameInput.getText().toString()
+                                        .replaceAll("[\'\"\\n\\r\\[\\]\\(\\)]", "");
                                 DeckTask.launchDeckTask(DeckTask.TASK_TYPE_ADD_FIELD, mChangeFieldHandler,
-                                        new DeckTask.TaskData(new Object[]{mMod, fieldName}));
-                            } catch (ConfirmModSchemaException e) {
-
-                                //Create dialogue to for schema change
-                                ConfirmationDialog c = new ConfirmationDialog();
-                                c.setArgs(getResources().getString(R.string.full_sync_confirmation));
-                                Runnable confirm = new Runnable() {
-                                    @Override
-                                    public void run() {
-                                        mCol.modSchemaNoCheck();
-                                        String fieldName = mFieldNameInput.getText().toString()
-                                                .replaceAll("[\'\"\\n\\r\\[\\]\\(\\)]", "");
-                                        DeckTask.launchDeckTask(DeckTask.TASK_TYPE_ADD_FIELD, mChangeFieldHandler,
-                                                new DeckTask.TaskData(new Object[]{mMod, fieldName}));
-                                        dismissContextMenu();
-                                    }
-                                };
+                                        new DeckTask.TaskData(new Object[]{mMod, fieldName1}));
+                                dismissContextMenu();
+                            };
 
-                                c.setConfirm(confirm);
-                                c.setCancel(mConfirmDialogCancel);
-                                ModelFieldEditor.this.showDialogFragment(c);
-                            }
-                            mCol.getModels().update(mMod);
-                            fullRefreshList();
+                            c.setConfirm(confirm);
+                            c.setCancel(mConfirmDialogCancel);
+                            ModelFieldEditor.this.showDialogFragment(c);
                         }
+                        mCol.getModels().update(mMod);
+                        fullRefreshList();
                     }
                 })
                 .negativeText(R.string.dialog_cancel)
@@ -239,17 +223,14 @@ public class ModelFieldEditor extends AnkiActivity {
      * Processing time scales with number of items
      */
     private void deleteFieldDialog() {
-        Runnable confirm = new Runnable() {
-            @Override
-            public void run() {
-                try {
-                    mCol.modSchema(false);
-                    deleteField();
-                } catch (ConfirmModSchemaException e) {
-                    //This should never be reached because modSchema() didn't throw an exception
-                }
-                dismissContextMenu();
+        Runnable confirm = () -> {
+            try {
+                mCol.modSchema(false);
+                deleteField();
+            } catch (ConfirmModSchemaException e) {
+                //This should never be reached because modSchema() didn't throw an exception
             }
+            dismissContextMenu();
         };
 
 
@@ -296,9 +277,7 @@ public class ModelFieldEditor extends AnkiActivity {
                 .title(R.string.rename_model)
                 .positiveText(R.string.rename)
                 .customView(mFieldNameInput, true)
-                .callback(new MaterialDialog.ButtonCallback() {
-                    @Override
-                    public void onPositive(MaterialDialog dialog) {
+                .onPositive((dialog, which) -> {
 
                         String fieldLabel = mFieldNameInput.getText().toString()
                                 .replaceAll("[\'\"\\n\\r\\[\\]\\(\\)]", "");
@@ -315,25 +294,21 @@ public class ModelFieldEditor extends AnkiActivity {
                                 // Handler mod schema confirmation
                                 ConfirmationDialog c = new ConfirmationDialog();
                                 c.setArgs(getResources().getString(R.string.full_sync_confirmation));
-                                Runnable confirm = new Runnable() {
-                                    @Override
-                                    public void run() {
-                                        try {
-                                            mCol.modSchema(false);
-                                            renameField();
-                                        } catch (ConfirmModSchemaException e) {
-                                            //This should never be thrown
-                                        }
-                                        dismissContextMenu();
+                                Runnable confirm = () -> {
+                                    try {
+                                        mCol.modSchema(false);
+                                        renameField();
+                                    } catch (ConfirmModSchemaException e1) {
+                                        //This should never be thrown
                                     }
+                                    dismissContextMenu();
                                 };
                                 c.setConfirm(confirm);
                                 c.setCancel(mConfirmDialogCancel);
                                 ModelFieldEditor.this.showDialogFragment(c);
                             }
                         }
-                    }
-                })
+                    })
                 .negativeText(R.string.dialog_cancel)
                 .show();
     }
@@ -351,9 +326,7 @@ public class ModelFieldEditor extends AnkiActivity {
                 .title(String.format(getResources().getString(R.string.model_field_editor_reposition), 1, mFieldLabels.size()))
                 .positiveText(R.string.dialog_ok)
                 .customView(mFieldNameInput, true)
-                .callback(new MaterialDialog.ButtonCallback() {
-                    @Override
-                    public void onPositive(MaterialDialog dialog) {
+                .onPositive((dialog, which) -> {
                         String newPosition = mFieldNameInput.getText().toString();
                         int pos;
                         try {
@@ -377,20 +350,17 @@ public class ModelFieldEditor extends AnkiActivity {
                                 // Handle mod schema confirmation
                                 ConfirmationDialog c = new ConfirmationDialog();
                                 c.setArgs(getResources().getString(R.string.full_sync_confirmation));
-                                Runnable confirm = new Runnable() {
-                                    @Override
-                                    public void run() {
-                                        try {
-                                            mCol.modSchemaNoCheck();
-                                            String newPosition = mFieldNameInput.getText().toString();
-                                            int pos = Integer.parseInt(newPosition);
-                                            DeckTask.launchDeckTask(DeckTask.TASK_TYPE_REPOSITION_FIELD,
-                                                    mChangeFieldHandler, new DeckTask.TaskData(new Object[]{mMod,
-                                                            mNoteFields.getJSONObject(mCurrentPos),pos - 1}));
-                                            dismissContextMenu();
-                                        } catch (JSONException e) {
-                                            throw new RuntimeException(e);
-                                        }
+                                Runnable confirm = () -> {
+                                    try {
+                                        mCol.modSchemaNoCheck();
+                                        String newPosition1 = mFieldNameInput.getText().toString();
+                                        int pos1 = Integer.parseInt(newPosition1);
+                                        DeckTask.launchDeckTask(DeckTask.TASK_TYPE_REPOSITION_FIELD,
+                                                mChangeFieldHandler, new DeckTask.TaskData(new Object[]{mMod,
+                                                        mNoteFields.getJSONObject(mCurrentPos), pos1 - 1}));
+                                        dismissContextMenu();
+                                    } catch (JSONException e1) {
+                                        throw new RuntimeException(e1);
                                     }
                                 };
                                 c.setConfirm(confirm);
@@ -400,8 +370,7 @@ public class ModelFieldEditor extends AnkiActivity {
                                 throw new RuntimeException(e);
                             }
                         }
-                    }
-                })
+                    })
                 .negativeText(R.string.dialog_cancel)
                 .show();
     }
@@ -460,14 +429,11 @@ public class ModelFieldEditor extends AnkiActivity {
             // Handler mMod schema confirmation
             ConfirmationDialog c = new ConfirmationDialog();
             c.setArgs(getResources().getString(R.string.full_sync_confirmation));
-            Runnable confirm = new Runnable() {
-                @Override
-                public void run() {
-                    mCol.modSchemaNoCheck();
-                    DeckTask.launchDeckTask(DeckTask.TASK_TYPE_CHANGE_SORT_FIELD, mChangeFieldHandler,
-                            new DeckTask.TaskData(new Object[]{mMod, mCurrentPos}));
-                    dismissContextMenu();
-                }
+            Runnable confirm = () -> {
+                mCol.modSchemaNoCheck();
+                DeckTask.launchDeckTask(DeckTask.TASK_TYPE_CHANGE_SORT_FIELD, mChangeFieldHandler,
+                        new DeckTask.TaskData(new Object[]{mMod, mCurrentPos}));
+                dismissContextMenu();
             };
             c.setConfirm(confirm);
             c.setCancel(mConfirmDialogCancel);
@@ -583,23 +549,20 @@ public class ModelFieldEditor extends AnkiActivity {
     }
 
 
-    private MaterialDialog.ListCallback mContextMenuListener = new MaterialDialog.ListCallback() {
-        @Override
-        public void onSelection(MaterialDialog materialDialog, View view, int selection, CharSequence charSequence) {
-            switch (selection) {
-                case ModelEditorContextMenu.SORT_FIELD:
-                    sortByField();
-                    break;
-                case ModelEditorContextMenu.FIELD_REPOSITION:
-                    repositionFieldDialog();
-                    break;
-                case ModelEditorContextMenu.FIELD_DELETE:
-                    deleteFieldDialog();
-                    break;
-                case ModelEditorContextMenu.FIELD_RENAME:
-                    renameFieldDialog();
-                    break;
-            }
+    private MaterialDialog.ListCallback mContextMenuListener = (materialDialog, view, selection, charSequence) -> {
+        switch (selection) {
+            case ModelEditorContextMenu.SORT_FIELD:
+                sortByField();
+                break;
+            case ModelEditorContextMenu.FIELD_REPOSITION:
+                repositionFieldDialog();
+                break;
+            case ModelEditorContextMenu.FIELD_DELETE:
+                deleteFieldDialog();
+                break;
+            case ModelEditorContextMenu.FIELD_RENAME:
+                renameFieldDialog();
+                break;
         }
     };
 }
\ No newline at end of file
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/MyAccount.java b/AnkiDroid/src/main/java/com/ichi2/anki/MyAccount.java
index 2c345e9c0d..c867e5840f 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/MyAccount.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/MyAccount.java
@@ -23,7 +23,6 @@ import android.os.Bundle;
 import androidx.appcompat.widget.Toolbar;
 import android.view.KeyEvent;
 import android.view.View;
-import android.view.View.OnClickListener;
 import android.view.inputmethod.InputMethodManager;
 import android.widget.Button;
 import android.widget.EditText;
@@ -58,7 +57,7 @@ public class MyAccount extends AnkiActivity {
             case STATE_LOGGED_IN:
                 String username = AnkiDroidApp.getSharedPrefs(getBaseContext()).getString("username", "");
                 mUsernameLoggedIn.setText(username);
-                mToolbar = (Toolbar) mLoggedIntoMyAccountView.findViewById(R.id.toolbar);
+                mToolbar = mLoggedIntoMyAccountView.findViewById(R.id.toolbar);
                 if (mToolbar!= null) {
                     mToolbar.setTitle(getString(R.string.sync_account));  // This can be cleaned up if all three main layouts are guaranteed to share the same toolbar object
                     setSupportActionBar(mToolbar);
@@ -67,7 +66,7 @@ public class MyAccount extends AnkiActivity {
                 break;
 
             case STATE_LOG_IN:
-                mToolbar = (Toolbar) mLoginToMyAccountView.findViewById(R.id.toolbar);
+                mToolbar = mLoginToMyAccountView.findViewById(R.id.toolbar);
                 if (mToolbar!= null) {
                     mToolbar.setTitle(getString(R.string.sync_account));  // This can be cleaned up if all three main layouts are guaranteed to share the same toolbar object
                     setSupportActionBar(mToolbar);
@@ -100,7 +99,7 @@ public class MyAccount extends AnkiActivity {
         Editor editor = preferences.edit();
         editor.putString("username", username);
         editor.putString("hkey", hkey);
-        editor.commit();
+        editor.apply();
     }
 
 
@@ -125,7 +124,7 @@ public class MyAccount extends AnkiActivity {
         Editor editor = preferences.edit();
         editor.putString("username", "");
         editor.putString("hkey", "");
-        editor.commit();
+        editor.apply();
         //  force media resync on deauth
         getCol().getMedia().forceResync();
         switchToState(STATE_LOG_IN);
@@ -135,54 +134,28 @@ public class MyAccount extends AnkiActivity {
     private void resetPassword() {
         Intent intent = new Intent(Intent.ACTION_VIEW);
         intent.setData(Uri.parse(getResources().getString(R.string.resetpw_url)));
-        startActivity(intent);
+        startActivityWithoutAnimation(intent);
     }
 
 
     private void initAllContentViews() {
         mLoginToMyAccountView = getLayoutInflater().inflate(R.layout.my_account, null);
-        mUsername = (EditText) mLoginToMyAccountView.findViewById(R.id.username);
-        mPassword = (EditText) mLoginToMyAccountView.findViewById(R.id.password);
+        mUsername = mLoginToMyAccountView.findViewById(R.id.username);
+        mPassword = mLoginToMyAccountView.findViewById(R.id.password);
 
-        Button loginButton = (Button) mLoginToMyAccountView.findViewById(R.id.login_button);
-        loginButton.setOnClickListener(new OnClickListener() {
+        Button loginButton = mLoginToMyAccountView.findViewById(R.id.login_button);
+        loginButton.setOnClickListener(v -> login());
 
-            @Override
-            public void onClick(View v) {
-                login();
-            }
-
-        });
-
-        Button resetPWButton = (Button) mLoginToMyAccountView.findViewById(R.id.reset_password_button);
-        resetPWButton.setOnClickListener(new OnClickListener() {
-
-            @Override
-            public void onClick(View v) {
-                resetPassword();
-            }
-        });
+        Button resetPWButton = mLoginToMyAccountView.findViewById(R.id.reset_password_button);
+        resetPWButton.setOnClickListener(v -> resetPassword());
 
-        Button signUpButton = (Button) mLoginToMyAccountView.findViewById(R.id.sign_up_button);
-        signUpButton.setOnClickListener(new OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                openUrl(Uri.parse(getResources().getString(R.string.register_url)));
-            }
-
-        });
+        Button signUpButton = mLoginToMyAccountView.findViewById(R.id.sign_up_button);
+        signUpButton.setOnClickListener(v -> openUrl(Uri.parse(getResources().getString(R.string.register_url))));
 
         mLoggedIntoMyAccountView = getLayoutInflater().inflate(R.layout.my_account_logged_in, null);
-        mUsernameLoggedIn = (TextView) mLoggedIntoMyAccountView.findViewById(R.id.username_logged_in);
-        Button logoutButton = (Button) mLoggedIntoMyAccountView.findViewById(R.id.logout_button);
-        logoutButton.setOnClickListener(new OnClickListener() {
-
-            @Override
-            public void onClick(View v) {
-                logout();
-            }
-
-        });
+        mUsernameLoggedIn = mLoggedIntoMyAccountView.findViewById(R.id.username_logged_in);
+        Button logoutButton = mLoggedIntoMyAccountView.findViewById(R.id.logout_button);
+        logoutButton.setOnClickListener(v -> logout());
     }
 
 
@@ -199,7 +172,7 @@ public class MyAccount extends AnkiActivity {
 
         @Override
         public void onPreExecute() {
-            Timber.d("loginListener.onPreExcecute()");
+            Timber.d("loginListener.onPreExecute()");
             if (mProgressDialog == null || !mProgressDialog.isShowing()) {
                 mProgressDialog = StyledProgressDialog.show(MyAccount.this, "",
                         getResources().getString(R.string.alert_logging_message), false);
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/NavigationDrawerActivity.java b/AnkiDroid/src/main/java/com/ichi2/anki/NavigationDrawerActivity.java
index be9bab1c55..6dc8107479 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/NavigationDrawerActivity.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/NavigationDrawerActivity.java
@@ -24,16 +24,13 @@ import android.os.Handler;
 import com.google.android.material.navigation.NavigationView;
 import androidx.core.app.TaskStackBuilder;
 import androidx.core.view.GravityCompat;
-import androidx.core.view.MenuItemCompat;
 import androidx.drawerlayout.widget.DrawerLayout;
 import androidx.appcompat.app.ActionBarDrawerToggle;
 import androidx.appcompat.widget.SwitchCompat;
 import androidx.appcompat.widget.Toolbar;
-import android.view.Gravity;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
-import android.widget.CompoundButton;
 
 import com.ichi2.anim.ActivityTransitionAnimation;
 import com.ichi2.themes.Themes;
@@ -41,7 +38,7 @@ import com.ichi2.themes.Themes;
 import timber.log.Timber;
 
 
-public class NavigationDrawerActivity extends AnkiActivity implements NavigationView.OnNavigationItemSelectedListener {
+public abstract class NavigationDrawerActivity extends AnkiActivity implements NavigationView.OnNavigationItemSelectedListener {
 
     /** Navigation Drawer */
     protected CharSequence mTitle;
@@ -66,14 +63,14 @@ public class NavigationDrawerActivity extends AnkiActivity implements Navigation
     private Runnable pendingRunnable;
 
     // Navigation drawer initialisation
-    protected void initNavigationDrawer(View mainView){
+    protected void initNavigationDrawer(View mainView) {
         // Create inherited navigation drawer layout here so that it can be used by parent class
-        mDrawerLayout = (DrawerLayout) mainView.findViewById(R.id.drawer_layout);
+        mDrawerLayout = mainView.findViewById(R.id.drawer_layout);
         // set a custom shadow that overlays the main content when the drawer opens
         mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow, GravityCompat.START);
-        mNavigationView = (NavigationView) mDrawerLayout.findViewById(R.id.navdrawer_items_container);
+        mNavigationView = mDrawerLayout.findViewById(R.id.navdrawer_items_container);
         mNavigationView.setNavigationItemSelectedListener(this);
-        Toolbar toolbar = (Toolbar) mainView.findViewById(R.id.toolbar);
+        Toolbar toolbar = mainView.findViewById(R.id.toolbar);
         if (toolbar != null) {
             setSupportActionBar(toolbar);
             // enable ActionBar app icon to behave as action to toggle nav drawer
@@ -81,30 +78,22 @@ public class NavigationDrawerActivity extends AnkiActivity implements Navigation
             getSupportActionBar().setHomeButtonEnabled(true);
 
             // Decide which action to take when the navigation button is tapped.
-            toolbar.setNavigationOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    onNavigationPressed();
-                }
-            });
+            toolbar.setNavigationOnClickListener(v -> onNavigationPressed());
         }
         // Configure night-mode switch
         final SharedPreferences preferences = AnkiDroidApp.getSharedPrefs(NavigationDrawerActivity.this);
-        View actionLayout = MenuItemCompat.getActionView(mNavigationView.getMenu().findItem(R.id.nav_night_mode));
-        mNightModeSwitch = (SwitchCompat) actionLayout.findViewById(R.id.switch_compat);
+        View actionLayout = mNavigationView.getMenu().findItem(R.id.nav_night_mode).getActionView();
+        mNightModeSwitch = actionLayout.findViewById(R.id.switch_compat);
         mNightModeSwitch.setChecked(preferences.getBoolean("invertedColors", false));
-        mNightModeSwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-            @Override
-            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                if (isChecked) {
-                    Timber.i("StudyOptionsFragment:: Night mode was enabled");
-                    preferences.edit().putBoolean("invertedColors", true).commit();
-                } else {
-                    Timber.i("StudyOptionsFragment:: Night mode was disabled");
-                    preferences.edit().putBoolean("invertedColors", false).commit();
-                }
-                restartActivityInvalidateBackstack(NavigationDrawerActivity.this);
+        mNightModeSwitch.setOnCheckedChangeListener((buttonView, isChecked) -> {
+            if (isChecked) {
+                Timber.i("StudyOptionsFragment:: Night mode was enabled");
+                preferences.edit().putBoolean("invertedColors", true).apply();
+            } else {
+                Timber.i("StudyOptionsFragment:: Night mode was disabled");
+                preferences.edit().putBoolean("invertedColors", false).apply();
             }
+            restartActivityInvalidateBackstack(NavigationDrawerActivity.this);
         });
         // ActionBarDrawerToggle ties together the the proper interactions
         // between the sliding drawer and the action bar app icon
@@ -263,7 +252,7 @@ public class NavigationDrawerActivity extends AnkiActivity implements Navigation
         if (mNavButtonGoesBack) {
             finishWithAnimation(ActivityTransitionAnimation.RIGHT);
         } else {
-            mDrawerLayout.openDrawer(Gravity.LEFT);
+            mDrawerLayout.openDrawer(GravityCompat.START);
         }
     }
 
@@ -278,42 +267,39 @@ public class NavigationDrawerActivity extends AnkiActivity implements Navigation
          * This runnable will be executed in onDrawerClosed(...)
          * to make the animation more fluid on older devices.
          */
-        pendingRunnable = new Runnable() {
-            @Override
-            public void run() {
-                // Take action if a different item selected
-                switch (item.getItemId()) {
-                    case R.id.nav_decks:
-                        Intent deckPicker = new Intent(NavigationDrawerActivity.this, DeckPicker.class);
-                        deckPicker.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);    // opening DeckPicker should clear back history
-                        startActivityWithAnimation(deckPicker, ActivityTransitionAnimation.RIGHT);
-                        break;
-                    case R.id.nav_browser:
-                        openCardBrowser();
-                        break;
-                    case R.id.nav_stats:
-                        Intent intent = new Intent(NavigationDrawerActivity.this, Statistics.class);
-                        intent.putExtra("selectedDeck", getCol().getDecks().selected());
-                        startActivityForResultWithAnimation(intent, REQUEST_STATISTICS, ActivityTransitionAnimation.LEFT);
-                        break;
-                    case R.id.nav_night_mode:
-                        mNightModeSwitch.performClick();
-                        break;
-                    case R.id.nav_settings:
-                        mOldColPath = CollectionHelper.getCurrentAnkiDroidDirectory(NavigationDrawerActivity.this);
-                        // Remember the theme we started with so we can restart the Activity if it changes
-                        mOldTheme = Themes.getCurrentTheme(getApplicationContext());
-                        startActivityForResultWithAnimation(new Intent(NavigationDrawerActivity.this, Preferences.class), REQUEST_PREFERENCES_UPDATE, ActivityTransitionAnimation.FADE);
-                        break;
-                    case R.id.nav_help:
-                        openUrl(Uri.parse(AnkiDroidApp.getManualUrl()));
-                        break;
-                    case R.id.nav_feedback:
-                        openUrl(Uri.parse(AnkiDroidApp.getFeedbackUrl()));
-                        break;
-                    default:
-                        break;
-                }
+        pendingRunnable = () -> {
+            // Take action if a different item selected
+            switch (item.getItemId()) {
+                case R.id.nav_decks:
+                    Intent deckPicker = new Intent(NavigationDrawerActivity.this, DeckPicker.class);
+                    deckPicker.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);    // opening DeckPicker should clear back history
+                    startActivityWithAnimation(deckPicker, ActivityTransitionAnimation.RIGHT);
+                    break;
+                case R.id.nav_browser:
+                    openCardBrowser();
+                    break;
+                case R.id.nav_stats:
+                    Intent intent = new Intent(NavigationDrawerActivity.this, Statistics.class);
+                    intent.putExtra("selectedDeck", getCol().getDecks().selected());
+                    startActivityForResultWithAnimation(intent, REQUEST_STATISTICS, ActivityTransitionAnimation.LEFT);
+                    break;
+                case R.id.nav_night_mode:
+                    mNightModeSwitch.performClick();
+                    break;
+                case R.id.nav_settings:
+                    mOldColPath = CollectionHelper.getCurrentAnkiDroidDirectory(NavigationDrawerActivity.this);
+                    // Remember the theme we started with so we can restart the Activity if it changes
+                    mOldTheme = Themes.getCurrentTheme(getApplicationContext());
+                    startActivityForResultWithAnimation(new Intent(NavigationDrawerActivity.this, Preferences.class), REQUEST_PREFERENCES_UPDATE, ActivityTransitionAnimation.FADE);
+                    break;
+                case R.id.nav_help:
+                    openUrl(Uri.parse(AnkiDroidApp.getManualUrl()));
+                    break;
+                case R.id.nav_feedback:
+                    openUrl(Uri.parse(AnkiDroidApp.getFeedbackUrl()));
+                    break;
+                default:
+                    break;
             }
         };
 
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/NoteEditor.java b/AnkiDroid/src/main/java/com/ichi2/anki/NoteEditor.java
index 8a600c269c..8e41d70c5a 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/NoteEditor.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/NoteEditor.java
@@ -29,7 +29,6 @@ import android.os.Bundle;
 import androidx.appcompat.widget.PopupMenu;
 import androidx.appcompat.widget.Toolbar;
 import android.text.Editable;
-import android.text.Html;
 import android.text.TextUtils;
 import android.text.TextWatcher;
 
@@ -67,6 +66,7 @@ import com.ichi2.anki.multimediacard.impl.MultimediaEditableNote;
 import com.ichi2.anki.receiver.SdCardReceiver;
 import com.ichi2.anki.servicelayer.NoteService;
 import com.ichi2.async.DeckTask;
+import com.ichi2.compat.CompatHelper;
 import com.ichi2.libanki.Card;
 import com.ichi2.libanki.Collection;
 import com.ichi2.libanki.Note;
@@ -690,10 +690,7 @@ public class NoteEditor extends AnkiActivity {
             return true;
         }
         // changed tags?
-        if (mTagsEdited) {
-            return true;
-        }
-        return false;
+        return mTagsEdited;
     }
 
 
@@ -1508,7 +1505,7 @@ public class NoteEditor extends AnkiActivity {
             if (!mAddNote && tmpls.length() < mEditorNote.model().getJSONArray("tmpls").length()) {
                 cardsList = "<font color='red'>" + cardsList + "</font>";
             }
-            mCardsButton.setText(Html.fromHtml(getResources().getString(R.string.CardEditorCards, cardsList)));
+            mCardsButton.setText(CompatHelper.getCompat().fromHtml(getResources().getString(R.string.CardEditorCards, cardsList)));
         } catch (JSONException e) {
             throw new RuntimeException(e);
         }
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java b/AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java
index 89bd8882bd..c9a4d7aaa2 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Preferences.java
@@ -37,7 +37,6 @@ import android.preference.ListPreference;
 import android.preference.Preference;
 import android.preference.PreferenceActivity;
 import android.preference.PreferenceCategory;
-import android.preference.PreferenceFragment;
 import android.preference.PreferenceGroup;
 import android.preference.PreferenceScreen;
 import android.text.TextUtils;
@@ -142,6 +141,7 @@ public class Preferences extends AppCompatPreferenceActivity implements Preferen
     }
 
     @Override
+    @SuppressWarnings("deprecation") // Tracked as #5019 on github - convert to fragments
     protected MaterialDialog onCreateDialog(int id) {
         Resources res = getResources();
         MaterialDialog.Builder builder = new MaterialDialog.Builder(this);
@@ -402,6 +402,7 @@ public class Preferences extends AppCompatPreferenceActivity implements Preferen
      * @param key key in prefs which is being updated
      * @param listener PreferenceActivity of PreferenceFragment which is hosting the preference
      */
+    @SuppressWarnings("deprecation") // Tracked as #5019 on github - convert to fragments
     private void updatePreference(SharedPreferences prefs, String key, PreferenceContext listener) {
         try {
             PreferenceScreen screen = listener.getPreferenceScreen();
@@ -728,7 +729,8 @@ public class Preferences extends AppCompatPreferenceActivity implements Preferen
     // Inner classes
     // ----------------------------------------------------------------------------
 
-    public static class SettingsFragment extends PreferenceFragment implements PreferenceContext, OnSharedPreferenceChangeListener {
+    @SuppressWarnings("deprecation") // Tracked as #5019 on github
+    public static class SettingsFragment extends android.preference.PreferenceFragment implements PreferenceContext, OnSharedPreferenceChangeListener {
         @Override
         public void onCreate(Bundle savedInstanceState) {
             super.onCreate(savedInstanceState);
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/ReadText.java b/AnkiDroid/src/main/java/com/ichi2/anki/ReadText.java
index 332df5c579..fa1ae9fafc 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/ReadText.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/ReadText.java
@@ -48,7 +48,7 @@ public class ReadText {
 
 
     // private boolean mTtsReady = false;
-
+    @SuppressWarnings("deprecation") // Movement to new API tracked in github as #5021
     public static void speak(String text, String loc, int queueMode) {
         int result = mTts.setLanguage(localeFromStringIgnoringScriptAndExtensions(loc));
         if (result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED) {
@@ -295,10 +295,13 @@ public class ReadText {
                         }
                     }
                     @Override
+                    @Deprecated
                     public void onError(String arg0) {
+                        // do nothing
                     }
                     @Override
                     public void onStart(String arg0) {
+                        // no nothing
                     }
                 });
             }
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java
index 1133d52b37..95476f75a5 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java
@@ -18,12 +18,10 @@
 
 package com.ichi2.anki;
 
-import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
-import android.content.res.Resources;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.os.Bundle;
@@ -33,9 +31,9 @@ import androidx.core.view.MenuItemCompat;
 import android.view.KeyEvent;
 import android.view.Menu;
 import android.view.MenuItem;
-import android.view.MotionEvent;
 import android.view.SubMenu;
 import android.view.View;
+import android.view.ViewGroup;
 import android.widget.FrameLayout;
 
 import com.ichi2.anim.ActivityTransitionAnimation;
@@ -271,7 +269,7 @@ public class Reviewer extends AbstractFlashcardViewer {
     private void setCustomButtons(Menu menu) {
         for(int itemId : mCustomButtons.keySet()) {
             if(mCustomButtons.get(itemId) != MENU_DISABLED) {
-                MenuItemCompat.setShowAsAction(menu.findItem(itemId), mCustomButtons.get(itemId));
+                menu.findItem(itemId).setShowAsAction(mCustomButtons.get(itemId));
             }
             else {
                 menu.findItem(itemId).setVisible(false);
@@ -280,12 +278,10 @@ public class Reviewer extends AbstractFlashcardViewer {
     }
 
 
-    @SuppressLint("NewApi")
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         // NOTE: This is called every time a new question is shown via invalidate options menu
         getMenuInflater().inflate(R.menu.reviewer, menu);
-        Resources res = getResources();
         setCustomButtons(menu);
         if (mCurrentCard != null && mCurrentCard.note().hasTag("marked")) {
             menu.findItem(R.id.action_mark_card).setTitle(R.string.menu_unmark_note).setIcon(R.drawable.ic_star_white_24dp);
@@ -490,21 +486,19 @@ public class Reviewer extends AbstractFlashcardViewer {
     private void createWhiteboard() {
         mWhiteboard = new Whiteboard(this, mNightMode, mBlackWhiteboard);
         FrameLayout.LayoutParams lp2 = new FrameLayout.LayoutParams(
-                android.view.ViewGroup.LayoutParams.FILL_PARENT, android.view.ViewGroup.LayoutParams.FILL_PARENT);
+                ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);
         mWhiteboard.setLayoutParams(lp2);
-        FrameLayout fl = (FrameLayout) findViewById(R.id.whiteboard);
+        FrameLayout fl = findViewById(R.id.whiteboard);
         fl.addView(mWhiteboard);
 
-        mWhiteboard.setOnTouchListener(new View.OnTouchListener() {
-            @Override
-            public boolean onTouch(View v, MotionEvent event) {
-                if (!mShowWhiteboard || (mPrefFullscreenReview
-                        && CompatHelper.getCompat().isImmersiveSystemUiVisible(Reviewer.this))) {
-                    // Bypass whiteboard listener when it's hidden or fullscreen immersive mode is temporarily suspended
-                    return getGestureDetector().onTouchEvent(event);
-                }
-                return mWhiteboard.handleTouchEvent(event);
+        mWhiteboard.setOnTouchListener((v, event) -> {
+            if (!mShowWhiteboard || (mPrefFullscreenReview
+                    && CompatHelper.getCompat().isImmersiveSystemUiVisible(Reviewer.this))) {
+                // Bypass whiteboard listener when it's hidden or fullscreen immersive mode is temporarily suspended
+                v.performClick();
+                return getGestureDetector().onTouchEvent(event);
             }
+            return mWhiteboard.handleTouchEvent(event);
         });
         mWhiteboard.setEnabled(true);
     }
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/StudyOptionsFragment.java b/AnkiDroid/src/main/java/com/ichi2/anki/StudyOptionsFragment.java
index 638263f29b..e8d5e82b2f 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/StudyOptionsFragment.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/StudyOptionsFragment.java
@@ -15,13 +15,13 @@
 package com.ichi2.anki;
 
 import android.app.Activity;
+import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Resources;
 import android.os.Bundle;
 import androidx.fragment.app.Fragment;
 import androidx.appcompat.widget.Toolbar;
-import android.text.Html;
 import android.text.method.LinkMovementMethod;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -35,6 +35,7 @@ import com.afollestad.materialdialogs.MaterialDialog;
 import com.ichi2.anim.ActivityTransitionAnimation;
 import com.ichi2.anki.dialogs.CustomStudyDialog;
 import com.ichi2.async.DeckTask;
+import com.ichi2.compat.CompatHelper;
 import com.ichi2.libanki.Collection;
 import com.ichi2.libanki.Utils;
 import com.ichi2.themes.StyledProgressDialog;
@@ -57,9 +58,9 @@ public class StudyOptionsFragment extends Fragment implements Toolbar.OnMenuItem
     /**
      * Constants for selecting which content view to display
      */
-    public static final int CONTENT_STUDY_OPTIONS = 0;
-    public static final int CONTENT_CONGRATS = 1;
-    public static final int CONTENT_EMPTY = 2;
+    private static final int CONTENT_STUDY_OPTIONS = 0;
+    private static final int CONTENT_CONGRATS = 1;
+    private static final int CONTENT_EMPTY = 2;
 
     // Threshold at which the total number of new cards is truncated by libanki
     private static final int NEW_CARD_COUNT_TRUNCATE_THRESHOLD = 1000;
@@ -96,7 +97,7 @@ public class StudyOptionsFragment extends Fragment implements Toolbar.OnMenuItem
 
     private Thread mFullNewCountThread = null;
 
-    StudyOptionsListener mListener;
+    private StudyOptionsListener mListener;
 
 
     public interface StudyOptionsListener {
@@ -104,12 +105,12 @@ public class StudyOptionsFragment extends Fragment implements Toolbar.OnMenuItem
     }
 
     @Override
-    public void onAttach(Activity activity) {
-        super.onAttach(activity);
+    public void onAttach(Context context) {
+        super.onAttach(context);
         try {
-            mListener = (StudyOptionsListener) activity;
+            mListener = (StudyOptionsListener) context;
         } catch (ClassCastException e) {
-            throw new ClassCastException(activity.toString() + " must implement StudyOptionsListener");
+            throw new ClassCastException(context.toString() + " must implement StudyOptionsListener");
         }
     }
 
@@ -594,7 +595,7 @@ public class StudyOptionsFragment extends Fragment implements Toolbar.OnMenuItem
                         desc = getCol().getDecks().getActualDescription();
                     }
                     if (desc.length() > 0) {
-                        mTextDeckDescription.setText(Html.fromHtml(desc));
+                        mTextDeckDescription.setText(CompatHelper.getCompat().fromHtml(desc));
                         mTextDeckDescription.setVisibility(View.VISIBLE);
                     } else {
                         mTextDeckDescription.setVisibility(View.GONE);
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/UIUtils.java b/AnkiDroid/src/main/java/com/ichi2/anki/UIUtils.java
index 61e53f96d7..521ddaa894 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/UIUtils.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/UIUtils.java
@@ -27,8 +27,6 @@ public class UIUtils {
     /**
      * Show a simple Toast-like Snackbar with no actions.
      * To enable swipe-to-dismiss, the Activity layout should include a CoordinatorLayout with id "root_layout"
-     * @param mainTextResource
-     * @param shortLength
      */
     public static Snackbar showSimpleSnackbar(Activity activity, int mainTextResource, boolean shortLength) {
         View root = activity.findViewById(R.id.root_layout);
@@ -82,12 +80,12 @@ public class UIUtils {
             sb.setAction(actionTextResource, listener);
         }
         if (callback != null) {
-            sb.setCallback(callback);
+            sb.addCallback(callback);
         }
         // Make the text white to avoid interference from our theme colors.
         View view = sb.getView();
-        TextView tv = (TextView) view.findViewById(com.google.android.material.R.id.snackbar_text);
-        TextView action = (TextView) view.findViewById(com.google.android.material.R.id.snackbar_action);
+        TextView tv = view.findViewById(com.google.android.material.R.id.snackbar_text);
+        TextView action = view.findViewById(com.google.android.material.R.id.snackbar_action);
         if (tv != null && action != null) {
             tv.setTextColor(Color.WHITE);
             action.setTextColor(ContextCompat.getColor(activity, R.color.material_light_blue_500));
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java
index f338b35d3a..8fcf4a4858 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java
@@ -25,6 +25,7 @@ import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.Path;
 import android.graphics.PathMeasure;
+import android.graphics.Point;
 import android.graphics.PointF;
 import androidx.core.content.ContextCompat;
 import android.view.Display;
@@ -61,8 +62,8 @@ public class Whiteboard extends View {
 
     private boolean mSecondFingerWithinTapTolerance;
     private boolean mCurrentlyDrawing = false;
-    private boolean mInvertedColors = false;
-    private boolean mMonochrome = true;
+    private boolean mInvertedColors;
+    private boolean mMonochrome;
     private boolean mUndoModeActive = false;
 
 
@@ -345,14 +346,18 @@ public class Whiteboard extends View {
     private static int getDisplayHeight() {
         Display display = ((WindowManager) AnkiDroidApp.getInstance().getApplicationContext().
                 getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
-        return display.getHeight();
+        Point point = new Point();
+        display.getSize(point);
+        return point.y;
     }
 
 
     private static int getDisplayWidth() {
         Display display = ((WindowManager) AnkiDroidApp.getInstance().getApplicationContext().
                 getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
-        return display.getWidth();
+        Point point = new Point();
+        display.getSize(point);
+        return point.x;
     }
 
     /**
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/dialogs/CustomStudyDialog.java b/AnkiDroid/src/main/java/com/ichi2/anki/dialogs/CustomStudyDialog.java
index 14acb8270e..adba1cf693 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/dialogs/CustomStudyDialog.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/dialogs/CustomStudyDialog.java
@@ -500,7 +500,7 @@ public class CustomStudyDialog extends DialogFragment {
     private void onLimitsExtended(boolean jumpToReviewer) {
         AnkiActivity activity = (AnkiActivity) getActivity();
         if (jumpToReviewer) {
-            activity.startActivityForResult(new Intent(activity, Reviewer.class), AnkiActivity.REQUEST_REVIEW);
+            activity.startActivityForResultWithoutAnimation(new Intent(activity, Reviewer.class), AnkiActivity.REQUEST_REVIEW);
             CollectionHelper.getInstance().getCol(activity).startTimebox();
         } else {
             ((CustomStudyListener) activity).onExtendStudyLimits();
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/dialogs/TagsDialog.java b/AnkiDroid/src/main/java/com/ichi2/anki/dialogs/TagsDialog.java
index 6b9ffa6620..d1bc19dd1f 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/dialogs/TagsDialog.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/dialogs/TagsDialog.java
@@ -5,7 +5,6 @@ import android.content.res.Resources;
 import android.os.Bundle;
 import androidx.annotation.NonNull;
 import androidx.fragment.app.DialogFragment;
-import androidx.core.view.MenuItemCompat;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.appcompat.widget.SearchView;
@@ -39,7 +38,7 @@ public class TagsDialog extends DialogFragment {
         void onPositive(List<String> selectedTags, int option);
     }
 
-    public static final int TYPE_NONE = -1;
+    private static final int TYPE_NONE = -1;
     public static final int TYPE_ADD_TAG = 0;
     public static final int TYPE_FILTER_BY_TAG = 1;
     public static final int TYPE_CUSTOM_STUDY_TAGS = 2;
@@ -175,7 +174,7 @@ public class TagsDialog extends DialogFragment {
         MenuItem mToolbarAddItem = mToolbar.getMenu().findItem(R.id.tags_dialog_action_add);
         mToolbarAddItem.setOnMenuItemClickListener(menuItem -> {
             String query = mToolbarSearchView.getQuery().toString();
-            if (MenuItemCompat.isActionViewExpanded(mToolbarSearchItem) && !TextUtils.isEmpty(query)) {
+            if (mToolbarSearchItem.isActionViewExpanded() && !TextUtils.isEmpty(query)) {
                 addTag(query);
                 mToolbarSearchView.setQuery("", true);
             } else {
@@ -194,7 +193,7 @@ public class TagsDialog extends DialogFragment {
         });
 
         mToolbarSearchItem = mToolbar.getMenu().findItem(R.id.tags_dialog_action_filter);
-        mToolbarSearchView = (SearchView) MenuItemCompat.getActionView(mToolbarSearchItem);
+        mToolbarSearchView = (SearchView) mToolbarSearchItem.getActionView();
 
         EditText queryET = mToolbarSearchView.findViewById(R.id.search_src_text);
         queryET.setFilters(new InputFilter[]{addTagFilter});
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/LoadPronounciationActivity.java b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/LoadPronounciationActivity.java
index a989660105..35f43b29cc 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/LoadPronounciationActivity.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/LoadPronounciationActivity.java
@@ -20,7 +20,6 @@
 package com.ichi2.anki.multimediacard.activity;
 
 import android.app.Activity;
-import android.app.ProgressDialog;
 import android.content.DialogInterface;
 import android.content.DialogInterface.OnCancelListener;
 import android.content.Intent;
@@ -65,7 +64,8 @@ public class LoadPronounciationActivity extends Activity implements OnCancelList
 
     private String mTranslationAddress;
 
-    private ProgressDialog progressDialog = null;
+    @SuppressWarnings("deprecation") // tracked in github as #5020
+    private android.app.ProgressDialog progressDialog = null;
 
     private String mPronunciationAddress;
 
@@ -155,11 +155,12 @@ public class LoadPronounciationActivity extends Activity implements OnCancelList
     }
 
 
+    @SuppressWarnings("deprecation") // ProgressDialog change tracked in github as #5020
     private void showProgressDialog(String message) {
 
         dismissCarefullyProgressDialog();
 
-        progressDialog = ProgressDialog.show(this, gtxt(R.string.multimedia_editor_progress_wait_title), message, true,
+        progressDialog = android.app.ProgressDialog.show(this, gtxt(R.string.multimedia_editor_progress_wait_title), message, true,
                 false);
         progressDialog.setCancelable(true);
         progressDialog.setOnCancelListener(this);
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/MultimediaEditFieldActivity.java b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/MultimediaEditFieldActivity.java
index 053e08cba8..c25ab3a81e 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/MultimediaEditFieldActivity.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/MultimediaEditFieldActivity.java
@@ -101,7 +101,7 @@ public class MultimediaEditFieldActivity extends AnkiActivity
     private void finishCancel() {
         Intent resultData = new Intent();
         setResult(RESULT_CANCELED, resultData);
-        finish();
+        finishWithoutAnimation();
     }
 
 
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/TranslationActivity.java b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/TranslationActivity.java
index 6414f2bbc2..2e9ebe091d 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/TranslationActivity.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/activity/TranslationActivity.java
@@ -19,7 +19,6 @@
 
 package com.ichi2.anki.multimediacard.activity;
 
-import android.app.ProgressDialog;
 import android.content.DialogInterface;
 import android.content.DialogInterface.OnCancelListener;
 import android.content.Intent;
@@ -72,7 +71,8 @@ public class TranslationActivity extends FragmentActivity implements DialogInter
     private LanguagesListerGlosbe mLanguageLister;
     private Spinner mSpinnerFrom;
     private Spinner mSpinnerTo;
-    private ProgressDialog progressDialog = null;
+    @SuppressWarnings("deprecation") // tracked in github as #5020
+    private android.app.ProgressDialog progressDialog = null;
     private String mWebServiceAddress;
     private ArrayList<String> mPossibleTranslations;
     private String mLangCodeTo;
@@ -189,13 +189,14 @@ public class TranslationActivity extends FragmentActivity implements DialogInter
     }
 
 
+    @SuppressWarnings("deprecation") // ProgressDialog change tracked in github as #5020
     protected void translate() {
         if(!Connection.isOnline()) {
             showToast(gtxt(R.string.network_no_connection));
             return;
         }
 
-        progressDialog = ProgressDialog.show(this, getText(R.string.multimedia_editor_progress_wait_title),
+        progressDialog = android.app.ProgressDialog.show(this, getText(R.string.multimedia_editor_progress_wait_title),
                 getText(R.string.multimedia_editor_trans_translating_online), true, false);
 
         progressDialog.setCancelable(true);
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicAudioFieldController.java b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicAudioFieldController.java
index 06b1f26993..b1b2c4fb96 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicAudioFieldController.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicAudioFieldController.java
@@ -77,7 +77,7 @@ public class BasicAudioFieldController extends FieldControllerBase implements IF
             mField.setAudioPath(tempAudioPath);
             mField.setHasTemporaryMedia(true);
         });
-        layout.addView(mAudioView, LinearLayout.LayoutParams.FILL_PARENT);
+        layout.addView(mAudioView, LinearLayout.LayoutParams.MATCH_PARENT);
     }
 
 
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicImageFieldController.java b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicImageFieldController.java
index aebe79377c..902a400340 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicImageFieldController.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicImageFieldController.java
@@ -33,12 +33,14 @@ import androidx.core.content.ContextCompat;
 import androidx.core.content.FileProvider;
 import android.util.DisplayMetrics;
 import android.view.View;
+import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.LinearLayout.LayoutParams;
 
 import com.ichi2.anki.R;
+import com.ichi2.compat.CompatHelper;
 import com.ichi2.utils.BitmapUtil;
 import com.ichi2.utils.ExifUtil;
 
@@ -83,7 +85,7 @@ public class BasicImageFieldController extends FieldControllerBase implements IF
         int height = metrics.heightPixels;
         int width = metrics.widthPixels;
 
-        LinearLayout.LayoutParams p = new LayoutParams(android.view.ViewGroup.LayoutParams.FILL_PARENT,
+        LinearLayout.LayoutParams p = new LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,
                 android.view.ViewGroup.LayoutParams.WRAP_CONTENT);
         setPreviewImage(mField.getImagePath(), getMaxImageSize());
         mImagePreview.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
@@ -133,13 +135,13 @@ public class BasicImageFieldController extends FieldControllerBase implements IF
         // Some hardware has no camera or reports yes but has zero (e.g., cheap devices, and Chromebook emulator)
         if ((!context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_CAMERA) &&
                 !context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_CAMERA_FRONT)) ||
-                (android.hardware.Camera.getNumberOfCameras() < 1)) {
+                (CompatHelper.getCompat().getCameraCount() < 1)) {
             mBtnCamera.setVisibility(View.INVISIBLE);
         }
 
-        layout.addView(mImagePreview, android.view.ViewGroup.LayoutParams.FILL_PARENT, p);
-        layout.addView(mBtnGallery, android.view.ViewGroup.LayoutParams.FILL_PARENT);
-        layout.addView(mBtnCamera, android.view.ViewGroup.LayoutParams.FILL_PARENT);
+        layout.addView(mImagePreview, ViewGroup.LayoutParams.MATCH_PARENT, p);
+        layout.addView(mBtnGallery, ViewGroup.LayoutParams.MATCH_PARENT);
+        layout.addView(mBtnCamera, ViewGroup.LayoutParams.MATCH_PARENT);
     }
 
 
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicTextFieldController.java b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicTextFieldController.java
index 1bbda6f020..007190fe5e 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicTextFieldController.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicTextFieldController.java
@@ -67,13 +67,13 @@ public class BasicTextFieldController extends FieldControllerBase implements IFi
         mEditText = new EditText(mActivity);
         mEditText.setMinLines(3);
         mEditText.setText(mField.getText());
-        layout.addView(mEditText, LinearLayout.LayoutParams.FILL_PARENT);
+        layout.addView(mEditText, LayoutParams.MATCH_PARENT);
 
         LinearLayout layoutTools = new LinearLayout(mActivity);
         layoutTools.setOrientation(LinearLayout.HORIZONTAL);
         layout.addView(layoutTools);
 
-        LinearLayout.LayoutParams p = new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.FILL_PARENT, 1);
+        LinearLayout.LayoutParams p = new LinearLayout.LayoutParams(0, LayoutParams.MATCH_PARENT, 1);
 
         createCloneButton(layoutTools, p);
         createClearButton(layoutTools, p);
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/web/HttpFetcher.java b/AnkiDroid/src/main/java/com/ichi2/anki/web/HttpFetcher.java
index 520690430c..52c8e1e9b4 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/web/HttpFetcher.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/web/HttpFetcher.java
@@ -21,15 +21,6 @@ package com.ichi2.anki.web;
 
 import android.content.Context;
 
-import org.apache.http.HttpResponse;
-import org.apache.http.client.HttpClient;
-import org.apache.http.client.methods.HttpGet;
-import org.apache.http.impl.client.DefaultHttpClient;
-import org.apache.http.params.HttpConnectionParams;
-import org.apache.http.params.HttpParams;
-import org.apache.http.protocol.BasicHttpContext;
-import org.apache.http.protocol.HttpContext;
-
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileOutputStream;
@@ -40,10 +31,11 @@ import java.net.URL;
 import java.nio.charset.Charset;
 
 /**
- * Helper class to donwload from web.
+ * Helper class to download from web.
  * <p>
- * Used in AsyncTasks in Translation and Pronunication activities, and more...
+ * Used in AsyncTasks in Translation and Pronunciation activities, and more...
  */
+@SuppressWarnings("deprecation") // tracking HTTP transport change in github already
 public class HttpFetcher {
 
     public static String fetchThroughHttp(String address) {
@@ -54,13 +46,13 @@ public class HttpFetcher {
     public static String fetchThroughHttp(String address, String encoding) {
 
         try {
-            HttpClient httpClient = new DefaultHttpClient();
-			HttpParams params = httpClient.getParams();
-			HttpConnectionParams.setConnectionTimeout(params, 10000);
-			HttpConnectionParams.setSoTimeout(params, 60000);
-            HttpContext localContext = new BasicHttpContext();
-            HttpGet httpGet = new HttpGet(address);
-            HttpResponse response = httpClient.execute(httpGet, localContext);
+            org.apache.http.client.HttpClient httpClient = new org.apache.http.impl.client.DefaultHttpClient();
+            org.apache.http.params.HttpParams params = httpClient.getParams();
+            org.apache.http.params.HttpConnectionParams.setConnectionTimeout(params, 10000);
+            org.apache.http.params.HttpConnectionParams.setSoTimeout(params, 60000);
+            org.apache.http.protocol.HttpContext localContext = new org.apache.http.protocol.BasicHttpContext();
+            org.apache.http.client.methods.HttpGet httpGet = new org.apache.http.client.methods.HttpGet(address);
+            org.apache.http.HttpResponse response = httpClient.execute(httpGet, localContext);
             if (response.getStatusLine().getStatusCode() != 200) {
                 return "FAILED";
             }
diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/widgets/FabBehavior.java b/AnkiDroid/src/main/java/com/ichi2/anki/widgets/FabBehavior.java
index 6d7009def3..efee3bb715 100644
--- a/AnkiDroid/src/main/java/com/ichi2/anki/widgets/FabBehavior.java
+++ b/AnkiDroid/src/main/java/com/ichi2/anki/widgets/FabBehavior.java
@@ -51,7 +51,7 @@ public class FabBehavior extends CoordinatorLayout.Behavior<FloatingActionsMenu>
         for (int z = dependencies.size(); i < z; ++i) {
             View view = (View) dependencies.get(i);
             if (view instanceof Snackbar.SnackbarLayout && parent.doViewsOverlap(fab, view)) {
-                minOffset = Math.min(minOffset, ViewCompat.getTranslationY(view) - (float) view.getHeight());
+                minOffset = Math.min(minOffset, view.getTranslationY() - (float) view.getHeight());
             }
         }
 
@@ -69,7 +69,7 @@ public class FabBehavior extends CoordinatorLayout.Behavior<FloatingActionsMenu>
             float translationY = getFabTranslationYForSnackbar(parent, fab);
             if (translationY != this.mTranslationY) {
                 ViewCompat.animate(fab).cancel();
-                ViewCompat.setTranslationY(fab, translationY);
+                fab.setTranslationY(translationY);
                 this.mTranslationY = translationY;
             }
         }
diff --git a/AnkiDroid/src/main/java/com/ichi2/async/Connection.java b/AnkiDroid/src/main/java/com/ichi2/async/Connection.java
index bb2eeacd45..41c37b7de8 100644
--- a/AnkiDroid/src/main/java/com/ichi2/async/Connection.java
+++ b/AnkiDroid/src/main/java/com/ichi2/async/Connection.java
@@ -40,20 +40,17 @@ import com.ichi2.libanki.sync.RemoteMediaServer;
 import com.ichi2.libanki.sync.RemoteServer;
 import com.ichi2.libanki.sync.Syncer;
 
-import org.apache.http.HttpResponse;
-import org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;
 import org.json.JSONException;
 import org.json.JSONObject;
 
 import java.io.IOException;
-import java.lang.ref.WeakReference;
 
 import timber.log.Timber;
 
 public class Connection extends BaseAsyncTask<Connection.Payload, Object, Connection.Payload> {
 
-    public static final int TASK_TYPE_LOGIN = 0;
-    public static final int TASK_TYPE_SYNC = 1;
+    private static final int TASK_TYPE_LOGIN = 0;
+    private static final int TASK_TYPE_SYNC = 1;
     public static final int CONN_TIMEOUT = 30000;
 
 
@@ -202,11 +199,12 @@ public class Connection extends BaseAsyncTask<Connection.Payload, Object, Connec
     }
 
 
+    @SuppressWarnings("deprecation") // tracking HTTP transport change in github already
     private Payload doInBackgroundLogin(Payload data) {
         String username = (String) data.data[0];
         String password = (String) data.data[1];
         HttpSyncer server = new RemoteServer(this, null);
-        HttpResponse ret;
+        org.apache.http.HttpResponse ret;
         try {
             ret = server.hostKey(username, password);
         } catch (UnknownHttpResponseException e) {
@@ -317,8 +315,6 @@ public class Connection extends BaseAsyncTask<Connection.Payload, Object, Connec
                 if (retCode.equals("noChanges")) {
                     // publishProgress(R.string.sync_no_changes_message);
                     noChanges = true;
-                } else {
-                    // publishProgress(R.string.sync_database_acknowledge);
                 }
             } else {
                 try {
@@ -484,29 +480,29 @@ public class Connection extends BaseAsyncTask<Connection.Payload, Object, Connec
     public static boolean isOnline() {
         ConnectivityManager cm = (ConnectivityManager) AnkiDroidApp.getInstance().getApplicationContext()
                 .getSystemService(Context.CONNECTIVITY_SERVICE);
-        NetworkInfo netInfo = cm.getActiveNetworkInfo();
-        if (netInfo == null || !netInfo.isConnected() || !netInfo.isAvailable()) {
-            return false;
+        if (cm != null) {
+            NetworkInfo netInfo = cm.getActiveNetworkInfo();
+            return (netInfo != null) && netInfo.isConnected();
         }
-        return true;
+        return false;
     }
 
 
-    public static interface TaskListener {
-        public void onPreExecute();
+    public interface TaskListener {
+        void onPreExecute();
 
 
-        public void onProgressUpdate(Object... values);
+        void onProgressUpdate(Object... values);
 
 
-        public void onPostExecute(Payload data);
+        void onPostExecute(Payload data);
 
 
-        public void onDisconnected();
+        void onDisconnected();
     }
 
-    public static interface CancellableTaskListener extends TaskListener {
-        public void onCancelled();
+    public interface CancellableTaskListener extends TaskListener {
+        void onCancelled();
     }
 
     public static class Payload {
@@ -520,29 +516,10 @@ public class Connection extends BaseAsyncTask<Connection.Payload, Object, Connec
         public Collection col;
 
 
-        public Payload() {
-            data = null;
-            success = true;
-        }
-
-
         public Payload(Object[] data) {
             this.data = data;
             success = true;
         }
-
-
-        public Payload(int taskType, Object[] data) {
-            this.taskType = taskType;
-            this.data = data;
-            success = true;
-        }
-
-        public Payload(int taskType, Object[] data, String path) {
-            this.taskType = taskType;
-            this.data = data;
-            success = true;
-        }
     }
 
     public synchronized static void cancel() {
@@ -554,24 +531,4 @@ public class Connection extends BaseAsyncTask<Connection.Payload, Object, Connec
     public synchronized static boolean isCancellable() {
         return sIsCancellable;
     }
-
-    public class CancelCallback {
-        private WeakReference<ThreadSafeClientConnManager> mConnectionManager = null;
-
-
-        public void setConnectionManager(ThreadSafeClientConnManager connectionManager) {
-            mConnectionManager = new WeakReference<>(connectionManager);
-        }
-
-
-        public void cancelAllConnections() {
-            Timber.d("cancelAllConnections()");
-            if (mConnectionManager != null) {
-                ThreadSafeClientConnManager connectionManager = mConnectionManager.get();
-                if (connectionManager != null) {
-                    connectionManager.shutdown();
-                }
-            }
-        }
-    }
 }
diff --git a/AnkiDroid/src/main/java/com/ichi2/compat/Compat.java b/AnkiDroid/src/main/java/com/ichi2/compat/Compat.java
index 289581500f..be828611a6 100644
--- a/AnkiDroid/src/main/java/com/ichi2/compat/Compat.java
+++ b/AnkiDroid/src/main/java/com/ichi2/compat/Compat.java
@@ -18,10 +18,13 @@ package com.ichi2.compat;
 
 import android.content.Context;
 import android.net.Uri;
+import android.os.StatFs;
+import android.text.Spanned;
 import android.view.View;
 import android.view.Window;
 import android.webkit.WebSettings;
 import android.widget.RemoteViews;
+import android.widget.TimePicker;
 
 import com.ichi2.anki.AbstractFlashcardViewer;
 import com.ichi2.anki.AnkiActivity;
@@ -72,5 +75,13 @@ public interface Compat {
     boolean deleteDatabase(File db);
     Uri getExportUri(Context context, File file);
     void setupNotificationChannel(Context context, String id, String name);
+    Spanned fromHtml(String html);
+    long getAvailableBytes(StatFs stat);
+    long getTotalBytes(StatFs stat);
+    void setTime(TimePicker picker, int hour, int minute);
+    int getHour(TimePicker picker);
+    int getMinute(TimePicker picker);
+    int getCameraCount();
+    void vibrate(Context context, long durationMillis);
 }
 
diff --git a/AnkiDroid/src/main/java/com/ichi2/compat/CompatHelper.java b/AnkiDroid/src/main/java/com/ichi2/compat/CompatHelper.java
index 7feee8bcc2..55bdc24294 100644
--- a/AnkiDroid/src/main/java/com/ichi2/compat/CompatHelper.java
+++ b/AnkiDroid/src/main/java/com/ichi2/compat/CompatHelper.java
@@ -34,12 +34,16 @@ public class CompatHelper {
             mCompat = new CompatV15NookHdOrHdPlus();
         } else if (getSdkVersion() >= 26) {
             mCompat = new CompatV26();
+        } else if (getSdkVersion() >= 24) {
+            mCompat = new CompatV24();
         } else if (getSdkVersion() >= 23) {
             mCompat = new CompatV23();
         } else if (getSdkVersion() >= 21) {
             mCompat = new CompatV21();
         } else if (getSdkVersion() >= 19) {
             mCompat = new CompatV19();
+        } else if (getSdkVersion() >= 18) {
+            mCompat = new CompatV18();
         } else if (getSdkVersion() >= 17) {
             mCompat = new CompatV17();
         } else if (getSdkVersion() >= 16) {
@@ -82,21 +86,21 @@ public class CompatHelper {
     }
 
     private boolean isNookHdPlus() {
-        return android.os.Build.BRAND.equals("NOOK") && android.os.Build.PRODUCT.equals("HDplus")
+        return "NOOK".equals(Build.BRAND) && "HDplus".equals(Build.PRODUCT)
                 && android.os.Build.DEVICE.equals("ovation");
     }
 
     private boolean isNookHd () {
-        return android.os.Build.MODEL.equalsIgnoreCase("bntv400") && android.os.Build.BRAND.equals("NOOK");
+        return "bntv400".equalsIgnoreCase(Build.MODEL) && "NOOK".equals(Build.BRAND);
     }
 
     public static boolean isChromebook() {
-        return android.os.Build.BRAND.equalsIgnoreCase("chromium") || android.os.Build.MANUFACTURER.equalsIgnoreCase("chromium")
+        return "chromium".equalsIgnoreCase(Build.BRAND) || "chromium".equalsIgnoreCase(Build.MANUFACTURER)
                 || Build.DEVICE.equalsIgnoreCase("novato_cheets");
     }
 
     public static boolean isKindle() {
-        return Build.BRAND.equalsIgnoreCase("amazon") || Build.MANUFACTURER.equalsIgnoreCase("amazon");
+        return "amazon".equalsIgnoreCase(Build.BRAND) || "amazon".equalsIgnoreCase(Build.MANUFACTURER);
     }
 
     public static boolean hasKanaAndEmojiKeys() {
@@ -110,7 +114,7 @@ public class CompatHelper {
     public static void removeHiddenPreferences(Context context) {
         SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);
         if (getSdkVersion() >= 16) {
-            preferences.edit().remove("fixHebrewText").commit();
+            preferences.edit().remove("fixHebrewText").apply();
         }
     }
 }
diff --git a/AnkiDroid/src/main/java/com/ichi2/compat/CompatV15.java b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV15.java
index 662dc66e8f..c50afe4d78 100644
--- a/AnkiDroid/src/main/java/com/ichi2/compat/CompatV15.java
+++ b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV15.java
@@ -5,13 +5,18 @@ import android.content.Context;
 import android.content.res.TypedArray;
 import android.net.Uri;
 import androidx.core.content.ContextCompat;
+
+import android.os.StatFs;
+import android.os.Vibrator;
+import android.text.Html;
+import android.text.Spanned;
 import android.view.View;
 import android.view.Window;
 import android.view.WindowManager;
-import android.webkit.CookieSyncManager;
 import android.webkit.WebSettings;
 import android.widget.LinearLayout;
 import android.widget.RemoteViews;
+import android.widget.TimePicker;
 
 import com.ichi2.anki.AbstractFlashcardViewer;
 import com.ichi2.anki.AnkiActivity;
@@ -48,7 +53,7 @@ public class CompatV15 implements Compat {
     @Override
     @SuppressWarnings("deprecation")
     public void prepareWebViewCookies(Context context) {
-        CookieSyncManager.createInstance(context);
+        android.webkit.CookieSyncManager.createInstance(context);
     }
 
     // Cookie data may be lost when an application exists just after it was written.
@@ -57,7 +62,7 @@ public class CompatV15 implements Compat {
     @Override
     @SuppressWarnings("deprecation")
     public void flushWebViewCookies() {
-        CookieSyncManager.getInstance().sync();
+        android.webkit.CookieSyncManager.getInstance().sync();
     }
 
     // Below API level 17, there is no simple way to enable the auto play feature of HTML media elements.
@@ -116,4 +121,48 @@ public class CompatV15 implements Compat {
 
     @Override
     public void setupNotificationChannel(Context context, String id, String name) { /* pre-API26, do nothing */ }
+
+    // Until API 24 we ignore flags
+    @Override
+    @SuppressWarnings("deprecation")
+    public Spanned fromHtml(String htmlString) {
+        return Html.fromHtml(htmlString);
+    }
+
+    // Until API 18 it's not a long it's an int
+    @Override
+    @SuppressWarnings("deprecation")
+    public long getAvailableBytes(StatFs stat) { return stat.getAvailableBlocks() * stat.getBlockSize(); }
+    @Override
+    @SuppressWarnings("deprecation")
+    public long getTotalBytes(StatFs stat) { return stat.getBlockCount() * stat.getBlockSize(); }
+
+    // Until API 23 the methods have "current" in the name
+    @Override
+    @SuppressWarnings("deprecation")
+    public void setTime(TimePicker picker, int hour, int minute) {
+        picker.setCurrentHour(hour);
+        picker.setCurrentMinute(minute);
+    }
+    @Override
+    @SuppressWarnings("deprecation")
+    public int getHour(TimePicker picker) { return picker.getCurrentHour(); }
+    @Override
+    @SuppressWarnings("deprecation")
+    public int getMinute(TimePicker picker) { return picker.getCurrentMinute(); }
+
+    // Until API 21 it's Camera v1
+    @Override
+    @SuppressWarnings("deprecation")
+    public int getCameraCount() { return android.hardware.Camera.getNumberOfCameras(); }
+
+    // Until API 26 just specify time, after that specify effect also
+    @Override
+    @SuppressWarnings("deprecation")
+    public void vibrate(Context context, long durationMillis) {
+        Vibrator vibratorManager = (Vibrator)context.getSystemService(Context.VIBRATOR_SERVICE);
+        if (vibratorManager != null) {
+            vibratorManager.vibrate(durationMillis);
+        }
+    }
 }
diff --git a/AnkiDroid/src/main/java/com/ichi2/compat/CompatV18.java b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV18.java
new file mode 100644
index 0000000000..c4d0727d76
--- /dev/null
+++ b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV18.java
@@ -0,0 +1,13 @@
+package com.ichi2.compat;
+
+import android.annotation.TargetApi;
+import android.os.StatFs;
+
+@TargetApi(18)
+public class CompatV18 extends CompatV17 implements Compat {
+
+    @Override
+    public long getAvailableBytes(StatFs stat) { return stat.getAvailableBytes(); }
+    @Override
+    public long getTotalBytes(StatFs stat) { return stat.getTotalBytes(); }
+}
diff --git a/AnkiDroid/src/main/java/com/ichi2/compat/CompatV19.java b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV19.java
index 4ba32d2c01..b638632d9c 100644
--- a/AnkiDroid/src/main/java/com/ichi2/compat/CompatV19.java
+++ b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV19.java
@@ -18,7 +18,7 @@ import com.ichi2.themes.Themes;
 
 /** Implementation of {@link Compat} for SDK level 19 */
 @TargetApi(19)
-public class CompatV19 extends CompatV17 implements Compat {
+public class CompatV19 extends CompatV18 implements Compat {
     private static final int ANIMATION_DURATION = 200;
     private static final float TRANSPARENCY = 0.90f;
 
diff --git a/AnkiDroid/src/main/java/com/ichi2/compat/CompatV21.java b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV21.java
index fd882bdabd..1c62f17f14 100644
--- a/AnkiDroid/src/main/java/com/ichi2/compat/CompatV21.java
+++ b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV21.java
@@ -4,10 +4,16 @@ package com.ichi2.compat;
 import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.TypedArray;
+import android.hardware.camera2.CameraAccessException;
+import android.hardware.camera2.CameraManager;
 import android.view.View;
 import android.view.Window;
 import android.webkit.CookieManager;
 
+import com.ichi2.anki.AnkiDroidApp;
+
+import timber.log.Timber;
+
 /** Implementation of {@link Compat} for SDK level 21 */
 @TargetApi(21)
 public class CompatV21 extends CompatV19 implements Compat {
@@ -36,4 +42,18 @@ public class CompatV21 extends CompatV19 implements Compat {
     public void setStatusBarColor(Window window, int color) {
         window.setStatusBarColor(color);
     }
+
+    @Override
+    public int getCameraCount() {
+        CameraManager cameraManager = (CameraManager)AnkiDroidApp.getInstance().getApplicationContext()
+                .getSystemService(Context.CAMERA_SERVICE);
+        try {
+            if (cameraManager != null) {
+                return cameraManager.getCameraIdList().length;
+            }
+        } catch (CameraAccessException e) {
+            Timber.e(e, "Unable to enumerate cameras");
+        }
+        return 0;
+    }
 }
\ No newline at end of file
diff --git a/AnkiDroid/src/main/java/com/ichi2/compat/CompatV23.java b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV23.java
index c94a9699e1..091318251a 100644
--- a/AnkiDroid/src/main/java/com/ichi2/compat/CompatV23.java
+++ b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV23.java
@@ -1,13 +1,22 @@
 package com.ichi2.compat;
 
 import android.annotation.TargetApi;
-import android.content.Intent;
+import android.widget.TimePicker;
 
 /** Implementation of {@link Compat} for SDK level 23 */
 @TargetApi(23)
 public class CompatV23 extends CompatV21 implements Compat {
 
-    public static final String ACTION_PROCESS_TEXT = Intent.ACTION_PROCESS_TEXT;
-    public static final String EXTRA_PROCESS_TEXT = Intent.EXTRA_PROCESS_TEXT;
+    @Override
+    public void setTime(TimePicker picker, int hour, int minute) {
+        picker.setHour(hour);
+        picker.setMinute(minute);
+    }
+
+    @Override
+    public int getHour(TimePicker picker) { return picker.getHour(); }
+
+    @Override
+    public int getMinute(TimePicker picker) { return picker.getMinute(); }
 
 }
diff --git a/AnkiDroid/src/main/java/com/ichi2/compat/CompatV24.java b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV24.java
new file mode 100644
index 0000000000..bbbb807132
--- /dev/null
+++ b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV24.java
@@ -0,0 +1,13 @@
+package com.ichi2.compat;
+
+import android.annotation.TargetApi;
+import android.text.Html;
+import android.text.Spanned;
+
+@TargetApi(24)
+public class CompatV24 extends CompatV23 implements Compat {
+
+    public Spanned fromHtml(String htmlString) {
+        return Html.fromHtml(htmlString, Html.FROM_HTML_MODE_LEGACY);
+    }
+}
diff --git a/AnkiDroid/src/main/java/com/ichi2/compat/CompatV26.java b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV26.java
index 597da1027e..86c621d38a 100644
--- a/AnkiDroid/src/main/java/com/ichi2/compat/CompatV26.java
+++ b/AnkiDroid/src/main/java/com/ichi2/compat/CompatV26.java
@@ -4,13 +4,16 @@ import android.annotation.TargetApi;
 import android.app.NotificationChannel;
 import android.app.NotificationManager;
 import android.content.Context;
+import android.os.VibrationEffect;
+import android.os.Vibrator;
+
 import androidx.core.app.NotificationCompat;
 
 import timber.log.Timber;
 
 /** Implementation of {@link Compat} for SDK level 26 */
 @TargetApi(26)
-public class CompatV26 extends CompatV23 implements Compat {
+public class CompatV26 extends CompatV24 implements Compat {
 
     /**
      * In Oreo and higher, you must create a channel for all notifications.
@@ -32,4 +35,13 @@ public class CompatV26 extends CompatV23 implements Compat {
         notificationChannel.setLockscreenVisibility(NotificationCompat.VISIBILITY_PUBLIC);
         manager.createNotificationChannel(notificationChannel);
     }
+
+    @Override
+    public void vibrate(Context context, long durationMillis) {
+        Vibrator vibratorManager = (Vibrator)context.getSystemService(Context.VIBRATOR_SERVICE);
+        if (vibratorManager != null) {
+            VibrationEffect effect = VibrationEffect.createOneShot(durationMillis, VibrationEffect.DEFAULT_AMPLITUDE);
+            vibratorManager.vibrate(effect);
+        }
+    }
 }
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Sound.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Sound.java
index 16a41acadd..9dc8e114d3 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Sound.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Sound.java
@@ -17,9 +17,9 @@
 
 package com.ichi2.libanki;
 
-import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Context;
+import android.graphics.Point;
 import android.media.AudioManager;
 import android.media.MediaPlayer;
 import android.media.MediaMetadataRetriever;
@@ -43,7 +43,6 @@ import java.lang.ref.WeakReference;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashMap;
-import java.util.Map;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
@@ -105,9 +104,7 @@ public class Sound {
     /**
      * Listener to handle audio focus. Currently blank because we're not respecting losing focus from other apps.
      */
-    private static AudioManager.OnAudioFocusChangeListener afChangeListener = new AudioManager.OnAudioFocusChangeListener() {
-        public void onAudioFocusChange(int focusChange) {
-        }
+    private static AudioManager.OnAudioFocusChangeListener afChangeListener = focusChange -> {
     };
 
 
@@ -116,14 +113,6 @@ public class Sound {
         mSoundPaths.clear();
     }
 
-    /**
-     * resetSounds removes lists of sounds
-     * @param which -- One of the subset flags, such as Sound.SOUNDS_QUESTION
-     */
-    public void resetSounds(int which) {
-        mSoundPaths.remove(which);
-    }
-
 
     /**
      * The function addSounds() parses content for sound files, and stores entries to the filepaths for them,
@@ -140,7 +129,7 @@ public class Sound {
         while (matcher.find()) {
             // Create appropriate list if needed; list must not be empty so long as code does no check
             if (!mSoundPaths.containsKey(qa)) {
-                mSoundPaths.put(qa, new ArrayList<String>());
+                mSoundPaths.put(qa, new ArrayList<>());
             }
 
             // Get the sound file name
@@ -157,7 +146,7 @@ public class Sound {
      * together, which even when configured as supported may not be instigated
      * @return True if a non-null list was created, or false otherwise
      */
-    public Boolean makeQuestionAnswerList() {
+    private Boolean makeQuestionAnswerList() {
         // if combined list already exists, don't recreate
         if (mSoundPaths.containsKey(Sound.SOUNDS_QUESTION_AND_ANSWER)) {
             return false; // combined list already exists
@@ -166,7 +155,7 @@ public class Sound {
         // make combined list only if necessary to avoid an empty combined list
         if (mSoundPaths.containsKey(Sound.SOUNDS_QUESTION) || mSoundPaths.containsKey(Sound.SOUNDS_ANSWER)) {
             // some list exists to place into combined list
-            mSoundPaths.put(Sound.SOUNDS_QUESTION_AND_ANSWER, new ArrayList<String>());
+            mSoundPaths.put(Sound.SOUNDS_QUESTION_AND_ANSWER, new ArrayList<>());
         } else { // no need to make list
             return false;
         }
@@ -219,9 +208,9 @@ public class Sound {
             int markerStart = contentLeft.indexOf(soundMarker);
             stringBuilder.append(contentLeft.substring(0, markerStart));
             // The <span> around the button (SVG or PNG image) is needed to make the vertical alignment work.
-            stringBuilder.append("<a class='replaybutton' href=\"playsound:" + soundPath + "\">"
-                    + "<span>"+ button
-                    + "</span></a>");
+            stringBuilder.append("<a class='replaybutton' href=\"playsound:").append(soundPath).append("\">")
+                    .append("<span>").append(button)
+                    .append("</span></a>");
             contentLeft = contentLeft.substring(markerStart + soundMarker.length());
             Timber.d("Content left = %s", contentLeft);
         }
@@ -273,8 +262,6 @@ public class Sound {
 
     /**
      * Plays the given sound or video and sets playAllListener if available on media player to start next media
-     * @param soundPath
-     * @param playAllListener
      */
     public void playSound(String soundPath, OnCompletionListener playAllListener) {
         playSound(soundPath, playAllListener, null);
@@ -283,11 +270,8 @@ public class Sound {
     /**
      * Plays the given sound or video and sets playAllListener if available on media player to start next media.
      * If videoView is null and the media is a video, then a request is sent to start the VideoPlayer Activity
-     * @param soundPath
-     * @param playAllListener
-     * @param videoView
      */
-    @SuppressLint("NewApi")
+    @SuppressWarnings("deprecation") // audio API deprecation tracked on github as #5022
     public void playSound(String soundPath, OnCompletionListener playAllListener, final VideoView videoView) {
         Timber.d("Playing %s has listener? %b", soundPath, playAllListener != null);
         Uri soundUri = Uri.parse(soundPath);
@@ -302,7 +286,7 @@ public class Sound {
             boolean isVideo = Arrays.asList(VIDEO_WHITELIST).contains(extension);
             if (!isVideo) {
                 final String guessedType = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension);
-                isVideo = isVideo || (guessedType != null && guessedType.startsWith("video/"));
+                isVideo = (guessedType != null) && guessedType.startsWith("video/");
             }
             // Also check that there is a video thumbnail, as some formats like mp4 can be audio only
             isVideo = isVideo &&
@@ -329,22 +313,12 @@ public class Sound {
                 // Provide a VideoView to the MediaPlayer if valid video file
                 if (isVideo && videoView != null) {
                     mMediaPlayer.setDisplay(videoView.getHolder());
-                    mMediaPlayer.setOnVideoSizeChangedListener(new MediaPlayer.OnVideoSizeChangedListener() {
-                        @Override
-                        public void onVideoSizeChanged(MediaPlayer mp, int width, int height) {
-                            configureVideo(videoView, width, height);
-                        }
-                    });
+                    mMediaPlayer.setOnVideoSizeChangedListener((mp, width, height) -> configureVideo(videoView, width, height));
                 }
                 // Setup the MediaPlayer
                 mMediaPlayer.setDataSource(AnkiDroidApp.getInstance().getApplicationContext(), soundUri);
                 mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
-                mMediaPlayer.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
-                    @Override
-                    public void onPrepared(MediaPlayer mp) {
-                        mMediaPlayer.start();
-                    }
-                });
+                mMediaPlayer.setOnPreparedListener(mp -> mMediaPlayer.start());
                 if (playAllListener != null) {
                     mMediaPlayer.setOnCompletionListener(playAllListener);
                 }
@@ -365,8 +339,10 @@ public class Sound {
         Display display = wm.getDefaultDisplay();
         // adjust the size of the video so it fits on the screen
         float videoProportion = (float) videoWidth / (float) videoHeight;
-        int screenWidth = display.getWidth();
-        int screenHeight = display.getHeight();
+        Point point = new Point();
+        display.getSize(point);
+        int screenWidth = point.x;
+        int screenHeight = point.y;
         float screenProportion = (float) screenWidth / (float) screenHeight;
         android.view.ViewGroup.LayoutParams lp = videoView.getLayoutParams();
 
@@ -421,6 +397,7 @@ public class Sound {
     /**
      * Releases the sound.
      */
+    @SuppressWarnings("deprecation") // Tracked on github as #5022
     private void releaseSound() {
         if (mMediaPlayer != null) {
             mMediaPlayer.release();
@@ -466,7 +443,6 @@ public class Sound {
 
     /**
      * Set the context for the calling activity (necessary for playing videos)
-     * @param activityRef
      */
     public void setContext(WeakReference<Activity> activityRef) {
         mCallingActivity = activityRef;
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java
index 4dce9a41fe..73c860d925 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java
@@ -27,12 +27,11 @@ import android.content.pm.ResolveInfo;
 import android.content.res.Resources;
 import android.net.Uri;
 import androidx.annotation.NonNull;
-import android.text.Html;
 
 import com.ichi2.anki.AnkiFont;
 import com.ichi2.anki.CollectionHelper;
 import com.ichi2.anki.R;
-import com.ichi2.utils.LanguageUtil;
+import com.ichi2.compat.CompatHelper;
 
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -41,9 +40,7 @@ import org.json.JSONObject;
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
 import java.io.BufferedReader;
-import java.io.ByteArrayOutputStream;
 import java.io.File;
-import java.io.FileFilter;
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
@@ -58,7 +55,6 @@ import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 import java.sql.Date;
 import java.text.Normalizer;
-import java.text.NumberFormat;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -73,7 +69,6 @@ import java.util.Random;
 import java.util.TimeZone;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
-import java.util.zip.Deflater;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 
@@ -85,8 +80,6 @@ public class Utils {
 
     public static final int CHUNK_SIZE = 32768;
 
-    private static NumberFormat mCurrentPercentageFormat;
-
     // These are doubles on purpose because we want a rounded, not integer result later.
     private static final double TIME_MINUTE = 60.0;  // seconds
     private static final double TIME_HOUR = 60 * TIME_MINUTE;
@@ -114,7 +107,7 @@ public class Utils {
     private static final String ALL_CHARACTERS = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
     private static final String BASE91_EXTRA_CHARS = "!#$%&()*+,-./:;<=>?@[]^_`{|}~";
 
-    public static final int FILE_COPY_BUFFER_SIZE = 2048;
+    private static final int FILE_COPY_BUFFER_SIZE = 2048;
 
     /**The time in integer seconds. Pass scale=1000 to get milliseconds. */
     public static double now() {
@@ -212,21 +205,6 @@ public class Utils {
      * ***********************************************************************************************
      */
 
-    /**
-     * @return double with percentage sign
-     */
-    public static String fmtPercentage(Double value) {
-    return fmtPercentage(value, 0);
-    }
-    public static String fmtPercentage(Double value, int point) {
-        // only retrieve the percentage format the first time
-        if (mCurrentPercentageFormat == null) {
-            mCurrentPercentageFormat = NumberFormat.getPercentInstance(LanguageUtil.getLocale());
-        }
-        return mCurrentPercentageFormat.format(value);
-    }
-
-    // Removed fmtDouble(). Was used only by other functions here. We now use getString() with localized formatting now.
 
     /**
      * HTML
@@ -273,7 +251,7 @@ public class Utils {
         Matcher htmlEntities = htmlEntitiesPattern.matcher(html);
         StringBuffer sb = new StringBuffer();
         while (htmlEntities.find()) {
-            htmlEntities.appendReplacement(sb, Html.fromHtml(htmlEntities.group()).toString());
+            htmlEntities.appendReplacement(sb, CompatHelper.getCompat().fromHtml(htmlEntities.group()).toString());
         }
         htmlEntities.appendTail(sb);
         return sb.toString();
@@ -398,7 +376,7 @@ public class Utils {
 
 
     // used in ankiweb
-    public static String base62(int num, String extra) {
+    private static String base62(int num, String extra) {
         String table = ALL_CHARACTERS + extra;
         int len = table.length();
         String buf = "";
@@ -412,7 +390,7 @@ public class Utils {
     }
 
     // all printable characters minus quotes, backslash and separators
-    public static String base91(int num) {
+    private static String base91(int num) {
         return base62(num, BASE91_EXTRA_CHARS);
     }
 
@@ -498,7 +476,7 @@ public class Utils {
     public static String checksum(String data) {
         String result = "";
         if (data != null) {
-            MessageDigest md = null;
+            MessageDigest md;
             byte[] digest = null;
             try {
                 md = MessageDigest.getInstance("SHA1");
@@ -575,11 +553,6 @@ public class Utils {
         return fileChecksum(file.getAbsolutePath());
     }
 
-    /** Replace HTML line break tags with new lines. */
-    public static String replaceLineBreak(String text) {
-        return text.replaceAll("<br(\\s*\\/*)>", "\n");
-    }
-
 
     /**
      *  Tempo files
@@ -673,35 +646,6 @@ public class Utils {
         return file.getCanonicalPath().startsWith(dir.getCanonicalPath());
     }
 
-    /**
-     * Compress data.
-     * @param bytesToCompress is the byte array to compress.
-     * @return a compressed byte array.
-     * @throws java.io.IOException
-     */
-    public static byte[] compress(byte[] bytesToCompress, int comp) throws IOException {
-        // Compressor with highest level of compression.
-        Deflater compressor = new Deflater(comp, true);
-        // Give the compressor the data to compress.
-        compressor.setInput(bytesToCompress);
-        compressor.finish();
-
-        // Create an expandable byte array to hold the compressed data.
-        // It is not necessary that the compressed data will be smaller than
-        // the uncompressed data.
-        ByteArrayOutputStream bos = new ByteArrayOutputStream(bytesToCompress.length);
-
-        // Compress the data
-        byte[] buf = new byte[65536];
-        while (!compressor.finished()) {
-            bos.write(buf, 0, compressor.deflate(buf));
-        }
-
-        bos.close();
-
-        // Get the compressed data
-        return bos.toByteArray();
-    }
 
     /**
      * Calls {@link #writeToFileImpl(InputStream, String)} and handles IOExceptions
@@ -734,9 +678,8 @@ public class Utils {
     /**
      * Utility method to write to a file.
      * Throws the exception, so we can report it in syncing log
-     * @throws IOException
      */
-    public static void writeToFileImpl(InputStream source, String destination) throws IOException {
+    private static void writeToFileImpl(InputStream source, String destination) throws IOException {
         File f = new File(destination);
         try {
             Timber.d("Creating new file... = %s", destination);
@@ -793,18 +736,6 @@ public class Utils {
     }
 
 
-    public static void printDate(String name, double date) {
-        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH-mm-ss");
-        df.setTimeZone(TimeZone.getTimeZone("GMT"));
-        Calendar cal = new GregorianCalendar(TimeZone.getTimeZone("GMT"));
-        cal.setTimeInMillis((long)date * 1000);
-        Timber.d("Value of %s: %s", name, cal.getTime().toGMTString());
-    }
-
-
-    // Use DateUtil.formatElapsedTime((long) value) instead of doubleToTime.
-    // public static String doubleToTime(double value) { ...}
-
     /**
      * Indicates whether the specified action can be used as an intent. This method queries the package manager for
      * installed packages that can respond to an intent with the specified action. If no suitable package is found, this
@@ -848,16 +779,6 @@ public class Utils {
      * @param array The input with type Long[]
      * @return The output with type long[]
      */
-    public static long[] toPrimitive(Long[] array) {
-        if (array == null) {
-            return null;
-        }
-        long[] results = new long[array.length];
-        for (int i = 0; i < array.length; i++) {
-            results[i] = array[i];
-        }
-        return results;
-    }
     public static long[] toPrimitive(Collection<Long> array) {
         if (array == null) {
             return null;
@@ -919,7 +840,7 @@ public class Utils {
             String filePath = fontsList[i].getAbsolutePath();
             String filePathExtension = splitFilename(filePath)[1];
             for (String fontExtension : FONT_FILE_EXTENSIONS) {
-                // Go through the list of allowed extensios.
+                // Go through the list of allowed extensions.
                 if (filePathExtension.equalsIgnoreCase(fontExtension)) {
                     // This looks like a font file.
                     AnkiFont font = AnkiFont.createAnkiFont(context, filePath, false);
@@ -951,12 +872,7 @@ public class Utils {
         int deckCount = 0;
         File[] deckList = null;
         if (dir.exists() && dir.isDirectory()) {
-            deckList = dir.listFiles(new FileFilter(){
-                @Override
-                public boolean accept(File pathname) {
-                    return pathname.isFile() && pathname.getName().endsWith(".apkg");
-                }
-            });
+            deckList = dir.listFiles(pathname -> pathname.isFile() && pathname.getName().endsWith(".apkg"));
             deckCount = deckList.length;
         }
         List<File> decks = new ArrayList<>();
@@ -1057,7 +973,7 @@ public class Utils {
      * @return the unescaped text
      */
     public static String unescape(String htmlText) {
-        return Html.fromHtml(htmlText).toString();
+        return CompatHelper.getCompat().fromHtml(htmlText).toString();
     }
 
 
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/hooks/ExternalHookLoader.java b/AnkiDroid/src/main/java/com/ichi2/libanki/hooks/ExternalHookLoader.java
index 9d6f69fedf..d6e5b4265c 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/hooks/ExternalHookLoader.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/hooks/ExternalHookLoader.java
@@ -7,7 +7,6 @@ import java.io.FileInputStream;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStream;
-import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Context;
 import android.os.AsyncTask;
@@ -40,7 +39,6 @@ public class ExternalHookLoader {
      * @param String dexFilename : name of the package file in hooks folder -- e.g. "ChessFilter.jar"
      * @param String className: full name of class to load from package -- e.g. "com.testplugin.ChessFilter"
      */
-    @SuppressLint("NewApi")
 	public HookPlugin importExternalHook(String dexFilename, String className) {
         // filename of the hook which is currently being loaded
         final File dexExternalStoragePath = new File(mHookFolderPath, dexFilename);
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/FullSyncer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/FullSyncer.java
index f8d04070b2..1dd0a3befe 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/FullSyncer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/FullSyncer.java
@@ -31,8 +31,6 @@ import com.ichi2.libanki.DB;
 import com.ichi2.libanki.Utils;
 import com.ichi2.utils.VersionUtils;
 
-import org.apache.http.HttpResponse;
-
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
@@ -74,10 +72,11 @@ public class FullSyncer extends HttpSyncer {
 
 
     @Override
+    @SuppressWarnings("deprecation") // tracking HTTP transport change in github already
     public Object[] download() throws UnknownHttpResponseException {
         InputStream cont;
         try {
-            HttpResponse ret = super.req("download");
+            org.apache.http.HttpResponse ret = super.req("download");
             if (ret == null) {
                 return null;
             }
@@ -141,6 +140,7 @@ public class FullSyncer extends HttpSyncer {
 
 
     @Override
+    @SuppressWarnings("deprecation") // tracking HTTP transport change in github already
     public Object[] upload() throws UnknownHttpResponseException {
         // make sure it's ok before we try to upload
         mCon.publishProgress(R.string.sync_check_upload_file);
@@ -153,7 +153,7 @@ public class FullSyncer extends HttpSyncer {
         // apply some adjustments, then upload
         mCol.beforeUpload();
         String filePath = mCol.getPath();
-        HttpResponse ret;
+        org.apache.http.HttpResponse ret;
         mCon.publishProgress(R.string.sync_uploading_message);
         try {
             ret = super.req("upload", new FileInputStream(filePath));
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/HttpSyncer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/HttpSyncer.java
index 4bf9e64caa..315a8630da 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/HttpSyncer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/HttpSyncer.java
@@ -31,24 +31,6 @@ import com.ichi2.libanki.Utils;
 import com.ichi2.utils.VersionUtils;
 
 import org.apache.commons.httpclient.contrib.ssl.EasySSLSocketFactory;
-import org.apache.http.HttpEntity;
-import org.apache.http.HttpResponse;
-import org.apache.http.HttpVersion;
-import org.apache.http.client.HttpClient;
-import org.apache.http.client.methods.HttpPost;
-import org.apache.http.conn.params.ConnManagerPNames;
-import org.apache.http.conn.params.ConnPerRouteBean;
-import org.apache.http.conn.scheme.PlainSocketFactory;
-import org.apache.http.conn.scheme.Scheme;
-import org.apache.http.conn.scheme.SchemeRegistry;
-import org.apache.http.entity.AbstractHttpEntity;
-import org.apache.http.impl.client.DefaultHttpClient;
-import org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;
-import org.apache.http.params.BasicHttpParams;
-import org.apache.http.params.CoreProtocolPNames;
-import org.apache.http.params.HttpConnectionParams;
-import org.apache.http.params.HttpParams;
-import org.apache.http.params.HttpProtocolParams;
 import org.json.JSONException;
 import org.json.JSONObject;
 
@@ -83,6 +65,7 @@ import timber.log.Timber;
  * - 502: ankiweb down
  * - 503/504: server too busy
  */
+@SuppressWarnings("deprecation") // tracking HTTP transport change in github already
 public class HttpSyncer {
 
     private static final String BOUNDARY = "Anki-sync-boundary";
@@ -111,7 +94,7 @@ public class HttpSyncer {
     }
 
 
-    public void assertOk(HttpResponse resp) throws UnknownHttpResponseException {
+    public void assertOk(org.apache.http.HttpResponse resp) throws UnknownHttpResponseException {
         // Throw RuntimeException if HTTP error
         if (resp == null) {
             throw new UnknownHttpResponseException("Null HttpResponse", -2);
@@ -124,33 +107,27 @@ public class HttpSyncer {
     }
 
 
-    public HttpResponse req(String method) throws UnknownHttpResponseException {
+    public org.apache.http.HttpResponse req(String method) throws UnknownHttpResponseException {
         return req(method, null);
     }
 
 
-    public HttpResponse req(String method, InputStream fobj) throws UnknownHttpResponseException {
+    public org.apache.http.HttpResponse req(String method, InputStream fobj) throws UnknownHttpResponseException {
         return req(method, fobj, 6);
     }
 
 
-    public HttpResponse req(String method, int comp, InputStream fobj) throws UnknownHttpResponseException {
+    public org.apache.http.HttpResponse req(String method, int comp, InputStream fobj) throws UnknownHttpResponseException {
         return req(method, fobj, comp);
     }
 
 
-    public HttpResponse req(String method, InputStream fobj, int comp) throws UnknownHttpResponseException {
+    public org.apache.http.HttpResponse req(String method, InputStream fobj, int comp) throws UnknownHttpResponseException {
         return req(method, fobj, comp, null);
     }
 
 
-    public HttpResponse req(String method, InputStream fobj, int comp, JSONObject registerData) throws UnknownHttpResponseException {
-        return req(method, fobj, comp, registerData, null) ;
-    }
-
-
-    public HttpResponse req(String method, InputStream fobj, int comp, JSONObject registerData,
-            Connection.CancelCallback cancelCallback) throws UnknownHttpResponseException {
+    private org.apache.http.HttpResponse req(String method, InputStream fobj, int comp, JSONObject registerData) throws UnknownHttpResponseException {
         File tmpFileBuffer = null;
         try {
             String bdry = "--" + BOUNDARY;
@@ -206,34 +183,31 @@ public class HttpSyncer {
             } else {
                 url = syncURL() + method;
             }
-            HttpPost httpPost = new HttpPost(url);
-            HttpEntity entity = new ProgressByteEntity(tmpFileBuffer);
+            org.apache.http.client.methods.HttpPost httpPost = new org.apache.http.client.methods.HttpPost(url);
+            org.apache.http.HttpEntity entity = new ProgressByteEntity(tmpFileBuffer);
 
             // body
             httpPost.setEntity(entity);
             httpPost.setHeader("Content-type", "multipart/form-data; boundary=" + BOUNDARY);
 
             // HttpParams
-            HttpParams params = new BasicHttpParams();
-            params.setParameter(ConnManagerPNames.MAX_TOTAL_CONNECTIONS, 30);
-            params.setParameter(ConnManagerPNames.MAX_CONNECTIONS_PER_ROUTE, new ConnPerRouteBean(30));
-            params.setParameter(CoreProtocolPNames.USE_EXPECT_CONTINUE, false);
-            params.setParameter(CoreProtocolPNames.USER_AGENT, "AnkiDroid-" + VersionUtils.getPkgVersionName());
-            HttpProtocolParams.setVersion(params, HttpVersion.HTTP_1_1);
-            HttpConnectionParams.setSoTimeout(params, Connection.CONN_TIMEOUT);
+            org.apache.http.params.HttpParams params = new org.apache.http.params.BasicHttpParams();
+            params.setParameter(org.apache.http.conn.params.ConnManagerPNames.MAX_TOTAL_CONNECTIONS, 30);
+            params.setParameter(org.apache.http.conn.params.ConnManagerPNames.MAX_CONNECTIONS_PER_ROUTE, new org.apache.http.conn.params.ConnPerRouteBean(30));
+            params.setParameter(org.apache.http.params.CoreProtocolPNames.USE_EXPECT_CONTINUE, false);
+            params.setParameter(org.apache.http.params.CoreProtocolPNames.USER_AGENT, "AnkiDroid-" + VersionUtils.getPkgVersionName());
+            org.apache.http.params.HttpProtocolParams.setVersion(params, org.apache.http.HttpVersion.HTTP_1_1);
+            org.apache.http.params.HttpConnectionParams.setSoTimeout(params, Connection.CONN_TIMEOUT);
 
             // Registry
-            SchemeRegistry registry = new SchemeRegistry();
-            registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
-            registry.register(new Scheme("https", new EasySSLSocketFactory(), 443));
-            ThreadSafeClientConnManager cm = new ThreadSafeClientConnManager(params, registry);
-            if (cancelCallback != null) {
-                cancelCallback.setConnectionManager(cm);
-            }
+            org.apache.http.conn.scheme.SchemeRegistry registry = new org.apache.http.conn.scheme.SchemeRegistry();
+            registry.register(new org.apache.http.conn.scheme.Scheme("http", org.apache.http.conn.scheme.PlainSocketFactory.getSocketFactory(), 80));
+            registry.register(new org.apache.http.conn.scheme.Scheme("https", new EasySSLSocketFactory(), 443));
+            org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager cm = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager(params, registry);
 
             try {
-                HttpClient httpClient = new DefaultHttpClient(cm, params);
-                HttpResponse httpResponse = httpClient.execute(httpPost);
+                org.apache.http.client.HttpClient httpClient = new org.apache.http.impl.client.DefaultHttpClient(cm, params);
+                org.apache.http.HttpResponse httpResponse = httpClient.execute(httpPost);
                 // we assume badAuthRaises flag from Anki Desktop always False
                 // so just throw new RuntimeException if response code not 200 or 403
                 assertOk(httpResponse);
@@ -319,7 +293,7 @@ public class HttpSyncer {
     }
 
 
-    public HttpResponse hostKey(String arg1, String arg2) throws UnknownHttpResponseException {
+    public org.apache.http.HttpResponse hostKey(String arg1, String arg2) throws UnknownHttpResponseException {
         return null;
     }
 
@@ -334,11 +308,6 @@ public class HttpSyncer {
     }
 
 
-    public JSONObject chunk(JSONObject kw) throws UnknownHttpResponseException {
-        return null;
-    }
-
-
     public JSONObject chunk() throws UnknownHttpResponseException {
         return null;
     }
@@ -352,7 +321,7 @@ public class HttpSyncer {
     }
 
 
-    public HttpResponse meta() throws UnknownHttpResponseException {
+    public org.apache.http.HttpResponse meta() throws UnknownHttpResponseException {
         return null;
     }
 
@@ -375,7 +344,7 @@ public class HttpSyncer {
     public void applyChunk(JSONObject sech) throws UnknownHttpResponseException {
     }
 
-    public class ProgressByteEntity extends AbstractHttpEntity {
+    public class ProgressByteEntity extends org.apache.http.entity.AbstractHttpEntity {
 
         private InputStream mInputStream;
         private long mLength;
@@ -410,7 +379,7 @@ public class HttpSyncer {
 
 
         @Override
-        public InputStream getContent() throws IOException, IllegalStateException {
+        public InputStream getContent() throws IllegalStateException {
             return mInputStream;
         }
 
@@ -444,11 +413,6 @@ public class HttpSyncer {
     }
 
 
-    public HttpResponse register(String user, String pw) throws UnknownHttpResponseException {
-        return null;
-    }
-
-
     public String syncURL() {
         // Allow user to specify custom sync server
         SharedPreferences userPreferences = AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance());
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/RemoteMediaServer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/RemoteMediaServer.java
index ef9c797ac8..39780d226f 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/RemoteMediaServer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/RemoteMediaServer.java
@@ -30,7 +30,6 @@ import com.ichi2.libanki.Consts;
 import com.ichi2.libanki.Utils;
 import com.ichi2.utils.VersionUtils;
 
-import org.apache.http.HttpResponse;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -45,6 +44,7 @@ import java.util.zip.ZipFile;
 
 import timber.log.Timber;
 
+@SuppressWarnings("deprecation") // tracking HTTP transport change in github already
 public class RemoteMediaServer extends HttpSyncer {
 
     private Collection mCol;
@@ -76,7 +76,7 @@ public class RemoteMediaServer extends HttpSyncer {
             mPostVars.put("v",
                     String.format(Locale.US, "ankidroid,%s,%s", VersionUtils.getPkgVersionName(), Utils.platDesc()));
 
-            HttpResponse resp = super.req("begin", super.getInputStream(Utils.jsonToString(new JSONObject())));
+            org.apache.http.HttpResponse resp = super.req("begin", super.getInputStream(Utils.jsonToString(new JSONObject())));
             JSONObject jresp = new JSONObject(super.stream2String(resp.getEntity().getContent()));
             JSONObject ret = _dataOnly(jresp, JSONObject.class);
             mSKey = ret.getString("sk");
@@ -93,7 +93,7 @@ public class RemoteMediaServer extends HttpSyncer {
             mPostVars = new HashMap<>();
             mPostVars.put("sk", mSKey);
 
-            HttpResponse resp = super.req("mediaChanges",
+            org.apache.http.HttpResponse resp = super.req("mediaChanges",
                     super.getInputStream(Utils.jsonToString(new JSONObject().put("lastUsn", lastUsn))));
             JSONObject jresp = new JSONObject(super.stream2String(resp.getEntity().getContent()));
             return _dataOnly(jresp, JSONArray.class);
@@ -111,7 +111,7 @@ public class RemoteMediaServer extends HttpSyncer {
      */
     public ZipFile downloadFiles(List<String> top) throws UnknownHttpResponseException {
         try {
-            HttpResponse resp;
+            org.apache.http.HttpResponse resp;
             resp = super.req("downloadFiles",
                     super.getInputStream(Utils.jsonToString(new JSONObject().put("files", new JSONArray(top)))));
             String zipPath = mCol.getPath().replaceFirst("collection\\.anki2$", "tmpSyncFromServer.zip");
@@ -130,7 +130,7 @@ public class RemoteMediaServer extends HttpSyncer {
     public JSONArray uploadChanges(File zip) throws UnknownHttpResponseException, MediaSyncException {
         try {
             // no compression, as we compress the zip file instead
-            HttpResponse resp = super.req("uploadChanges", new FileInputStream(zip), 0);
+            org.apache.http.HttpResponse resp = super.req("uploadChanges", new FileInputStream(zip), 0);
             JSONObject jresp = new JSONObject(super.stream2String(resp.getEntity().getContent()));
             return _dataOnly(jresp, JSONArray.class);
         } catch (JSONException | IOException e) {
@@ -142,7 +142,7 @@ public class RemoteMediaServer extends HttpSyncer {
     // args: local
     public String mediaSanity(int lcnt) throws UnknownHttpResponseException, MediaSyncException {
         try {
-            HttpResponse resp = super.req("mediaSanity",
+            org.apache.http.HttpResponse resp = super.req("mediaSanity",
                     super.getInputStream(Utils.jsonToString(new JSONObject().put("local", lcnt))));
             JSONObject jresp = new JSONObject(super.stream2String(resp.getEntity().getContent()));
             return _dataOnly(jresp, String.class);
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/RemoteServer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/RemoteServer.java
index 41956929b1..68feaac073 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/RemoteServer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/RemoteServer.java
@@ -23,7 +23,6 @@ import com.ichi2.libanki.Consts;
 import com.ichi2.libanki.Utils;
 import com.ichi2.utils.VersionUtils;
 
-import org.apache.http.HttpResponse;
 import org.json.JSONException;
 import org.json.JSONObject;
 
@@ -31,6 +30,7 @@ import java.io.IOException;
 import java.util.HashMap;
 import java.util.Locale;
 
+@SuppressWarnings("deprecation") // tracking HTTP transport change in github already
 public class RemoteServer extends HttpSyncer {
 
     public RemoteServer(Connection con, String hkey) {
@@ -38,10 +38,9 @@ public class RemoteServer extends HttpSyncer {
     }
 
 
-    /** Returns hkey or none if user/pw incorrect. 
-     * @throws UnknownHttpResponseException */
+    /** Returns hkey or none if user/pw incorrect. */
     @Override
-    public HttpResponse hostKey(String user, String pw) throws UnknownHttpResponseException {
+    public org.apache.http.HttpResponse hostKey(String user, String pw) throws UnknownHttpResponseException {
         try {
             mPostVars = new HashMap<>();
             JSONObject jo = new JSONObject();
@@ -55,7 +54,7 @@ public class RemoteServer extends HttpSyncer {
 
 
     @Override
-    public HttpResponse meta() throws UnknownHttpResponseException {
+    public org.apache.http.HttpResponse meta() throws UnknownHttpResponseException {
         try {
             mPostVars = new HashMap<>();
             mPostVars.put("k", mHKey);
@@ -113,7 +112,7 @@ public class RemoteServer extends HttpSyncer {
 
     /** Python has dynamic type deduction, but we don't, so return String **/
     private String _run(String cmd, JSONObject data) throws UnknownHttpResponseException {
-        HttpResponse ret = super.req(cmd, super.getInputStream(Utils.jsonToString(data)));
+        org.apache.http.HttpResponse ret = super.req(cmd, super.getInputStream(Utils.jsonToString(data)));
         try {
             return super.stream2String(ret.getEntity().getContent());
         } catch (IllegalStateException | IOException e) {
diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/Syncer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/Syncer.java
index d86d87b8f9..b49459f169 100644
--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sync/Syncer.java
+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sync/Syncer.java
@@ -29,7 +29,6 @@ import com.ichi2.libanki.Collection;
 import com.ichi2.libanki.Consts;
 import com.ichi2.libanki.Utils;
 
-import org.apache.http.HttpResponse;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -45,6 +44,7 @@ import java.util.Map;
 
 import timber.log.Timber;
 
+@SuppressWarnings("deprecation") // tracking HTTP transport change in github already
 public class Syncer {
     // Mapping of column type names to Cursor types for API < 11
     public static final int TYPE_NULL = 0;
@@ -81,12 +81,13 @@ public class Syncer {
     }
 
 
+    @SuppressWarnings("deprecation") // tracking HTTP transport change in github already
     public Object[] sync(Connection con) throws UnknownHttpResponseException {
         mSyncMsg = "";
         // if the deck has any pending changes, flush them first and bump mod time
         mCol.save();
         // step 1: login & metadata
-        HttpResponse ret = mServer.meta();
+        org.apache.http.HttpResponse ret = mServer.meta();
         if (ret == null) {
             return null;
         }
diff --git a/AnkiDroid/src/main/java/com/ichi2/preferences/TimePreference.java b/AnkiDroid/src/main/java/com/ichi2/preferences/TimePreference.java
index 73a321bc1a..688554b347 100644
--- a/AnkiDroid/src/main/java/com/ichi2/preferences/TimePreference.java
+++ b/AnkiDroid/src/main/java/com/ichi2/preferences/TimePreference.java
@@ -6,6 +6,8 @@ import android.util.AttributeSet;
 import android.view.View;
 import android.widget.TimePicker;
 
+import com.ichi2.compat.CompatHelper;
+
 
 public class TimePreference extends DialogPreference {
     public static final String DEFAULT_VALUE = "00:00";
@@ -51,9 +53,7 @@ public class TimePreference extends DialogPreference {
     @Override
     protected void onBindDialogView(View view) {
         super.onBindDialogView(view);
-
-        timePicker.setCurrentHour(hours);
-        timePicker.setCurrentMinute(minutes);
+        CompatHelper.getCompat().setTime(timePicker, hours, minutes);
     }
 
     @Override
@@ -61,8 +61,8 @@ public class TimePreference extends DialogPreference {
         super.onDialogClosed(positiveResult);
 
         if (positiveResult) {
-            hours = timePicker.getCurrentHour();
-            minutes = timePicker.getCurrentMinute();
+            hours = CompatHelper.getCompat().getHour(timePicker);
+            minutes = CompatHelper.getCompat().getMinute(timePicker);
 
             final String time = String.format("%1$02d:%2$02d", hours, minutes);
 
diff --git a/AnkiDroid/src/main/java/com/ichi2/ui/SeekBarPreference.java b/AnkiDroid/src/main/java/com/ichi2/ui/SeekBarPreference.java
index 8c1f4210e8..5947b45d56 100644
--- a/AnkiDroid/src/main/java/com/ichi2/ui/SeekBarPreference.java
+++ b/AnkiDroid/src/main/java/com/ichi2/ui/SeekBarPreference.java
@@ -53,14 +53,14 @@ public class SeekBarPreference extends DialogPreference implements SeekBar.OnSee
         mValueText = new TextView(mContext);
         mValueText.setGravity(Gravity.CENTER_HORIZONTAL);
         mValueText.setTextSize(32);
-        params = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.FILL_PARENT,
+        params = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,
                 LinearLayout.LayoutParams.WRAP_CONTENT);
         layout.addView(mValueText, params);
 
         mSeekBar = new SeekBar(mContext);
         mSeekBar.setOnSeekBarChangeListener(this);
 
-        layout.addView(mSeekBar, new LinearLayout.LayoutParams(LinearLayout.LayoutParams.FILL_PARENT,
+        layout.addView(mSeekBar, new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,
                 LinearLayout.LayoutParams.WRAP_CONTENT));
 
         if (shouldPersist()) {
diff --git a/AnkiDroid/src/main/java/com/ichi2/ui/SlidingTabLayout.java b/AnkiDroid/src/main/java/com/ichi2/ui/SlidingTabLayout.java
index 4f76b5e94d..3332499c3c 100644
--- a/AnkiDroid/src/main/java/com/ichi2/ui/SlidingTabLayout.java
+++ b/AnkiDroid/src/main/java/com/ichi2/ui/SlidingTabLayout.java
@@ -16,7 +16,6 @@
  
 package com.ichi2.ui;
  
-import android.annotation.SuppressLint;
 import android.content.Context;
 import android.graphics.Typeface;
 import androidx.viewpager.widget.PagerAdapter;
@@ -34,7 +33,7 @@ import android.widget.TextView;
  * the user's scroll progress.
  * <p>
  * To use the component, simply add it to your view hierarchy. Then in your
- * {@link android.app.Activity} or {@link androidx.core.app.Fragment} call
+ * {@link android.app.Activity} or {@link androidx.fragment.app.Fragment} call
  * {@link #setViewPager(ViewPager)} providing it the ViewPager this layout is being used for.
  * <p>
  * The colors can be customized in two ways. The first and simplest is to provide an array of colors
@@ -159,7 +158,7 @@ public class SlidingTabLayout extends HorizontalScrollView {
  
         mViewPager = viewPager;
         if (viewPager != null) {
-            viewPager.setOnPageChangeListener(new InternalViewPagerListener());
+            viewPager.addOnPageChangeListener(new InternalViewPagerListener());
             populateTabStrip();
         }
     }
@@ -168,7 +167,6 @@ public class SlidingTabLayout extends HorizontalScrollView {
      * Create a default view to be used for tabs. This is called if a custom tab view is not set via
      * {@link #setCustomTabView(int, int)}.
      */
-    @SuppressLint("NewApi")
 	protected TextView createDefaultTabView(Context context) {
         TextView textView = new TextView(context);
         textView.setGravity(Gravity.CENTER);
diff --git a/AnkiDroid/src/main/java/com/ichi2/utils/HttpUtility.java b/AnkiDroid/src/main/java/com/ichi2/utils/HttpUtility.java
deleted file mode 100644
index bf8e01adc8..0000000000
--- a/AnkiDroid/src/main/java/com/ichi2/utils/HttpUtility.java
+++ /dev/null
@@ -1,43 +0,0 @@
-
-package com.ichi2.utils;
-
-
-
-import org.apache.http.HttpResponse;
-import org.apache.http.NameValuePair;
-import org.apache.http.client.HttpClient;
-import org.apache.http.client.entity.UrlEncodedFormEntity;
-import org.apache.http.client.methods.HttpPost;
-import org.apache.http.impl.client.DefaultHttpClient;
-
-import java.io.IOException;
-import java.util.List;
-
-import timber.log.Timber;
-
-public class HttpUtility {
-    public static Boolean postReport(String url, List<NameValuePair> values) {
-        HttpClient httpClient = new DefaultHttpClient();
-        HttpPost httpPost = new HttpPost(url);
-
-        try {
-            httpPost.setEntity(new UrlEncodedFormEntity(values));
-            HttpResponse response = httpClient.execute(httpPost);
-
-            switch (response.getStatusLine().getStatusCode()) {
-                case 200:
-                    Timber.e("feedback report posted to %s", url);
-                    return true;
-
-                default:
-                    Timber.e("feedback report posted to %s message", url);
-                    Timber.e("%d: %s", response.getStatusLine().getStatusCode(), response.getStatusLine().getReasonPhrase());
-                    break;
-            }
-        } catch (IOException ex) {
-            Timber.e(ex.toString());
-        }
-
-        return false;
-    }
-}
diff --git a/AnkiDroid/src/main/java/com/ichi2/utils/VersionUtils.java b/AnkiDroid/src/main/java/com/ichi2/utils/VersionUtils.java
index e114fc0492..15f9653026 100644
--- a/AnkiDroid/src/main/java/com/ichi2/utils/VersionUtils.java
+++ b/AnkiDroid/src/main/java/com/ichi2/utils/VersionUtils.java
@@ -53,10 +53,12 @@ public class VersionUtils {
     /**
      * Get the package versionCode as defined in the manifest.
      */
+    @SuppressWarnings("deprecation") // tracked as #5018 in github
     public static int getPkgVersionCode() {
         Context context = AnkiDroidApp.getInstance();
         try {
             PackageInfo pInfo = context.getPackageManager().getPackageInfo(context.getPackageName(), 0);
+            Timber.d("getPkgVersionCode() is %s", pInfo.versionCode);
             return pInfo.versionCode;
         } catch (PackageManager.NameNotFoundException e) {
             Timber.e(e, "Couldn't find package named %s", context.getPackageName());
@@ -69,7 +71,8 @@ public class VersionUtils {
      * @return whether build number in manifest version code is '3'
      */
     public static boolean isReleaseVersion() {
-        String versionCode = Integer.toString(getPkgVersionCode());
+        String versionCode = Long.toString(getPkgVersionCode());
+        Timber.d("isReleaseVersion() versionCode: %s", versionCode);
         return versionCode.charAt(versionCode.length()-3)=='3';
     }
 }
diff --git a/AnkiDroid/src/main/java/com/ichi2/widget/AnkiDroidWidgetSmall.java b/AnkiDroid/src/main/java/com/ichi2/widget/AnkiDroidWidgetSmall.java
index f7c2ca9358..5b487d091f 100644
--- a/AnkiDroid/src/main/java/com/ichi2/widget/AnkiDroidWidgetSmall.java
+++ b/AnkiDroid/src/main/java/com/ichi2/widget/AnkiDroidWidgetSmall.java
@@ -89,6 +89,7 @@ public class AnkiDroidWidgetSmall extends AppWidgetProvider {
         }
 
         @Override
+        @Deprecated
         public void onStart(Intent intent, int startId) {
             Timber.i("SmallWidget: OnStart");
 
diff --git a/AnkiDroid/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasySSLSocketFactory.java b/AnkiDroid/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasySSLSocketFactory.java
index 8b430303ce..c2e2c35304 100644
--- a/AnkiDroid/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasySSLSocketFactory.java
+++ b/AnkiDroid/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasySSLSocketFactory.java
@@ -1,23 +1,17 @@
 
 package org.apache.commons.httpclient.contrib.ssl;
 
-import org.apache.http.conn.ConnectTimeoutException;
-import org.apache.http.conn.scheme.LayeredSocketFactory;
-import org.apache.http.conn.scheme.SocketFactory;
-import org.apache.http.params.HttpConnectionParams;
-import org.apache.http.params.HttpParams;
-
 import java.io.IOException;
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.net.Socket;
-import java.net.UnknownHostException;
 
 import javax.net.ssl.SSLContext;
 import javax.net.ssl.SSLSocket;
 import javax.net.ssl.TrustManager;
 
-public class EasySSLSocketFactory implements SocketFactory, LayeredSocketFactory {
+@SuppressWarnings("deprecation") // tracking HTTP transport change in github already
+public class EasySSLSocketFactory implements org.apache.http.conn.scheme.SocketFactory, org.apache.http.conn.scheme.LayeredSocketFactory {
     private SSLContext sslcontext = null;
 
 
@@ -46,11 +40,9 @@ public class EasySSLSocketFactory implements SocketFactory, LayeredSocketFactory
      */
     @Override
     public Socket connectSocket(Socket sock, String host, int port, InetAddress localAddress, int localPort,
-            HttpParams params)
-
-    throws IOException, UnknownHostException, ConnectTimeoutException {
-        int connTimeout = HttpConnectionParams.getConnectionTimeout(params);
-        int soTimeout = HttpConnectionParams.getSoTimeout(params);
+                                org.apache.http.params.HttpParams params) throws IOException {
+        int connTimeout = org.apache.http.params.HttpConnectionParams.getConnectionTimeout(params);
+        int soTimeout = org.apache.http.params.HttpConnectionParams.getSoTimeout(params);
         InetSocketAddress remoteAddress = new InetSocketAddress(host, port);
         SSLSocket sslsock = (SSLSocket) ((sock != null) ? sock : createSocket());
 
@@ -92,8 +84,7 @@ public class EasySSLSocketFactory implements SocketFactory, LayeredSocketFactory
      *      boolean)
      */
     @Override
-    public Socket createSocket(Socket socket, String host, int port, boolean autoClose) throws IOException,
-            UnknownHostException {
+    public Socket createSocket(Socket socket, String host, int port, boolean autoClose) throws IOException {
         return getSSLContext().getSocketFactory().createSocket(socket, host, port, autoClose);
     }
 
