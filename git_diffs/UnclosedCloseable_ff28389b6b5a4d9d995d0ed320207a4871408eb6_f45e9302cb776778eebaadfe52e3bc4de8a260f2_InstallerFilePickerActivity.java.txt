diff --git a/app/src/main/java/com/apk/editor/activities/APKSignActivity.java b/app/src/main/java/com/apk/editor/activities/APKSignActivity.java
index 84ce1a4..abecd78 100644
--- a/app/src/main/java/com/apk/editor/activities/APKSignActivity.java
+++ b/app/src/main/java/com/apk/editor/activities/APKSignActivity.java
@@ -12,7 +12,7 @@ import androidx.appcompat.widget.AppCompatImageButton;
 
 import com.apk.editor.R;
 import com.apk.editor.utils.APKEditorUtils;
-import com.apk.editor.utils.APKExplorer;
+import com.apk.editor.utils.Common;
 import com.google.android.material.textview.MaterialTextView;
 
 import java.io.File;
@@ -47,13 +47,13 @@ public class APKSignActivity extends AppCompatActivity {
         setStatus();
 
         mKey.setOnClickListener(v -> {
-            APKExplorer.mPrivateKey = true;
+            Common.setPrivateKeyStatus(true);
             Intent filePicker = new Intent(this, FilePickerActivity.class);
             startActivity(filePicker);
         });
 
         mRSA.setOnClickListener(v -> {
-            APKExplorer.mRSATemplate = true;
+            Common.setRSATemplateStatus(true);
             Intent filePicker = new Intent(this, FilePickerActivity.class);
             startActivity(filePicker);
         });
@@ -102,8 +102,8 @@ public class APKSignActivity extends AppCompatActivity {
     public void onStart() {
         super.onStart();
 
-        if (APKExplorer.mPrivateKey) APKExplorer.mPrivateKey = false;
-        if (APKExplorer.mRSATemplate) APKExplorer.mRSATemplate = false;
+        if (Common.hasPrivateKey()) Common.setPrivateKeyStatus(false);
+        if (Common.hasRASATemplate()) Common.setRSATemplateStatus(false);
     }
 
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/apk/editor/activities/FilePickerActivity.java b/app/src/main/java/com/apk/editor/activities/FilePickerActivity.java
index caf8e6e..3038b39 100644
--- a/app/src/main/java/com/apk/editor/activities/FilePickerActivity.java
+++ b/app/src/main/java/com/apk/editor/activities/FilePickerActivity.java
@@ -22,6 +22,7 @@ import com.apk.editor.R;
 import com.apk.editor.adapters.RecycleViewFilePickerAdapter;
 import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.APKExplorer;
+import com.apk.editor.utils.Common;
 import com.google.android.material.card.MaterialCardView;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.android.material.textview.MaterialTextView;
@@ -51,9 +52,7 @@ public class FilePickerActivity extends AppCompatActivity {
         AppCompatImageButton mSortButton = findViewById(R.id.sort);
         mRecyclerView = findViewById(R.id.recycler_view);
 
-        mBack.setOnClickListener(v -> {
-            super.onBackPressed();
-        });
+        mBack.setOnClickListener(v -> super.onBackPressed());
 
         if (APKExplorer.isPermissionDenied(this)) {
             LinearLayout mPermissionLayout = findViewById(R.id.permission_layout);
@@ -75,35 +74,34 @@ public class FilePickerActivity extends AppCompatActivity {
         mRecycleViewAdapter = new RecycleViewFilePickerAdapter(APKExplorer.getData(getFilesList(), true, this));
         mRecyclerView.setAdapter(mRecycleViewAdapter);
 
-        mTitle.setText(APKExplorer.mFilePath.equals(Environment.getExternalStorageDirectory().toString() + File.separator) ? getString(R.string.sdcard) : new File(APKExplorer.mFilePath).getName());
+        mTitle.setText(Common.getFilePath().equals(Environment.getExternalStorageDirectory().toString() + File.separator) ? getString(R.string.sdcard) : new File(Common.getFilePath()).getName());
 
         mRecycleViewAdapter.setOnItemClickListener((position, v) -> {
             if (new File(APKExplorer.getData(getFilesList(), true, this).get(position)).isDirectory()) {
-                APKExplorer.mFilePath = APKExplorer.getData(getFilesList(), true, this).get(position);
+                Common.setFilePath(APKExplorer.getData(getFilesList(), true, this).get(position));
                 reload(this);
             } else {
                 new MaterialAlertDialogBuilder(this)
-                        .setMessage(APKExplorer.mFileToReplace != null ? getString(R.string.replace_question, new File(APKExplorer
-                                .mFileToReplace).getName()) + " " +
+                        .setMessage(Common.getFileToReplace() != null ? getString(R.string.replace_question, new File(Common.getFileToReplace()).getName()) + " " +
                                 new File(APKExplorer.getData(getFilesList(), true, this).get(position)).getName() + "?" : getString(R.string.signing_question,
-                                new File(APKExplorer.getData(getFilesList(), true, this).get(position)).getName()) + " " + getString(APKExplorer.mPrivateKey ?
+                                new File(APKExplorer.getData(getFilesList(), true, this).get(position)).getName()) + " " + getString(Common.hasPrivateKey() ?
                                 R.string.private_key : R.string.rsa_template))
                         .setNegativeButton(R.string.cancel, (dialog, id) -> {
                         })
-                        .setPositiveButton(APKExplorer.mFileToReplace != null ? R.string.replace : R.string.select, (dialog, id) -> {
-                            if (APKExplorer.mFileToReplace != null) {
-                                APKEditorUtils.copy(APKExplorer.getData(getFilesList(), true, this).get(position), APKExplorer.mFileToReplace);
-                                APKExplorer.mFileToReplace = null;
+                        .setPositiveButton(Common.getFileToReplace() != null ? R.string.replace : R.string.select, (dialog, id) -> {
+                            if (Common.getFileToReplace() != null) {
+                                APKEditorUtils.copy(APKExplorer.getData(getFilesList(), true, this).get(position), Common.getFileToReplace());
+                                Common.setFileToReplace(null);
                             }  else {
                                 new File(getFilesDir(), "signing").mkdirs();
-                                if (APKExplorer.mPrivateKey) {
+                                if (Common.hasPrivateKey()) {
                                     APKEditorUtils.saveString("PrivateKey", APKExplorer.getData(getFilesList(), true, this).get(position), this);
                                     APKEditorUtils.copy(APKExplorer.getData(getFilesList(), true, this).get(position), getFilesDir()+ "/signing/APKEditor.pk8");
-                                    APKExplorer.mPrivateKey = false;
+                                    Common.setPrivateKeyStatus(false);
                                 } else {
                                     APKEditorUtils.saveString("RSATemplate", APKExplorer.getData(getFilesList(), true, this).get(position), this);
                                     APKEditorUtils.copy(APKExplorer.getData(getFilesList(), true, this).get(position), getFilesDir()+ "/signing/APKEditor");
-                                    APKExplorer.mRSATemplate = false;
+                                    Common.setRSATemplateStatus(false);
                                 }
                             }
                             finish();
@@ -128,13 +126,13 @@ public class FilePickerActivity extends AppCompatActivity {
     }
 
     private File[] getFilesList() {
-        if (APKExplorer.mFilePath == null) {
-            APKExplorer.mFilePath = Environment.getExternalStorageDirectory().toString();
+        if (Common.getFilePath() == null) {
+            Common.setFilePath(Environment.getExternalStorageDirectory().toString());
         }
-        if (!APKExplorer.mFilePath.endsWith(File.separator)) {
-            APKExplorer.mFilePath = APKExplorer.mFilePath + File.separator;
+        if (!Common.getFilePath().endsWith(File.separator)) {
+            Common.setFilePath(Common.getFilePath() + File.separator);
         }
-        return new File(APKExplorer.mFilePath).listFiles();
+        return new File(Common.getFilePath()).listFiles();
     }
 
     private void reload(Activity activity) {
@@ -162,8 +160,8 @@ public class FilePickerActivity extends AppCompatActivity {
                             super.onPostExecute(recyclerViewItems);
                             mRecyclerView.setAdapter(mRecycleViewAdapter);
                             mRecycleViewAdapter.notifyDataSetChanged();
-                            mTitle.setText(APKExplorer.mFilePath.equals(Environment.getExternalStorageDirectory().toString() + File.separator) ? getString(R.string.sdcard)
-                                    : new File(APKExplorer.mFilePath).getName());
+                            mTitle.setText(Common.getFilePath().equals(Environment.getExternalStorageDirectory().toString() + File.separator) ? getString(R.string.sdcard)
+                                    : new File(Common.getFilePath()).getName());
                             mRecyclerView.setVisibility(View.VISIBLE);
                             mLoader = null;
                         }
@@ -176,10 +174,10 @@ public class FilePickerActivity extends AppCompatActivity {
 
     @Override
     public void onBackPressed() {
-        if (APKExplorer.mFilePath.equals(Environment.getExternalStorageDirectory().toString() + File.separator)) {
+        if (Common.getFilePath().equals(Environment.getExternalStorageDirectory().toString() + File.separator)) {
             super.onBackPressed();
         } else {
-            APKExplorer.mFilePath = Objects.requireNonNull(new File(APKExplorer.mFilePath).getParentFile()).getPath();
+            Common.setFilePath(Objects.requireNonNull(new File(Common.getFilePath()).getParentFile()).getPath());
             reload(this);
         }
     }
diff --git a/app/src/main/java/com/apk/editor/activities/ImageViewActivity.java b/app/src/main/java/com/apk/editor/activities/ImageViewActivity.java
index 5313123..8a6937c 100644
--- a/app/src/main/java/com/apk/editor/activities/ImageViewActivity.java
+++ b/app/src/main/java/com/apk/editor/activities/ImageViewActivity.java
@@ -25,6 +25,7 @@ import com.apk.editor.R;
 import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.APKExplorer;
 import com.apk.editor.utils.AppData;
+import com.apk.editor.utils.Common;
 import com.apk.editor.utils.Projects;
 import com.google.android.material.card.MaterialCardView;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
@@ -98,8 +99,8 @@ public class ImageViewActivity extends AppCompatActivity {
             mTitle.setText(new File(path).getName());
             mImage.setImageURI(APKExplorer.getIconFromPath(path));
         } else {
-            mTitle.setText(AppData.getAppName(APKExplorer.mAppID, this));
-            mImage.setImageDrawable(AppData.getAppIcon(APKExplorer.mAppID, this));
+            mTitle.setText(AppData.getAppName(Common.getAppID(), this));
+            mImage.setImageDrawable(AppData.getAppIcon(Common.getAppID(), this));
         }
 
         if (mExternalFile != null) {
@@ -149,14 +150,14 @@ public class ImageViewActivity extends AppCompatActivity {
                             if (APKExplorer.isPermissionDenied(this)) {
                                 APKExplorer.launchPermissionDialog(this);
                             } else {
-                                APKEditorUtils.mkdir(Projects.getExportPath(this) + "/" + APKExplorer.mAppID);
+                                APKEditorUtils.mkdir(Projects.getExportPath(this) + "/" + Common.getAppID());
                                 if (path != null) {
-                                    APKExplorer.saveImage(BitmapFactory.decodeFile(path), Projects.getExportPath(this) + "/" + APKExplorer.mAppID + "/" + new File(path).getName());
+                                    APKExplorer.saveImage(BitmapFactory.decodeFile(path), Projects.getExportPath(this) + "/" + Common.getAppID() + "/" + new File(path).getName());
                                 } else {
-                                    APKExplorer.saveImage(APKExplorer.drawableToBitmap(mImage.getDrawable()), Projects.getExportPath(this) + "/" + APKExplorer.mAppID + "/icon.png");
+                                    APKExplorer.saveImage(APKExplorer.drawableToBitmap(mImage.getDrawable()), Projects.getExportPath(this) + "/" + Common.getAppID() + "/icon.png");
                                 }
                                 new MaterialAlertDialogBuilder(this)
-                                        .setMessage(getString(R.string.export_complete_message, Projects.getExportPath(this) + "/" + APKExplorer.mAppID))
+                                        .setMessage(getString(R.string.export_complete_message, Projects.getExportPath(this) + "/" + Common.getAppID()))
                                         .setPositiveButton(getString(R.string.cancel), (dialog1, id1) -> {
                                         }).show();
                             }
diff --git a/app/src/main/java/com/apk/editor/activities/InstallerActivity.java b/app/src/main/java/com/apk/editor/activities/InstallerActivity.java
index 8ce0af8..cf3135a 100644
--- a/app/src/main/java/com/apk/editor/activities/InstallerActivity.java
+++ b/app/src/main/java/com/apk/editor/activities/InstallerActivity.java
@@ -13,8 +13,8 @@ import androidx.appcompat.widget.AppCompatImageButton;
 import com.apk.editor.R;
 import com.apk.editor.utils.APKData;
 import com.apk.editor.utils.APKEditorUtils;
-import com.apk.editor.utils.APKExplorer;
 import com.apk.editor.utils.AppData;
+import com.apk.editor.utils.Common;
 import com.google.android.material.card.MaterialCardView;
 import com.google.android.material.textview.MaterialTextView;
 
@@ -31,7 +31,6 @@ public class InstallerActivity extends AppCompatActivity {
     private MaterialTextView mTitle;
     private ProgressBar mProgress;
     public static final String HEADING_INTENT = "heading", PATH_INTENT = "path";
-    public String mPackageName = null;
 
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
@@ -48,12 +47,12 @@ public class InstallerActivity extends AppCompatActivity {
         String path = getIntent().getStringExtra(PATH_INTENT);
         if (path != null) {
             try {
-                mPackageName = Objects.requireNonNull(APKData.getAppID(path, this)).toString();
+                Common.setPackageName(Objects.requireNonNull(APKData.getAppID(path, this)).toString());
                 mTitle.setText(APKData.getAppName(path, this));
                 mIcon.setImageDrawable(APKData.getAppIcon(path, this));
             } catch (NullPointerException ignored) {}
         } else {
-            mPackageName = APKData.findPackageName(this);
+            Common.setPackageName(APKData.findPackageName(this));
             mTitle.setText(getName());
             mIcon.setImageDrawable(getIcon());
         }
@@ -88,8 +87,8 @@ public class InstallerActivity extends AppCompatActivity {
                                 mCancel.setVisibility(View.VISIBLE);
                                 if (installationStatus.equals(getString(R.string.installation_status_success))) {
                                     try {
-                                        mTitle.setText(AppData.getAppName(mPackageName, activity));
-                                        mIcon.setImageDrawable(AppData.getAppIcon(mPackageName, activity));
+                                        mTitle.setText(AppData.getAppName(Common.getPackageName(), activity));
+                                        mIcon.setImageDrawable(AppData.getAppIcon(Common.getPackageName(), activity));
                                     } catch (NullPointerException ignored) {}
                                 }
                             }
@@ -102,7 +101,7 @@ public class InstallerActivity extends AppCompatActivity {
 
     private CharSequence getName() {
         CharSequence name = null;
-        for (String mAPKs : APKExplorer.mAPKList) {
+        for (String mAPKs : Common.getAPKList()) {
             if (APKData.getAppName(mAPKs, this) != null) {
                 name = APKData.getAppName(mAPKs, this);
             }
@@ -112,7 +111,7 @@ public class InstallerActivity extends AppCompatActivity {
 
     private Drawable getIcon() {
         Drawable icon = null;
-        for (String mAPKs : APKExplorer.mAPKList) {
+        for (String mAPKs : Common.getAPKList()) {
             if (APKData.getAppIcon(mAPKs, this) != null) {
                 icon = APKData.getAppIcon(mAPKs, this);
             }
diff --git a/app/src/main/java/com/apk/editor/activities/InstallerFilePickerActivity.java b/app/src/main/java/com/apk/editor/activities/InstallerFilePickerActivity.java
index f5d6ff0..a2d3af3 100644
--- a/app/src/main/java/com/apk/editor/activities/InstallerFilePickerActivity.java
+++ b/app/src/main/java/com/apk/editor/activities/InstallerFilePickerActivity.java
@@ -24,6 +24,7 @@ import com.apk.editor.adapters.RecycleViewInstallerFilePickerAdapter;
 import com.apk.editor.utils.APKData;
 import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.APKExplorer;
+import com.apk.editor.utils.Common;
 import com.apk.editor.utils.SplitAPKInstaller;
 import com.google.android.material.card.MaterialCardView;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
@@ -54,12 +55,10 @@ public class InstallerFilePickerActivity extends AppCompatActivity {
         AppCompatImageButton mBack = findViewById(R.id.back);
         mTitle = findViewById(R.id.title);
         AppCompatImageButton mSortButton = findViewById(R.id.sort);
-        APKExplorer.mSelect = findViewById(R.id.select);
+        Common.initializeView(findViewById(android.R.id.content), R.id.select);
         mRecyclerView = findViewById(R.id.recycler_view);
 
-        mBack.setOnClickListener(v -> {
-            super.onBackPressed();
-        });
+        mBack.setOnClickListener(v -> super.onBackPressed());
 
         if (APKExplorer.isPermissionDenied(this)) {
             LinearLayout mPermissionLayout = findViewById(R.id.permission_layout);
@@ -83,12 +82,12 @@ public class InstallerFilePickerActivity extends AppCompatActivity {
         if (getIntent().getStringExtra(TITLE_INTENT) != null) {
             mTitle.setText(getIntent().getStringExtra(TITLE_INTENT));
         } else {
-            mTitle.setText(APKExplorer.mPath.equals(Environment.getExternalStorageDirectory().toString() + File.separator) ? getString(R.string.sdcard) : new File(APKExplorer.mPath).getName());
+            mTitle.setText(Common.getPath().equals(Environment.getExternalStorageDirectory().toString() + File.separator) ? getString(R.string.sdcard) : new File(Common.getPath()).getName());
         }
 
         mRecycleViewAdapter.setOnItemClickListener((position, v) -> {
             if (new File(APKExplorer.getData(getFilesList(), false, this).get(position)).isDirectory()) {
-                APKExplorer.mPath = APKExplorer.getData(getFilesList(), false, this).get(position);
+                Common.setPath(APKExplorer.getData(getFilesList(), false, this).get(position));
                 reload(this);
             } else if (APKExplorer.getData(getFilesList(), false, this).get(position).endsWith(".apks") || APKExplorer.getData(getFilesList(), false,
                     this).get(position).endsWith(".apkm") || APKExplorer.getData(getFilesList(), false, this).get(position).endsWith(".xapk")) {
@@ -101,19 +100,19 @@ public class InstallerFilePickerActivity extends AppCompatActivity {
                             finish();
                         }).show();
             } else if (APKExplorer.getData(getFilesList(), false, this).get(position).endsWith(".apk")) {
-                if (APKExplorer.mAPKList.contains(APKExplorer.getData(getFilesList(), false, this).get(position))) {
-                    APKExplorer.mAPKList.remove(APKExplorer.getData(getFilesList(), false, this).get(position));
+                if (Common.getAPKList().contains(APKExplorer.getData(getFilesList(), false, this).get(position))) {
+                    Common.getAPKList().remove(APKExplorer.getData(getFilesList(), false, this).get(position));
                 } else {
-                    APKExplorer.mAPKList.add(APKExplorer.getData(getFilesList(), false, this).get(position));
+                    Common.getAPKList().add(APKExplorer.getData(getFilesList(), false, this).get(position));
                 }
                 mRecycleViewAdapter.notifyItemChanged(position);
-                APKExplorer.mSelect.setVisibility(APKExplorer.mAPKList.isEmpty() ? View.GONE : View.VISIBLE);
+                Common.getSelectCard().setVisibility(Common.getAPKList().isEmpty() ? View.GONE : View.VISIBLE);
             } else {
-                APKEditorUtils.snackbar(mRecyclerView, getString(R.string.wrong_extension, ".apks/.apkm/.xapk"));
+                APKEditorUtils.snackbar(findViewById(android.R.id.content), getString(R.string.wrong_extension, ".apks/.apkm/.xapk"));
             }
         });
 
-        APKExplorer.mSelect.setOnClickListener(v -> handleAPKs(this));
+        Common.getSelectCard().setOnClickListener(v -> handleAPKs(this));
 
         mSortButton.setOnClickListener(v -> {
             PopupMenu popupMenu = new PopupMenu(this, mSortButton);
@@ -133,14 +132,14 @@ public class InstallerFilePickerActivity extends AppCompatActivity {
 
     private void installAPKs() {
         if (APKData.findPackageName(this) != null) {
-            if (APKExplorer.mAPKList.size() > 1) {
-                SplitAPKInstaller.installSplitAPKs(APKExplorer.mAPKList, null, this);
+            if (Common.getAPKList().size() > 1) {
+                SplitAPKInstaller.installSplitAPKs(Common.getAPKList(), null, this);
             } else {
-                SplitAPKInstaller.installAPK(new File(APKExplorer.mAPKList.get(0)), this);
+                SplitAPKInstaller.installAPK(new File(Common.getAPKList().get(0)), this);
             }
             finish();
         } else {
-            APKEditorUtils.snackbar(mRecyclerView, getString(R.string.installation_status_bad_apks));
+            APKEditorUtils.snackbar(findViewById(android.R.id.content), getString(R.string.installation_status_bad_apks));
         }
     }
 
@@ -227,10 +226,10 @@ public class InstallerFilePickerActivity extends AppCompatActivity {
     }
 
     private File[] getFilesList() {
-        if (!APKExplorer.mPath.endsWith(File.separator)) {
-            APKExplorer.mPath = APKExplorer.mPath + File.separator;
+        if (!Common.getPath().endsWith(File.separator)) {
+            Common.setPath(Common.getPath() + File.separator);
         }
-        return new File(APKExplorer.mPath).listFiles();
+        return new File(Common.getPath()).listFiles();
     }
 
     private void reload(Activity activity) {
@@ -261,13 +260,13 @@ public class InstallerFilePickerActivity extends AppCompatActivity {
                             if (getIntent().getStringExtra(TITLE_INTENT) != null) {
                                 mTitle.setText(getIntent().getStringExtra(TITLE_INTENT));
                             } else {
-                                mTitle.setText(APKExplorer.mPath.equals(Environment.getExternalStorageDirectory().toString() + File.separator) ? getString(R.string.sdcard)
-                                        : new File(APKExplorer.mPath).getName());
+                                mTitle.setText(Common.getPath().equals(Environment.getExternalStorageDirectory().toString() + File.separator) ? getString(R.string.sdcard)
+                                        : new File(Common.getPath()).getName());
                             }
-                            if (APKExplorer.mAPKList.isEmpty()) {
-                                APKExplorer.mSelect.setVisibility(View.GONE);
+                            if (Common.getAPKList().isEmpty()) {
+                                Common.getSelectCard().setVisibility(View.GONE);
                             } else {
-                                APKExplorer.mSelect.setVisibility(View.VISIBLE);
+                                Common.getSelectCard().setVisibility(View.VISIBLE);
                             }
                             mRecyclerView.setVisibility(View.VISIBLE);
                             mLoader = null;
@@ -283,15 +282,15 @@ public class InstallerFilePickerActivity extends AppCompatActivity {
     public void onResume() {
         super.onResume();
 
-        if (APKExplorer.mFinish) {
-            APKExplorer.mFinish = false;
+        if (Common.isFinished()) {
+            Common.setFinishStatus(false);
             finish();
         }
     }
 
     @Override
     public void onBackPressed() {
-        if (APKExplorer.mPath.equals(getCacheDir().getPath() + "/splits/")) {
+        if (Common.getPath().equals(getCacheDir().getPath() + "/splits/")) {
             new MaterialAlertDialogBuilder(this)
                     .setMessage(getString(R.string.installation_cancel_message))
                     .setNegativeButton(getString(R.string.cancel), (dialogInterface, i) -> {
@@ -299,11 +298,11 @@ public class InstallerFilePickerActivity extends AppCompatActivity {
                     .setPositiveButton(getString(R.string.yes), (dialogInterface, i) -> {
                         finish();
                     }).show();
-        } else if (APKExplorer.mPath.equals(Environment.getExternalStorageDirectory().toString() + File.separator)) {
+        } else if (Common.getPath().equals(Environment.getExternalStorageDirectory().toString() + File.separator)) {
             super.onBackPressed();
         } else {
-            APKExplorer.mPath = Objects.requireNonNull(new File(APKExplorer.mPath).getParentFile()).getPath();
-            APKExplorer.mAPKList.clear();
+            Common.setPath(Objects.requireNonNull(new File(Common.getPath()).getParentFile()).getPath());
+            Common.getAPKList().clear();
             reload(this);
         }
     }
diff --git a/app/src/main/java/com/apk/editor/activities/TextViewActivity.java b/app/src/main/java/com/apk/editor/activities/TextViewActivity.java
index 8d0bf3a..3a74ad4 100644
--- a/app/src/main/java/com/apk/editor/activities/TextViewActivity.java
+++ b/app/src/main/java/com/apk/editor/activities/TextViewActivity.java
@@ -23,7 +23,7 @@ import com.apk.editor.utils.APKExplorer;
 import com.apk.editor.utils.AppData;
 import com.apk.editor.utils.AppSettings;
 import com.apk.editor.utils.Projects;
-import com.apk.editor.utils.TextEditor;
+import com.apk.editor.utils.Common;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.android.material.textview.MaterialTextView;
 
@@ -90,7 +90,7 @@ public class TextViewActivity extends AppCompatActivity {
 
             @Override
             public void afterTextChanged(Editable s) {
-                TextEditor.mSearchText = s.toString();
+                Common.setSearchText(s.toString());
                 mRecyclerView.setAdapter(new RecycleViewAdapter(getData()));
 
             }
@@ -103,24 +103,22 @@ public class TextViewActivity extends AppCompatActivity {
             finish();
         });
 
-        mExport.setOnClickListener(v -> {
-            new MaterialAlertDialogBuilder(this)
-                    .setMessage(R.string.export_question)
-                    .setNegativeButton(getString(R.string.cancel), (dialog, id) -> {
-                    })
-                    .setPositiveButton(getString(R.string.export), (dialog, id) -> {
-                        if (APKExplorer.isPermissionDenied(this)) {
-                            APKExplorer.launchPermissionDialog(this);
-                        } else {
-                            APKEditorUtils.mkdir(Projects.getExportPath(this) + "/" + APKExplorer.mAppID);
-                            APKEditorUtils.copy(mPath, Projects.getExportPath(this) + "/" + APKExplorer.mAppID + "/" + new File(mPath).getName());
-                            new MaterialAlertDialogBuilder(this)
-                                    .setMessage(getString(R.string.export_complete_message, Projects.getExportPath(this) + "/" + APKExplorer.mAppID))
-                                    .setPositiveButton(getString(R.string.cancel), (dialog1, id1) -> {
-                                    }).show();
-                        }
-                    }).show();
-        });
+        mExport.setOnClickListener(v -> new MaterialAlertDialogBuilder(this)
+                .setMessage(R.string.export_question)
+                .setNegativeButton(getString(R.string.cancel), (dialog, id) -> {
+                })
+                .setPositiveButton(getString(R.string.export), (dialog, id) -> {
+                    if (APKExplorer.isPermissionDenied(this)) {
+                        APKExplorer.launchPermissionDialog(this);
+                    } else {
+                        APKEditorUtils.mkdir(Projects.getExportPath(this) + "/" + Common.getAppID());
+                        APKEditorUtils.copy(mPath, Projects.getExportPath(this) + "/" + Common.getAppID() + "/" + new File(mPath).getName());
+                        new MaterialAlertDialogBuilder(this)
+                                .setMessage(getString(R.string.export_complete_message, Projects.getExportPath(this) + "/" + Common.getAppID()))
+                                .setPositiveButton(getString(R.string.cancel), (dialog1, id1) -> {
+                                }).show();
+                    }
+                }).show());
 
         mBack.setOnClickListener(v -> finish());
     }
@@ -128,17 +126,17 @@ public class TextViewActivity extends AppCompatActivity {
     private List<String> getData() {
         mData.clear();
         String text;
-        if (APKExplorer.mAppID != null && TextEditor.isBinaryXML(mPath)) {
-            text = APKExplorer.readXMLFromAPK(AppData.getSourceDir(APKExplorer.mAppID, this), mPath.replace(
-                    getCacheDir().getPath() + "/" + APKExplorer.mAppID + "/", ""));
+        if (Common.getAppID() != null && APKExplorer.isBinaryXML(mPath)) {
+            text = APKExplorer.readXMLFromAPK(AppData.getSourceDir(Common.getAppID(), this), mPath.replace(
+                    getCacheDir().getPath() + "/" + Common.getAppID() + "/", ""));
         } else {
             text = APKEditorUtils.read(mPath);
         }
         if (text != null) {
             for (String line : text.split("\\r?\\n")) {
-                if (TextEditor.mSearchText == null) {
+                if (Common.getSearchText() == null) {
                     mData.add(line);
-                } else if (line.contains(TextEditor.mSearchText)) {
+                } else if (line.contains(Common.getSearchText())) {
                     mData.add(line);
                 }
             }
@@ -163,10 +161,10 @@ public class TextViewActivity extends AppCompatActivity {
 
         @Override
         public void onBindViewHolder(@NonNull RecycleViewAdapter.ViewHolder holder, int position) {
-            if (TextEditor.mSearchText != null && data.get(position).contains(TextEditor.mSearchText)) {
+            if (Common.getSearchText() != null && data.get(position).contains(Common.getSearchText())) {
                 holder.mNumber.setText(String.valueOf(position + 1));
-                holder.mText.setText(APKEditorUtils.fromHtml(data.get(position).replace(TextEditor.mSearchText,
-                        "<b><i><font color=\"" + Color.RED + "\">" + TextEditor.mSearchText + "</font></i></b>")));
+                holder.mText.setText(APKEditorUtils.fromHtml(data.get(position).replace(Common.getSearchText(),
+                        "<b><i><font color=\"" + Color.RED + "\">" + Common.getSearchText() + "</font></i></b>")));
             } else {
                 holder.mNumber.setText(String.valueOf(position + 1));
                 holder.mText.setText(data.get(position));
diff --git a/app/src/main/java/com/apk/editor/adapters/RecycleViewAPKExplorerAdapter.java b/app/src/main/java/com/apk/editor/adapters/RecycleViewAPKExplorerAdapter.java
index 68b16df..96e3750 100644
--- a/app/src/main/java/com/apk/editor/adapters/RecycleViewAPKExplorerAdapter.java
+++ b/app/src/main/java/com/apk/editor/adapters/RecycleViewAPKExplorerAdapter.java
@@ -19,6 +19,7 @@ import com.apk.editor.utils.APKData;
 import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.APKExplorer;
 import com.apk.editor.utils.AppData;
+import com.apk.editor.utils.Common;
 import com.apk.editor.utils.Projects;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.android.material.textview.MaterialTextView;
@@ -108,17 +109,17 @@ public class RecycleViewAPKExplorerAdapter extends RecyclerView.Adapter<RecycleV
                                     if (APKExplorer.isPermissionDenied(v.getContext())) {
                                         APKExplorer.launchPermissionDialog((Activity) v.getContext());
                                     } else {
-                                        APKEditorUtils.mkdir(Projects.getExportPath(v.getContext()) + "/" + APKExplorer.mAppID);
-                                        APKEditorUtils.copy(data.get(position), Projects.getExportPath(v.getContext()) + "/" + APKExplorer.mAppID + "/" + new File(data.get(position)).getName());
+                                        APKEditorUtils.mkdir(Projects.getExportPath(v.getContext()) + "/" + Common.getAppID());
+                                        APKEditorUtils.copy(data.get(position), Projects.getExportPath(v.getContext()) + "/" + Common.getAppID() + "/" + new File(data.get(position)).getName());
                                         new MaterialAlertDialogBuilder(v.getContext())
-                                                .setMessage(v.getContext().getString(R.string.export_complete_message, Projects.getExportPath(v.getContext()) + "/" + APKExplorer.mAppID))
+                                                .setMessage(v.getContext().getString(R.string.export_complete_message, Projects.getExportPath(v.getContext()) + "/" + Common.getAppID()))
                                                 .setPositiveButton(v.getContext().getString(R.string.cancel), (dialog1, id1) -> {
                                                 }).show();
                                     }
                                 }).show();
                         break;
                     case 2:
-                        APKExplorer.mFileToReplace = data.get(position);
+                        Common.setFileToReplace(data.get(position));
                         Intent filePicker = new Intent(v.getContext(), FilePickerActivity.class);
                         v.getContext().startActivity(filePicker);
                         break;
diff --git a/app/src/main/java/com/apk/editor/adapters/RecycleViewApksAdapter.java b/app/src/main/java/com/apk/editor/adapters/RecycleViewApksAdapter.java
index c8359b4..b8827fb 100644
--- a/app/src/main/java/com/apk/editor/adapters/RecycleViewApksAdapter.java
+++ b/app/src/main/java/com/apk/editor/adapters/RecycleViewApksAdapter.java
@@ -20,6 +20,7 @@ import com.apk.editor.R;
 import com.apk.editor.utils.APKData;
 import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.AppData;
+import com.apk.editor.utils.Common;
 import com.apk.editor.utils.SplitAPKInstaller;
 import com.google.android.material.card.MaterialCardView;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
@@ -58,9 +59,9 @@ public class RecycleViewApksAdapter extends RecyclerView.Adapter<RecycleViewApks
                     holder.mAppIcon.setImageDrawable(holder.mAppIcon.getResources().getDrawable(R.drawable.ic_android));
                     holder.mAppIcon.setColorFilter(APKEditorUtils.getThemeAccentColor(holder.mAppIcon.getContext()));
                 }
-                if (APKData.mSearchText != null && new File(data.get(position)).getName().toLowerCase().contains(APKData.mSearchText)) {
-                    holder.mAppName.setText(APKEditorUtils.fromHtml(new File(data.get(position)).getName().toLowerCase().replace(APKData.mSearchText,
-                            "<b><i><font color=\"" + Color.RED + "\">" + APKData.mSearchText + "</font></i></b>")));
+                if (Common.getSearchWord() != null && new File(data.get(position)).getName().toLowerCase().contains(Common.getSearchWord())) {
+                    holder.mAppName.setText(APKEditorUtils.fromHtml(new File(data.get(position)).getName().toLowerCase().replace(Common.getSearchWord(),
+                            "<b><i><font color=\"" + Color.RED + "\">" + Common.getSearchWord() + "</font></i></b>")));
                 } else {
                     holder.mAppName.setText(new File(data.get(position)).getName());
                 }
@@ -102,16 +103,16 @@ public class RecycleViewApksAdapter extends RecyclerView.Adapter<RecycleViewApks
                     holder.mAppIcon.setColorFilter(APKEditorUtils.getThemeAccentColor(holder.mAppIcon.getContext()));
                 }
                 if (APKData.getAppName(data.get(position), holder.mAppName.getContext()) != null) {
-                    if (APKData.mSearchText != null && Objects.requireNonNull(APKData.getAppName(data.get(position), holder.mAppName.getContext())).toString().toLowerCase().contains(APKData.mSearchText)) {
-                        holder.mAppName.setText(APKEditorUtils.fromHtml(Objects.requireNonNull(APKData.getAppName(data.get(position), holder.mAppName.getContext())).toString().toLowerCase().replace(APKData.mSearchText,
-                                "<b><i><font color=\"" + Color.RED + "\">" + APKData.mSearchText + "</font></i></b>")));
+                    if (Common.getSearchWord() != null && Objects.requireNonNull(APKData.getAppName(data.get(position), holder.mAppName.getContext())).toString().toLowerCase().contains(Common.getSearchWord())) {
+                        holder.mAppName.setText(APKEditorUtils.fromHtml(Objects.requireNonNull(APKData.getAppName(data.get(position), holder.mAppName.getContext())).toString().toLowerCase().replace(Common.getSearchWord(),
+                                "<b><i><font color=\"" + Color.RED + "\">" + Common.getSearchWord() + "</font></i></b>")));
                     } else {
                         holder.mAppName.setText(APKData.getAppName(data.get(position), holder.mAppName.getContext()));
                     }
                 } else {
-                    if (APKData.mSearchText != null && new File(data.get(position)).getName().toLowerCase().contains(APKData.mSearchText)) {
-                        holder.mAppName.setText(APKEditorUtils.fromHtml(new File(data.get(position)).getName().toLowerCase().replace(APKData.mSearchText,
-                                "<b><i><font color=\"" + Color.RED + "\">" + APKData.mSearchText + "</font></i></b>")));
+                    if (Common.getSearchWord() != null && new File(data.get(position)).getName().toLowerCase().contains(Common.getSearchWord())) {
+                        holder.mAppName.setText(APKEditorUtils.fromHtml(new File(data.get(position)).getName().toLowerCase().replace(Common.getSearchWord(),
+                                "<b><i><font color=\"" + Color.RED + "\">" + Common.getSearchWord() + "</font></i></b>")));
                     } else {
                         holder.mAppName.setText(new File(data.get(position)).getName());
                     }
diff --git a/app/src/main/java/com/apk/editor/adapters/RecycleViewAppsAdapter.java b/app/src/main/java/com/apk/editor/adapters/RecycleViewAppsAdapter.java
index 8664d0b..19fce91 100644
--- a/app/src/main/java/com/apk/editor/adapters/RecycleViewAppsAdapter.java
+++ b/app/src/main/java/com/apk/editor/adapters/RecycleViewAppsAdapter.java
@@ -18,6 +18,7 @@ import com.apk.editor.utils.APKData;
 import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.APKExplorer;
 import com.apk.editor.utils.AppData;
+import com.apk.editor.utils.Common;
 import com.google.android.material.card.MaterialCardView;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.android.material.textview.MaterialTextView;
@@ -46,15 +47,15 @@ public class RecycleViewAppsAdapter extends RecyclerView.Adapter<RecycleViewApps
     public void onBindViewHolder(@NonNull RecycleViewAppsAdapter.ViewHolder holder, int position) {
         try {
             holder.mAppIcon.setImageDrawable(AppData.getAppIcon(data.get(position), holder.mAppIcon.getContext()));
-            if (AppData.mSearchText != null && data.get(position).toLowerCase().contains(AppData.mSearchText)) {
-                holder.mAppID.setText(APKEditorUtils.fromHtml(data.get(position).toLowerCase().replace(AppData.mSearchText, "<b><i><font color=\"" +
-                        Color.RED + "\">" + AppData.mSearchText + "</font></i></b>")));
+            if (Common.getSearchWord() != null && data.get(position).toLowerCase().contains(Common.getSearchWord())) {
+                holder.mAppID.setText(APKEditorUtils.fromHtml(data.get(position).toLowerCase().replace(Common.getSearchWord(), "<b><i><font color=\"" +
+                        Color.RED + "\">" + Common.getSearchWord() + "</font></i></b>")));
             } else {
                 holder.mAppID.setText(data.get(position));
             }
-            if (AppData.mSearchText != null && AppData.getAppName(data.get(position), holder.mAppName.getContext()).toString().toLowerCase().contains(AppData.mSearchText)) {
-                holder.mAppName.setText(APKEditorUtils.fromHtml(AppData.getAppName(data.get(position), holder.mAppName.getContext()).toString().toLowerCase().replace(AppData.mSearchText,
-                        "<b><i><font color=\"" + Color.RED + "\">" + AppData.mSearchText + "</font></i></b>")));
+            if (Common.getSearchWord() != null && AppData.getAppName(data.get(position), holder.mAppName.getContext()).toString().toLowerCase().contains(Common.getSearchWord())) {
+                holder.mAppName.setText(APKEditorUtils.fromHtml(AppData.getAppName(data.get(position), holder.mAppName.getContext()).toString().toLowerCase().replace(Common.getSearchWord(),
+                        "<b><i><font color=\"" + Color.RED + "\">" + Common.getSearchWord() + "</font></i></b>")));
             } else {
                 holder.mAppName.setText(AppData.getAppName(data.get(position), holder.mAppName.getContext()));
             }
@@ -63,7 +64,7 @@ public class RecycleViewAppsAdapter extends RecyclerView.Adapter<RecycleViewApps
             holder.mVersion.setTextColor(Color.RED);
             holder.mSize.setTextColor(APKEditorUtils.isDarkTheme(holder.mSize.getContext()) ? Color.GREEN : Color.BLACK);
             holder.mAppIcon.setOnClickListener(v -> {
-                APKExplorer.mAppID = data.get(position);
+                Common.setAppID(data.get(position));
                 Intent imageView = new Intent(holder.mCard.getContext(), ImageViewActivity.class);
                 holder.mCard.getContext().startActivity(imageView);
             });
diff --git a/app/src/main/java/com/apk/editor/adapters/RecycleViewInstallerFilePickerAdapter.java b/app/src/main/java/com/apk/editor/adapters/RecycleViewInstallerFilePickerAdapter.java
index 9338e33..baa1a95 100644
--- a/app/src/main/java/com/apk/editor/adapters/RecycleViewInstallerFilePickerAdapter.java
+++ b/app/src/main/java/com/apk/editor/adapters/RecycleViewInstallerFilePickerAdapter.java
@@ -14,6 +14,7 @@ import com.apk.editor.utils.APKData;
 import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.APKExplorer;
 import com.apk.editor.utils.AppData;
+import com.apk.editor.utils.Common;
 import com.google.android.material.checkbox.MaterialCheckBox;
 import com.google.android.material.textview.MaterialTextView;
 
@@ -61,14 +62,14 @@ public class RecycleViewInstallerFilePickerAdapter extends RecyclerView.Adapter<
                     holder.mDescription.setText(APKData.getAppID(data.get(position), holder.mIcon.getContext()));
                     holder.mDescription.setVisibility(View.VISIBLE);
                 }
-                holder.mCheckBox.setChecked(APKExplorer.mAPKList.contains(this.data.get(position)));
+                holder.mCheckBox.setChecked(Common.getAPKList().contains(this.data.get(position)));
                 holder.mCheckBox.setOnClickListener(v -> {
-                    if (APKExplorer.mAPKList.contains(this.data.get(position))) {
-                        APKExplorer.mAPKList.remove(this.data.get(position));
+                    if (Common.getAPKList().contains(this.data.get(position))) {
+                        Common.getAPKList().remove(this.data.get(position));
                     } else {
-                        APKExplorer.mAPKList.add(this.data.get(position));
+                        Common.getAPKList().add(this.data.get(position));
                     }
-                    APKExplorer.mSelect.setVisibility(APKExplorer.mAPKList.isEmpty() ? View.GONE : View.VISIBLE);
+                    Common.getSelectCard().setVisibility(Common.getAPKList().isEmpty() ? View.GONE : View.VISIBLE);
                 });
                 holder.mSize.setText(AppData.getAPKSize(data.get(position)));
                 holder.mSize.setVisibility(View.VISIBLE);
diff --git a/app/src/main/java/com/apk/editor/adapters/RecycleViewProjectsAdapter.java b/app/src/main/java/com/apk/editor/adapters/RecycleViewProjectsAdapter.java
index 092562c..92d7243 100644
--- a/app/src/main/java/com/apk/editor/adapters/RecycleViewProjectsAdapter.java
+++ b/app/src/main/java/com/apk/editor/adapters/RecycleViewProjectsAdapter.java
@@ -17,6 +17,7 @@ import com.apk.editor.activities.APKExploreActivity;
 import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.APKExplorer;
 import com.apk.editor.utils.AppData;
+import com.apk.editor.utils.Common;
 import com.apk.editor.utils.Projects;
 import com.google.android.material.card.MaterialCardView;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
@@ -50,17 +51,17 @@ public class RecycleViewProjectsAdapter extends RecyclerView.Adapter<RecycleView
         try {
             if (AppData.isAppInstalled(new File(data.get(position)).getName(), holder.mAppIcon.getContext())) {
                 holder.mAppIcon.setImageDrawable(AppData.getAppIcon(new File(data.get(position)).getName(), holder.mAppIcon.getContext()));
-                if (Projects.mSearchText != null && AppData.getAppName(new File(data.get(position)).getName(), holder.mAppName.getContext()).toString().toLowerCase().contains(Projects.mSearchText)) {
-                    holder.mAppName.setText(APKEditorUtils.fromHtml(AppData.getAppName(new File(data.get(position)).getName(), holder.mAppName.getContext()).toString().toLowerCase().replace(Projects.mSearchText,
-                            "<b><i><font color=\"" + Color.RED + "\">" + Projects.mSearchText + "</font></i></b>")));
+                if (Common.getSearchWord() != null && AppData.getAppName(new File(data.get(position)).getName(), holder.mAppName.getContext()).toString().toLowerCase().contains(Common.getSearchWord())) {
+                    holder.mAppName.setText(APKEditorUtils.fromHtml(AppData.getAppName(new File(data.get(position)).getName(), holder.mAppName.getContext()).toString().toLowerCase().replace(Common.getSearchWord(),
+                            "<b><i><font color=\"" + Color.RED + "\">" + Common.getSearchWord() + "</font></i></b>")));
                 } else {
                     holder.mAppName.setText(AppData.getAppName(new File(data.get(position)).getName(), holder.mAppName.getContext()));
                 }
             } else {
                 holder.mAppIcon.setImageDrawable(holder.mAppIcon.getContext().getResources().getDrawable(R.drawable.ic_projects));
-                if (Projects.mSearchText != null && new File(data.get(position)).getName().toLowerCase().contains(Projects.mSearchText)) {
-                    holder.mAppName.setText(APKEditorUtils.fromHtml(new File(data.get(position)).getName().toLowerCase().replace(Projects.mSearchText,
-                            "<b><i><font color=\"" + Color.RED + "\">" + Projects.mSearchText + "</font></i></b>")));
+                if (Common.getSearchWord() != null && new File(data.get(position)).getName().toLowerCase().contains(Common.getSearchWord())) {
+                    holder.mAppName.setText(APKEditorUtils.fromHtml(new File(data.get(position)).getName().toLowerCase().replace(Common.getSearchWord(),
+                            "<b><i><font color=\"" + Color.RED + "\">" + Common.getSearchWord() + "</font></i></b>")));
                 } else {
                     holder.mAppName.setText(new File(data.get(position)).getName());
                 }
@@ -69,11 +70,11 @@ public class RecycleViewProjectsAdapter extends RecyclerView.Adapter<RecycleView
                     .format(new File(data.get(position)).lastModified())));
             holder.mCard.setOnClickListener(v -> {
                 if (AppData.isAppInstalled(data.get(position).replace(v.getContext().getCacheDir().getPath() + "/",""), v.getContext())) {
-                    APKExplorer.mAppID = data.get(position).replace(v.getContext().getCacheDir().getPath() + "/","");
+                    Common.setAppID(data.get(position).replace(v.getContext().getCacheDir().getPath() + "/",""));
                 } else {
-                    APKExplorer.mAppID = null;
+                    Common.setAppID(null);
                 }
-                APKExplorer.mPath = data.get(position);
+                Common.setPath(data.get(position));
                 Intent explorer = new Intent(v.getContext(), APKExploreActivity.class);
                 v.getContext().startActivity(explorer);
             });
diff --git a/app/src/main/java/com/apk/editor/fragments/APKExploreFragment.java b/app/src/main/java/com/apk/editor/fragments/APKExploreFragment.java
index 7e0f14a..82aa214 100644
--- a/app/src/main/java/com/apk/editor/fragments/APKExploreFragment.java
+++ b/app/src/main/java/com/apk/editor/fragments/APKExploreFragment.java
@@ -26,6 +26,7 @@ import com.apk.editor.utils.APKData;
 import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.APKExplorer;
 import com.apk.editor.utils.AppData;
+import com.apk.editor.utils.Common;
 import com.apk.editor.utils.Projects;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.android.material.textview.MaterialTextView;
@@ -55,7 +56,7 @@ public class APKExploreFragment extends androidx.fragment.app.Fragment {
         MaterialTextView mError = mRootView.findViewById(R.id.error_status);
         mRecyclerView = mRootView.findViewById(R.id.recycler_view);
 
-        mTitle.setText(APKExplorer.mAppID != null ? AppData.getAppName(APKExplorer.mAppID, requireActivity()) : new File(APKExplorer.mPath).getName());
+        mTitle.setText(Common.getAppID() != null ? AppData.getAppName(Common.getAppID(), requireActivity()) : new File(Common.getPath()).getName());
 
         mBack.setOnClickListener(v -> retainDialog());
 
@@ -96,7 +97,7 @@ public class APKExploreFragment extends androidx.fragment.app.Fragment {
             mRecyclerView.setAdapter(mRecycleViewAdapter);
         } catch (NullPointerException ignored) {
             mRecyclerView.setVisibility(View.GONE);
-            mError.setText(getString(R.string.explore_error_status, AppData.getAppName(APKExplorer.mAppID, requireActivity())));
+            mError.setText(getString(R.string.explore_error_status, AppData.getAppName(Common.getAppID(), requireActivity())));
             mError.setVisibility(View.VISIBLE);
         }
 
@@ -117,7 +118,7 @@ public class APKExploreFragment extends androidx.fragment.app.Fragment {
 
         mRecycleViewAdapter.setOnItemClickListener((position, v) -> {
             if (new File(APKExplorer.getData(getFilesList(), true, requireActivity()).get(position)).isDirectory()) {
-                APKExplorer.mPath = APKExplorer.getData(getFilesList(), true, requireActivity()).get(position);
+                Common.setPath(APKExplorer.getData(getFilesList(), true, requireActivity()).get(position));
                 reload(requireActivity());
             } else if (APKExplorer.isImageFile(APKExplorer.getData(getFilesList(), true, requireActivity()).get(position))) {
                 Intent imageView = new Intent(requireActivity(), ImageViewActivity.class);
@@ -147,11 +148,11 @@ public class APKExploreFragment extends androidx.fragment.app.Fragment {
                             if (APKExplorer.isPermissionDenied(requireActivity())) {
                                 APKExplorer.launchPermissionDialog(requireActivity());
                             } else {
-                                APKEditorUtils.mkdir(Projects.getExportPath(requireActivity()) + "/" + APKExplorer.mAppID);
-                                APKEditorUtils.copy(APKExplorer.getData(getFilesList(), true, requireActivity()).get(position), Projects.getExportPath(requireActivity()) + "/" + APKExplorer.mAppID + "/"
+                                APKEditorUtils.mkdir(Projects.getExportPath(requireActivity()) + "/" + Common.getAppID());
+                                APKEditorUtils.copy(APKExplorer.getData(getFilesList(), true, requireActivity()).get(position), Projects.getExportPath(requireActivity()) + "/" + Common.getAppID() + "/"
                                         + new File(APKExplorer.getData(getFilesList(), true, requireActivity()).get(position)).getName());
                                 new MaterialAlertDialogBuilder(requireActivity())
-                                        .setMessage(getString(R.string.export_complete_message, Projects.getExportPath(requireActivity()) + "/" + APKExplorer.mAppID))
+                                        .setMessage(getString(R.string.export_complete_message, Projects.getExportPath(requireActivity()) + "/" + Common.getAppID()))
                                         .setPositiveButton(getString(R.string.cancel), (dialog2, id2) -> {
                                         }).show();
                             }
@@ -167,10 +168,10 @@ public class APKExploreFragment extends androidx.fragment.app.Fragment {
         requireActivity().getOnBackPressedDispatcher().addCallback(new OnBackPressedCallback(true) {
             @Override
             public void handleOnBackPressed() {
-                if (Objects.requireNonNull(new File(APKExplorer.mPath).getParentFile()).getPath().equals(requireActivity().getCacheDir().getPath())) {
+                if (Objects.requireNonNull(new File(Common.getPath()).getParentFile()).getPath().equals(requireActivity().getCacheDir().getPath())) {
                     retainDialog();
                 } else {
-                    APKExplorer.mPath = Objects.requireNonNull(new File(APKExplorer.mPath).getParentFile()).getPath();
+                    Common.setPath(Objects.requireNonNull(new File(Common.getPath()).getParentFile()).getPath());
                     reload(requireActivity());
                 }
             }
@@ -184,18 +185,16 @@ public class APKExploreFragment extends androidx.fragment.app.Fragment {
             new MaterialAlertDialogBuilder(requireActivity())
                     .setMessage(R.string.save_projects_question)
                     .setNeutralButton(getString(R.string.delete), (dialog, id) -> {
-                        Projects.deleteProject(new File(requireActivity().getCacheDir().getPath(), APKExplorer.mAppID != null ? APKExplorer.mAppID :
-                                new File(APKExplorer.mPath).getName()), requireActivity());
+                        Projects.deleteProject(new File(requireActivity().getCacheDir().getPath(), Common.getAppID() != null ? Common.getAppID() :
+                                new File(Common.getPath()).getName()), requireActivity());
                         requireActivity().finish();
                     })
                     .setNegativeButton(getString(R.string.cancel), (dialog, id) -> {
                     })
-                    .setPositiveButton(getString(R.string.save), (dialog, id) -> {
-                        requireActivity().finish();
-                    }).show();
+                    .setPositiveButton(getString(R.string.save), (dialog, id) -> requireActivity().finish()).show();
         } else if (APKEditorUtils.getString("projectAction", null, requireActivity()).equals(getString(R.string.delete))) {
-            Projects.deleteProject(new File(requireActivity().getCacheDir().getPath(), APKExplorer.mAppID != null ? APKExplorer.mAppID :
-                    new File(APKExplorer.mPath).getName()), requireActivity());
+            Projects.deleteProject(new File(requireActivity().getCacheDir().getPath(), Common.getAppID() != null ? Common.getAppID() :
+                    new File(Common.getPath()).getName()), requireActivity());
             requireActivity().finish();
         } else {
             requireActivity().finish();
@@ -203,7 +202,7 @@ public class APKExploreFragment extends androidx.fragment.app.Fragment {
     }
 
     private File[] getFilesList() {
-        return new File(APKExplorer.mPath).listFiles();
+        return new File(Common.getPath()).listFiles();
     }
 
     @SuppressLint("StaticFieldLeak")
@@ -218,9 +217,9 @@ public class APKExploreFragment extends androidx.fragment.app.Fragment {
             @Override
             protected void onPostExecute(Void aVoid) {
                 super.onPostExecute(aVoid);
-                mTitle.setText(APKExplorer.mPath.equals(requireActivity().getCacheDir().getPath() + "/" + (APKExplorer.mAppID != null ?
-                        APKExplorer.mAppID : new File(APKExplorer.mPath).getName()) + File.separator) ? AppData.getAppName(APKExplorer.mAppID, activity)
-                        : new File(APKExplorer.mPath).getName());
+                mTitle.setText(Common.getAppID().equals(requireActivity().getCacheDir().getPath() + "/" + (Common.getAppID() != null ?
+                        Common.getAppID() : new File(Common.getPath()).getName()) + File.separator) ? AppData.getAppName(Common.getAppID(), activity)
+                        : new File(Common.getPath()).getName());
                 mRecyclerView.setAdapter(mRecycleViewAdapter);
             }
         }.execute();
diff --git a/app/src/main/java/com/apk/editor/fragments/APKsFragment.java b/app/src/main/java/com/apk/editor/fragments/APKsFragment.java
index 9148f43..dbcd751 100644
--- a/app/src/main/java/com/apk/editor/fragments/APKsFragment.java
+++ b/app/src/main/java/com/apk/editor/fragments/APKsFragment.java
@@ -29,8 +29,8 @@ import com.apk.editor.activities.InstallerFilePickerActivity;
 import com.apk.editor.adapters.RecycleViewApksAdapter;
 import com.apk.editor.utils.APKData;
 import com.apk.editor.utils.APKEditorUtils;
-import com.apk.editor.utils.APKExplorer;
 import com.apk.editor.utils.AppData;
+import com.apk.editor.utils.Common;
 import com.google.android.material.card.MaterialCardView;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.android.material.tabs.TabLayout;
@@ -151,7 +151,7 @@ public class APKsFragment extends Fragment {
 
             @Override
             public void afterTextChanged(Editable s) {
-                APKData.mSearchText = s.toString().toLowerCase();
+                Common.setSearchWord(s.toString().toLowerCase());
                 loadAPKs(requireActivity());
             }
         });
@@ -162,9 +162,9 @@ public class APKsFragment extends Fragment {
         requireActivity().getOnBackPressedDispatcher().addCallback(new OnBackPressedCallback(true) {
             @Override
             public void handleOnBackPressed() {
-                if (APKData.mSearchText != null) {
+                if (Common.getSearchWord() != null) {
                     mSearchWord.setText(null);
-                    APKData.mSearchText = null;
+                    Common.setSearchWord(null);
                     return;
                 }
                 if (mSearchWord.getVisibility() == View.VISIBLE) {
@@ -212,8 +212,8 @@ public class APKsFragment extends Fragment {
     }
 
     private void launchAEEInstaller() {
-        APKExplorer.mAPKList.clear();
-        APKExplorer.mPath = Environment.getExternalStorageDirectory().toString();
+        Common.getAPKList().clear();
+        Common.setPath(Environment.getExternalStorageDirectory().toString());
         Intent installer = new Intent(requireActivity(), InstallerFilePickerActivity.class);
         startActivity(installer);
     }
@@ -259,9 +259,9 @@ public class APKsFragment extends Fragment {
     public void onDestroy() {
         super.onDestroy();
 
-        if (APKData.mSearchText != null) {
+        if (Common.getSearchWord() != null) {
             mSearchWord.setText(null);
-            APKData.mSearchText = null;
+            Common.setSearchWord(null);
         }
     }
     
diff --git a/app/src/main/java/com/apk/editor/fragments/ApplicationsFragment.java b/app/src/main/java/com/apk/editor/fragments/ApplicationsFragment.java
index f255f45..475759d 100644
--- a/app/src/main/java/com/apk/editor/fragments/ApplicationsFragment.java
+++ b/app/src/main/java/com/apk/editor/fragments/ApplicationsFragment.java
@@ -27,6 +27,7 @@ import com.apk.editor.R;
 import com.apk.editor.adapters.RecycleViewAppsAdapter;
 import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.AppData;
+import com.apk.editor.utils.Common;
 import com.google.android.material.tabs.TabLayout;
 import com.google.android.material.textview.MaterialTextView;
 
@@ -133,7 +134,7 @@ public class ApplicationsFragment extends Fragment {
 
             @Override
             public void afterTextChanged(Editable s) {
-                AppData.mSearchText = s.toString().toLowerCase();
+                Common.setSearchWord(s.toString().toLowerCase());
                 loadApps(requireActivity());
             }
         });
@@ -143,9 +144,9 @@ public class ApplicationsFragment extends Fragment {
         requireActivity().getOnBackPressedDispatcher().addCallback(new OnBackPressedCallback(true) {
             @Override
             public void handleOnBackPressed() {
-                if (AppData.mSearchText != null) {
+                if (Common.getSearchWord() != null) {
                     mSearchWord.setText(null);
-                    AppData.mSearchText = null;
+                    Common.setSearchWord(null);
                     return;
                 }
                 if (mSearchWord.getVisibility() == View.VISIBLE) {
@@ -257,9 +258,9 @@ public class ApplicationsFragment extends Fragment {
     public void onDestroy() {
         super.onDestroy();
 
-        if (AppData.mSearchText != null) {
+        if (Common.getSearchWord() != null) {
             mSearchWord.setText(null);
-            AppData.mSearchText = null;
+            Common.setSearchWord(null);
         }
     }
     
diff --git a/app/src/main/java/com/apk/editor/fragments/ProjectsFragment.java b/app/src/main/java/com/apk/editor/fragments/ProjectsFragment.java
index 2a2c84e..64f06be 100644
--- a/app/src/main/java/com/apk/editor/fragments/ProjectsFragment.java
+++ b/app/src/main/java/com/apk/editor/fragments/ProjectsFragment.java
@@ -26,6 +26,7 @@ import com.apk.editor.R;
 import com.apk.editor.adapters.RecycleViewProjectsAdapter;
 import com.apk.editor.utils.APKEditorUtils;
 import com.apk.editor.utils.AppData;
+import com.apk.editor.utils.Common;
 import com.apk.editor.utils.Projects;
 import com.google.android.material.textview.MaterialTextView;
 
@@ -101,7 +102,7 @@ public class ProjectsFragment extends Fragment {
 
             @Override
             public void afterTextChanged(Editable s) {
-                Projects.mSearchText = s.toString().toLowerCase();
+                Common.setSearchWord(s.toString().toLowerCase());
                 loadProjects(requireActivity());
             }
         });
@@ -109,9 +110,9 @@ public class ProjectsFragment extends Fragment {
         requireActivity().getOnBackPressedDispatcher().addCallback(new OnBackPressedCallback(true) {
             @Override
             public void handleOnBackPressed() {
-                if (Projects.mSearchText != null) {
+                if (Common.getSearchWord() != null) {
                     mSearchWord.setText(null);
-                    Projects.mSearchText = null;
+                    Common.setSearchWord(null);
                     return;
                 }
                 if (mSearchWord.getVisibility() == View.VISIBLE) {
@@ -181,9 +182,9 @@ public class ProjectsFragment extends Fragment {
     public void onDestroy() {
         super.onDestroy();
 
-        if (Projects.mSearchText != null) {
+        if (Common.getSearchWord() != null) {
             mSearchWord.setText(null);
-            Projects.mSearchText = null;
+            Common.setSearchWord(null);
         }
     }
     
diff --git a/app/src/main/java/com/apk/editor/utils/APKData.java b/app/src/main/java/com/apk/editor/utils/APKData.java
index f0608b6..c252d0b 100644
--- a/app/src/main/java/com/apk/editor/utils/APKData.java
+++ b/app/src/main/java/com/apk/editor/utils/APKData.java
@@ -29,27 +29,26 @@ import java.util.Objects;
 public class APKData {
 
     private static final List<String> mData = new ArrayList<>();
-    public static String mSearchText;
 
     public static List<String> getData(Context context) {
         mData.clear();
         for (File mFile : getAPKList(context)) {
             if (APKEditorUtils.getString("apkTypes", "apks", context).equals("bundles")) {
                 if (mFile.exists() && mFile.isDirectory() && APKEditorUtils.exist(mFile.toString() + "/base.apk")) {
-                    if (mSearchText == null) {
+                    if (Common.getSearchWord() == null) {
                         mData.add(mFile.getAbsolutePath());
-                    } else if (mFile.getAbsolutePath().toLowerCase().contains(mSearchText.toLowerCase())) {
+                    } else if (mFile.getAbsolutePath().toLowerCase().contains(Common.getSearchWord().toLowerCase())) {
                         mData.add(mFile.getAbsolutePath());
                     }
                 }
             } else {
                 if (mFile.exists() && mFile.getName().endsWith(".apk")) {
-                    if (mSearchText == null) {
+                    if (Common.getSearchWord() == null) {
                         mData.add(mFile.getAbsolutePath());
                     } else if (getAppName(mFile.getAbsolutePath(), context) != null && Objects.requireNonNull(getAppName(
-                            mFile.getAbsolutePath(), context)).toString().toLowerCase().contains(mSearchText.toLowerCase())) {
+                            mFile.getAbsolutePath(), context)).toString().toLowerCase().contains(Common.getSearchWord().toLowerCase())) {
                         mData.add(mFile.getAbsolutePath());
-                    } else if (mFile.getName().toLowerCase().contains(mSearchText.toLowerCase())) {
+                    } else if (mFile.getName().toLowerCase().contains(Common.getSearchWord().toLowerCase())) {
                         mData.add(mFile.getAbsolutePath());
                     }
                 }
@@ -142,7 +141,7 @@ public class APKData {
 
     public static String findPackageName(Context context) {
         String name = null;
-        for (String mAPKs : APKExplorer.mAPKList) {
+        for (String mAPKs : Common.getAPKList()) {
             if (APKData.getAppID(mAPKs, context) != null) {
                 name = Objects.requireNonNull(APKData.getAppID(mAPKs, context)).toString();
             }
@@ -210,8 +209,8 @@ public class APKData {
             protected void onPreExecute() {
                 super.onPreExecute();
                 mProgressDialog = new ProgressDialog(activity);
-                mProgressDialog.setMessage(activity.getString(R.string.preparing_apk, (APKExplorer.mAppID != null ? APKExplorer.mAppID :
-                        new File(APKExplorer.mPath).getName())));
+                mProgressDialog.setMessage(activity.getString(R.string.preparing_apk, (Common.getAppID() != null ? Common.getAppID() :
+                        new File(Common.getPath()).getName())));
                 mProgressDialog.setCancelable(false);
                 mProgressDialog.show();
 
@@ -222,17 +221,17 @@ public class APKData {
 
             @Override
             protected Void doInBackground(Void... voids) {
-                if (APKExplorer.mAppID != null) {
-                    File mExportPath = new File(activity.getCacheDir().getPath(), APKExplorer.mAppID);
+                if (Common.getAppID() != null) {
+                    File mExportPath = new File(activity.getCacheDir().getPath(), Common.getAppID());
                     File mBackUpPath = new File(mExportPath, ".aeeBackup");
                     mBuilDir = new File(mExportPath, ".aeeBuild");
                     mBuilDir.mkdirs();
                     prepareSource(mBuilDir, mExportPath, mBackUpPath);
                     APKEditorUtils.zip(mBuilDir, mTMPZip);
-                    if (APKData.isAppBundle(AppData.getSourceDir(APKExplorer.mAppID, activity))) {
-                        File mParent = new File(getExportAPKsPath(activity), APKExplorer.mAppID + "_aee-signed");
+                    if (APKData.isAppBundle(AppData.getSourceDir(Common.getAppID(), activity))) {
+                        File mParent = new File(getExportAPKsPath(activity), Common.getAppID() + "_aee-signed");
                         mParent.mkdirs();
-                        for (String mSplits : splitApks(AppData.getSourceDir(APKExplorer.mAppID, activity))) {
+                        for (String mSplits : splitApks(AppData.getSourceDir(Common.getAppID(), activity))) {
                             if (!new File(mSplits).getName().equals("base.apk")) {
                                 signApks(new File(mSplits), new File(mParent.toString() + "/" + new File(mSplits).getName()), activity);
                             }
@@ -242,19 +241,19 @@ public class APKData {
                         if (!getExportAPKsPath(activity).exists()) {
                             getExportAPKsPath(activity).mkdirs();
                         }
-                        signApks(mTMPZip, new File(getExportAPKsPath(activity), APKExplorer.mAppID + "_aee-signed.apk"), activity);
+                        signApks(mTMPZip, new File(getExportAPKsPath(activity), Common.getAppID() + "_aee-signed.apk"), activity);
                     }
                 } else {
                     if (!getExportAPKsPath(activity).exists()) {
                         getExportAPKsPath(activity).mkdirs();
                     }
-                    File mExportPath = new File(activity.getCacheDir().getPath() + "/" + new File(APKExplorer.mPath).getName());
+                    File mExportPath = new File(activity.getCacheDir().getPath() + "/" + new File(Common.getPath()).getName());
                     File mBackUpPath = new File(mExportPath, ".aeeBackup");
                     mBuilDir = new File(mExportPath, ".aeeBuild");
                     mBuilDir.mkdirs();
                     prepareSource(mBuilDir, mExportPath, mBackUpPath);
                     APKEditorUtils.zip(mBuilDir, mTMPZip);
-                    signApks(mTMPZip, new File(getExportAPKsPath(activity), new File(APKExplorer.mPath).getName() + "_aee-signed.apk"), activity);
+                    signApks(mTMPZip, new File(getExportAPKsPath(activity), new File(Common.getPath()).getName() + "_aee-signed.apk"), activity);
                 }
                 return null;
             }
@@ -331,17 +330,17 @@ public class APKData {
             @Override
             protected Void doInBackground(Void... voids) {
                 if (mPackageName != null) {
-                    if (APKExplorer.mAPKList.size() > 1) {
+                    if (Common.getAPKList().size() > 1) {
                         File mParent = new File(Projects.getExportPath(activity) + "/" + mPackageName + "_aee-signed");
                         mParent.mkdirs();
                         mSignedAPKPath = mParent.getAbsolutePath();
-                        for (String mSplits : APKExplorer.mAPKList) {
+                        for (String mSplits : Common.getAPKList()) {
                             signApks(new File(mSplits), new File(mParent.toString() + "/" + new File(mSplits).getName()), activity);
                         }
                     } else {
                         new File(Projects.getExportPath(activity)).mkdirs();
                         mSignedAPKPath = Projects.getExportPath(activity) + "/" + mPackageName + "_aee-signed.apk";
-                        signApks(new File(APKExplorer.mAPKList.get(0)), new File(Projects.getExportPath(activity) + "/" + mPackageName + "_aee-signed.apk"), activity);
+                        signApks(new File(Common.getAPKList().get(0)), new File(Projects.getExportPath(activity) + "/" + mPackageName + "_aee-signed.apk"), activity);
                     }
                 }
                 return null;
@@ -393,14 +392,14 @@ public class APKData {
                 if (mPackageName != null) {
                     mParent = new File(activity.getCacheDir(), "aee-signed");
                     mParent.mkdirs();
-                    if (APKExplorer.mAPKList.size() > 1) {
+                    if (Common.getAPKList().size() > 1) {
                         mSignedAPKPath = mParent.getAbsolutePath();
-                        for (String mSplits : APKExplorer.mAPKList) {
+                        for (String mSplits : Common.getAPKList()) {
                             signApks(new File(mSplits), new File(mParent, new File(mSplits).getName()), activity);
                         }
                     } else {
                         mSignedAPKPath = mParent.toString() + "/" + "aee-signed.apk";
-                        signApks(new File(APKExplorer.mAPKList.get(0)), new File(mParent, "aee-signed.apk"), activity);
+                        signApks(new File(Common.getAPKList().get(0)), new File(mParent, "aee-signed.apk"), activity);
                     }
                 }
                 return null;
@@ -416,9 +415,9 @@ public class APKData {
                 if (mPackageName == null) {
                     APKEditorUtils.snackbar(activity.findViewById(android.R.id.content), activity.getString(R.string.installation_status_bad_apks));
                 } else {
-                    if (APKExplorer.mAPKList.size() > 1) {
+                    if (Common.getAPKList().size() > 1) {
                         List<String> signedAPKs = new ArrayList<>();
-                        for (String mAPKs : APKExplorer.mAPKList) {
+                        for (String mAPKs : Common.getAPKList()) {
                             signedAPKs.add(mSignedAPKPath + "/" + new File(mAPKs).getName());
                         }
                         SplitAPKInstaller.installSplitAPKs(signedAPKs, null, activity);
@@ -426,7 +425,7 @@ public class APKData {
                         SplitAPKInstaller.installAPK(new File(mSignedAPKPath), activity);
                     }
                 }
-                APKExplorer.mFinish = true;
+                Common.setFinishStatus(true);
             }
         }.execute();
     }
diff --git a/app/src/main/java/com/apk/editor/utils/APKExplorer.java b/app/src/main/java/com/apk/editor/utils/APKExplorer.java
index 416e002..c1fc7fc 100644
--- a/app/src/main/java/com/apk/editor/utils/APKExplorer.java
+++ b/app/src/main/java/com/apk/editor/utils/APKExplorer.java
@@ -50,11 +50,6 @@ import java.util.Objects;
  */
 public class APKExplorer {
 
-    public static boolean mFinish = false, mPrivateKey = false, mRSATemplate = false;
-    public static List<String> mAPKList = new ArrayList<>();
-    public static MaterialCardView mSelect;
-    public static String mAppID, mPath = null, mFilePath = null, mFileToReplace = null;
-
     public static List<String> getData(File[] files, boolean supported, Activity activity) {
         List<String> mData = new ArrayList<>(), mDir = new ArrayList<>(), mFiles = new ArrayList<>();
         try {
@@ -101,6 +96,10 @@ public class APKExplorer {
         return path.endsWith(".bmp") || path.endsWith(".png") || path.endsWith(".jpg");
     }
 
+    public static boolean isBinaryXML(String path) {
+        return path.endsWith(".xml") && (new File(path).getName().equals("AndroidManifest.xml") || path.contains(Common.getAppID() + "/res/"));
+    }
+
     private static boolean isSupportedFile(String path) {
         return path.endsWith(".apk") || path.endsWith(".apks") || path.endsWith(".apkm") || path.endsWith(".xapk");
     }
@@ -213,10 +212,10 @@ public class APKExplorer {
                 mProgressDialog.setMessage(context.getString(R.string.exploring, AppData.getAppName(packageName, context)));
                 mProgressDialog.setCancelable(false);
                 mProgressDialog.show();
-                APKExplorer.mAppID = packageName;
+                Common.setAppID(packageName);
                 mExplorePath = new File(context.getCacheDir().getPath(), packageName);
                 mBackUpPath = new File(mExplorePath, ".aeeBackup");
-                APKExplorer.mPath = mExplorePath.getAbsolutePath();
+                Common.setPath(mExplorePath.getAbsolutePath());
             }
             @Override
             protected Void doInBackground(Void... voids) {
@@ -232,7 +231,7 @@ public class APKExplorer {
                             File mDexExtractPath = new File(mExplorePath, files.getName());
                             mDexExtractPath.mkdirs();
                             mProgressDialog.setMessage(context.getString(R.string.decompiling, files.getName()));
-                            dexToSmali(new File(AppData.getSourceDir(APKExplorer.mAppID, context)), mDexExtractPath, files.getName(), false, 0);
+                            dexToSmali(new File(AppData.getSourceDir(Common.getAppID(), context)), mDexExtractPath, files.getName(), false, 0);
                         }
                     }
                 }
diff --git a/app/src/main/java/com/apk/editor/utils/AppData.java b/app/src/main/java/com/apk/editor/utils/AppData.java
index 3da36f6..5149493 100644
--- a/app/src/main/java/com/apk/editor/utils/AppData.java
+++ b/app/src/main/java/com/apk/editor/utils/AppData.java
@@ -20,7 +20,6 @@ import java.util.Objects;
 public class AppData {
 
     private static final List<String> mData = new ArrayList<>();
-    public static String mSearchText;
 
     public static List<String> getData(Context context) {
         boolean mAppType;
@@ -40,10 +39,10 @@ public class AppData {
                 mAppType = true;
             }
             if (mAppType) {
-                if (mSearchText == null) {
+                if (Common.getSearchWord() == null) {
                     mData.add(packageInfo.packageName);
-                } else if (getPackageManager(context).getApplicationLabel(packageInfo).toString().toLowerCase().contains(mSearchText.toLowerCase())
-                        || packageInfo.packageName.toLowerCase().contains(mSearchText.toLowerCase())) {
+                } else if (getPackageManager(context).getApplicationLabel(packageInfo).toString().toLowerCase().contains(Common.getSearchWord().toLowerCase())
+                        || packageInfo.packageName.toLowerCase().contains(Common.getSearchWord().toLowerCase())) {
                     mData.add(packageInfo.packageName);
                 }
             }
diff --git a/app/src/main/java/com/apk/editor/utils/Common.java b/app/src/main/java/com/apk/editor/utils/Common.java
new file mode 100644
index 0000000..6f66838
--- /dev/null
+++ b/app/src/main/java/com/apk/editor/utils/Common.java
@@ -0,0 +1,112 @@
+package com.apk.editor.utils;
+
+import android.view.View;
+
+import com.google.android.material.card.MaterialCardView;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/*
+ * Created by APK Explorer & Editor <apkeditor@protonmail.com> on June 12, 2021
+ */
+public class Common {
+
+    private static boolean mFinish = false, mPrivateKey = false, mRSATemplate = false;
+    private static final List<String> mAPKList = new ArrayList<>();
+    private static MaterialCardView mSelect;
+    private static String mAppID, mFilePath = null, mFileToReplace = null, mPackageName = null, mPath = null, mSearchText, mSearchWord;
+
+    public static boolean isFinished() {
+        return mFinish;
+    }
+
+    public static boolean hasPrivateKey() {
+        return mPrivateKey;
+    }
+
+    public static boolean hasRASATemplate() {
+        return mRSATemplate;
+    }
+
+    public static List<String> getAPKList() {
+        return mAPKList;
+    }
+
+    public static MaterialCardView getSelectCard() {
+        return mSelect;
+    }
+
+    public static String getAppID() {
+        return mAppID;
+    }
+
+    public static String getFilePath() {
+        return mFilePath;
+    }
+
+    public static String getFileToReplace() {
+        return mFileToReplace;
+    }
+
+    public static String getPackageName() {
+        return mPackageName;
+    }
+
+    public static String getPath() {
+        return mPath;
+    }
+
+    public static String getSearchText() {
+        return mSearchText;
+    }
+
+    public static String getSearchWord() {
+        return mSearchWord;
+    }
+
+    public static void initializeView(View view, int id) {
+        mSelect = view.findViewById(id);
+    }
+
+    public static void setFinishStatus(boolean b) {
+        mFinish = b;
+    }
+
+    public static void setPrivateKeyStatus(boolean b) {
+        mPrivateKey = b;
+    }
+
+    public static void setRSATemplateStatus(boolean b) {
+        mRSATemplate = b;
+    }
+
+    public static void setAppID(String appID) {
+        mAppID = appID;
+    }
+
+    public static void setFilePath(String filePath) {
+        mFilePath = filePath;
+    }
+
+    public static void setFileToReplace(String fileToReplace) {
+        mFileToReplace = fileToReplace;
+    }
+
+    public static void setPackageName(String packageName) {
+        mPackageName = packageName;
+    }
+
+    public static void setPath(String path) {
+        mPath = path;
+    }
+
+    public static void setSearchText(String searchText) {
+        mSearchText = searchText;
+    }
+
+    public static void setSearchWord(String searchWord) {
+        mSearchWord = searchWord;
+    }
+
+}
\ No newline at end of file
diff --git a/app/src/main/java/com/apk/editor/utils/Projects.java b/app/src/main/java/com/apk/editor/utils/Projects.java
index bb6aa60..32c224c 100644
--- a/app/src/main/java/com/apk/editor/utils/Projects.java
+++ b/app/src/main/java/com/apk/editor/utils/Projects.java
@@ -19,15 +19,14 @@ import java.util.Objects;
 public class Projects {
 
     private static final List<String> mData = new ArrayList<>();
-    public static String mSearchText;
 
     public static List<String> getData(Context context) {
         mData.clear();
         for (File mFile : Objects.requireNonNull(new File(context.getCacheDir().toString()).listFiles())) {
             if (mFile.exists() && mFile.isDirectory() && !mFile.getName().matches("WebView|splits|aee-signed")) {
-                if (mSearchText == null) {
+                if (Common.getSearchWord() == null) {
                     mData.add(mFile.getAbsolutePath());
-                } else if (mFile.getName().toLowerCase().contains(mSearchText.toLowerCase())) {
+                } else if (mFile.getName().toLowerCase().contains(Common.getSearchWord().toLowerCase())) {
                     mData.add(mFile.getAbsolutePath());
                 }
             }
diff --git a/app/src/main/java/com/apk/editor/utils/SplitAPKInstaller.java b/app/src/main/java/com/apk/editor/utils/SplitAPKInstaller.java
index 8d54b1b..d801e7b 100644
--- a/app/src/main/java/com/apk/editor/utils/SplitAPKInstaller.java
+++ b/app/src/main/java/com/apk/editor/utils/SplitAPKInstaller.java
@@ -113,8 +113,8 @@ public class SplitAPKInstaller {
                     totalSize += mFile.length();
                 }
             }
-        } else if (APKExplorer.mAPKList.size() > 0) {
-            for (String string : APKExplorer.mAPKList) {
+        } else if (Common.getAPKList().size() > 0) {
+            for (String string : Common.getAPKList()) {
                 if (APKEditorUtils.exist(string)) {
                     File mFile = new File(string);
                     if (mFile.exists() && mFile.getName().endsWith(".apk")) {
@@ -158,8 +158,8 @@ public class SplitAPKInstaller {
                     mProgressDialog.dismiss();
                 } catch (IllegalArgumentException ignored) {
                 }
-                APKExplorer.mAPKList.clear();
-                APKExplorer.mPath = activity.getCacheDir().getPath() + "/splits";
+                Common.getAPKList().clear();
+                Common.setPath(activity.getCacheDir().getPath() + "/splits");
                 Intent installer = new Intent(activity, InstallerFilePickerActivity.class);
                 installer.putExtra(InstallerFilePickerActivity.TITLE_INTENT, activity.getString(R.string.select_apk));
                 activity.startActivity(installer);
diff --git a/app/src/main/java/com/apk/editor/utils/TextEditor.java b/app/src/main/java/com/apk/editor/utils/TextEditor.java
deleted file mode 100644
index 57887b6..0000000
--- a/app/src/main/java/com/apk/editor/utils/TextEditor.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.apk.editor.utils;
-
-import java.io.File;
-
-/*
- * Created by APK Explorer & Editor <apkeditor@protonmail.com> on March 25, 2021
- */
-public class TextEditor {
-
-    public static String mSearchText;
-
-    public static boolean isBinaryXML(String path) {
-        return path.endsWith(".xml") && (new File(path).getName().equals("AndroidManifest.xml") || path.contains(APKExplorer.mAppID + "/res/"));
-    }
-
-}
\ No newline at end of file
