diff --git a/src/com/better/alarm/Log.java b/src/com/better/alarm/Log.java
index 8536c76d..c913bca9 100644
--- a/src/com/better/alarm/Log.java
+++ b/src/com/better/alarm/Log.java
@@ -23,12 +23,12 @@ package com.better.alarm;
 import java.text.SimpleDateFormat;
 import java.util.Date;
 
-import com.better.alarm.presenter.AlarmClock;
+import com.better.alarm.presenter.AlarmsListActivity;
 
 public class Log {
     public final static String LOGTAG = "AlarmClock";
 
-    public static final boolean LOGV = AlarmClock.DEBUG ? false : false;
+    public static final boolean LOGV = AlarmsListActivity.DEBUG ? false : false;
 
     public static void v(String logMe) {
         android.util.Log.v(LOGTAG, /* SystemClock.uptimeMillis() + " " + */logMe);
diff --git a/src/com/better/alarm/model/Alarms.java b/src/com/better/alarm/model/Alarms.java
index 9ac11ffc..3ca37499 100644
--- a/src/com/better/alarm/model/Alarms.java
+++ b/src/com/better/alarm/model/Alarms.java
@@ -36,7 +36,7 @@ import android.provider.Settings;
 import android.text.format.DateFormat;
 
 import com.better.alarm.Log;
-import com.better.alarm.presenter.AlarmClock;
+import com.better.alarm.presenter.AlarmsListActivity;
 
 /**
  * The Alarms provider supplies info about Alarm Clock settings
@@ -176,7 +176,7 @@ public class Alarms {
     private static void clearSnoozeIfNeeded(Context context, long alarmTime) {
         // If this alarm fires before the next snooze, clear the snooze to
         // enable this alarm.
-        SharedPreferences prefs = context.getSharedPreferences(AlarmClock.PREFERENCES, 0);
+        SharedPreferences prefs = context.getSharedPreferences(AlarmsListActivity.PREFERENCES, 0);
 
         // Get the list of snoozed alarms
         final Set<String> snoozedIds = prefs.getStringSet(PREF_SNOOZE_IDS, new HashSet<String>());
@@ -282,7 +282,7 @@ public class Alarms {
     private static Alarm calculateNextAlert(final Context context) {
         long minTime = Long.MAX_VALUE;
         long now = System.currentTimeMillis();
-        final SharedPreferences prefs = context.getSharedPreferences(AlarmClock.PREFERENCES, 0);
+        final SharedPreferences prefs = context.getSharedPreferences(AlarmsListActivity.PREFERENCES, 0);
 
         Set<Alarm> alarms = new HashSet<Alarm>();
 
@@ -440,7 +440,7 @@ public class Alarms {
     }
 
     public static void saveSnoozeAlert(final Context context, final int id, final long time) {
-        SharedPreferences prefs = context.getSharedPreferences(AlarmClock.PREFERENCES, 0);
+        SharedPreferences prefs = context.getSharedPreferences(AlarmsListActivity.PREFERENCES, 0);
         if (id == INVALID_ALARM_ID) {
             clearAllSnoozePreferences(context, prefs);
         } else {
@@ -467,7 +467,7 @@ public class Alarms {
      * Disable the snooze alert if the given id matches the snooze id.
      */
     public static void disableSnoozeAlert(final Context context, final int id) {
-        SharedPreferences prefs = context.getSharedPreferences(AlarmClock.PREFERENCES, 0);
+        SharedPreferences prefs = context.getSharedPreferences(AlarmsListActivity.PREFERENCES, 0);
         if (hasAlarmBeenSnoozed(prefs, id)) {
             // This is the same id so clear the shared prefs.
             clearSnoozePreference(context, prefs, id);
diff --git a/src/com/better/alarm/presenter/AlarmAlertFullScreen.java b/src/com/better/alarm/presenter/AlarmAlertFullScreen.java
index 25b49674..5cf6f3b8 100644
--- a/src/com/better/alarm/presenter/AlarmAlertFullScreen.java
+++ b/src/com/better/alarm/presenter/AlarmAlertFullScreen.java
@@ -168,7 +168,7 @@ public class AlarmAlertFullScreen extends Activity {
         label = getString(R.string.alarm_notify_snooze_label, label);
 
         // Notify the user that the alarm has been snoozed.
-        Intent cancelSnooze = new Intent(this, AlarmReceiver.class);
+        Intent cancelSnooze = new Intent(this, AlarmAlertReceiver.class);
         cancelSnooze.setAction(Alarms.CANCEL_SNOOZE);
         cancelSnooze.putExtra(Alarms.ALARM_INTENT_EXTRA, mAlarm);
         PendingIntent broadcast = PendingIntent.getBroadcast(this, mAlarm.id, cancelSnooze, 0);
diff --git a/src/com/better/alarm/presenter/AlarmReceiver.java b/src/com/better/alarm/presenter/AlarmAlertReceiver.java
similarity index 98%
rename from src/com/better/alarm/presenter/AlarmReceiver.java
rename to src/com/better/alarm/presenter/AlarmAlertReceiver.java
index bd74d548..15cc923f 100644
--- a/src/com/better/alarm/presenter/AlarmReceiver.java
+++ b/src/com/better/alarm/presenter/AlarmAlertReceiver.java
@@ -36,7 +36,7 @@ import com.better.alarm.model.Alarms;
  * Glue class: connects AlarmAlert IntentReceiver to AlarmAlert activity. Passes
  * through Alarm ID.
  */
-public class AlarmReceiver extends BroadcastReceiver {
+public class AlarmAlertReceiver extends BroadcastReceiver {
 
     /**
      * If the alarm is older than STALE_WINDOW, ignore. It is probably the
@@ -195,7 +195,7 @@ public class AlarmReceiver extends BroadcastReceiver {
         }
 
         // Launch SetAlarm when clicked.
-        Intent viewAlarm = new Intent(context, SetAlarm.class);
+        Intent viewAlarm = new Intent(context, SetAlarmActivity.class);
         viewAlarm.putExtra(Alarms.ALARM_INTENT_EXTRA, alarm);
         PendingIntent intent = PendingIntent.getActivity(context, alarm.id, viewAlarm, 0);
 
diff --git a/src/com/better/alarm/presenter/AlarmKlaxon.java b/src/com/better/alarm/presenter/AlarmKlaxonService.java
similarity index 99%
rename from src/com/better/alarm/presenter/AlarmKlaxon.java
rename to src/com/better/alarm/presenter/AlarmKlaxonService.java
index d62e4ed2..02162433 100644
--- a/src/com/better/alarm/presenter/AlarmKlaxon.java
+++ b/src/com/better/alarm/presenter/AlarmKlaxonService.java
@@ -43,7 +43,7 @@ import com.better.alarm.model.Alarms;
  * Manages alarms and vibe. Runs as a service so that it can continue to play if
  * another activity overrides the AlarmAlert dialog.
  */
-public class AlarmKlaxon extends Service {
+public class AlarmKlaxonService extends Service {
     // Default of 10 minutes until alarm is silenced.
     private static final String DEFAULT_ALARM_TIMEOUT = "10";
 
diff --git a/src/com/better/alarm/presenter/AlarmClock.java b/src/com/better/alarm/presenter/AlarmsListActivity.java
similarity index 94%
rename from src/com/better/alarm/presenter/AlarmClock.java
rename to src/com/better/alarm/presenter/AlarmsListActivity.java
index 1af12f31..9d6ba74e 100644
--- a/src/com/better/alarm/presenter/AlarmClock.java
+++ b/src/com/better/alarm/presenter/AlarmsListActivity.java
@@ -50,7 +50,7 @@ import com.better.alarm.view.DigitalClock;
 /**
  * AlarmClock application.
  */
-public class AlarmClock extends Activity implements OnItemClickListener {
+public class AlarmsListActivity extends Activity implements OnItemClickListener {
 
     public static final String PREFERENCES = "AlarmClock";
 
@@ -68,7 +68,7 @@ public class AlarmClock extends Activity implements OnItemClickListener {
     private void updateAlarm(boolean enabled, Alarm alarm) {
         Alarms.enableAlarm(this, alarm.id, enabled);
         if (enabled) {
-            SetAlarm.popAlarmSetToast(this, alarm.hour, alarm.minutes, alarm.daysOfWeek);
+            SetAlarmActivity.popAlarmSetToast(this, alarm.hour, alarm.minutes, alarm.daysOfWeek);
         }
     }
 
@@ -114,7 +114,7 @@ public class AlarmClock extends Activity implements OnItemClickListener {
 
             // Set the repeat text or leave it blank if it does not repeat.
             TextView daysOfWeekView = (TextView) digitalClock.findViewById(R.id.daysOfWeek);
-            final String daysOfWeekStr = alarm.daysOfWeek.toString(AlarmClock.this, false);
+            final String daysOfWeekStr = alarm.daysOfWeek.toString(AlarmsListActivity.this, false);
             if (daysOfWeekStr != null && daysOfWeekStr.length() != 0) {
                 daysOfWeekView.setText(daysOfWeekStr);
                 daysOfWeekView.setVisibility(View.VISIBLE);
@@ -148,7 +148,7 @@ public class AlarmClock extends Activity implements OnItemClickListener {
                     .setMessage(getString(R.string.delete_alarm_confirm))
                     .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
                         public void onClick(DialogInterface d, int w) {
-                            Alarms.deleteAlarm(AlarmClock.this, id);
+                            Alarms.deleteAlarm(AlarmsListActivity.this, id);
                         }
                     }).setNegativeButton(android.R.string.cancel, null).show();
             return true;
@@ -159,7 +159,7 @@ public class AlarmClock extends Activity implements OnItemClickListener {
             final Alarm alarm = new Alarm(c);
             Alarms.enableAlarm(this, alarm.id, !alarm.enabled);
             if (!alarm.enabled) {
-                SetAlarm.popAlarmSetToast(this, alarm.hour, alarm.minutes, alarm.daysOfWeek);
+                SetAlarmActivity.popAlarmSetToast(this, alarm.hour, alarm.minutes, alarm.daysOfWeek);
             }
             return true;
         }
@@ -167,7 +167,7 @@ public class AlarmClock extends Activity implements OnItemClickListener {
         case R.id.edit_alarm: {
             final Cursor c = (Cursor) mAlarmsList.getAdapter().getItem(info.position);
             final Alarm alarm = new Alarm(c);
-            Intent intent = new Intent(this, SetAlarm.class);
+            Intent intent = new Intent(this, SetAlarmActivity.class);
             intent.putExtra(Alarms.ALARM_INTENT_EXTRA, alarm);
             startActivity(intent);
             return true;
@@ -210,7 +210,7 @@ public class AlarmClock extends Activity implements OnItemClickListener {
     }
 
     private void addNewAlarm() {
-        startActivity(new Intent(this, SetAlarm.class));
+        startActivity(new Intent(this, SetAlarmActivity.class));
     }
 
     @Override
@@ -278,7 +278,7 @@ public class AlarmClock extends Activity implements OnItemClickListener {
     public void onItemClick(AdapterView parent, View v, int pos, long id) {
         final Cursor c = (Cursor) mAlarmsList.getAdapter().getItem(pos);
         final Alarm alarm = new Alarm(c);
-        Intent intent = new Intent(this, SetAlarm.class);
+        Intent intent = new Intent(this, SetAlarmActivity.class);
         intent.putExtra(Alarms.ALARM_INTENT_EXTRA, alarm);
         startActivity(intent);
     }
diff --git a/src/com/better/alarm/presenter/HandleSetAlarm.java b/src/com/better/alarm/presenter/HandleSetAlarm.java
deleted file mode 100644
index 618b2c81..00000000
--- a/src/com/better/alarm/presenter/HandleSetAlarm.java
+++ /dev/null
@@ -1,121 +0,0 @@
-/*
- * Copyright (C) 2010 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.better.alarm.presenter;
-
-import static android.provider.AlarmClock.ACTION_SET_ALARM;
-import static android.provider.AlarmClock.EXTRA_HOUR;
-import static android.provider.AlarmClock.EXTRA_MESSAGE;
-import static android.provider.AlarmClock.EXTRA_MINUTES;
-import static android.provider.AlarmClock.EXTRA_SKIP_UI;
-
-import java.util.Calendar;
-
-import android.app.Activity;
-import android.content.ContentResolver;
-import android.content.ContentValues;
-import android.content.Intent;
-import android.database.Cursor;
-import android.net.Uri;
-import android.os.Bundle;
-
-import com.better.alarm.model.Alarm;
-import com.better.alarm.model.Alarms;
-
-public class HandleSetAlarm extends Activity {
-
-    @Override
-    protected void onCreate(Bundle icicle) {
-        super.onCreate(icicle);
-        Intent intent = getIntent();
-        if (intent == null || !ACTION_SET_ALARM.equals(intent.getAction())) {
-            finish();
-            return;
-        } else if (!intent.hasExtra(EXTRA_HOUR)) {
-            startActivity(new Intent(this, AlarmClock.class));
-            finish();
-            return;
-        }
-
-        final Calendar calendar = Calendar.getInstance();
-        calendar.setTimeInMillis(System.currentTimeMillis());
-        final int hour = intent.getIntExtra(EXTRA_HOUR, calendar.get(Calendar.HOUR_OF_DAY));
-        final int minutes = intent.getIntExtra(EXTRA_MINUTES, calendar.get(Calendar.MINUTE));
-        final boolean skipUi = intent.getBooleanExtra(EXTRA_SKIP_UI, false);
-        String message = intent.getStringExtra(EXTRA_MESSAGE);
-        if (message == null) {
-            message = "";
-        }
-
-        Cursor c = null;
-        long timeInMillis = Alarms.calculateAlarm(hour, minutes, new Alarm.DaysOfWeek(0)).getTimeInMillis();
-        try {
-            c = getContentResolver().query(
-                    Alarm.Columns.CONTENT_URI,
-                    Alarm.Columns.ALARM_QUERY_COLUMNS,
-                    Alarm.Columns.HOUR + "=" + hour + " AND " + Alarm.Columns.MINUTES + "=" + minutes + " AND "
-                            + Alarm.Columns.DAYS_OF_WEEK + "=0 AND " + Alarm.Columns.MESSAGE + "=?",
-                    new String[] { message }, null);
-            if (handleCursorResult(c, timeInMillis, true, skipUi)) {
-                finish();
-                return;
-            }
-        } finally {
-            if (c != null) c.close();
-            // Reset for use below.
-            c = null;
-        }
-
-        ContentValues values = new ContentValues();
-        values.put(Alarm.Columns.HOUR, hour);
-        values.put(Alarm.Columns.MINUTES, minutes);
-        values.put(Alarm.Columns.MESSAGE, message);
-        values.put(Alarm.Columns.ENABLED, 1);
-        values.put(Alarm.Columns.VIBRATE, 1);
-        values.put(Alarm.Columns.DAYS_OF_WEEK, 0);
-        values.put(Alarm.Columns.ALARM_TIME, timeInMillis);
-
-        ContentResolver cr = getContentResolver();
-        Uri result = cr.insert(Alarm.Columns.CONTENT_URI, values);
-        if (result != null) {
-            try {
-                c = cr.query(result, Alarm.Columns.ALARM_QUERY_COLUMNS, null, null, null);
-                handleCursorResult(c, timeInMillis, false, skipUi);
-            } finally {
-                if (c != null) c.close();
-            }
-        }
-
-        finish();
-    }
-
-    private boolean handleCursorResult(Cursor c, long timeInMillis, boolean enable, boolean skipUi) {
-        if (c != null && c.moveToFirst()) {
-            Alarm alarm = new Alarm(c);
-            if (enable) {
-                Alarms.enableAlarm(this, alarm.id, true);
-            }
-            SetAlarm.popAlarmSetToast(this, timeInMillis);
-            if (!skipUi) {
-                Intent i = new Intent(this, SetAlarm.class);
-                i.putExtra(Alarms.ALARM_INTENT_EXTRA, alarm);
-                startActivity(i);
-            }
-            return true;
-        }
-        return false;
-    }
-}
diff --git a/src/com/better/alarm/presenter/SetAlarm.java b/src/com/better/alarm/presenter/SetAlarmActivity.java
similarity index 97%
rename from src/com/better/alarm/presenter/SetAlarm.java
rename to src/com/better/alarm/presenter/SetAlarmActivity.java
index d8e51a7c..d0d82be5 100644
--- a/src/com/better/alarm/presenter/SetAlarm.java
+++ b/src/com/better/alarm/presenter/SetAlarmActivity.java
@@ -42,7 +42,7 @@ import com.better.alarm.model.Alarms;
 /**
  * Manages each alarm
  */
-public class SetAlarm extends PreferenceActivity implements Preference.OnPreferenceChangeListener,
+public class SetAlarmActivity extends PreferenceActivity implements Preference.OnPreferenceChangeListener,
         TimePickerDialog.OnTimeSetListener, OnCancelListener {
     private static final String KEY_CURRENT_ALARM = "currentAlarm";
     private static final String KEY_ORIGINAL_ALARM = "originalAlarm";
@@ -104,7 +104,7 @@ public class SetAlarm extends PreferenceActivity implements Preference.OnPrefere
             public void onClick(View v) {
                 long time = saveAlarm(null);
                 if (mEnabledPref.isChecked()) {
-                    popAlarmSetToast(SetAlarm.this, time);
+                    popAlarmSetToast(SetAlarmActivity.this, time);
                 }
                 finish();
             }
@@ -280,7 +280,7 @@ public class SetAlarm extends PreferenceActivity implements Preference.OnPrefere
                 .setMessage(getString(R.string.delete_alarm_confirm))
                 .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
                     public void onClick(DialogInterface d, int w) {
-                        Alarms.deleteAlarm(SetAlarm.this, mId);
+                        Alarms.deleteAlarm(SetAlarmActivity.this, mId);
                         finish();
                     }
                 }).setNegativeButton(android.R.string.cancel, null).show();
@@ -290,7 +290,7 @@ public class SetAlarm extends PreferenceActivity implements Preference.OnPrefere
         int newId = mId;
         // "Revert" on a newly created alarm should delete it.
         if (mOriginalAlarm.id == -1) {
-            Alarms.deleteAlarm(SetAlarm.this, newId);
+            Alarms.deleteAlarm(SetAlarmActivity.this, newId);
         } else {
             saveAlarm(mOriginalAlarm);
         }
