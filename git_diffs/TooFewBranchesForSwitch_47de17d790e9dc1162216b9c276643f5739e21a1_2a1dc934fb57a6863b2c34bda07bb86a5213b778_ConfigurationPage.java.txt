diff --git a/app/src/main/java/com/graph89/common/CalculatorInstanceHelper.java b/app/src/main/java/com/graph89/common/CalculatorInstanceHelper.java
index 63df32f..eecdbbd 100644
--- a/app/src/main/java/com/graph89/common/CalculatorInstanceHelper.java
+++ b/app/src/main/java/com/graph89/common/CalculatorInstanceHelper.java
@@ -175,7 +175,7 @@ public class CalculatorInstanceHelper
 	{
 		synchronized (LockObj)
 		{
-			ConfigurationHelper.WriteString(mContext, ConfigurationHelper.CONF_KEY_CALCULATOR_INSTANCES, toJson());
+			ConfigurationHelper.writeString(mContext, ConfigurationHelper.CONF_KEY_CALCULATOR_INSTANCES, toJson());
 		}
 	}
 
@@ -187,7 +187,7 @@ public class CalculatorInstanceHelper
 			{
 				sInstances = new ArrayList<CalculatorInstance>();
 
-				String instancesJson = ConfigurationHelper.GetString(mContext, ConfigurationHelper.CONF_KEY_CALCULATOR_INSTANCES, null);
+				String instancesJson = ConfigurationHelper.getString(mContext, ConfigurationHelper.CONF_KEY_CALCULATOR_INSTANCES, null);
 
 				if (!Util.StringNullOrEmpty(instancesJson))
 				{
diff --git a/app/src/main/java/com/graph89/common/ConfigurationHelper.java b/app/src/main/java/com/graph89/common/ConfigurationHelper.java
index a40eace..1897ca0 100644
--- a/app/src/main/java/com/graph89/common/ConfigurationHelper.java
+++ b/app/src/main/java/com/graph89/common/ConfigurationHelper.java
@@ -24,39 +24,47 @@ import android.content.SharedPreferences;
 
 public class ConfigurationHelper
 {
-	private static final String	ConfigurationName				= "TI_EMU_DH";
-	
-	public static final String	CONF_KEY_CALCULATOR_INSTANCES	= "CalculatorInstances";
+	private static final String	ConfigurationName = "TI_EMU_DH";
 
-	public static void WriteString(Context context, String key, String value)
-	{
-		SharedPreferences settings = context.getSharedPreferences(ConfigurationName, Context.MODE_PRIVATE);
-		SharedPreferences.Editor editor = settings.edit();
+	public static final String CONF_KEY_CALCULATOR_INSTANCES = "CalculatorInstances";
 
+	public static final String CONF_KEY_HIDE_STATUSBAR = "hide_statusbar";
+	public static final String CONF_KEY_KEEP_SCREEN_ON = "keep_screen_on";
+
+	public static final boolean CONF_DEFAULT_HIDE_STATUSBAR = false;
+	public static final boolean CONF_DEFAULT_KEEP_SCREEN_ON = false;
+
+	private static SharedPreferences getSharedPrefs(Context context) {
+		return context.getSharedPreferences(ConfigurationName, Context.MODE_PRIVATE);
+	}
+
+	public static void writeString(Context context, String key, String value) {
+		SharedPreferences.Editor editor = getSharedPrefs(context).edit();
 		editor.putString(key, value);
 		editor.commit();
 	}
 
-	public static void WriteInt(Context context, String key, int value)
-	{
-		SharedPreferences settings = context.getSharedPreferences(ConfigurationName, Context.MODE_PRIVATE);
-		SharedPreferences.Editor editor = settings.edit();
-
+	public static void writeInt(Context context, String key, int value) {
+		SharedPreferences.Editor editor = getSharedPrefs(context).edit();
 		editor.putInt(key, value);
 		editor.commit();
 	}
 
-	public static String GetString(Context context, String key, String defaultValue)
-	{
-		SharedPreferences settings = context.getSharedPreferences(ConfigurationName, Context.MODE_PRIVATE);
+	public static void writeBoolean(Context context, String key, boolean value) {
+		SharedPreferences.Editor editor = getSharedPrefs(context).edit();
+		editor.putBoolean(key, value);
+		editor.commit();
+	}
 
-		return settings.getString(key, defaultValue);
+	public static String getString(Context context, String key, String defaultValue) {
+		return getSharedPrefs(context).getString(key, defaultValue);
 	}
 
-	public static int GetInt(Context context, String key, int defaultValue)
-	{
-		SharedPreferences settings = context.getSharedPreferences(ConfigurationName, Context.MODE_PRIVATE);
+	public static int getInt(Context context, String key, int defaultValue) {
+		return getSharedPrefs(context).getInt(key, defaultValue);
+	}
 
-		return settings.getInt(key, defaultValue);
+	public static boolean getBoolean(Context context, String key, boolean defaultValue) {
+		return getSharedPrefs(context).getBoolean(key, defaultValue);
 	}
 }
diff --git a/app/src/main/java/com/graph89/emulationcore/ActionsList.java b/app/src/main/java/com/graph89/emulationcore/ActionsList.java
index fa5514f..da71237 100644
--- a/app/src/main/java/com/graph89/emulationcore/ActionsList.java
+++ b/app/src/main/java/com/graph89/emulationcore/ActionsList.java
@@ -27,7 +27,6 @@ import android.app.Dialog;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
-import android.net.Uri;
 import android.os.Environment;
 import android.util.AttributeSet;
 import android.view.View;
@@ -62,9 +61,10 @@ public class ActionsList extends ListView
 	public static final int			RESET					= 6;
 	public static final int			BACKUP_MANAGER			= 7;
 	public static final int			ROM_MANAGER				= 8;
-	public static final int			CONFIGURATION_SETTINGS	= 9;
-	public static final int			WHATSNEW				= 10;
-	public static final int			ABOUT					= 11;
+	public static final int 		INSTANCE_CONFIGURATION	= 9;
+	public static final int			GLOBAL_CONFIGURATION	= 10;
+	public static final int			WHATSNEW				= 11;
+	public static final int			ABOUT					= 12;
 
 	private Context					mContext				= null;
 	private ListViewAdapter			mAdapter				= null;
@@ -81,7 +81,8 @@ public class ActionsList extends ListView
 		ActionEntries.add(new ListItem(RESET, "Reset"));
 		ActionEntries.add(new ListItem(BACKUP_MANAGER, "Backup Manager"));
 		ActionEntries.add(new ListItem(ROM_MANAGER, "ROM Manager"));
-		ActionEntries.add(new ListItem(CONFIGURATION_SETTINGS, "Configuration Settings"));
+		ActionEntries.add(new ListItem(INSTANCE_CONFIGURATION, "ROM Configuration"));
+		ActionEntries.add(new ListItem(GLOBAL_CONFIGURATION, "Settings"));
 		ActionEntries.add(new ListItem(WHATSNEW, "What's New"));
 		ActionEntries.add(new ListItem(ABOUT, "About"));
 	}
@@ -177,12 +178,18 @@ public class ActionsList extends ListView
 						activity.startActivity(intent);
 					}
 						break;
-					case CONFIGURATION_SETTINGS:
+					case INSTANCE_CONFIGURATION:
 					{
-						Intent intent = new Intent(activity, ConfigurationPage.class);
+						Intent intent = new Intent(activity, InstanceConfigurationPage.class);
 						activity.startActivity(intent);
 					}
 						break;
+					case GLOBAL_CONFIGURATION:
+					{
+						Intent intent = new Intent(activity, GlobalConfigurationPage.class);
+						activity.startActivity(intent);
+					}
+					break;
 					case WHATSNEW:
 						WhatsNew wn = new WhatsNew(activity);
 						wn.Show();
diff --git a/app/src/main/java/com/graph89/emulationcore/EmulatorActivity.java b/app/src/main/java/com/graph89/emulationcore/EmulatorActivity.java
index 5e5bd36..15056bf 100644
--- a/app/src/main/java/com/graph89/emulationcore/EmulatorActivity.java
+++ b/app/src/main/java/com/graph89/emulationcore/EmulatorActivity.java
@@ -28,7 +28,6 @@ import java.util.UUID;
 import android.app.ProgressDialog;
 import android.content.Context;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.content.pm.ActivityInfo;
 import android.content.pm.PackageManager;
 import android.os.Build;
@@ -53,6 +52,7 @@ import com.graph89.common.CalculatorInfoV200;
 import com.graph89.common.CalculatorInstance;
 import com.graph89.common.CalculatorInstanceHelper;
 import com.graph89.common.CalculatorTypes;
+import com.graph89.common.ConfigurationHelper;
 import com.graph89.common.Dimension2D;
 import com.graph89.common.Directories;
 import com.graph89.common.EmulatorThread;
@@ -110,7 +110,6 @@ public class EmulatorActivity extends Graph89ActivityBase
 	protected void onCreate(Bundle savedInstanceState)
 	{
 		super.onCreate(savedInstanceState);
-		InitScreenFlags();
 		setContentView(R.layout.emulator_main);
 		BackwardCompatibility.RunPatches(this);
 		checkPermissions();
@@ -139,6 +138,7 @@ public class EmulatorActivity extends Graph89ActivityBase
 			InitMembers();
 		}
 
+		setScreenFlags();
 		StartGraph89();
 	}
 
@@ -560,13 +560,10 @@ public class EmulatorActivity extends Graph89ActivityBase
 
 	private void ShowWhatsNew()
 	{
-		SharedPreferences settings = getSharedPreferences("TI_EMU_DH", Context.MODE_PRIVATE);
-		String shown = settings.getString("WhatsNew1.1.3.3Shown", null);
+		String shown = ConfigurationHelper.getString(this, "WhatsNew1.1.3.3Shown", null);
 		if (shown == null)
 		{
-			SharedPreferences.Editor editor = settings.edit();
-			editor.putString("WhatsNew1.1.3.3Shown", "Shown");
-			editor.commit();
+			ConfigurationHelper.writeString(this, "WhatsNew1.1.3.3Shown", "Shown");
 			WhatsNew wn = new WhatsNew(this);
 			wn.Show();
 		}
@@ -591,11 +588,23 @@ public class EmulatorActivity extends Graph89ActivityBase
 		return Orientation == ActivityInfo.SCREEN_ORIENTATION_SENSOR_PORTRAIT;
 	}
 
-	private void InitScreenFlags()
+	private void setScreenFlags()
 	{
 		android.view.Window w = this.getWindow();
-		w.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
-		w.addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);
+
+		if (ConfigurationHelper.getBoolean(this, ConfigurationHelper.CONF_KEY_KEEP_SCREEN_ON,
+				ConfigurationHelper.CONF_DEFAULT_KEEP_SCREEN_ON)) {
+			w.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
+		} else {
+			w.clearFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
+		}
+
+		if (ConfigurationHelper.getBoolean(this, ConfigurationHelper.CONF_KEY_HIDE_STATUSBAR,
+				ConfigurationHelper.CONF_DEFAULT_HIDE_STATUSBAR)) {
+			w.addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);
+		} else {
+			w.clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);
+		}
 	}
 
 	private void InitMembers()
@@ -621,13 +630,10 @@ public class EmulatorActivity extends Graph89ActivityBase
 	}
 
 	private String getUniqueId() {
-		SharedPreferences settings = getSharedPreferences("TI_EMU_DH", Context.MODE_PRIVATE);
-		String savedId = settings.getString("UNIQUE_INSTANCE_ID", null);
+		String savedId = ConfigurationHelper.getString(this, "UNIQUE_INSTANCE_ID", null);
 		if (savedId == null) {
-			SharedPreferences.Editor editor = settings.edit();
 			String generatedId = UUID.randomUUID().toString();
-			editor.putString("UNIQUE_INSTANCE_ID", generatedId);
-			editor.commit();
+			ConfigurationHelper.writeString(this, "UNIQUE_INSTANCE_ID", generatedId);
 			return generatedId;
 		} else {
 			return savedId;
diff --git a/app/src/main/java/com/graph89/emulationcore/GlobalConfigurationPage.java b/app/src/main/java/com/graph89/emulationcore/GlobalConfigurationPage.java
new file mode 100644
index 0000000..5867ded
--- /dev/null
+++ b/app/src/main/java/com/graph89/emulationcore/GlobalConfigurationPage.java
@@ -0,0 +1,70 @@
+package com.graph89.emulationcore;
+
+import android.content.SharedPreferences;
+import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
+import android.os.Bundle;
+import android.preference.CheckBoxPreference;
+import android.preference.PreferenceActivity;
+
+import com.Bisha.TI89EmuDonation.R;
+import com.graph89.common.ConfigurationHelper;
+
+@SuppressWarnings("deprecation")
+public class GlobalConfigurationPage extends PreferenceActivity implements OnSharedPreferenceChangeListener {
+
+	private CheckBoxPreference mPrefFullscreen;
+	private CheckBoxPreference mPrefKeepScreenOn;
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+
+		this.setRequestedOrientation(EmulatorActivity.Orientation);
+		addPreferencesFromResource(R.layout.settings_global);
+		initSettings();
+	}
+
+	@Override
+	protected void onResume()
+	{
+		super.onResume();
+		getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(this);
+	}
+
+	@Override
+	protected void onPause()
+	{
+		getPreferenceScreen().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(this);
+		super.onPause();
+	}
+
+	@Override
+	protected void onDestroy()
+	{
+		getPreferenceScreen().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(this);
+		super.onDestroy();
+	}
+
+	private void initSettings() {
+		mPrefFullscreen = (CheckBoxPreference) findPreference(ConfigurationHelper.CONF_KEY_HIDE_STATUSBAR);
+		mPrefFullscreen.setChecked(ConfigurationHelper.getBoolean(this,
+				ConfigurationHelper.CONF_KEY_HIDE_STATUSBAR,
+				ConfigurationHelper.CONF_DEFAULT_HIDE_STATUSBAR));
+
+		mPrefKeepScreenOn = (CheckBoxPreference) findPreference(ConfigurationHelper.CONF_KEY_KEEP_SCREEN_ON);
+		mPrefKeepScreenOn.setChecked(ConfigurationHelper.getBoolean(this,
+				ConfigurationHelper.CONF_KEY_KEEP_SCREEN_ON,
+				ConfigurationHelper.CONF_DEFAULT_KEEP_SCREEN_ON));
+	}
+
+	@Override
+	public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
+		if (key.equals(mPrefFullscreen.getKey())) {
+			ConfigurationHelper.writeBoolean(this,
+					ConfigurationHelper.CONF_KEY_HIDE_STATUSBAR, mPrefFullscreen.isChecked());
+		} else if (key.equals(mPrefKeepScreenOn.getKey())) {
+			ConfigurationHelper.writeBoolean(this,
+					ConfigurationHelper.CONF_KEY_KEEP_SCREEN_ON, mPrefKeepScreenOn.isChecked());
+		}
+	}
+}
\ No newline at end of file
diff --git a/app/src/main/java/com/graph89/emulationcore/ConfigurationPage.java b/app/src/main/java/com/graph89/emulationcore/InstanceConfigurationPage.java
similarity index 98%
rename from app/src/main/java/com/graph89/emulationcore/ConfigurationPage.java
rename to app/src/main/java/com/graph89/emulationcore/InstanceConfigurationPage.java
index af95cab..278e139 100644
--- a/app/src/main/java/com/graph89/emulationcore/ConfigurationPage.java
+++ b/app/src/main/java/com/graph89/emulationcore/InstanceConfigurationPage.java
@@ -38,10 +38,8 @@ import com.graph89.controls.AmbilWarnaPreference;
 import com.graph89.controls.SeekBarPreference;
 
 @SuppressWarnings("deprecation")
-public class ConfigurationPage extends PreferenceActivity implements OnSharedPreferenceChangeListener
+public class InstanceConfigurationPage extends PreferenceActivity implements OnSharedPreferenceChangeListener
 {
-	public static final String			CONFIG_NAME				= "Graph89";
-
 	public static int					MaxScreenZoom			= 1;
 	public static int					DefaultScreenZoom		= 1;
 
@@ -68,7 +66,7 @@ public class ConfigurationPage extends PreferenceActivity implements OnSharedPre
 		Init();
 		super.onCreate(savedInstanceState);
 		this.setRequestedOrientation(EmulatorActivity.Orientation);
-		addPreferencesFromResource(R.layout.settings);
+		addPreferencesFromResource(R.layout.settings_instance);
 
 		InitMembers();
 
diff --git a/app/src/main/java/com/graph89/emulationcore/PortraitSkin.java b/app/src/main/java/com/graph89/emulationcore/PortraitSkin.java
index b3e096e..70bb4de 100644
--- a/app/src/main/java/com/graph89/emulationcore/PortraitSkin.java
+++ b/app/src/main/java/com/graph89/emulationcore/PortraitSkin.java
@@ -70,8 +70,8 @@ public class PortraitSkin extends SkinBase
 
 		int maxScreenZoom = CanvasDimensions.Width / CalculatorInfo.ScreenWidth;
 
-		ConfigurationPage.MaxScreenZoom = CanvasDimensions.Width / CalculatorInfo.ScreenWidth;
-		ConfigurationPage.DefaultScreenZoom = maxScreenZoom;
+		InstanceConfigurationPage.MaxScreenZoom = CanvasDimensions.Width / CalculatorInfo.ScreenWidth;
+		InstanceConfigurationPage.DefaultScreenZoom = maxScreenZoom;
 
 		int screenZoom = AdjustScreenZoom(EmulatorActivity.ActiveInstance.Configuration.ScreenScale, maxScreenZoom);
 
