diff --git a/app/src/main/java/com/example/honza/aeonsend/GeneratedSetupActivity.java b/app/src/main/java/com/example/honza/aeonsend/GeneratedSetupActivity.java
index d056f6e..a6f4cd8 100644
--- a/app/src/main/java/com/example/honza/aeonsend/GeneratedSetupActivity.java
+++ b/app/src/main/java/com/example/honza/aeonsend/GeneratedSetupActivity.java
@@ -24,11 +24,11 @@ public class GeneratedSetupActivity extends AppCompatActivity implements TabLayo
     public void onCreate(@Nullable final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_generated_setup);
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_setup);
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_generatedsetup);
         setSupportActionBar(toolbar);
 
         //Initializing the tablayout
-        tabLayout = (TabLayout) findViewById(R.id.tabLayout);
+        tabLayout = (TabLayout) findViewById(R.id.tabLayout_generatedsetup);
 
         tabLayout.addTab(tabLayout.newTab().setText("Nemesis"));
         tabLayout.addTab(tabLayout.newTab().setText("Characters"));
@@ -36,10 +36,10 @@ public class GeneratedSetupActivity extends AppCompatActivity implements TabLayo
         tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);
 
         //Initializing viewPager
-        viewPager = (ViewPager) findViewById(R.id.pager);
+        viewPager = (ViewPager) findViewById(R.id.pager_generatedsetup);
 
         //Creating our pager adapter
-        Pager adapter = new Pager(getSupportFragmentManager(), tabLayout.getTabCount());
+        GeneratedSetupPager adapter = new GeneratedSetupPager(getSupportFragmentManager(), tabLayout.getTabCount());
 
         //Adding adapter to pager
         viewPager.setAdapter(adapter);
@@ -50,17 +50,12 @@ public class GeneratedSetupActivity extends AppCompatActivity implements TabLayo
         //Adding onPageChangeListener to select tab after swipe
         viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
 
-//        super.onCreate(savedInstanceState, persistentState);
-
+        // Floating action button that returns to Main Activity and finished Generated Setup Activity
         FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
         fab.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-
-                Intent intent = new Intent(view.getContext(), MainActivity.class);
-                startActivity(intent);
-//                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
-//                        .setAction("Action", null).show();
+                finish();
             }
         });
     }
diff --git a/app/src/main/java/com/example/honza/aeonsend/Pager.java b/app/src/main/java/com/example/honza/aeonsend/GeneratedSetupPager.java
similarity index 91%
rename from app/src/main/java/com/example/honza/aeonsend/Pager.java
rename to app/src/main/java/com/example/honza/aeonsend/GeneratedSetupPager.java
index 7590158..d88e9b6 100644
--- a/app/src/main/java/com/example/honza/aeonsend/Pager.java
+++ b/app/src/main/java/com/example/honza/aeonsend/GeneratedSetupPager.java
@@ -14,13 +14,13 @@ import com.example.honza.aeonsend.fragments.NemesisFragment;
  */
 
 //Extending FragmentStatePagerAdapter
-public class Pager extends FragmentStatePagerAdapter {
+public class GeneratedSetupPager extends FragmentStatePagerAdapter {
 
     //integer to count number of tabs
     int tabCount;
 
     //Constructor to the class
-    public Pager(FragmentManager fm, int tabCount) {
+    public GeneratedSetupPager(FragmentManager fm, int tabCount) {
         super(fm);
         //Initializing tab count
         this.tabCount = tabCount;
diff --git a/app/src/main/java/com/example/honza/aeonsend/MainActivity.java b/app/src/main/java/com/example/honza/aeonsend/MainActivity.java
index fa47d23..093d0e2 100644
--- a/app/src/main/java/com/example/honza/aeonsend/MainActivity.java
+++ b/app/src/main/java/com/example/honza/aeonsend/MainActivity.java
@@ -1,41 +1,15 @@
 package com.example.honza.aeonsend;
 
-import android.content.Intent;
-import android.content.SharedPreferences;
 import android.database.sqlite.SQLiteDatabase;
 import android.os.Bundle;
 import android.support.design.widget.TabLayout;
 import android.support.v4.view.ViewPager;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewStub;
-import android.widget.AdapterView;
-import android.widget.GridView;
-import android.widget.ListView;
-
-import com.example.honza.aeonsend.adapter.MarketGridViewAdapter;
-import com.example.honza.aeonsend.adapter.MarketListViewAdapter;
-import com.example.honza.aeonsend.cards.Card;
-import com.example.honza.aeonsend.database.DatabaseHandler;
-import com.example.honza.aeonsend.database.MarketSetupCardList;
-import com.example.honza.aeonsend.enums.CardType;
-
-public class MainActivity extends AppCompatActivity  {
 
-    private ViewStub stubGrid;
-    private ViewStub stubList;
-    private ListView listView;
-    private GridView gridView;
-    private MarketGridViewAdapter marketGridViewAdapter;
-    private MarketListViewAdapter marketListViewAdapter;
-
-    private int currentViewMode = 0;
+import com.example.honza.aeonsend.database.DatabaseHandler;
 
-    static final int VIEW_MODE_LISTVIEW = 0;
-    static final int VIEW_MODE_GRIDVIEW = 1;
+public class MainActivity extends AppCompatActivity implements TabLayout.OnTabSelectedListener{
 
     // Setup for TabLayout
     private TabLayout tabLayout;
@@ -46,138 +20,51 @@ public class MainActivity extends AppCompatActivity  {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_main);
         setSupportActionBar(toolbar);
 
-        stubGrid = (ViewStub) findViewById(R.id.setup_fragment_stub_grid);
-        stubList = (ViewStub) findViewById(R.id.setup_fragment_stub_list);
+        DatabaseHandler mHandler = DatabaseHandler.getInstance(this);
+        SQLiteDatabase mDatabase = mHandler.getWritableDatabase();
 
-        stubGrid.inflate();
-        stubList.inflate();
+        mDatabase.close();
+        mHandler.close();
 
-        SharedPreferences sharedPreferences = getSharedPreferences("ViewMode", MODE_PRIVATE);
-        // Default view is ListView
-        currentViewMode = sharedPreferences.getInt("currentViewMode", VIEW_MODE_LISTVIEW);
+        tabLayout = (TabLayout) findViewById(R.id.tabLayout_main);
 
-        gridView = (GridView) findViewById(R.id.marketGridView);
-        listView = (ListView) findViewById(R.id.marketListView);
+        tabLayout.addTab(tabLayout.newTab().setText("Players"));
+        tabLayout.addTab(tabLayout.newTab().setText("Expansions"));
+        tabLayout.addTab(tabLayout.newTab().setText("Setup"));
+        tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);
 
-        switchView();
+        //Initializing viewPager
+        viewPager = (ViewPager) findViewById(R.id.pager_main);
 
-        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-            @Override
-            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-                Intent intent = new Intent(view.getContext(), GeneratedSetupActivity.class);
-                startActivity(intent);
-            }
-        });
+        //Creating our pager adapter
+        MainPager adapter = new MainPager(getSupportFragmentManager(), tabLayout.getTabCount());
 
-        gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-            @Override
-            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-                Intent intent = new Intent(view.getContext(), GeneratedSetupActivity.class);
-                startActivity(intent);
-            }
-        });
+        //Adding adapter to pager
+        viewPager.setAdapter(adapter);
 
-        DatabaseHandler databaseHandler = DatabaseHandler.getInstance(this);
-        SQLiteDatabase db = databaseHandler.getWritableDatabase();
-        Card card = databaseHandler.getCard(db, 1, CardType.SPELL);
-        databaseHandler.close();
-//        databaseHandler.addCard(new CharacterCard(1,"blabla", CardType.CHARACTER, "blabla", Expansion.BASIC), CardType.CHARACTER.getValue());
+        //Adding onTabSelectedListener to swipe views
+        tabLayout.addOnTabSelectedListener(new TabLayout.ViewPagerOnTabSelectedListener(viewPager));
 
+        //Adding onPageChangeListener to select tab after swipe
+        viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
 
     }
 
     @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        // Inflate the menu; this adds items to the action bar if it is present.
-        getMenuInflater().inflate(R.menu.menu_main, menu);
-
-        // Find button for layout switching and set it to correct icon correlated to currentViewMode
-        MenuItem switchLayoutButton = menu.findItem(R.id.action_switch_layout);
-
-        SharedPreferences sharedPreferences = getSharedPreferences("ViewMode", MODE_PRIVATE);
-        currentViewMode = sharedPreferences.getInt("currentViewMode", VIEW_MODE_LISTVIEW);
-
-        switch (currentViewMode) {
-            case VIEW_MODE_LISTVIEW:
-                switchLayoutButton.setIcon(R.mipmap.ic_view_module_white_24dp);
-                break;
-            case VIEW_MODE_GRIDVIEW:
-                switchLayoutButton.setIcon(R.mipmap.ic_view_list_white_24dp);
-                break;
-        }
-
-        return true;
+    public void onTabSelected(TabLayout.Tab tab) {
+        viewPager.setCurrentItem(tab.getPosition());
     }
 
     @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        // Handle action bar item clicks here. The action bar will
-        // automatically handle clicks on the Home/Up button, so long
-        // as you specify a parent activity in AndroidManifest.xml.
-        int id = item.getItemId();
-
-        //noinspection SimplifiableIfStatement
-        if (id == R.id.action_switch_layout) {
-
-            switch (currentViewMode) {
-                case VIEW_MODE_LISTVIEW:
-                    // Change icon of layout switching button to list icon
-                    item.setIcon(R.mipmap.ic_view_list_white_24dp);
-                    currentViewMode = VIEW_MODE_GRIDVIEW;
-                    break;
-                case VIEW_MODE_GRIDVIEW:
-                    // Change icon of layout switching button to grid icon
-                    item.setIcon(R.mipmap.ic_view_module_white_24dp);
-                    currentViewMode = VIEW_MODE_LISTVIEW;
-                    break;
-            }
-            switchView();
-
-            SharedPreferences sharedPreferences = getSharedPreferences("ViewMode", MODE_PRIVATE);
-            SharedPreferences.Editor editor = sharedPreferences.edit();
-            editor.putInt("currentViewMode", currentViewMode);
-            editor.apply();
-
-
-            return true;
-        }
-
-        return super.onOptionsItemSelected(item);
-    }
-
-    private void switchView() {
-        switch (currentViewMode) {
-            case VIEW_MODE_LISTVIEW:
-                // Hide GridView
-                stubGrid.setVisibility(View.GONE);
-                // Display ListView
-                stubList.setVisibility(View.VISIBLE);
-                break;
-
-            case VIEW_MODE_GRIDVIEW:
-                // Display GridView
-                stubGrid.setVisibility(View.VISIBLE);
-                // Hide ListView
-                stubList.setVisibility(View.GONE);
-                break;
-        }
-        setAdapter();
+    public void onTabUnselected(TabLayout.Tab tab) {
 
     }
 
-    private void setAdapter() {
-        switch (currentViewMode) {
-            case VIEW_MODE_LISTVIEW:
-                marketListViewAdapter = new MarketListViewAdapter(this, MarketSetupCardList.getMarketSetupCards());
-                listView.setAdapter(marketListViewAdapter);
-                break;
-            case VIEW_MODE_GRIDVIEW:
-                marketGridViewAdapter = new MarketGridViewAdapter(this, MarketSetupCardList.getMarketSetupCards());
-                gridView.setAdapter(marketGridViewAdapter);
-                break;
-        }
+    @Override
+    public void onTabReselected(TabLayout.Tab tab) {
+
     }
 }
diff --git a/app/src/main/java/com/example/honza/aeonsend/MainPager.java b/app/src/main/java/com/example/honza/aeonsend/MainPager.java
new file mode 100644
index 0000000..6d3f6bb
--- /dev/null
+++ b/app/src/main/java/com/example/honza/aeonsend/MainPager.java
@@ -0,0 +1,57 @@
+package com.example.honza.aeonsend;
+
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentStatePagerAdapter;
+
+import com.example.honza.aeonsend.fragments.CharactersFragment;
+import com.example.honza.aeonsend.fragments.ExpansionFragment;
+import com.example.honza.aeonsend.fragments.MarketFragment;
+import com.example.honza.aeonsend.fragments.NemesisFragment;
+import com.example.honza.aeonsend.fragments.PlayersFragment;
+import com.example.honza.aeonsend.fragments.SetupFragment;
+
+/**
+ * Created by honza on 21.9.17.
+ */
+
+//Extending FragmentStatePagerAdapter
+public class MainPager extends FragmentStatePagerAdapter {
+
+    //integer to count number of tabs
+    int tabCount;
+
+    //Constructor to the class
+    public MainPager(FragmentManager fm, int tabCount) {
+        super(fm);
+        //Initializing tab count
+        this.tabCount = tabCount;
+    }
+
+    //Overriding method getItem
+    @Override
+    public Fragment getItem(int position) {
+        //Returning the current tabs
+        switch (position) {
+            case 0:
+                PlayersFragment playersFragment = new PlayersFragment();
+                return playersFragment;
+            case 1:
+//                PlayersFragment playersFragment2 = new PlayersFragment();
+//                return playersFragment2;
+                ExpansionFragment expansionFragment = new ExpansionFragment();
+                return expansionFragment;
+            case 2:
+                SetupFragment setupFragment = new SetupFragment();
+                return setupFragment;
+            default:
+                return null;
+        }
+    }
+
+    //Overriden method getCount to get the number of tabs
+    @Override
+    public int getCount() {
+        return tabCount;
+    }
+}
\ No newline at end of file
diff --git a/app/src/main/java/com/example/honza/aeonsend/cards/Card.java b/app/src/main/java/com/example/honza/aeonsend/cards/Card.java
index 07ae514..115a3be 100644
--- a/app/src/main/java/com/example/honza/aeonsend/cards/Card.java
+++ b/app/src/main/java/com/example/honza/aeonsend/cards/Card.java
@@ -85,6 +85,9 @@ public class Card implements Serializable{
         PriceRange price = null;
 
         switch (type) {
+            case EXPANSION:
+                return new ExpansionCard(id, name, type, picture, expansion);
+
             case CHARACTER:
                 return new CharacterCard(id, name, type, picture, expansion);
 
diff --git a/app/src/main/java/com/example/honza/aeonsend/cards/ExpansionCard.java b/app/src/main/java/com/example/honza/aeonsend/cards/ExpansionCard.java
index 014513b..043c6fe 100644
--- a/app/src/main/java/com/example/honza/aeonsend/cards/ExpansionCard.java
+++ b/app/src/main/java/com/example/honza/aeonsend/cards/ExpansionCard.java
@@ -8,6 +8,9 @@ import com.example.honza.aeonsend.enums.Expansion;
  */
 
 public class ExpansionCard extends Card {
+
+    private boolean isSelected = false;
+
     public ExpansionCard(int id, String name, CardType type, String picture, Expansion expansion) {
         super(id, name, type, picture, expansion);
     }
@@ -15,4 +18,16 @@ public class ExpansionCard extends Card {
     public ExpansionCard(String name, CardType type, String picture, Expansion expansion) {
         super(name, type, picture, expansion);
     }
+
+    public boolean isSelected() {
+        return isSelected;
+    }
+
+    public void setSelected(boolean selected) {
+        isSelected = selected;
+    }
+
+    public void toggleSelected() {
+        isSelected = !isSelected;
+    }
 }
diff --git a/app/src/main/java/com/example/honza/aeonsend/database/DatabaseHandler.java b/app/src/main/java/com/example/honza/aeonsend/database/DatabaseHandler.java
index 5851635..dd91010 100644
--- a/app/src/main/java/com/example/honza/aeonsend/database/DatabaseHandler.java
+++ b/app/src/main/java/com/example/honza/aeonsend/database/DatabaseHandler.java
@@ -29,7 +29,7 @@ public class DatabaseHandler extends SQLiteOpenHelper implements CardDAO {
 
     // All Static variables
     // Database Version
-    private static final int DATABASE_VERSION = 1;
+    private static final int DATABASE_VERSION = 2;
 
     // Database Name
     private static final String DATABASE_NAME = "aeonsend";
@@ -52,6 +52,8 @@ public class DatabaseHandler extends SQLiteOpenHelper implements CardDAO {
         mContext = context;
     }
 
+
+
     @Override
     public void onCreate(SQLiteDatabase sqLiteDatabase) {
 
@@ -184,7 +186,7 @@ public class DatabaseHandler extends SQLiteOpenHelper implements CardDAO {
     public Card getCard(SQLiteDatabase db, String cardName, CardType type) {
         String tableName = type.getValue();
         Cursor cursor = db.rawQuery("SELECT * from " + tableName + " where " +
-                TableColumns.KEY_NAME.getValue() + "=" + cardName, null);
+                TableColumns.KEY_NAME.getValue() + "=" + "'" + cardName +"'", null);
 
         Card card = null;
 
diff --git a/app/src/main/java/com/example/honza/aeonsend/fragments/ExpansionFragment.java b/app/src/main/java/com/example/honza/aeonsend/fragments/ExpansionFragment.java
index b43bf3f..9deeebe 100644
--- a/app/src/main/java/com/example/honza/aeonsend/fragments/ExpansionFragment.java
+++ b/app/src/main/java/com/example/honza/aeonsend/fragments/ExpansionFragment.java
@@ -5,7 +5,6 @@ import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 import android.view.LayoutInflater;
-import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
@@ -14,12 +13,10 @@ import com.example.honza.aeonsend.R;
 import com.example.honza.aeonsend.cards.ExpansionCard;
 import com.example.honza.aeonsend.database.DatabaseHandler;
 import com.example.honza.aeonsend.enums.CardType;
-import com.example.honza.aeonsend.listeners.ButtonHighlighterOnTouchListener;
 import com.example.honza.aeonsend.utils.Constants;
 
 import java.io.Serializable;
-import java.util.ArrayList;
-import java.util.List;
+import java.util.HashMap;
 
 /**
  * Created by honza on 29.9.17.
@@ -27,7 +24,7 @@ import java.util.List;
 
 public class ExpansionFragment extends Fragment {
 
-    private List<ExpansionCard> selectedExpansions;
+    private HashMap<String, ExpansionCard> selectedExpansionsMap;
     private ExpansionCard depthsExpansionCard;
     private ExpansionCard namelessExpansionCard;
 
@@ -36,44 +33,71 @@ public class ExpansionFragment extends Fragment {
     public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
 
         if (savedInstanceState == null) {
-            selectedExpansions = new ArrayList<>();
+            selectedExpansionsMap = new HashMap<>();
+            depthsExpansionCard = getExpansionCard("The Depths");
+            namelessExpansionCard = getExpansionCard("Nameless");
 
         } else {
-            selectedExpansions = (List) savedInstanceState.getSerializable("selectedExpansions");
+            selectedExpansionsMap = (HashMap<String, ExpansionCard>) savedInstanceState.getSerializable("selectedExpansionsMap");
+            depthsExpansionCard = selectedExpansionsMap.get("The Depths");
+            if (depthsExpansionCard == null) {
+                depthsExpansionCard = getExpansionCard("The Depths");
+            }
+            namelessExpansionCard = selectedExpansionsMap.get("Nameless");
+            if (namelessExpansionCard == null) {
+                namelessExpansionCard = getExpansionCard("Nameless");
+            }
         }
 
-        depthsExpansionCard = getExpansionCard("The Depths");
-        namelessExpansionCard = getExpansionCard("Nameless");
-
         View view = inflater.inflate(R.layout.expansion_fragment, container, false);
 
         final ImageView depthsImageView = view.findViewById(R.id.expansion_fragment_depths_imageview);
-        ImageView namelessImageView = view.findViewById(R.id.expansion_fragment_nameless_imageview);
+        final ImageView namelessImageView = view.findViewById(R.id.expansion_fragment_nameless_imageview);
 
         depthsImageView.setImageResource(getResources().getIdentifier(depthsExpansionCard.getPicture(), Constants.DRAWABLEDEFTYPE, Constants.PACKAGENAME));
-        depthsImageView.setOnTouchListener(new ButtonHighlighterOnTouchListener(depthsImageView) {
+//        depthsImageView.setOnTouchListener(new ButtonHighlighterOnTouchListener(depthsImageView) {
+//            @Override
+//            public boolean onTouch(View view, MotionEvent motionEvent) {
+//                if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {
+//                    selectedExpansionsMap.add(depthsExpansionCard);
+//                } else if (motionEvent.getAction() == MotionEvent.ACTION_UP) {
+//                    selectedExpansionsMap.remove(depthsExpansionCard);
+//                }
+//                return super.onTouch(view, motionEvent);
+//            }
+//        });
+
+        final ImageView depthsCheckboxImageView = view.findViewById(R.id.expansion_fragment_depths_selected_imageview);
+        depthsCheckboxImageView.setImageResource(depthsExpansionCard.isSelected() ? R.drawable.ic_check_box_white_24dp : R.drawable.ic_check_box_outline_blank_white_24dp);
+
+        depthsImageView.setOnClickListener(new View.OnClickListener() {
             @Override
-            public boolean onTouch(View view, MotionEvent motionEvent) {
-                if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {
-                    selectedExpansions.add(depthsExpansionCard);
-                } else if (motionEvent.getAction() == MotionEvent.ACTION_UP) {
-                    selectedExpansions.remove(depthsExpansionCard);
-                }
-                return super.onTouch(view, motionEvent);
+            public void onClick(View view) {
+                selectExpansion(depthsExpansionCard, depthsCheckboxImageView);
             }
         });
 
-        namelessImageView.setOnTouchListener(new ButtonHighlighterOnTouchListener(namelessImageView));
+
         namelessImageView.setImageResource(getResources().getIdentifier(namelessExpansionCard.getPicture(), Constants.DRAWABLEDEFTYPE, Constants.PACKAGENAME));
-        namelessImageView.setOnTouchListener(new ButtonHighlighterOnTouchListener(namelessImageView) {
+//        namelessImageView.setOnTouchListener(new ButtonHighlighterOnTouchListener(namelessImageView) {
+//            @Override
+//            public boolean onTouch(View view, MotionEvent motionEvent) {
+//                if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {
+//                    selectedExpansionsMap.add(namelessExpansionCard);
+//                } else if (motionEvent.getAction() == MotionEvent.ACTION_UP) {
+//                    selectedExpansionsMap.remove(namelessExpansionCard);
+//                }
+//                return super.onTouch(view, motionEvent);
+//            }
+//        });
+
+        final ImageView namelessCheckboxImageView = view.findViewById(R.id.expansion_fragment_nameless_selected_imageview);
+        namelessCheckboxImageView.setImageResource(namelessExpansionCard.isSelected() ? R.drawable.ic_check_box_white_24dp : R.drawable.ic_check_box_outline_blank_white_24dp);
+
+        namelessImageView.setOnClickListener(new View.OnClickListener() {
             @Override
-            public boolean onTouch(View view, MotionEvent motionEvent) {
-                if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {
-                    selectedExpansions.add(namelessExpansionCard);
-                } else if (motionEvent.getAction() == MotionEvent.ACTION_UP) {
-                    selectedExpansions.remove(namelessExpansionCard);
-                }
-                return super.onTouch(view, motionEvent);
+            public void onClick(View view) {
+                selectExpansion(namelessExpansionCard, namelessCheckboxImageView);
             }
         });
 
@@ -95,6 +119,16 @@ public class ExpansionFragment extends Fragment {
     @Override
     public void onSaveInstanceState(Bundle outState) {
         super.onSaveInstanceState(outState);
-        outState.putSerializable("selectedExpansions",(Serializable) selectedExpansions);
+        outState.putSerializable("selectedExpansionsMap", (Serializable) selectedExpansionsMap);
+    }
+
+    private void selectExpansion(ExpansionCard expansionCard, ImageView checkBox) {
+        expansionCard.toggleSelected();
+        checkBox.setImageResource(expansionCard.isSelected() ? R.drawable.ic_check_box_white_24dp : R.drawable.ic_check_box_outline_blank_white_24dp);
+        if (!expansionCard.isSelected()) {
+            selectedExpansionsMap.remove(expansionCard.getName());
+        } else {
+            selectedExpansionsMap.put(expansionCard.getName(), expansionCard);
+        }
     }
 }
diff --git a/app/src/main/java/com/example/honza/aeonsend/fragments/PlayersFragment.java b/app/src/main/java/com/example/honza/aeonsend/fragments/PlayersFragment.java
index 6dfe77c..38017f7 100644
--- a/app/src/main/java/com/example/honza/aeonsend/fragments/PlayersFragment.java
+++ b/app/src/main/java/com/example/honza/aeonsend/fragments/PlayersFragment.java
@@ -3,6 +3,7 @@ package com.example.honza.aeonsend.fragments;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -38,20 +39,26 @@ public class PlayersFragment extends Fragment {
         textView.setText(String.valueOf(numPlayers));
 
         subtractImageView = view.findViewById(R.id.players_fragment_subtract_imageview);
-        subtractImageView.setImageResource(R.drawable.ic_remove_white_48dp);
+        subtractImageView.setImageResource(R.drawable.ic_remove_black_48dp);
         subtractImageView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                numPlayers--;
+                if (numPlayers != 1) {
+                    numPlayers--;
+                }
+                textView.setText(String.valueOf(numPlayers));
             }
         });
 
         addImageView = view.findViewById(R.id.players_fragment_add_imageview);
-        addImageView.setImageResource(R.drawable.ic_add_white_48dp);
+        addImageView.setImageResource(R.drawable.ic_add_black_48dp);
         addImageView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                numPlayers++;
+                if (numPlayers != 4) {
+                    numPlayers++;
+                }
+                textView.setText(String.valueOf(numPlayers));
             }
         });
 
diff --git a/app/src/main/java/com/example/honza/aeonsend/fragments/SetupFragment.java b/app/src/main/java/com/example/honza/aeonsend/fragments/SetupFragment.java
new file mode 100644
index 0000000..46f84d4
--- /dev/null
+++ b/app/src/main/java/com/example/honza/aeonsend/fragments/SetupFragment.java
@@ -0,0 +1,183 @@
+package com.example.honza.aeonsend.fragments;
+
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.database.sqlite.SQLiteDatabase;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewStub;
+import android.widget.AdapterView;
+import android.widget.GridView;
+import android.widget.ListView;
+
+import com.example.honza.aeonsend.GeneratedSetupActivity;
+import com.example.honza.aeonsend.R;
+import com.example.honza.aeonsend.adapter.MarketGridViewAdapter;
+import com.example.honza.aeonsend.adapter.MarketListViewAdapter;
+import com.example.honza.aeonsend.cards.Card;
+import com.example.honza.aeonsend.database.DatabaseHandler;
+import com.example.honza.aeonsend.database.MarketSetupCardList;
+import com.example.honza.aeonsend.enums.CardType;
+
+import static android.content.Context.MODE_PRIVATE;
+
+/**
+ * Created by honza on 29.9.17.
+ */
+
+public class SetupFragment extends Fragment {
+    private ViewStub stubGrid;
+    private ViewStub stubList;
+    private ListView listView;
+    private GridView gridView;
+    private MarketGridViewAdapter marketGridViewAdapter;
+    private MarketListViewAdapter marketListViewAdapter;
+    private View view;
+
+    private int currentViewMode = 0;
+
+    static final int VIEW_MODE_LISTVIEW = 0;
+    static final int VIEW_MODE_GRIDVIEW = 1;
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setHasOptionsMenu(true);
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        view = inflater.inflate(R.layout.setup_fragment, container, false);
+
+        stubGrid = (ViewStub) view.findViewById(R.id.setup_fragment_stub_grid);
+        stubList = (ViewStub) view.findViewById(R.id.setup_fragment_stub_list);
+
+        stubGrid.inflate();
+        stubList.inflate();
+
+        SharedPreferences sharedPreferences = getContext().getSharedPreferences("ViewMode", view.getContext().MODE_PRIVATE);
+        // Default view is ListView
+        currentViewMode = sharedPreferences.getInt("currentViewMode", VIEW_MODE_LISTVIEW);
+
+        gridView = (GridView) view.findViewById(R.id.marketGridView);
+        listView = (ListView) view.findViewById(R.id.marketListView);
+
+        switchView();
+
+        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
+                Intent intent = new Intent(view.getContext(), GeneratedSetupActivity.class);
+                startActivity(intent);
+            }
+        });
+
+        gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
+                Intent intent = new Intent(view.getContext(), GeneratedSetupActivity.class);
+                startActivity(intent);
+            }
+        });
+
+        return view;
+    }
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        // Inflate the menu; this adds items to the action bar if it is present.
+        inflater.inflate(R.menu.menu_main, menu);
+
+        // Find button for layout switching and set it to correct icon correlated to currentViewMode
+        MenuItem switchLayoutButton = menu.findItem(R.id.action_switch_layout);
+
+        SharedPreferences sharedPreferences = view.getContext().getSharedPreferences("ViewMode", MODE_PRIVATE);
+        currentViewMode = sharedPreferences.getInt("currentViewMode", VIEW_MODE_LISTVIEW);
+
+        switch (currentViewMode) {
+            case VIEW_MODE_LISTVIEW:
+                switchLayoutButton.setIcon(R.mipmap.ic_view_module_white_24dp);
+                break;
+            case VIEW_MODE_GRIDVIEW:
+                switchLayoutButton.setIcon(R.mipmap.ic_view_list_white_24dp);
+                break;
+        }
+    }
+
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Handle action bar item clicks here. The action bar will
+        // automatically handle clicks on the Home/Up button, so long
+        // as you specify a parent activity in AndroidManifest.xml.
+        int id = item.getItemId();
+
+        //noinspection SimplifiableIfStatement
+        if (id == R.id.action_switch_layout) {
+
+            switch (currentViewMode) {
+                case VIEW_MODE_LISTVIEW:
+                    // Change icon of layout switching button to list icon
+                    item.setIcon(R.mipmap.ic_view_list_white_24dp);
+                    currentViewMode = VIEW_MODE_GRIDVIEW;
+                    break;
+                case VIEW_MODE_GRIDVIEW:
+                    // Change icon of layout switching button to grid icon
+                    item.setIcon(R.mipmap.ic_view_module_white_24dp);
+                    currentViewMode = VIEW_MODE_LISTVIEW;
+                    break;
+            }
+            switchView();
+
+            SharedPreferences sharedPreferences = view.getContext().getSharedPreferences("ViewMode", view.getContext().MODE_PRIVATE);
+            SharedPreferences.Editor editor = sharedPreferences.edit();
+            editor.putInt("currentViewMode", currentViewMode);
+            editor.apply();
+
+            return true;
+        }
+
+        return super.onOptionsItemSelected(item);
+    }
+
+    private void switchView() {
+        switch (currentViewMode) {
+            case VIEW_MODE_LISTVIEW:
+                // Hide GridView
+                stubGrid.setVisibility(View.GONE);
+                // Display ListView
+                stubList.setVisibility(View.VISIBLE);
+                break;
+
+            case VIEW_MODE_GRIDVIEW:
+                // Display GridView
+                stubGrid.setVisibility(View.VISIBLE);
+                // Hide ListView
+                stubList.setVisibility(View.GONE);
+                break;
+        }
+        setAdapter();
+
+    }
+
+    private void setAdapter() {
+        switch (currentViewMode) {
+            case VIEW_MODE_LISTVIEW:
+                marketListViewAdapter = new MarketListViewAdapter(view.getContext(), MarketSetupCardList.getMarketSetupCards());
+                listView.setAdapter(marketListViewAdapter);
+                break;
+            case VIEW_MODE_GRIDVIEW:
+                marketGridViewAdapter = new MarketGridViewAdapter(view.getContext(), MarketSetupCardList.getMarketSetupCards());
+                gridView.setAdapter(marketGridViewAdapter);
+                break;
+        }
+    }
+}
diff --git a/app/src/main/java/com/example/honza/aeonsend/listeners/ButtonHighlighterOnTouchListener.java b/app/src/main/java/com/example/honza/aeonsend/listeners/ButtonHighlighterOnTouchListener.java
index 131ae8b..ad17e0f 100644
--- a/app/src/main/java/com/example/honza/aeonsend/listeners/ButtonHighlighterOnTouchListener.java
+++ b/app/src/main/java/com/example/honza/aeonsend/listeners/ButtonHighlighterOnTouchListener.java
@@ -3,6 +3,7 @@ package com.example.honza.aeonsend.listeners;
 import android.graphics.Color;
 import android.graphics.PorterDuff;
 import android.graphics.drawable.Drawable;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.ImageView;
@@ -35,7 +36,10 @@ public class ButtonHighlighterOnTouchListener implements View.OnTouchListener {
         if (imageView != null) {
             if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {
                 imageView.setColorFilter(FILTERED_GREY);
+                Log.d("TOUCH", "onTouch: " + "DOWN");
+                return true;
             } else if (motionEvent.getAction() == MotionEvent.ACTION_UP) {
+                Log.d("TOUCH", "onTouch: " + "UP");
                 imageView.setColorFilter(TRANSPARENT_GREY); // or null
             }
         } else {
