diff --git a/app/src/main/java/com/kunzisoft/keyboard/switcher/KeyboardManagerActivity.java b/app/src/main/java/com/kunzisoft/keyboard/switcher/KeyboardManagerActivity.java
index 56ba9f0..bc4e90e 100644
--- a/app/src/main/java/com/kunzisoft/keyboard/switcher/KeyboardManagerActivity.java
+++ b/app/src/main/java/com/kunzisoft/keyboard/switcher/KeyboardManagerActivity.java
@@ -1,7 +1,5 @@
 package com.kunzisoft.keyboard.switcher;
 
-import android.graphics.Color;
-import android.graphics.drawable.ColorDrawable;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.v7.app.AppCompatActivity;
@@ -14,6 +12,7 @@ import android.view.inputmethod.InputMethodManager;
  */
 public class KeyboardManagerActivity extends AppCompatActivity {
 
+    private InputMethodManager imeManager;
     private View rootView;
     private AppCompatDialog dialogUtility;
 
@@ -23,11 +22,12 @@ public class KeyboardManagerActivity extends AppCompatActivity {
         setContentView(R.layout.empty);
         rootView = findViewById(R.id.root_view);
 
+        imeManager = (InputMethodManager) getSystemService(INPUT_METHOD_SERVICE);
+
         // Only to show input method picker
         dialogUtility = new AppCompatDialog(this, android.R.style.Theme_Panel);
         if (dialogUtility.getWindow() != null) {
-            dialogUtility.getWindow().setTitle(null);
-            dialogUtility.getWindow().setBackgroundDrawable(new ColorDrawable(Color.BLUE));
+            dialogUtility.getWindow().setTitle("");
         }
         dialogUtility.setCanceledOnTouchOutside(true);
         dialogUtility.setCancelable(true);
@@ -38,16 +38,15 @@ public class KeyboardManagerActivity extends AppCompatActivity {
     protected void onResume() {
         super.onResume();
 
-        rootView.post(new Runnable() {
+        rootView.postDelayed(new Runnable() {
             @Override
             public void run() {
-                InputMethodManager imeManager = (InputMethodManager) getSystemService(INPUT_METHOD_SERVICE);
                 if (imeManager != null) {
                     imeManager.showInputMethodPicker();
-                    imeManager.toggleSoftInput(InputMethodManager.SHOW_IMPLICIT, 0);
                 }
+                finish();
             }
-        });
+        }, 100);
     }
 
     @Override
diff --git a/app/src/main/java/com/kunzisoft/keyboard/switcher/OverlayShowingService.java b/app/src/main/java/com/kunzisoft/keyboard/switcher/OverlayShowingService.java
index cc60d0d..06b769a 100644
--- a/app/src/main/java/com/kunzisoft/keyboard/switcher/OverlayShowingService.java
+++ b/app/src/main/java/com/kunzisoft/keyboard/switcher/OverlayShowingService.java
@@ -4,9 +4,12 @@ import android.annotation.SuppressLint;
 import android.app.Service;
 import android.content.Context;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.graphics.PixelFormat;
 import android.os.Build;
 import android.os.IBinder;
+import android.preference.PreferenceManager;
+import android.support.annotation.ColorRes;
 import android.support.v4.content.ContextCompat;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -15,11 +18,16 @@ import android.view.View.OnClickListener;
 import android.view.View.OnTouchListener;
 import android.view.WindowManager;
 import android.view.WindowManager.LayoutParams;
+import android.view.inputmethod.InputMethodManager;
 import android.widget.ImageView;
 
+import static android.content.Intent.FLAG_ACTIVITY_NEW_TASK;
+
 public class OverlayShowingService extends Service implements OnTouchListener, OnClickListener {
 
-    private boolean right;
+    private SharedPreferences preferences;
+    private static final String Y_POSITION_PREFERENCE_KEY = "Y_POSITION_PREFERENCE_KEY";
+    private int yPositionToSave;
 
     private View topLeftView;
 
@@ -41,15 +49,21 @@ public class OverlayShowingService extends Service implements OnTouchListener, O
     public void onCreate() {
         super.onCreate();
 
-        right = true;
+        preferences = PreferenceManager.getDefaultSharedPreferences(this);
+        // check Button Position
+        boolean isAtRight = preferences.getBoolean(getString(R.string.settings_position_button_key), true);
 
         wm = (WindowManager) getSystemService(Context.WINDOW_SERVICE);
 
         overlayedButton = new ImageView(this);
-        if (right)
+        @ColorRes int color = preferences.getInt(getString(R.string.settings_colors_key), ContextCompat.getColor(this, R.color.colorPrimary));
+        if (isAtRight) {
             overlayedButton.setImageDrawable(ContextCompat.getDrawable(getApplicationContext(), R.drawable.ic_keyboard_right_36dp));
-        else
+        } else {
             overlayedButton.setImageDrawable(ContextCompat.getDrawable(getApplicationContext(), R.drawable.ic_keyboard_left_36dp));
+        }
+        overlayedButton.setColorFilter(color);
+        overlayedButton.setAlpha((color >> 24) & 0xff);
         overlayedButton.setOnTouchListener(this);
         overlayedButton.setOnClickListener(this);
 
@@ -65,13 +79,17 @@ public class OverlayShowingService extends Service implements OnTouchListener, O
                         LayoutParams.FLAG_NOT_FOCUSABLE
                                 | LayoutParams.FLAG_NOT_TOUCH_MODAL,
                         PixelFormat.TRANSLUCENT);
-        if (right)
-            params.gravity = Gravity.END | Gravity.CENTER_VERTICAL;
+        if (isAtRight)
+            params.gravity = Gravity.END;
         else
-            params.gravity = Gravity.START | Gravity.CENTER_VERTICAL;
+            params.gravity = Gravity.START;
 
         params.x = 0;
         params.y = 0;
+        if (preferences.contains(Y_POSITION_PREFERENCE_KEY)) {
+            yPositionToSave = preferences.getInt(Y_POSITION_PREFERENCE_KEY, 0);
+            params.y = yPositionToSave;
+        }
         wm.addView(overlayedButton, params);
 
         topLeftView = new View(this);
@@ -82,10 +100,10 @@ public class OverlayShowingService extends Service implements OnTouchListener, O
                         LayoutParams.FLAG_NOT_FOCUSABLE
                                 | LayoutParams.FLAG_NOT_TOUCH_MODAL,
                         PixelFormat.TRANSLUCENT);
-        if (right)
-            topLeftParams.gravity = Gravity.END | Gravity.CENTER_VERTICAL;
+        if (isAtRight)
+            topLeftParams.gravity = Gravity.END;
         else
-            topLeftParams.gravity = Gravity.START | Gravity.CENTER_VERTICAL;
+            topLeftParams.gravity = Gravity.START;
         topLeftParams.x = 0;
         topLeftParams.y = 0;
         topLeftParams.width = 0;
@@ -93,16 +111,18 @@ public class OverlayShowingService extends Service implements OnTouchListener, O
         wm.addView(topLeftView, topLeftParams);
     }
 
-    @Override
-    public void onDestroy() {
-	    super.onDestroy();
+    private void getPositionOnScreen() {
+        int[] location = new int[2];
+        overlayedButton.getLocationOnScreen(location);
 
-        if (overlayedButton != null) {
-            wm.removeView(overlayedButton);
-            wm.removeView(topLeftView);
-            overlayedButton = null;
-            topLeftView = null;
-        }
+        originalXPos = location[0];
+        originalYPos = location[1];
+    }
+
+    private void saveYPreferencePosition() {
+        SharedPreferences.Editor editor = preferences.edit();
+        editor.putInt(Y_POSITION_PREFERENCE_KEY, yPositionToSave);
+        editor.apply();
     }
 
     @SuppressLint("ClickableViewAccessibility")
@@ -114,11 +134,7 @@ public class OverlayShowingService extends Service implements OnTouchListener, O
 
             moving = false;
 
-            int[] location = new int[2];
-            overlayedButton.getLocationOnScreen(location);
-
-            originalXPos = location[0];
-            originalYPos = location[1];
+            getPositionOnScreen();
 
             offsetX = originalXPos;
             offsetY = originalYPos - y;
@@ -140,10 +156,12 @@ public class OverlayShowingService extends Service implements OnTouchListener, O
 
             params.x = newX - (topLeftLocationOnScreen[0]);
             params.y = newY - (topLeftLocationOnScreen[1]);
+            yPositionToSave = params.y;
 
             wm.updateViewLayout(overlayedButton, params);
             moving = true;
         } else if (event.getAction() == MotionEvent.ACTION_UP) {
+            saveYPreferencePosition();
             return moving;
         }
 
@@ -152,19 +170,29 @@ public class OverlayShowingService extends Service implements OnTouchListener, O
 
     @Override
     public void onClick(final View view) {
-        startActivity(new Intent(this, KeyboardManagerActivity.class));
 
-        /*
-        InputMethodManager imeManager = (InputMethodManager) getSystemService(INPUT_METHOD_SERVICE);
-        if (imeManager != null) {
-            imeManager.showInputMethodPicker();
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+            Intent intent = new Intent(this, KeyboardManagerActivity.class);
+            intent.addFlags(FLAG_ACTIVITY_NEW_TASK);
+            startActivity(intent);
+        } else {
+            InputMethodManager imeManager = (InputMethodManager) getSystemService(INPUT_METHOD_SERVICE);
+            if (imeManager != null) {
+                imeManager.showInputMethodPicker();
+            }
         }
-        //*/
+    }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
 
-        /*
-        Intent intent = new Intent(Settings.ACTION_INPUT_METHOD_SETTINGS);
-        intent.addFlags(FLAG_ACTIVITY_NEW_TASK);
-        startActivity(intent);
-        //*/
+        if (overlayedButton != null) {
+            saveYPreferencePosition();
+            wm.removeView(overlayedButton);
+            wm.removeView(topLeftView);
+            overlayedButton = null;
+            topLeftView = null;
+        }
     }
 }
diff --git a/app/src/main/java/com/kunzisoft/keyboard/switcher/MainActivity.java b/app/src/main/java/com/kunzisoft/keyboard/switcher/PreferenceActivity.java
similarity index 89%
rename from app/src/main/java/com/kunzisoft/keyboard/switcher/MainActivity.java
rename to app/src/main/java/com/kunzisoft/keyboard/switcher/PreferenceActivity.java
index d168b29..5cbcf17 100644
--- a/app/src/main/java/com/kunzisoft/keyboard/switcher/MainActivity.java
+++ b/app/src/main/java/com/kunzisoft/keyboard/switcher/PreferenceActivity.java
@@ -8,7 +8,7 @@ import android.support.annotation.RequiresApi;
 import android.support.v7.app.AppCompatActivity;
 import android.os.Bundle;
 
-public class MainActivity extends AppCompatActivity {
+public class PreferenceActivity extends AppCompatActivity {
 
     /* https://stackoverflow.com/questions/7569937/unable-to-add-window-android-view-viewrootw44da9bc0-permission-denied-for-t
         code to post/handler request for permission
@@ -21,6 +21,9 @@ public class MainActivity extends AppCompatActivity {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+
+        setContentView(R.layout.preference_activity);
+
         service = new Intent(this, OverlayShowingService.class);
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             checkDrawOverlayPermission();
@@ -28,11 +31,14 @@ public class MainActivity extends AppCompatActivity {
             startServiceAndFinishActivity();
         }
 
+        getSupportFragmentManager().beginTransaction()
+                .replace(R.id.fragment_container, new PreferenceFragment())
+                .commit();
+
     }
 
     private void startServiceAndFinishActivity() {
         startService(service);
-        finish();
     }
 
     @RequiresApi(api = Build.VERSION_CODES.M)
diff --git a/app/src/main/java/com/kunzisoft/keyboard/switcher/PreferenceFragment.java b/app/src/main/java/com/kunzisoft/keyboard/switcher/PreferenceFragment.java
new file mode 100644
index 0000000..0eb4aca
--- /dev/null
+++ b/app/src/main/java/com/kunzisoft/keyboard/switcher/PreferenceFragment.java
@@ -0,0 +1,68 @@
+package com.kunzisoft.keyboard.switcher;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.provider.Settings;
+import android.support.annotation.ColorInt;
+import android.support.v14.preference.SwitchPreference;
+import android.support.v7.preference.Preference;
+
+import com.kunzisoft.androidclearchroma.ChromaPreferenceFragmentCompat;
+
+import static android.content.Intent.FLAG_ACTIVITY_NEW_TASK;
+
+public class PreferenceFragment extends ChromaPreferenceFragmentCompat
+        implements Preference.OnPreferenceClickListener,
+        Preference.OnPreferenceChangeListener {
+
+    @Override
+    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
+        setPreferencesFromResource(R.xml.preferences, rootKey);
+
+        // add listeners for non-default actions
+        Preference preference = findPreference(getString(R.string.settings_ime_available_key));
+        preference.setOnPreferenceClickListener(this);
+
+        preference = findPreference(getString(R.string.settings_position_button_key));
+        preference.setOnPreferenceChangeListener(this);
+    }
+
+    @Override
+    public boolean onPreferenceClick(Preference preference) {
+        // here you should use the same keys as you used in the xml-file
+        if (preference.getKey().equals(getString(R.string.settings_ime_available_key))) {
+            Intent intent = new Intent(Settings.ACTION_INPUT_METHOD_SETTINGS);
+            intent.addFlags(FLAG_ACTIVITY_NEW_TASK);
+            startActivity(intent);
+        }
+
+        return false;
+    }
+
+    @Override
+    /*
+     * To manage color selection
+     */
+    public void onPositiveButtonClick(@ColorInt int color) {
+        super.onPositiveButtonClick(color);
+        restartService();
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object newValue) {
+        if (preference.getKey().equals(getString(R.string.settings_position_button_key))) {
+            SwitchPreference switchPreference = (SwitchPreference) preference;
+            switchPreference.setChecked((Boolean) newValue);
+            restartService();
+        }
+        return false;
+    }
+
+    private void restartService() {
+        // Restart service
+        if (getActivity() != null) {
+            getActivity().stopService(new Intent(getActivity(), OverlayShowingService.class));
+            getActivity().startService(new Intent(getActivity(), OverlayShowingService.class));
+        }
+    }
+}
\ No newline at end of file
