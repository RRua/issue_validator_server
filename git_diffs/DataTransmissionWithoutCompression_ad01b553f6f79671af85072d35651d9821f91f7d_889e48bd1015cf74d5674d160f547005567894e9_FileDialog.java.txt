diff --git a/app/src/main/java/com/codedead/deadline/deadhash/domain/FileDialog.java b/app/src/main/java/com/codedead/deadline/deadhash/domain/FileDialog.java
deleted file mode 100644
index d6adf3e..0000000
--- a/app/src/main/java/com/codedead/deadline/deadhash/domain/FileDialog.java
+++ /dev/null
@@ -1,131 +0,0 @@
-package com.codedead.deadline.deadhash.domain;
-
-import android.app.Activity;
-import android.app.Dialog;
-import android.content.DialogInterface;
-import android.os.Environment;
-
-import androidx.appcompat.app.AlertDialog;
-
-import java.io.File;
-import java.io.FilenameFilter;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-
-public class FileDialog {
-
-    private static final String PARENT_DIR = "...";
-    private String[] fileList;
-    private File currentPath;
-
-    public interface FileSelectedListener {
-        void fileSelected(File file);
-    }
-
-    private final ListenerList<FileSelectedListener> fileListenerList = new ListenerList<>();
-    private final Activity activity;
-    private String fileEndsWith;
-
-    public FileDialog(Activity activity, File initialPath, String fileEndsWith) {
-        this.activity = activity;
-        setFileEndsWith(fileEndsWith);
-        if (!initialPath.exists()) initialPath = Environment.getExternalStorageDirectory();
-        loadFileList(initialPath);
-    }
-
-    /**
-     * @return file dialog
-     */
-    private Dialog createFileDialog() {
-        final AlertDialog.Builder builder = new AlertDialog.Builder(activity);
-
-        builder.setTitle(currentPath.getPath());
-
-        builder.setItems(fileList, new DialogInterface.OnClickListener() {
-            public void onClick(DialogInterface dialog, int which) {
-                String fileChosen = fileList[which];
-                File chosenFile = getChosenFile(fileChosen);
-                if (chosenFile.isDirectory()) {
-                    loadFileList(chosenFile);
-                    dialog.cancel();
-                    dialog.dismiss();
-                    showDialog();
-                } else fireFileSelectedEvent(chosenFile);
-            }
-        });
-
-        return builder.show();
-    }
-
-
-    public void addFileListener(FileSelectedListener listener) {
-        fileListenerList.add(listener);
-    }
-
-    /**
-     * Show file dialog
-     */
-    public void showDialog() {
-        createFileDialog().show();
-    }
-
-    private void fireFileSelectedEvent(final File file) {
-        fileListenerList.fireEvent(new ListenerList.FireHandler<FileSelectedListener>() {
-            public void fireEvent(FileSelectedListener listener) {
-                listener.fileSelected(file);
-            }
-        });
-    }
-
-    private void loadFileList(File path) {
-        this.currentPath = path;
-        final List<String> r = new ArrayList<>();
-        if (path.exists()) {
-            if (path.getParentFile() != null) r.add(PARENT_DIR);
-            final FilenameFilter filter = new FilenameFilter() {
-                public boolean accept(File dir, String filename) {
-                    final File sel = new File(dir, filename);
-                    if (!sel.canRead()) return false;
-                    else {
-                        boolean endsWith = fileEndsWith == null || filename.toLowerCase().endsWith(fileEndsWith);
-                        return endsWith || sel.isDirectory();
-                    }
-                }
-            };
-            final String[] fileList1 = path.list(filter);
-            if (fileList1 != null) {
-                Collections.addAll(r, fileList1);
-            }
-        }
-        fileList = r.toArray(new String[]{});
-    }
-
-    private File getChosenFile(String fileChosen) {
-        if (fileChosen.equals(PARENT_DIR)) return currentPath.getParentFile();
-        else return new File(currentPath, fileChosen);
-    }
-
-    private void setFileEndsWith(String fileEndsWith) {
-        this.fileEndsWith = fileEndsWith != null ? fileEndsWith.toLowerCase() : null;
-    }
-}
-
-class ListenerList<L> {
-    private final List<L> listenerList = new ArrayList<>();
-
-    interface FireHandler<L> {
-        void fireEvent(L listener);
-    }
-
-    void add(L listener) {
-        listenerList.add(listener);
-    }
-
-    void fireEvent(FireHandler<L> fireHandler) {
-        final List<L> copy = new ArrayList<>(listenerList);
-        for (final L l : copy) {
-            fireHandler.fireEvent(l);
-        }
-    }
-}
\ No newline at end of file
diff --git a/app/src/main/java/com/codedead/deadline/deadhash/domain/HashService.java b/app/src/main/java/com/codedead/deadline/deadhash/domain/HashService.java
index 6afba28..9cde119 100644
--- a/app/src/main/java/com/codedead/deadline/deadhash/domain/HashService.java
+++ b/app/src/main/java/com/codedead/deadline/deadhash/domain/HashService.java
@@ -33,7 +33,6 @@ final class HashService {
         try {
             final CRC32 crc = new CRC32();
             crc.update(bytes);
-
             return Long.toHexString(crc.getValue());
         } catch (Exception ex) {
             return null;
diff --git a/app/src/main/java/com/codedead/deadline/deadhash/domain/LocaleHelper.java b/app/src/main/java/com/codedead/deadline/deadhash/domain/LocaleHelper.java
index 321906c..2476af4 100644
--- a/app/src/main/java/com/codedead/deadline/deadhash/domain/LocaleHelper.java
+++ b/app/src/main/java/com/codedead/deadline/deadhash/domain/LocaleHelper.java
@@ -6,7 +6,7 @@ import android.content.SharedPreferences;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.os.Build;
-import android.preference.PreferenceManager;
+import androidx.preference.PreferenceManager;
 
 import java.util.Locale;
 
diff --git a/app/src/main/java/com/codedead/deadline/deadhash/domain/StreamUtility.java b/app/src/main/java/com/codedead/deadline/deadhash/domain/StreamUtility.java
new file mode 100644
index 0000000..2729303
--- /dev/null
+++ b/app/src/main/java/com/codedead/deadline/deadhash/domain/StreamUtility.java
@@ -0,0 +1,23 @@
+package com.codedead.deadline.deadhash.domain;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+
+public final class StreamUtility {
+
+    private static final int BASE_BUFFER_SIZE = 1024;
+
+    public static void copyStream(InputStream inputStream, OutputStream outputStream) throws IOException {
+        final byte[] bytes = new byte[BASE_BUFFER_SIZE];
+        int count;
+
+        while ((count = inputStream.read(bytes)) != -1) {
+            outputStream.write(bytes, 0, count);
+        }
+
+        inputStream.close();
+        outputStream.flush();
+        outputStream.close();
+    }
+}
diff --git a/app/src/main/java/com/codedead/deadline/deadhash/gui/MainActivity.java b/app/src/main/java/com/codedead/deadline/deadhash/gui/MainActivity.java
index f4a48fc..2980653 100644
--- a/app/src/main/java/com/codedead/deadline/deadhash/gui/MainActivity.java
+++ b/app/src/main/java/com/codedead/deadline/deadhash/gui/MainActivity.java
@@ -10,10 +10,10 @@ import android.content.res.Configuration;
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.CountDownTimer;
-import android.os.Environment;
 import android.os.Handler;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.core.app.ActivityCompat;
 import androidx.core.app.ShareCompat;
 import androidx.core.content.ContextCompat;
@@ -21,6 +21,7 @@ import androidx.appcompat.app.AlertDialog;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.codedead.deadline.deadhash.domain.StreamUtility;
 import com.google.android.material.navigation.NavigationView;
 
 import androidx.core.view.GravityCompat;
@@ -43,7 +44,6 @@ import android.widget.ViewFlipper;
 import com.codedead.deadline.deadhash.R;
 import com.codedead.deadline.deadhash.domain.DataAdapter;
 import com.codedead.deadline.deadhash.domain.EncryptionData;
-import com.codedead.deadline.deadhash.domain.FileDialog;
 import com.codedead.deadline.deadhash.domain.FileHashGenerator;
 import com.codedead.deadline.deadhash.domain.HashGenerator;
 import com.codedead.deadline.deadhash.domain.HashResponse;
@@ -51,7 +51,9 @@ import com.codedead.deadline.deadhash.domain.LocaleHelper;
 import com.codedead.deadline.deadhash.domain.TextHashGenerator;
 
 import java.io.File;
+import java.io.FileOutputStream;
 import java.io.IOException;
+import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
@@ -95,6 +97,8 @@ public class MainActivity extends AppCompatActivity implements NavigationView.On
     private CheckBox ChbSHA512;
     private CheckBox ChbCRC32;
 
+    private final String tmpFile = "tmpFile";
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
 
@@ -145,6 +149,13 @@ public class MainActivity extends AppCompatActivity implements NavigationView.On
         content_settings();
 
         content_alerts();
+
+        // Cleanup of previous runs, if applicable
+        final File f = new File(getApplicationContext().getCacheDir(), tmpFile);
+        if (f.exists()) {
+            //noinspection ResultOfMethodCallIgnored
+            f.delete();
+        }
     }
 
     private void content_alerts() {
@@ -261,14 +272,12 @@ public class MainActivity extends AppCompatActivity implements NavigationView.On
                 if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                     ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 0);
                 } else {
-                    final File mPath = Environment.getExternalStorageDirectory();
-                    final FileDialog fileDialog = new FileDialog(MainActivity.this, mPath, null);
-                    fileDialog.addFileListener(new FileDialog.FileSelectedListener() {
-                        public void fileSelected(File file) {
-                            edtFilePath.setText(file.toString());
-                        }
-                    });
-                    fileDialog.showDialog();
+                    final Intent intent = new Intent()
+                            .setType("*/*")
+                            .setAction(Intent.ACTION_GET_CONTENT)
+                            .addCategory(Intent.CATEGORY_OPENABLE);
+
+                    startActivityForResult(Intent.createChooser(intent, getString(R.string.dialog_select_file)), 123);
                 }
             }
         });
@@ -278,6 +287,7 @@ public class MainActivity extends AppCompatActivity implements NavigationView.On
             @Override
             public void onClick(View v) {
                 if (fileLoading) return;
+                if (!new File(getApplicationContext().getCacheDir(), tmpFile).exists()) return;
 
                 mRecyclerViewFile.setAdapter(null);
 
@@ -289,12 +299,6 @@ public class MainActivity extends AppCompatActivity implements NavigationView.On
                 fileDataArrayList.clear();
                 mAdapterFile.notifyDataSetChanged();
 
-                final File file = new File(edtFilePath.getText().toString());
-                if (!file.exists()) {
-                    Toast.makeText(MainActivity.this, R.string.toast_file_not_found, Toast.LENGTH_SHORT).show();
-                    return;
-                }
-
                 String compare = "";
                 if (edtFileCompare.getText() != null) {
                     compare = edtFileCompare.getText().toString();
@@ -302,7 +306,7 @@ public class MainActivity extends AppCompatActivity implements NavigationView.On
 
                 try {
                     final HashGenerator fileHashGenerator = new FileHashGenerator(
-                            file,
+                            new File(getApplicationContext().getCacheDir(), tmpFile),
                             sharedPreferences.getBoolean("md5", true),
                             sharedPreferences.getBoolean("sha1", true),
                             sharedPreferences.getBoolean("sha224", true),
@@ -653,4 +657,34 @@ public class MainActivity extends AppCompatActivity implements NavigationView.On
             mAdapterText.notifyItemInserted(textDataArrayList.size());
         }
     }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        if (requestCode == 123 && resultCode == RESULT_OK) {
+            if (data != null) {
+                final Uri selectedFileUri = data.getData();
+                if (selectedFileUri != null) {
+                    try (final InputStream selectedFileStream = getContentResolver().openInputStream(selectedFileUri)) {
+                        final File outputFile = new File(getApplicationContext().getCacheDir(), tmpFile);
+
+                        try (final FileOutputStream outputStream = new FileOutputStream(outputFile)) {
+                            if (selectedFileStream != null) {
+                                StreamUtility.copyStream(selectedFileStream, outputStream);
+                                edtFilePath.setText(selectedFileUri.getPath());
+                            } else {
+                                Toast.makeText(this, R.string.error_open_file, Toast.LENGTH_SHORT).show();
+                            }
+                        } catch (IOException ex) {
+                            Toast.makeText(this, R.string.error_copy_file, Toast.LENGTH_SHORT).show();
+                        }
+                    } catch (IOException ex) {
+                        Toast.makeText(this, R.string.error_open_file, Toast.LENGTH_SHORT).show();
+                    }
+                } else {
+                    Toast.makeText(this, R.string.error_open_file, Toast.LENGTH_SHORT).show();
+                }
+            }
+        }
+    }
 }
