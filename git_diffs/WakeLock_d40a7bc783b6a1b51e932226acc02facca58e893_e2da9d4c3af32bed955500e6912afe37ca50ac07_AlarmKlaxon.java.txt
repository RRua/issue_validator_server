diff --git a/src/com/better/alarm/AsyncHandler.java b/src/com/better/alarm/AsyncHandler.java
index 0fedbaae..ce5cc061 100644
--- a/src/com/better/alarm/AsyncHandler.java
+++ b/src/com/better/alarm/AsyncHandler.java
@@ -23,7 +23,7 @@ import android.os.HandlerThread;
  * Helper class for managing the background thread used to perform io operations
  * and handle async broadcasts.
  */
-final class AsyncHandler {
+public final class AsyncHandler {
 
     private static final HandlerThread sHandlerThread =
             new HandlerThread("AsyncHandler");
diff --git a/src/com/better/alarm/Log.java b/src/com/better/alarm/Log.java
index 73becdcd..206c6730 100644
--- a/src/com/better/alarm/Log.java
+++ b/src/com/better/alarm/Log.java
@@ -20,37 +20,37 @@
 
 package com.better.alarm;
 
-import android.os.SystemClock;
-
 import java.text.SimpleDateFormat;
 import java.util.Date;
 
-class Log {
+import com.better.alarm.presenter.AlarmClock;
+
+public class Log {
     public final static String LOGTAG = "AlarmClock";
 
-    static final boolean LOGV = AlarmClock.DEBUG ? false : false;
+    public static final boolean LOGV = AlarmClock.DEBUG ? false : false;
 
-    static void v(String logMe) {
+    public static void v(String logMe) {
         android.util.Log.v(LOGTAG, /* SystemClock.uptimeMillis() + " " + */ logMe);
     }
 
-    static void i(String logMe) {
+    public static void i(String logMe) {
         android.util.Log.i(LOGTAG, logMe);
     }
 
-    static void e(String logMe) {
+    public static void e(String logMe) {
         android.util.Log.e(LOGTAG, logMe);
     }
 
-    static void e(String logMe, Exception ex) {
+    public static void e(String logMe, Exception ex) {
         android.util.Log.e(LOGTAG, logMe, ex);
     }
 
-    static void wtf(String logMe) {
+    public static void wtf(String logMe) {
         android.util.Log.wtf(LOGTAG, logMe);
     }
 
-    static String formatTime(long millis) {
+    public static String formatTime(long millis) {
         return new SimpleDateFormat("HH:mm:ss.SSS aaa").format(new Date(millis));
     }
 }
diff --git a/src/com/better/alarm/Alarm.java b/src/com/better/alarm/model/Alarm.java
similarity index 97%
rename from src/com/better/alarm/Alarm.java
rename to src/com/better/alarm/model/Alarm.java
index a4fe6ccd..c6e455d3 100644
--- a/src/com/better/alarm/Alarm.java
+++ b/src/com/better/alarm/model/Alarm.java
@@ -14,7 +14,10 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.model;
+
+import java.text.DateFormatSymbols;
+import java.util.Calendar;
 
 import android.content.Context;
 import android.database.Cursor;
@@ -24,9 +27,7 @@ import android.os.Parcel;
 import android.os.Parcelable;
 import android.provider.BaseColumns;
 
-import java.text.DateFormatSymbols;
-import java.util.Calendar;
-
+import com.better.alarm.Log;
 import com.better.alarm.R;
 
 public final class Alarm implements Parcelable {
@@ -73,7 +74,7 @@ public final class Alarm implements Parcelable {
          * The content:// style URL for this table
          */
         public static final Uri CONTENT_URI =
-                Uri.parse("content://com.better.alarm/alarm");
+                Uri.parse("content://com.better.alarm.model/alarm");
 
         /**
          * Hour in 24-hour localtime 0 - 23.
@@ -133,7 +134,7 @@ public final class Alarm implements Parcelable {
         // Used when filtering enabled alarms.
         public static final String WHERE_ENABLED = ENABLED + "=1";
 
-        static final String[] ALARM_QUERY_COLUMNS = {
+        public static final String[] ALARM_QUERY_COLUMNS = {
             _ID, HOUR, MINUTES, DAYS_OF_WEEK, ALARM_TIME,
             ENABLED, VIBRATE, MESSAGE, ALERT };
 
@@ -252,7 +253,7 @@ public final class Alarm implements Parcelable {
      * 0x20: Saturday
      * 0x40: Sunday
      */
-    static final class DaysOfWeek {
+    public static final class DaysOfWeek {
 
         private static int[] DAY_MAP = new int[] {
             Calendar.MONDAY,
@@ -267,7 +268,7 @@ public final class Alarm implements Parcelable {
         // Bitmask of all repeating days
         private int mDays;
 
-        DaysOfWeek(int days) {
+        public DaysOfWeek(int days) {
             mDays = days;
         }
 
diff --git a/src/com/better/alarm/AlarmDatabaseHelper.java b/src/com/better/alarm/model/AlarmDatabaseHelper.java
similarity index 97%
rename from src/com/better/alarm/AlarmDatabaseHelper.java
rename to src/com/better/alarm/model/AlarmDatabaseHelper.java
index 7d4174f6..94c2be16 100644
--- a/src/com/better/alarm/AlarmDatabaseHelper.java
+++ b/src/com/better/alarm/model/AlarmDatabaseHelper.java
@@ -14,7 +14,9 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.model;
+
+import com.better.alarm.Log;
 
 import android.content.ContentUris;
 import android.content.ContentValues;
diff --git a/src/com/better/alarm/AlarmInitReceiver.java b/src/com/better/alarm/model/AlarmInitReceiver.java
similarity index 92%
rename from src/com/better/alarm/AlarmInitReceiver.java
rename to src/com/better/alarm/model/AlarmInitReceiver.java
index 6b645698..572983ae 100644
--- a/src/com/better/alarm/AlarmInitReceiver.java
+++ b/src/com/better/alarm/model/AlarmInitReceiver.java
@@ -14,7 +14,11 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.model;
+
+import com.better.alarm.AsyncHandler;
+import com.better.alarm.Log;
+import com.better.alarm.presenter.AlarmAlertWakeLock;
 
 import android.content.Context;
 import android.content.Intent;
diff --git a/src/com/better/alarm/AlarmProvider.java b/src/com/better/alarm/model/AlarmProvider.java
similarity index 95%
rename from src/com/better/alarm/AlarmProvider.java
rename to src/com/better/alarm/model/AlarmProvider.java
index 7d90cf52..c5675ffb 100644
--- a/src/com/better/alarm/AlarmProvider.java
+++ b/src/com/better/alarm/model/AlarmProvider.java
@@ -14,19 +14,19 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.model;
 
 import android.content.ContentProvider;
 import android.content.ContentValues;
-import android.content.Context;
 import android.content.UriMatcher;
 import android.database.Cursor;
-import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteQueryBuilder;
 import android.net.Uri;
 import android.text.TextUtils;
 
+import com.better.alarm.Log;
+
 public class AlarmProvider extends ContentProvider {
     private AlarmDatabaseHelper mOpenHelper;
 
@@ -36,8 +36,8 @@ public class AlarmProvider extends ContentProvider {
             UriMatcher.NO_MATCH);
 
     static {
-        sURLMatcher.addURI("com.better.alarm", "alarm", ALARMS);
-        sURLMatcher.addURI("com.better.alarm", "alarm/#", ALARMS_ID);
+        sURLMatcher.addURI("com.better.alarm.model", "alarm", ALARMS);
+        sURLMatcher.addURI("com.better.alarm.model", "alarm/#", ALARMS_ID);
     }
 
     public AlarmProvider() {
diff --git a/src/com/better/alarm/Alarms.java b/src/com/better/alarm/model/Alarms.java
similarity index 96%
rename from src/com/better/alarm/Alarms.java
rename to src/com/better/alarm/model/Alarms.java
index e38ab301..972a2c8d 100644
--- a/src/com/better/alarm/Alarms.java
+++ b/src/com/better/alarm/model/Alarms.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.model;
 
 import android.app.AlarmManager;
 import android.app.NotificationManager;
@@ -35,6 +35,9 @@ import java.util.Calendar;
 import java.util.HashSet;
 import java.util.Set;
 
+import com.better.alarm.Log;
+import com.better.alarm.presenter.AlarmClock;
+
 /**
  * The Alarms provider supplies info about Alarm Clock settings
  */
@@ -89,9 +92,9 @@ public class Alarms {
 
     private final static String M12 = "h:mm aa";
     // Shared with DigitalClock
-    final static String M24 = "kk:mm";
+    public final static String M24 = "kk:mm";
 
-    final static int INVALID_ALARM_ID = -1;
+    public final static int INVALID_ALARM_ID = -1;
 
     /**
      * Creates a new Alarm and fills in the given alarm's id.
@@ -434,7 +437,7 @@ public class Alarms {
      *
      * @param id Alarm ID.
      */
-    static void disableAlert(Context context) {
+    public static void disableAlert(Context context) {
         AlarmManager am = (AlarmManager)
                 context.getSystemService(Context.ALARM_SERVICE);
         PendingIntent sender = PendingIntent.getBroadcast(
@@ -445,7 +448,7 @@ public class Alarms {
         saveNextAlarm(context, "");
     }
 
-    static void saveSnoozeAlert(final Context context, final int id,
+    public static void saveSnoozeAlert(final Context context, final int id,
             final long time) {
         SharedPreferences prefs = context.getSharedPreferences(
                 AlarmClock.PREFERENCES, 0);
@@ -475,7 +478,7 @@ public class Alarms {
     /**
      * Disable the snooze alert if the given id matches the snooze id.
      */
-    static void disableSnoozeAlert(final Context context, final int id) {
+    public static void disableSnoozeAlert(final Context context, final int id) {
         SharedPreferences prefs = context.getSharedPreferences(
                 AlarmClock.PREFERENCES, 0);
         if (hasAlarmBeenSnoozed(prefs, id)) {
@@ -566,7 +569,7 @@ public class Alarms {
      * Given an alarm in hours and minutes, return a time suitable for
      * setting in AlarmManager.
      */
-    static Calendar calculateAlarm(int hour, int minute,
+    public static Calendar calculateAlarm(int hour, int minute,
             Alarm.DaysOfWeek daysOfWeek) {
 
         // start with now
@@ -591,14 +594,14 @@ public class Alarms {
         return c;
     }
 
-    static String formatTime(final Context context, int hour, int minute,
+    public static String formatTime(final Context context, int hour, int minute,
                              Alarm.DaysOfWeek daysOfWeek) {
         Calendar c = calculateAlarm(hour, minute, daysOfWeek);
         return formatTime(context, c);
     }
 
     /* used by AlarmAlert */
-    static String formatTime(final Context context, Calendar c) {
+    public static String formatTime(final Context context, Calendar c) {
         String format = get24HourMode(context) ? M24 : M12;
         return (c == null) ? "" : (String)DateFormat.format(format, c);
     }
@@ -615,7 +618,7 @@ public class Alarms {
      * Save time of the next alarm, as a formatted string, into the system
      * settings so those who care can make use of it.
      */
-    static void saveNextAlarm(final Context context, String timeString) {
+    public static void saveNextAlarm(final Context context, String timeString) {
         Settings.System.putString(context.getContentResolver(),
                                   Settings.System.NEXT_ALARM_FORMATTED,
                                   timeString);
@@ -624,7 +627,7 @@ public class Alarms {
     /**
      * @return true if clock is set to 24-hour mode
      */
-    static boolean get24HourMode(final Context context) {
+    public static boolean get24HourMode(final Context context) {
         return android.text.format.DateFormat.is24HourFormat(context);
     }
 }
diff --git a/src/com/better/alarm/AlarmAlert.java b/src/com/better/alarm/presenter/AlarmAlert.java
similarity index 96%
rename from src/com/better/alarm/AlarmAlert.java
rename to src/com/better/alarm/presenter/AlarmAlert.java
index cba5c96c..c41d461b 100644
--- a/src/com/better/alarm/AlarmAlert.java
+++ b/src/com/better/alarm/presenter/AlarmAlert.java
@@ -14,9 +14,12 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.presenter;
 
+import com.better.alarm.Log;
 import com.better.alarm.R;
+import com.better.alarm.R.layout;
+import com.better.alarm.model.Alarms;
 
 import android.app.KeyguardManager;
 import android.content.BroadcastReceiver;
diff --git a/src/com/better/alarm/AlarmAlertFullScreen.java b/src/com/better/alarm/presenter/AlarmAlertFullScreen.java
similarity index 98%
rename from src/com/better/alarm/AlarmAlertFullScreen.java
rename to src/com/better/alarm/presenter/AlarmAlertFullScreen.java
index c43cc410..5313d648 100644
--- a/src/com/better/alarm/AlarmAlertFullScreen.java
+++ b/src/com/better/alarm/presenter/AlarmAlertFullScreen.java
@@ -14,7 +14,9 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.presenter;
+
+import java.util.Calendar;
 
 import android.app.Activity;
 import android.app.Notification;
@@ -32,12 +34,12 @@ import android.view.View;
 import android.view.Window;
 import android.view.WindowManager;
 import android.widget.Button;
-import android.widget.TextView;
 import android.widget.Toast;
 
-import java.util.Calendar;
-
+import com.better.alarm.Log;
 import com.better.alarm.R;
+import com.better.alarm.model.Alarm;
+import com.better.alarm.model.Alarms;
 
 /**
  * Alarm Clock alarm alert: pops visible indicator and plays alarm
diff --git a/src/com/better/alarm/AlarmAlertWakeLock.java b/src/com/better/alarm/presenter/AlarmAlertWakeLock.java
similarity index 88%
rename from src/com/better/alarm/AlarmAlertWakeLock.java
rename to src/com/better/alarm/presenter/AlarmAlertWakeLock.java
index 0dc8c587..e7eeea7f 100644
--- a/src/com/better/alarm/AlarmAlertWakeLock.java
+++ b/src/com/better/alarm/presenter/AlarmAlertWakeLock.java
@@ -14,7 +14,9 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.presenter;
+
+import com.better.alarm.Log;
 
 import android.content.Context;
 import android.os.PowerManager;
@@ -23,11 +25,11 @@ import android.os.PowerManager;
  * Hold a wakelock that can be acquired in the AlarmReceiver and
  * released in the AlarmAlert activity
  */
-class AlarmAlertWakeLock {
+public class AlarmAlertWakeLock {
 
     private static PowerManager.WakeLock sCpuWakeLock;
 
-    static PowerManager.WakeLock createPartialWakeLock(Context context) {
+    public static PowerManager.WakeLock createPartialWakeLock(Context context) {
         PowerManager pm =
                 (PowerManager) context.getSystemService(Context.POWER_SERVICE);
         return pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, Log.LOGTAG);
diff --git a/src/com/better/alarm/AlarmClock.java b/src/com/better/alarm/presenter/AlarmClock.java
similarity index 96%
rename from src/com/better/alarm/AlarmClock.java
rename to src/com/better/alarm/presenter/AlarmClock.java
index 8de58ff4..af040d4a 100644
--- a/src/com/better/alarm/AlarmClock.java
+++ b/src/com/better/alarm/presenter/AlarmClock.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.presenter;
 
 import android.app.Activity;
 import android.app.AlertDialog;
@@ -44,17 +44,24 @@ import android.widget.TextView;
 import java.util.Calendar;
 
 import com.better.alarm.R;
+import com.better.alarm.R.id;
+import com.better.alarm.R.layout;
+import com.better.alarm.R.menu;
+import com.better.alarm.R.string;
+import com.better.alarm.model.Alarm;
+import com.better.alarm.model.Alarms;
+import com.better.alarm.view.DigitalClock;
 
 /**
  * AlarmClock application.
  */
 public class AlarmClock extends Activity implements OnItemClickListener {
 
-    static final String PREFERENCES = "AlarmClock";
+    public static final String PREFERENCES = "AlarmClock";
 
     /** This must be false for production.  If true, turns on logging,
         test code, etc. */
-    static final boolean DEBUG = false;
+    public static final boolean DEBUG = false;
 
     private SharedPreferences mPrefs;
     private LayoutInflater mFactory;
diff --git a/src/com/better/alarm/AlarmKlaxon.java b/src/com/better/alarm/presenter/AlarmKlaxon.java
similarity index 98%
rename from src/com/better/alarm/AlarmKlaxon.java
rename to src/com/better/alarm/presenter/AlarmKlaxon.java
index 2e4348d4..f862a9bf 100644
--- a/src/com/better/alarm/AlarmKlaxon.java
+++ b/src/com/better/alarm/presenter/AlarmKlaxon.java
@@ -14,9 +14,13 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.presenter;
 
+import com.better.alarm.Log;
 import com.better.alarm.R;
+import com.better.alarm.R.raw;
+import com.better.alarm.model.Alarm;
+import com.better.alarm.model.Alarms;
 
 import android.app.Service;
 import android.content.Context;
diff --git a/src/com/better/alarm/AlarmPreference.java b/src/com/better/alarm/presenter/AlarmPreference.java
similarity index 97%
rename from src/com/better/alarm/AlarmPreference.java
rename to src/com/better/alarm/presenter/AlarmPreference.java
index 2a906280..a58f465a 100644
--- a/src/com/better/alarm/AlarmPreference.java
+++ b/src/com/better/alarm/presenter/AlarmPreference.java
@@ -14,9 +14,10 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.presenter;
 
 import com.better.alarm.R;
+import com.better.alarm.R.string;
 
 import android.content.Context;
 import android.media.Ringtone;
diff --git a/src/com/better/alarm/AlarmReceiver.java b/src/com/better/alarm/presenter/AlarmReceiver.java
similarity index 98%
rename from src/com/better/alarm/AlarmReceiver.java
rename to src/com/better/alarm/presenter/AlarmReceiver.java
index 40b95dca..41e9c5f1 100644
--- a/src/com/better/alarm/AlarmReceiver.java
+++ b/src/com/better/alarm/presenter/AlarmReceiver.java
@@ -14,22 +14,24 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
-
-import com.better.alarm.R;
+package com.better.alarm.presenter;
 
 import android.app.KeyguardManager;
 import android.app.Notification;
 import android.app.NotificationManager;
 import android.app.PendingIntent;
-import android.content.ContentUris;
+import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.BroadcastReceiver;
-import android.database.Cursor;
 import android.os.Parcel;
 import android.os.PowerManager.WakeLock;
 
+import com.better.alarm.AsyncHandler;
+import com.better.alarm.Log;
+import com.better.alarm.R;
+import com.better.alarm.model.Alarm;
+import com.better.alarm.model.Alarms;
+
 /**
  * Glue class: connects AlarmAlert IntentReceiver to AlarmAlert
  * activity.  Passes through Alarm ID.
diff --git a/src/com/better/alarm/HandleSetAlarm.java b/src/com/better/alarm/presenter/HandleSetAlarm.java
similarity index 97%
rename from src/com/better/alarm/HandleSetAlarm.java
rename to src/com/better/alarm/presenter/HandleSetAlarm.java
index a5ead64d..4a6690a8 100644
--- a/src/com/better/alarm/HandleSetAlarm.java
+++ b/src/com/better/alarm/presenter/HandleSetAlarm.java
@@ -14,23 +14,26 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.presenter;
+
+import static android.provider.AlarmClock.ACTION_SET_ALARM;
+import static android.provider.AlarmClock.EXTRA_HOUR;
+import static android.provider.AlarmClock.EXTRA_MESSAGE;
+import static android.provider.AlarmClock.EXTRA_MINUTES;
+import static android.provider.AlarmClock.EXTRA_SKIP_UI;
+
+import java.util.Calendar;
 
 import android.app.Activity;
-import android.content.Context;
 import android.content.ContentResolver;
 import android.content.ContentValues;
 import android.content.Intent;
 import android.database.Cursor;
 import android.net.Uri;
 import android.os.Bundle;
-import static android.provider.AlarmClock.ACTION_SET_ALARM;
-import static android.provider.AlarmClock.EXTRA_HOUR;
-import static android.provider.AlarmClock.EXTRA_MESSAGE;
-import static android.provider.AlarmClock.EXTRA_MINUTES;
-import static android.provider.AlarmClock.EXTRA_SKIP_UI;
 
-import java.util.Calendar;
+import com.better.alarm.model.Alarm;
+import com.better.alarm.model.Alarms;
 
 public class HandleSetAlarm extends Activity {
 
diff --git a/src/com/better/alarm/RepeatPreference.java b/src/com/better/alarm/presenter/RepeatPreference.java
similarity index 97%
rename from src/com/better/alarm/RepeatPreference.java
rename to src/com/better/alarm/presenter/RepeatPreference.java
index 8c5d3194..db8fcb54 100644
--- a/src/com/better/alarm/RepeatPreference.java
+++ b/src/com/better/alarm/presenter/RepeatPreference.java
@@ -14,7 +14,10 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.presenter;
+
+import java.text.DateFormatSymbols;
+import java.util.Calendar;
 
 import android.app.AlertDialog.Builder;
 import android.content.Context;
@@ -22,8 +25,7 @@ import android.content.DialogInterface;
 import android.preference.ListPreference;
 import android.util.AttributeSet;
 
-import java.text.DateFormatSymbols;
-import java.util.Calendar;
+import com.better.alarm.model.Alarm;
 
 public class RepeatPreference extends ListPreference {
 
diff --git a/src/com/better/alarm/SetAlarm.java b/src/com/better/alarm/presenter/SetAlarm.java
similarity index 98%
rename from src/com/better/alarm/SetAlarm.java
rename to src/com/better/alarm/presenter/SetAlarm.java
index ee7b59f5..06c99bbd 100644
--- a/src/com/better/alarm/SetAlarm.java
+++ b/src/com/better/alarm/presenter/SetAlarm.java
@@ -14,9 +14,7 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
-
-import com.better.alarm.R;
+package com.better.alarm.presenter;
 
 import android.app.AlertDialog;
 import android.app.TimePickerDialog;
@@ -36,6 +34,11 @@ import android.widget.Button;
 import android.widget.TimePicker;
 import android.widget.Toast;
 
+import com.better.alarm.Log;
+import com.better.alarm.R;
+import com.better.alarm.model.Alarm;
+import com.better.alarm.model.Alarms;
+
 /**
  * Manages each alarm
  */
diff --git a/src/com/better/alarm/SettingsActivity.java b/src/com/better/alarm/presenter/SettingsActivity.java
similarity index 97%
rename from src/com/better/alarm/SettingsActivity.java
rename to src/com/better/alarm/presenter/SettingsActivity.java
index 85b538ff..90b0e533 100644
--- a/src/com/better/alarm/SettingsActivity.java
+++ b/src/com/better/alarm/presenter/SettingsActivity.java
@@ -14,11 +14,8 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.presenter;
 
-import com.better.alarm.R;
-
-import android.content.SharedPreferences;
 import android.media.AudioManager;
 import android.media.RingtoneManager;
 import android.net.Uri;
@@ -28,9 +25,10 @@ import android.preference.ListPreference;
 import android.preference.Preference;
 import android.preference.PreferenceActivity;
 import android.preference.PreferenceScreen;
-import android.preference.RingtonePreference;
 import android.provider.Settings;
 
+import com.better.alarm.R;
+
 /**
  * Settings for the Alarm Clock.
  */
diff --git a/src/com/better/alarm/ToastMaster.java b/src/com/better/alarm/presenter/ToastMaster.java
similarity index 96%
rename from src/com/better/alarm/ToastMaster.java
rename to src/com/better/alarm/presenter/ToastMaster.java
index b3add706..04ae8b56 100644
--- a/src/com/better/alarm/ToastMaster.java
+++ b/src/com/better/alarm/presenter/ToastMaster.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.presenter;
 
 import android.widget.Toast;
 
diff --git a/src/com/better/alarm/AndroidClockTextView.java b/src/com/better/alarm/view/AndroidClockTextView.java
similarity index 98%
rename from src/com/better/alarm/AndroidClockTextView.java
rename to src/com/better/alarm/view/AndroidClockTextView.java
index e429b0bd..3216974e 100644
--- a/src/com/better/alarm/AndroidClockTextView.java
+++ b/src/com/better/alarm/view/AndroidClockTextView.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.view;
 
 import android.content.Context;
 import android.graphics.Paint;
diff --git a/src/com/better/alarm/DigitalClock.java b/src/com/better/alarm/view/DigitalClock.java
similarity index 96%
rename from src/com/better/alarm/DigitalClock.java
rename to src/com/better/alarm/view/DigitalClock.java
index 0546e027..34659c06 100644
--- a/src/com/better/alarm/DigitalClock.java
+++ b/src/com/better/alarm/view/DigitalClock.java
@@ -14,7 +14,10 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.view;
+
+import java.text.DateFormatSymbols;
+import java.util.Calendar;
 
 import android.content.BroadcastReceiver;
 import android.content.Context;
@@ -28,10 +31,9 @@ import android.util.AttributeSet;
 import android.view.View;
 import android.widget.RelativeLayout;
 
-import java.text.DateFormatSymbols;
-import java.util.Calendar;
-
+import com.better.alarm.Log;
 import com.better.alarm.R;
+import com.better.alarm.model.Alarms;
 
 /**
  * Displays the time
@@ -158,7 +160,7 @@ public class DigitalClock extends RelativeLayout {
     }
 
 
-    void updateTime(Calendar c) {
+    public void updateTime(Calendar c) {
         mCalendar = c;
         updateTime();
     }
@@ -178,7 +180,7 @@ public class DigitalClock extends RelativeLayout {
         mAmPm.setShowAmPm(mFormat == M12);
     }
 
-    void setLive(boolean live) {
+    public void setLive(boolean live) {
         mLive = live;
     }
 }
diff --git a/src/com/better/alarm/DontPressWithParentLayout.java b/src/com/better/alarm/view/DontPressWithParentLayout.java
similarity index 97%
rename from src/com/better/alarm/DontPressWithParentLayout.java
rename to src/com/better/alarm/view/DontPressWithParentLayout.java
index 0ddbde8d..7ac84451 100644
--- a/src/com/better/alarm/DontPressWithParentLayout.java
+++ b/src/com/better/alarm/view/DontPressWithParentLayout.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.better.alarm;
+package com.better.alarm.view;
 
 import android.content.Context;
 import android.util.AttributeSet;
