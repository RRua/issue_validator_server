diff --git a/app/src/main/java/com/jtmcn/archwiki/viewer/MainActivity.java b/app/src/main/java/com/jtmcn/archwiki/viewer/MainActivity.java
index ea1e971..ad1e1b9 100644
--- a/app/src/main/java/com/jtmcn/archwiki/viewer/MainActivity.java
+++ b/app/src/main/java/com/jtmcn/archwiki/viewer/MainActivity.java
@@ -6,7 +6,6 @@ import android.content.Intent;
 import android.os.Bundle;
 import android.support.v4.view.MenuItemCompat;
 import android.support.v4.widget.SwipeRefreshLayout;
-import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.SearchView;
 import android.support.v7.widget.Toolbar;
@@ -26,6 +25,7 @@ import com.jtmcn.archwiki.viewer.tasks.FetchUrl;
 import com.jtmcn.archwiki.viewer.utils.AndroidUtils;
 import com.jtmcn.archwiki.viewer.utils.SettingsUtils;
 
+import java.util.ArrayList;
 import java.util.List;
 
 import butterknife.BindView;
@@ -33,26 +33,21 @@ import butterknife.ButterKnife;
 
 public class MainActivity extends AppCompatActivity implements FetchUrl.OnFinish<List<SearchResult>> {
 	public static final String TAG = MainActivity.class.getSimpleName();
-	private SearchView searchView;
-	private MenuItem searchMenuItem;
 	@BindView(R.id.wiki_view) WikiView wikiViewer;
 	@BindView(R.id.refresh_layout) SwipeRefreshLayout swipeRefreshLayout;
-	@BindView(R.id.search_toolbar) Toolbar toolbar;
+	@BindView(R.id.toolbar) Toolbar toolbar;
+	private SearchView searchView;
+	private MenuItem searchMenuItem;
 	private List<SearchResult> currentSuggestions;
 
 	@Override
 	protected void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
-		setContentView(R.layout.wiki_layout);
+		setContentView(R.layout.activity_main);
 		ButterKnife.bind(this);
 
 		setSupportActionBar(toolbar);
-		ActionBar supportActionBar = getSupportActionBar();
-		if (supportActionBar != null) {
-			supportActionBar.setDisplayShowHomeEnabled(true);
-			supportActionBar.setLogo(R.drawable.ic_launcher);
-			supportActionBar.setDisplayUseLogoEnabled(true);
-		}
+
 		swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
 			@Override
 			public void onRefresh() {
@@ -62,7 +57,7 @@ public class MainActivity extends AppCompatActivity implements FetchUrl.OnFinish
 		});
 
 		ProgressBar progressBar = ButterKnife.findById(this, R.id.progress_bar);
-		wikiViewer.buildView(progressBar, supportActionBar);
+		wikiViewer.buildView(progressBar, getSupportActionBar());
 
 		handleIntent(getIntent());
 	}
@@ -146,12 +141,12 @@ public class MainActivity extends AppCompatActivity implements FetchUrl.OnFinish
 			@Override
 			public boolean onQueryTextChange(String newText) {
 				if (newText.isEmpty()) {
-					searchView.setSuggestionsAdapter(null);
+					setCursorAdapter(new ArrayList<SearchResult>());
 					return true;
 				} else {
 					String searchUrl = SearchResultsBuilder.getSearchQuery(newText);
 					Fetch.search(MainActivity.this, searchUrl);
-					return false;
+					return true;
 				}
 			}
 		});
@@ -189,7 +184,7 @@ public class MainActivity extends AppCompatActivity implements FetchUrl.OnFinish
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
 			case R.id.menu_settings:
-				startActivity(new Intent(this, WikiPrefsActivity.class));
+				startActivity(new Intent(this, PreferencesActivity.class));
 				break;
 			case R.id.menu_share:
 				WikiPage wikiPage = wikiViewer.getCurrentWebPage();
@@ -211,6 +206,12 @@ public class MainActivity extends AppCompatActivity implements FetchUrl.OnFinish
 	@Override
 	public void onFinish(List<SearchResult> results) {
 		currentSuggestions = results;
-		searchView.setSuggestionsAdapter(SearchResultsAdapter.getCursorAdapter(this, currentSuggestions));
+		setCursorAdapter(currentSuggestions);
+	}
+
+	private void setCursorAdapter(List<SearchResult> currentSuggestions) {
+		searchView.setSuggestionsAdapter(
+				SearchResultsAdapter.getCursorAdapter(this, currentSuggestions)
+		);
 	}
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/jtmcn/archwiki/viewer/PreferencesActivity.java b/app/src/main/java/com/jtmcn/archwiki/viewer/PreferencesActivity.java
new file mode 100644
index 0000000..a6aefaf
--- /dev/null
+++ b/app/src/main/java/com/jtmcn/archwiki/viewer/PreferencesActivity.java
@@ -0,0 +1,63 @@
+package com.jtmcn.archwiki.viewer;
+
+import android.os.Bundle;
+import android.preference.PreferenceActivity;
+import android.preference.PreferenceFragment;
+import android.preference.PreferenceManager;
+import android.support.annotation.Nullable;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.MenuItem;
+
+/**
+ * The {@link PreferenceActivity} to change settings for the application.
+ */
+public class PreferencesActivity extends AppCompatActivity {
+	public static final String KEY_TEXT_SIZE = "textSize";
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		PreferenceManager.setDefaultValues(this, R.xml.prefs, false);
+	}
+
+	@Override
+	protected void onPostCreate(@Nullable Bundle savedInstanceState) {
+		super.onPostCreate(savedInstanceState);
+		setContentView(R.layout.activity_preferences);
+
+		getFragmentManager().beginTransaction()
+				.replace(R.id.settings_content, new ApplicationPreferenceFragment())
+				.commit();
+
+		Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+		setSupportActionBar(toolbar);
+		setTitle(R.string.menu_settings);
+
+		if (getSupportActionBar() != null) {
+			getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+			getSupportActionBar().setHomeButtonEnabled(true);
+		}
+	}
+
+	/**
+	 * Loads the activities preferences into the fragment.
+	 */
+	public static class ApplicationPreferenceFragment extends PreferenceFragment {
+		@Override
+		public void onCreate(Bundle bundle) {
+			super.onCreate(bundle);
+			addPreferencesFromResource(R.xml.prefs);
+		}
+	}
+
+	@Override
+	public boolean onOptionsItemSelected(MenuItem item) {
+		switch (item.getItemId()) {
+			case android.R.id.home:
+				onBackPressed();
+				break;
+		}
+		return true;
+	}
+}
diff --git a/app/src/main/java/com/jtmcn/archwiki/viewer/SearchResultsAdapter.java b/app/src/main/java/com/jtmcn/archwiki/viewer/SearchResultsAdapter.java
index daad476..eb3e616 100644
--- a/app/src/main/java/com/jtmcn/archwiki/viewer/SearchResultsAdapter.java
+++ b/app/src/main/java/com/jtmcn/archwiki/viewer/SearchResultsAdapter.java
@@ -16,7 +16,7 @@ import java.util.List;
 public class SearchResultsAdapter {
 	private static final String[] columnNames = {"_id", "title"};
 	private static final String[] from = {"title"};
-	private static final int[] to = new int[]{android.R.id.text1};
+	private static final int[] to = new int[]{R.id.url};
 
 	/**
 	 * Creates a cursor adapter given a {@link List<SearchResult>}.
@@ -39,7 +39,7 @@ public class SearchResultsAdapter {
 
 		return new SimpleCursorAdapter(
 				context,
-				android.R.layout.simple_list_item_1,
+				R.layout.link_list_item,
 				cursor,
 				from,
 				to,
diff --git a/app/src/main/java/com/jtmcn/archwiki/viewer/WikiPrefsActivity.java b/app/src/main/java/com/jtmcn/archwiki/viewer/WikiPrefsActivity.java
deleted file mode 100644
index f034f2e..0000000
--- a/app/src/main/java/com/jtmcn/archwiki/viewer/WikiPrefsActivity.java
+++ /dev/null
@@ -1,41 +0,0 @@
-package com.jtmcn.archwiki.viewer;
-
-import android.os.Bundle;
-import android.preference.PreferenceActivity;
-import android.preference.PreferenceFragment;
-import android.preference.PreferenceManager;
-
-/**
- * The {@link PreferenceActivity} to change settings for the application.
- */
-public class WikiPrefsActivity extends PreferenceActivity {
-	public static final String KEY_TEXT_SIZE = "textSize";
-
-	@Override
-	protected void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-
-		getFragmentManager().beginTransaction()
-				.replace(android.R.id.content, new ApplicationPreferenceFragment())
-				.commit();
-	}
-
-
-	/**
-	 * Loads the activities preferences into the fragment.
-	 */
-	public static class ApplicationPreferenceFragment extends PreferenceFragment {
-		@Override
-		public void onCreate(Bundle bundle) {
-			super.onCreate(bundle);
-
-			// sets default values if they haven't been set before
-			// I think some people do this in a custom Application class
-			PreferenceManager.setDefaultValues(getActivity(), R.xml.prefs, false);
-
-			addPreferencesFromResource(R.xml.prefs);
-
-		}
-	}
-
-}
diff --git a/app/src/main/java/com/jtmcn/archwiki/viewer/WikiView.java b/app/src/main/java/com/jtmcn/archwiki/viewer/WikiView.java
index 3c0167b..c271660 100644
--- a/app/src/main/java/com/jtmcn/archwiki/viewer/WikiView.java
+++ b/app/src/main/java/com/jtmcn/archwiki/viewer/WikiView.java
@@ -1,8 +1,8 @@
 package com.jtmcn.archwiki.viewer;
 
-import android.support.v7.app.ActionBar;
 import android.content.Context;
 import android.os.Build;
+import android.support.v7.app.ActionBar;
 import android.util.AttributeSet;
 import android.util.Log;
 import android.view.KeyEvent;
@@ -22,7 +22,6 @@ public class WikiView extends WebView {
 
 	public WikiView(Context context, AttributeSet attrs) {
 		super(context, attrs);
-		this.context = context;
 		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && !isInEditMode()) {
 			//this allows the webview to inject the css (otherwise it blocks it for security reasons)
 			getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);
diff --git a/app/src/main/java/com/jtmcn/archwiki/viewer/utils/SettingsUtils.java b/app/src/main/java/com/jtmcn/archwiki/viewer/utils/SettingsUtils.java
index b1dc5d7..f778506 100644
--- a/app/src/main/java/com/jtmcn/archwiki/viewer/utils/SettingsUtils.java
+++ b/app/src/main/java/com/jtmcn/archwiki/viewer/utils/SettingsUtils.java
@@ -4,7 +4,7 @@ import android.content.Context;
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
 
-import com.jtmcn.archwiki.viewer.WikiPrefsActivity;
+import com.jtmcn.archwiki.viewer.PreferencesActivity;
 
 /**
  * Created by kevin on 6/7/2017.
@@ -17,7 +17,7 @@ public class SettingsUtils {
 
 		// https://stackoverflow.com/questions/11346916/listpreference-use-string-array-as-entry-and-integer-array-as-entry-values-does
 		// the value of this preference must be parsed as a string
-		String fontSizePref = prefs.getString(WikiPrefsActivity.KEY_TEXT_SIZE, "2");
+		String fontSizePref = prefs.getString(PreferencesActivity.KEY_TEXT_SIZE, "2");
 		return Integer.valueOf(fontSizePref);
 
 	}
