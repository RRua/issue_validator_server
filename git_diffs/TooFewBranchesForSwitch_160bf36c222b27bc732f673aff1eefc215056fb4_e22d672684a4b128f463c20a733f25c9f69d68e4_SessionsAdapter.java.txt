diff --git a/app/src/main/java/com/health/openworkout/gui/datatypes/GenericAdapter.java b/app/src/main/java/com/health/openworkout/gui/datatypes/GenericAdapter.java
new file mode 100644
index 0000000..569bdad
--- /dev/null
+++ b/app/src/main/java/com/health/openworkout/gui/datatypes/GenericAdapter.java
@@ -0,0 +1,126 @@
+/*
+ * Copyright (C) 2020 by olie.xdev@googlemail.com All Rights Reserved
+ */
+
+package com.health.openworkout.gui.datatypes;
+
+import android.content.Context;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+
+import androidx.annotation.Keep;
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.health.openworkout.R;
+
+public abstract class GenericAdapter<VH extends GenericAdapter.ViewHolder> extends RecyclerView.Adapter<VH> {
+    @Keep
+    public enum FRAGMENT_MODE {VIEW, EDIT}
+    private FRAGMENT_MODE mode;
+    private Context context;
+    private static OnGenericClickListener onDefaultClickListener;
+    private static OnGenericClickListener onEditClickListener;
+    private static OnGenericClickListener onDeleteClickListener;
+    private static OnGenericClickListener onReorderClickListener;
+
+    public GenericAdapter(Context aContext, FRAGMENT_MODE mode) {
+        this.mode = mode;
+        this.context = aContext;
+    }
+
+    public abstract VH onCreateViewHolder(@NonNull ViewGroup parent, int viewType);
+    abstract public long getItemId(int position);
+    abstract public int getItemCount();
+
+    @Override
+    public void onBindViewHolder(@NonNull VH holder, int position) {
+        switch (mode) {
+            case VIEW:
+                holder.reorderView.setVisibility(View.GONE);
+                holder.deleteView.setVisibility(View.GONE);
+                holder.editView.setVisibility(View.GONE);
+                break;
+            case EDIT:
+                holder.reorderView.setVisibility(View.VISIBLE);
+                holder.deleteView.setVisibility(View.VISIBLE);
+                holder.editView.setVisibility(View.VISIBLE);
+                break;
+        }
+    }
+
+    public void setOnItemClickListener(OnGenericClickListener onWorkoutClickListener) {
+        this.onDefaultClickListener = onWorkoutClickListener;
+    }
+
+    public void setOnItemEditClickListener(OnGenericClickListener onEditClickListener) {
+        this.onEditClickListener = onEditClickListener;
+    }
+
+    public void setOnItemDeleteClickListener(OnGenericClickListener onDeleteClickListener) {
+        this.onDeleteClickListener = onDeleteClickListener;
+    }
+
+    public void setOnItemReorderClickListener(OnGenericClickListener onReorderClickListener) {
+        this.onReorderClickListener = onReorderClickListener;
+    }
+
+    public static class ViewHolder extends RecyclerView.ViewHolder {
+        ImageView reorderView;
+        ImageView deleteView;
+        ImageView editView;
+
+        public ViewHolder(@NonNull View itemView) {
+            super(itemView);
+
+            reorderView = itemView.findViewById(R.id.reorderView);
+            deleteView = itemView.findViewById(R.id.deleteView);
+            editView = itemView.findViewById(R.id.editView);
+
+            itemView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    if (onDefaultClickListener != null) {
+                        onDefaultClickListener.onItemClick(getAdapterPosition(), v);
+                    }
+                }
+            });
+
+            deleteView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    if (onDeleteClickListener != null) {
+                        onDeleteClickListener.onItemClick(getAdapterPosition(), v);
+                    }
+                }
+            });
+
+            editView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    if (onEditClickListener != null) {
+                        onEditClickListener.onItemClick(getAdapterPosition(), v);
+                    }
+                }
+            });
+
+            reorderView.setOnTouchListener(new View.OnTouchListener() {
+                @Override
+                public boolean onTouch(View v, MotionEvent event) {
+                    if (event.getActionMasked() == MotionEvent.ACTION_DOWN) {
+                        if (onReorderClickListener != null) {
+                            onReorderClickListener.onItemClick(getAdapterPosition(), v);
+                        }
+                    }
+                    return false;
+                }
+            });
+        }
+    }
+
+    public interface OnGenericClickListener {
+        public void onItemClick(int position, View v);
+    }
+}
diff --git a/app/src/main/java/com/health/openworkout/gui/session/SessionFragment.java b/app/src/main/java/com/health/openworkout/gui/session/SessionFragment.java
index 2b3dbd1..5d42f9d 100644
--- a/app/src/main/java/com/health/openworkout/gui/session/SessionFragment.java
+++ b/app/src/main/java/com/health/openworkout/gui/session/SessionFragment.java
@@ -13,7 +13,6 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Toast;
 
-import androidx.annotation.Keep;
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 import androidx.navigation.Navigation;
@@ -25,14 +24,12 @@ import com.health.openworkout.R;
 import com.health.openworkout.core.OpenWorkout;
 import com.health.openworkout.core.datatypes.TrainingPlan;
 import com.health.openworkout.core.datatypes.WorkoutSession;
+import com.health.openworkout.gui.datatypes.GenericAdapter;
 
 import java.util.Collections;
 import java.util.List;
 
 public class SessionFragment extends Fragment {
-    @Keep
-    public enum SESSION_MODE {VIEW, EDIT}
-
     private RecyclerView sessionsView;
 
     private TrainingPlan trainingPlan;
@@ -41,7 +38,7 @@ public class SessionFragment extends Fragment {
     private SessionsAdapter sessionsAdapter;
     private ItemTouchHelper touchHelper;
 
-    private static SESSION_MODE mode = SESSION_MODE.VIEW;
+    private static GenericAdapter.FRAGMENT_MODE mode = GenericAdapter.FRAGMENT_MODE.VIEW;
     private MenuItem saveMenu;
     private MenuItem editMenu;
 
@@ -93,10 +90,10 @@ public class SessionFragment extends Fragment {
         sessionsAdapter = new SessionsAdapter(getContext(), workoutSessionList, mode);
         sessionsView.setAdapter(sessionsAdapter);
 
-        if (mode == SESSION_MODE.VIEW) {
+        if (mode == GenericAdapter.FRAGMENT_MODE.VIEW) {
             touchHelper.attachToRecyclerView(null);
 
-            sessionsAdapter.setOnItemClickListener(new SessionsAdapter.OnSessionClickListener() {
+            sessionsAdapter.setOnItemClickListener(new GenericAdapter.OnGenericClickListener() {
                 @Override
                 public void onItemClick(int position, View v) {
                     WorkoutSession workoutSession = workoutSessionList.get(position);
@@ -108,12 +105,12 @@ public class SessionFragment extends Fragment {
             });
         }
 
-        if (mode == SESSION_MODE.EDIT) {
+        if (mode == GenericAdapter.FRAGMENT_MODE.EDIT) {
             sessionsAdapter.setOnItemClickListener(null);
 
             touchHelper.attachToRecyclerView(sessionsView);
 
-            sessionsAdapter.setOnItemEditClickListener(new SessionsAdapter.OnSessionClickListener() {
+            sessionsAdapter.setOnItemEditClickListener(new GenericAdapter.OnGenericClickListener() {
                 @Override
                 public void onItemClick(int position, View v) {
                     WorkoutSession workoutSession = workoutSessionList.get(position);
@@ -126,7 +123,7 @@ public class SessionFragment extends Fragment {
                 }
             });
 
-            sessionsAdapter.setOnItemDeleteClickListener(new SessionsAdapter.OnSessionClickListener() {
+            sessionsAdapter.setOnItemDeleteClickListener(new GenericAdapter.OnGenericClickListener() {
                 @Override
                 public void onItemClick(int position, View v) {
                     Toast.makeText(getContext(), String.format(getString(R.string.label_delete_toast), workoutSessionList.get(position).getName()), Toast.LENGTH_SHORT).show();
@@ -136,10 +133,10 @@ public class SessionFragment extends Fragment {
                 }
             });
 
-            sessionsAdapter.setOnItemReorderClickListener(new SessionsAdapter.OnSessionClickListener() {
+            sessionsAdapter.setOnItemReorderClickListener(new GenericAdapter.OnGenericClickListener() {
                 @Override
                 public void onItemClick(int position, View v) {
-                    touchHelper.startDrag(sessionsView.findViewHolderForAdapterPosition(position));
+                    touchHelper.startDrag(sessionsView.findViewHolderForLayoutPosition(position));
                 }
             });
         }
@@ -193,12 +190,12 @@ public class SessionFragment extends Fragment {
                 Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
                 return true;
             case R.id.edit:
-                mode = SESSION_MODE.EDIT;
+                mode = GenericAdapter.FRAGMENT_MODE.EDIT;
                 refreshMenuVisibility();
                 loadFromDatabase();
                 return true;
             case R.id.save:
-                mode = SESSION_MODE.VIEW;
+                mode = GenericAdapter.FRAGMENT_MODE.VIEW;
                 refreshMenuVisibility();
                 saveToDatabase();
                 loadFromDatabase();
diff --git a/app/src/main/java/com/health/openworkout/gui/session/SessionsAdapter.java b/app/src/main/java/com/health/openworkout/gui/session/SessionsAdapter.java
index f1e3e75..de10b39 100644
--- a/app/src/main/java/com/health/openworkout/gui/session/SessionsAdapter.java
+++ b/app/src/main/java/com/health/openworkout/gui/session/SessionsAdapter.java
@@ -6,30 +6,26 @@ package com.health.openworkout.gui.session;
 
 import android.content.Context;
 import android.view.LayoutInflater;
-import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
-import androidx.recyclerview.widget.RecyclerView;
 
 import com.health.openworkout.R;
 import com.health.openworkout.core.datatypes.WorkoutSession;
+import com.health.openworkout.gui.datatypes.GenericAdapter;
 
 import java.util.List;
 
-public class SessionsAdapter extends RecyclerView.Adapter<SessionsAdapter.ViewHolder> {
-    private SessionFragment.SESSION_MODE mode;
+public class SessionsAdapter extends GenericAdapter<SessionsAdapter.ViewHolder> {
+    private GenericAdapter.FRAGMENT_MODE mode;
     private List<WorkoutSession> workoutSessionList;
     private Context context;
-    private static OnSessionClickListener onDefaultClickListener;
-    private static OnSessionClickListener onEditClickListener;
-    private static OnSessionClickListener onDeleteClickListener;
-    private static OnSessionClickListener onReorderClickListener;
 
-    public SessionsAdapter(Context aContext, List<WorkoutSession> workoutSessionList, SessionFragment.SESSION_MODE mode) {
+    public SessionsAdapter(Context aContext, List<WorkoutSession> workoutSessionList, GenericAdapter.FRAGMENT_MODE mode) {
+        super(aContext, mode);
         this.mode = mode;
         this.context = aContext;
         this.workoutSessionList = workoutSessionList;
@@ -46,6 +42,7 @@ public class SessionsAdapter extends RecyclerView.Adapter<SessionsAdapter.ViewHo
 
     @Override
     public void onBindViewHolder(@NonNull SessionsAdapter.ViewHolder holder, int position) {
+        super.onBindViewHolder(holder, position);
         WorkoutSession workoutSession = workoutSessionList.get(position);
         holder.nameView.setText(workoutSession.getName());
 
@@ -54,19 +51,6 @@ public class SessionsAdapter extends RecyclerView.Adapter<SessionsAdapter.ViewHo
         } else {
             holder.imgView.setImageResource(R.drawable.ic_session_undone);
         }
-
-        switch (mode) {
-            case VIEW:
-                holder.reorderView.setVisibility(View.GONE);
-                holder.deleteView.setVisibility(View.GONE);
-                holder.editView.setVisibility(View.GONE);
-                break;
-            case EDIT:
-                holder.reorderView.setVisibility(View.VISIBLE);
-                holder.deleteView.setVisibility(View.VISIBLE);
-                holder.editView.setVisibility(View.VISIBLE);
-                break;
-        }
     }
 
     @Override
@@ -79,80 +63,15 @@ public class SessionsAdapter extends RecyclerView.Adapter<SessionsAdapter.ViewHo
         return workoutSessionList.size();
     }
 
-    public void setOnItemClickListener(OnSessionClickListener onWorkoutClickListener) {
-        this.onDefaultClickListener = onWorkoutClickListener;
-    }
-
-    public void setOnItemEditClickListener(OnSessionClickListener onEditClickListener) {
-        this.onEditClickListener = onEditClickListener;
-    }
-
-    public void setOnItemDeleteClickListener(OnSessionClickListener onDeleteClickListener) {
-        this.onDeleteClickListener = onDeleteClickListener;
-    }
-
-    public void setOnItemReorderClickListener(OnSessionClickListener onReorderClickListener) {
-        this.onReorderClickListener = onReorderClickListener;
-    }
-
-    static class ViewHolder extends RecyclerView.ViewHolder {
+    static class ViewHolder extends GenericAdapter.ViewHolder {
         ImageView imgView;
         TextView nameView;
-        ImageView reorderView;
-        ImageView deleteView;
-        ImageView editView;
 
         public ViewHolder(@NonNull View itemView) {
             super(itemView);
 
             imgView = itemView.findViewById(R.id.imgView);
             nameView = itemView.findViewById(R.id.nameView);
-            reorderView = itemView.findViewById(R.id.reorderView);
-            deleteView = itemView.findViewById(R.id.deleteView);
-            editView = itemView.findViewById(R.id.editView);
-
-            itemView.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    if (onDefaultClickListener != null) {
-                        onDefaultClickListener.onItemClick(getAdapterPosition(), v);
-                    }
-                }
-            });
-
-            deleteView.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    if (onDeleteClickListener != null) {
-                        onDeleteClickListener.onItemClick(getAdapterPosition(), v);
-                    }
-                }
-            });
-
-            editView.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    if (onEditClickListener != null) {
-                        onEditClickListener.onItemClick(getAdapterPosition(), v);
-                    }
-                }
-            });
-
-            reorderView.setOnTouchListener(new View.OnTouchListener() {
-                @Override
-                public boolean onTouch(View v, MotionEvent event) {
-                    if (event.getActionMasked() == MotionEvent.ACTION_DOWN) {
-                        if (onReorderClickListener != null) {
-                            onReorderClickListener.onItemClick(getAdapterPosition(), v);
-                        }
-                    }
-                    return false;
-                }
-            });
         }
     }
-
-    public interface OnSessionClickListener {
-        public void onItemClick(int position, View v);
-    }
 }
diff --git a/app/src/main/java/com/health/openworkout/gui/training/TrainingFragment.java b/app/src/main/java/com/health/openworkout/gui/training/TrainingFragment.java
index 0ba46bc..752beb1 100644
--- a/app/src/main/java/com/health/openworkout/gui/training/TrainingFragment.java
+++ b/app/src/main/java/com/health/openworkout/gui/training/TrainingFragment.java
@@ -13,7 +13,6 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Toast;
 
-import androidx.annotation.Keep;
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 import androidx.navigation.Navigation;
@@ -25,14 +24,12 @@ import com.health.openworkout.R;
 import com.health.openworkout.core.OpenWorkout;
 import com.health.openworkout.core.datatypes.TrainingPlan;
 import com.health.openworkout.core.datatypes.User;
+import com.health.openworkout.gui.datatypes.GenericAdapter;
 
 import java.util.Collections;
 import java.util.List;
 
 public class TrainingFragment extends Fragment {
-    @Keep
-    public enum TRAINING_MODE {VIEW, EDIT}
-
     private RecyclerView trainingsView;
 
     private List<TrainingPlan> trainingPlanList;
@@ -40,7 +37,7 @@ public class TrainingFragment extends Fragment {
     private TrainingsAdapter trainingsAdapter;
     private ItemTouchHelper touchHelper;
 
-    private static TRAINING_MODE mode = TRAINING_MODE.VIEW;
+    private static GenericAdapter.FRAGMENT_MODE mode = GenericAdapter.FRAGMENT_MODE.VIEW;
     private MenuItem saveMenu;
     private MenuItem editMenu;
 
@@ -88,10 +85,10 @@ public class TrainingFragment extends Fragment {
         trainingsAdapter = new TrainingsAdapter(getContext(), trainingPlanList, mode);
         trainingsView.setAdapter(trainingsAdapter);
 
-        if (mode == TRAINING_MODE.VIEW) {
+        if (mode == GenericAdapter.FRAGMENT_MODE.VIEW) {
             touchHelper.attachToRecyclerView(null);
 
-            trainingsAdapter.setOnItemClickListener(new TrainingsAdapter.OnTrainingClickListener() {
+            trainingsAdapter.setOnItemClickListener(new GenericAdapter.OnGenericClickListener() {
                 @Override
                 public void onItemClick(int position, View v) {
                     TrainingPlan trainingPlan = trainingPlanList.get(position);
@@ -103,12 +100,12 @@ public class TrainingFragment extends Fragment {
             });
         }
 
-        if (mode == TRAINING_MODE.EDIT) {
+        if (mode == GenericAdapter.FRAGMENT_MODE.EDIT) {
             trainingsAdapter.setOnItemClickListener(null);
 
             touchHelper.attachToRecyclerView(trainingsView);
 
-            trainingsAdapter.setOnItemEditClickListener(new TrainingsAdapter.OnTrainingClickListener() {
+            trainingsAdapter.setOnItemEditClickListener(new GenericAdapter.OnGenericClickListener() {
                 @Override
                 public void onItemClick(int position, View v) {
                     TrainingPlan trainingPlan = trainingPlanList.get(position);
@@ -121,7 +118,7 @@ public class TrainingFragment extends Fragment {
                 }
             });
 
-            trainingsAdapter.setOnItemDeleteClickListener(new TrainingsAdapter.OnTrainingClickListener() {
+            trainingsAdapter.setOnItemDeleteClickListener(new GenericAdapter.OnGenericClickListener() {
                 @Override
                 public void onItemClick(int position, View v) {
                     Toast.makeText(getContext(), String.format(getString(R.string.label_delete_toast), trainingPlanList.get(position).getName()), Toast.LENGTH_SHORT).show();
@@ -131,10 +128,10 @@ public class TrainingFragment extends Fragment {
                 }
             });
 
-            trainingsAdapter.setOnItemReorderClickListener(new TrainingsAdapter.OnTrainingClickListener() {
+            trainingsAdapter.setOnItemReorderClickListener(new GenericAdapter.OnGenericClickListener() {
                 @Override
                 public void onItemClick(int position, View v) {
-                    touchHelper.startDrag(trainingsView.findViewHolderForAdapterPosition(position));
+                    touchHelper.startDrag(trainingsView.findViewHolderForLayoutPosition(position));
                 }
             });
         }
@@ -199,12 +196,12 @@ public class TrainingFragment extends Fragment {
                 Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
                 return true;
             case R.id.edit:
-                mode = TRAINING_MODE.EDIT;
+                mode = GenericAdapter.FRAGMENT_MODE.EDIT;
                 refreshMenuVisibility();
                 loadFromDatabase();
                 return true;
             case R.id.save:
-                mode = TRAINING_MODE.VIEW;
+                mode = GenericAdapter.FRAGMENT_MODE.VIEW;
                 refreshMenuVisibility();
                 saveToDatabase();
                 loadFromDatabase();
diff --git a/app/src/main/java/com/health/openworkout/gui/training/TrainingsAdapter.java b/app/src/main/java/com/health/openworkout/gui/training/TrainingsAdapter.java
index 4342c11..059f15e 100644
--- a/app/src/main/java/com/health/openworkout/gui/training/TrainingsAdapter.java
+++ b/app/src/main/java/com/health/openworkout/gui/training/TrainingsAdapter.java
@@ -7,18 +7,17 @@ package com.health.openworkout.gui.training;
 import android.content.Context;
 import android.graphics.drawable.Drawable;
 import android.view.LayoutInflater;
-import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
-import androidx.recyclerview.widget.RecyclerView;
 
 import com.health.openworkout.R;
 import com.health.openworkout.core.OpenWorkout;
 import com.health.openworkout.core.datatypes.TrainingPlan;
+import com.health.openworkout.gui.datatypes.GenericAdapter;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -26,23 +25,20 @@ import java.util.List;
 
 import timber.log.Timber;
 
-public class TrainingsAdapter extends RecyclerView.Adapter<TrainingsAdapter.ViewHolder> {
-    private TrainingFragment.TRAINING_MODE mode;
+public class TrainingsAdapter extends GenericAdapter<TrainingsAdapter.ViewHolder> {
+    private GenericAdapter.FRAGMENT_MODE mode;
     private List<TrainingPlan> trainingPlanList;
     private Context context;
-    private static OnTrainingClickListener onDefaultClickListener;
-    private static OnTrainingClickListener onEditClickListener;
-    private static OnTrainingClickListener onDeleteClickListener;
-    private static OnTrainingClickListener onReorderClickListener;
 
-    public TrainingsAdapter(Context aContext, List<TrainingPlan> trainingPlanList, TrainingFragment.TRAINING_MODE mode) {
+    public TrainingsAdapter(Context aContext, List<TrainingPlan> trainingPlanList, GenericAdapter.FRAGMENT_MODE mode) {
+        super(aContext, mode);
         this.mode = mode;
         this.context = aContext;
         this.trainingPlanList = trainingPlanList;
     }
 
     @Override
-    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+    public TrainingsAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
         View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_training, parent, false);
 
         ViewHolder viewHolder = new ViewHolder(view);
@@ -52,6 +48,7 @@ public class TrainingsAdapter extends RecyclerView.Adapter<TrainingsAdapter.View
 
     @Override
     public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
+        super.onBindViewHolder(holder, position);
         TrainingPlan trainingPlan = trainingPlanList.get(position);
         holder.nameView.setText(trainingPlan.getName());
 
@@ -83,15 +80,9 @@ public class TrainingsAdapter extends RecyclerView.Adapter<TrainingsAdapter.View
         switch (mode) {
             case VIEW:
                 holder.trophyView.setVisibility(View.VISIBLE);
-                holder.reorderView.setVisibility(View.GONE);
-                holder.deleteView.setVisibility(View.GONE);
-                holder.editView.setVisibility(View.GONE);
                 break;
             case EDIT:
                 holder.trophyView.setVisibility(View.GONE);
-                holder.reorderView.setVisibility(View.VISIBLE);
-                holder.deleteView.setVisibility(View.VISIBLE);
-                holder.editView.setVisibility(View.VISIBLE);
                 break;
         }
     }
@@ -106,30 +97,11 @@ public class TrainingsAdapter extends RecyclerView.Adapter<TrainingsAdapter.View
         return trainingPlanList.size();
     }
 
-    public void setOnItemClickListener(OnTrainingClickListener onWorkoutClickListener) {
-        this.onDefaultClickListener = onWorkoutClickListener;
-    }
-
-    public void setOnItemEditClickListener(OnTrainingClickListener onEditClickListener) {
-        this.onEditClickListener = onEditClickListener;
-    }
-
-    public void setOnItemDeleteClickListener(OnTrainingClickListener onDeleteClickListener) {
-        this.onDeleteClickListener = onDeleteClickListener;
-    }
-
-    public void setOnItemReorderClickListener(OnTrainingClickListener onReorderClickListener) {
-        this.onReorderClickListener = onReorderClickListener;
-    }
-
-    static class ViewHolder extends RecyclerView.ViewHolder {
+    static class ViewHolder extends GenericAdapter.ViewHolder {
         ImageView imgView;
         TextView nameView;
         TextView detailedView;
         TextView trophyView;
-        ImageView reorderView;
-        ImageView deleteView;
-        ImageView editView;
 
         public ViewHolder(@NonNull View itemView) {
             super(itemView);
@@ -138,52 +110,6 @@ public class TrainingsAdapter extends RecyclerView.Adapter<TrainingsAdapter.View
             nameView = itemView.findViewById(R.id.nameView);
             detailedView = itemView.findViewById(R.id.detailedView);
             trophyView = itemView.findViewById(R.id.trophyView);
-            reorderView = itemView.findViewById(R.id.reorderView);
-            deleteView = itemView.findViewById(R.id.deleteView);
-            editView = itemView.findViewById(R.id.editView);
-
-            itemView.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    if (onDefaultClickListener != null) {
-                        onDefaultClickListener.onItemClick(getAdapterPosition(), v);
-                    }
-                }
-            });
-
-            deleteView.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    if (onDeleteClickListener != null) {
-                        onDeleteClickListener.onItemClick(getAdapterPosition(), v);
-                    }
-                }
-            });
-
-            editView.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    if (onEditClickListener != null) {
-                        onEditClickListener.onItemClick(getAdapterPosition(), v);
-                    }
-                }
-            });
-
-            reorderView.setOnTouchListener(new View.OnTouchListener() {
-                @Override
-                public boolean onTouch(View v, MotionEvent event) {
-                    if (event.getActionMasked() == MotionEvent.ACTION_DOWN) {
-                        if (onReorderClickListener != null) {
-                            onReorderClickListener.onItemClick(getAdapterPosition(), v);
-                        }
-                    }
-                    return false;
-                }
-            });
         }
     }
-
-    public interface OnTrainingClickListener {
-        public void onItemClick(int position, View v);
-    }
 }
diff --git a/app/src/main/java/com/health/openworkout/gui/workout/WorkoutFragment.java b/app/src/main/java/com/health/openworkout/gui/workout/WorkoutFragment.java
index fe243be..cd535c9 100644
--- a/app/src/main/java/com/health/openworkout/gui/workout/WorkoutFragment.java
+++ b/app/src/main/java/com/health/openworkout/gui/workout/WorkoutFragment.java
@@ -13,7 +13,6 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Toast;
 
-import androidx.annotation.Keep;
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 import androidx.navigation.Navigation;
@@ -25,14 +24,12 @@ import com.health.openworkout.R;
 import com.health.openworkout.core.OpenWorkout;
 import com.health.openworkout.core.datatypes.WorkoutItem;
 import com.health.openworkout.core.datatypes.WorkoutSession;
+import com.health.openworkout.gui.datatypes.GenericAdapter;
 
 import java.util.Collections;
 import java.util.List;
 
 public class WorkoutFragment extends Fragment {
-    @Keep
-    enum WORKOUT_MODE {VIEW, EDIT}
-
     private RecyclerView workoutsView;
     private WorkoutSession workoutSession;
     private List<WorkoutItem> workoutItemList;
@@ -40,7 +37,7 @@ public class WorkoutFragment extends Fragment {
     private WorkoutsAdapter workoutsAdapter;
     private ItemTouchHelper touchHelper;
 
-    private static WORKOUT_MODE mode = WORKOUT_MODE.VIEW;
+    private static GenericAdapter.FRAGMENT_MODE mode = GenericAdapter.FRAGMENT_MODE.VIEW;
     private MenuItem saveMenu;
     private MenuItem editMenu;
 
@@ -91,10 +88,10 @@ public class WorkoutFragment extends Fragment {
         workoutsAdapter = new WorkoutsAdapter(getContext(), workoutItemList, mode);
         workoutsView.setAdapter(workoutsAdapter);
 
-        if (mode == WORKOUT_MODE.VIEW) {
+        if (mode == GenericAdapter.FRAGMENT_MODE.VIEW) {
             touchHelper.attachToRecyclerView(null);
 
-            workoutsAdapter.setOnItemClickListener(new WorkoutsAdapter.OnWorkoutClickListener() {
+            workoutsAdapter.setOnItemClickListener(new GenericAdapter.OnGenericClickListener() {
                 @Override
                 public void onItemClick(int position, View v) {
                     WorkoutItem workoutItem = workoutItemList.get(position);
@@ -107,12 +104,12 @@ public class WorkoutFragment extends Fragment {
             });
         }
 
-        if (mode == WORKOUT_MODE.EDIT) {
+        if (mode == GenericAdapter.FRAGMENT_MODE.EDIT) {
             workoutsAdapter.setOnItemClickListener(null);
 
             touchHelper.attachToRecyclerView(workoutsView);
 
-            workoutsAdapter.setOnItemEditClickListener(new WorkoutsAdapter.OnWorkoutClickListener() {
+            workoutsAdapter.setOnItemEditClickListener(new GenericAdapter.OnGenericClickListener() {
                 @Override
                 public void onItemClick(int position, View v) {
                     WorkoutItem workoutItem = workoutItemList.get(position);
@@ -126,7 +123,7 @@ public class WorkoutFragment extends Fragment {
                 }
             });
 
-            workoutsAdapter.setOnItemDeleteClickListener(new WorkoutsAdapter.OnWorkoutClickListener() {
+            workoutsAdapter.setOnItemDeleteClickListener(new GenericAdapter.OnGenericClickListener() {
                 @Override
                 public void onItemClick(int position, View v) {
                     Toast.makeText(getContext(), String.format(getString(R.string.label_delete_toast), workoutItemList.get(position).getName()), Toast.LENGTH_SHORT).show();
@@ -136,10 +133,10 @@ public class WorkoutFragment extends Fragment {
                 }
             });
 
-            workoutsAdapter.setOnItemReorderClickListener(new WorkoutsAdapter.OnWorkoutClickListener() {
+            workoutsAdapter.setOnItemReorderClickListener(new GenericAdapter.OnGenericClickListener() {
                 @Override
                 public void onItemClick(int position, View v) {
-                    touchHelper.startDrag(workoutsView.findViewHolderForAdapterPosition(position));
+                    touchHelper.startDrag(workoutsView.findViewHolderForLayoutPosition(position));
                 }
             });
         }
@@ -193,12 +190,12 @@ public class WorkoutFragment extends Fragment {
                 Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
                 return true;
             case R.id.edit:
-                mode = WORKOUT_MODE.EDIT;
+                mode = GenericAdapter.FRAGMENT_MODE.EDIT;
                 refreshMenuVisibility();
                 loadFromDatabase();
                 return true;
             case R.id.save:
-                mode = WORKOUT_MODE.VIEW;
+                mode = GenericAdapter.FRAGMENT_MODE.VIEW;
                 refreshMenuVisibility();
                 saveToDatabase();
                 loadFromDatabase();
diff --git a/app/src/main/java/com/health/openworkout/gui/workout/WorkoutsAdapter.java b/app/src/main/java/com/health/openworkout/gui/workout/WorkoutsAdapter.java
index b08862e..357729e 100644
--- a/app/src/main/java/com/health/openworkout/gui/workout/WorkoutsAdapter.java
+++ b/app/src/main/java/com/health/openworkout/gui/workout/WorkoutsAdapter.java
@@ -7,18 +7,17 @@ package com.health.openworkout.gui.workout;
 import android.content.Context;
 import android.graphics.drawable.Drawable;
 import android.view.LayoutInflater;
-import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
-import androidx.recyclerview.widget.RecyclerView;
 
 import com.health.openworkout.R;
 import com.health.openworkout.core.OpenWorkout;
 import com.health.openworkout.core.datatypes.WorkoutItem;
+import com.health.openworkout.gui.datatypes.GenericAdapter;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -26,23 +25,20 @@ import java.util.List;
 
 import timber.log.Timber;
 
-public class WorkoutsAdapter extends RecyclerView.Adapter<WorkoutsAdapter.ViewHolder> {
-    private WorkoutFragment.WORKOUT_MODE mode;
+public class WorkoutsAdapter extends GenericAdapter<WorkoutsAdapter.ViewHolder> {
+    private GenericAdapter.FRAGMENT_MODE mode;
     private final List<WorkoutItem> workoutItemList;
     private Context context;
-    private static OnWorkoutClickListener onDefaultClickListener;
-    private static OnWorkoutClickListener onEditClickListener;
-    private static OnWorkoutClickListener onDeleteClickListener;
-    private static OnWorkoutClickListener onReorderClickListener;
 
-    public WorkoutsAdapter(Context aContext, List<WorkoutItem> workoutItemList, WorkoutFragment.WORKOUT_MODE mode) {
+    public WorkoutsAdapter(Context aContext, List<WorkoutItem> workoutItemList, GenericAdapter.FRAGMENT_MODE mode) {
+        super(aContext, mode);
         this.mode = mode;
         this.context = aContext;
         this.workoutItemList = workoutItemList;
     }
 
     @Override
-    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+    public WorkoutsAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
         View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_workout, parent, false);
 
         ViewHolder viewHolder = new ViewHolder(view);
@@ -52,6 +48,7 @@ public class WorkoutsAdapter extends RecyclerView.Adapter<WorkoutsAdapter.ViewHo
 
     @Override
     public void onBindViewHolder(@NonNull final ViewHolder holder, int position) {
+        super.onBindViewHolder(holder, position);
         WorkoutItem workoutItem = workoutItemList.get(position);
         holder.nameView.setText(workoutItem.getName());
 
@@ -90,15 +87,9 @@ public class WorkoutsAdapter extends RecyclerView.Adapter<WorkoutsAdapter.ViewHo
 
         switch (mode) {
             case VIEW:
-                holder.reorderView.setVisibility(View.GONE);
-                holder.deleteView.setVisibility(View.GONE);
-                holder.editView.setVisibility(View.GONE);
                 break;
             case EDIT:
                 holder.doneView.setVisibility(View.GONE);
-                holder.reorderView.setVisibility(View.VISIBLE);
-                holder.deleteView.setVisibility(View.VISIBLE);
-                holder.editView.setVisibility(View.VISIBLE);
                 break;
         }
     }
@@ -113,31 +104,12 @@ public class WorkoutsAdapter extends RecyclerView.Adapter<WorkoutsAdapter.ViewHo
         return workoutItemList.size();
     }
 
-    public void setOnItemClickListener(OnWorkoutClickListener onWorkoutClickListener) {
-        this.onDefaultClickListener = onWorkoutClickListener;
-    }
-
-    public void setOnItemEditClickListener(OnWorkoutClickListener onWorkoutClickListener) {
-        this.onEditClickListener = onWorkoutClickListener;
-    }
-
-    public void setOnItemDeleteClickListener(OnWorkoutClickListener onWorkoutClickListener) {
-        this.onDeleteClickListener = onWorkoutClickListener;
-    }
-
-    public void setOnItemReorderClickListener(OnWorkoutClickListener onWorkoutClickListener) {
-        this.onReorderClickListener = onWorkoutClickListener;
-    }
-
-    static class ViewHolder extends RecyclerView.ViewHolder {
+    static class ViewHolder extends GenericAdapter.ViewHolder {
         TextView prepView;
         ImageView imgView;
         TextView nameView;
         TextView detailedView;
         ImageView doneView;
-        ImageView reorderView;
-        ImageView deleteView;
-        ImageView editView;
         TextView breakView;
 
         public ViewHolder(@NonNull View itemView) {
@@ -148,53 +120,7 @@ public class WorkoutsAdapter extends RecyclerView.Adapter<WorkoutsAdapter.ViewHo
             nameView = itemView.findViewById(R.id.nameView);
             detailedView = itemView.findViewById(R.id.detailedView);
             doneView = itemView.findViewById(R.id.doneView);
-            reorderView = itemView.findViewById(R.id.reorderView);
-            deleteView = itemView.findViewById(R.id.deleteView);
-            editView = itemView.findViewById(R.id.editView);
             breakView = itemView.findViewById(R.id.breakView);
-
-            itemView.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    if (onDefaultClickListener != null) {
-                        onDefaultClickListener.onItemClick(getAdapterPosition(), v);
-                    }
-                }
-            });
-
-            deleteView.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    if (onDeleteClickListener != null) {
-                        onDeleteClickListener.onItemClick(getAdapterPosition(), v);
-                    }
-                }
-            });
-
-            editView.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    if (onEditClickListener != null) {
-                        onEditClickListener.onItemClick(getAdapterPosition(), v);
-                    }
-                }
-            });
-
-            reorderView.setOnTouchListener(new View.OnTouchListener() {
-                @Override
-                public boolean onTouch(View v, MotionEvent event) {
-                    if (event.getActionMasked() == MotionEvent.ACTION_DOWN) {
-                        if (onReorderClickListener != null) {
-                            onReorderClickListener.onItemClick(getAdapterPosition(), v);
-                        }
-                    }
-                    return false;
-                }
-            });
         }
     }
-
-    public interface OnWorkoutClickListener {
-        public void onItemClick(int position, View v);
-    }
 }
