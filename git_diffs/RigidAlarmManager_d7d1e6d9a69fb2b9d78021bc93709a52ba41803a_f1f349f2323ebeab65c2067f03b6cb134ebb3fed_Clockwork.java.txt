diff --git a/src/com/aragaer/jtt/JTTMainActivity.java b/src/com/aragaer/jtt/JTTMainActivity.java
index 8319085..cff1815 100644
--- a/src/com/aragaer/jtt/JTTMainActivity.java
+++ b/src/com/aragaer/jtt/JTTMainActivity.java
@@ -1,6 +1,6 @@
 package com.aragaer.jtt;
 
-import com.aragaer.jtt.core.Clockwork;
+import com.aragaer.jtt.android.AndroidTicker;
 import com.aragaer.jtt.core.ThreeIntervals;
 import com.aragaer.jtt.resources.StringResources;
 import com.aragaer.jtt.today.TodayAdapter;
@@ -23,7 +23,7 @@ public class JTTMainActivity extends Activity implements SharedPreferences.OnSha
     private final BroadcastReceiver receiver = new BroadcastReceiver() {
 	    @Override
 	    public void onReceive(Context context, Intent intent) {
-		if (!intent.getAction().equals(Clockwork.ACTION_JTT_TICK))
+		if (!intent.getAction().equals(AndroidTicker.ACTION_JTT_TICK))
 		    return;
 		final int wrapped = intent.getIntExtra("jtt", 0);
 
@@ -59,7 +59,7 @@ public class JTTMainActivity extends Activity implements SharedPreferences.OnSha
 	pager.setAdapter(pager_adapter);
 	setContentView(pager);
 
-	registerReceiver(receiver, new IntentFilter(Clockwork.ACTION_JTT_TICK));
+	registerReceiver(receiver, new IntentFilter(AndroidTicker.ACTION_JTT_TICK));
 	final SharedPreferences pref = PreferenceManager
 	    .getDefaultSharedPreferences(this);
 	pref.registerOnSharedPreferenceChangeListener(this);
diff --git a/src/com/aragaer/jtt/JTTWidgetProvider.java b/src/com/aragaer/jtt/JTTWidgetProvider.java
index 63b1cfe..1d1b841 100644
--- a/src/com/aragaer/jtt/JTTWidgetProvider.java
+++ b/src/com/aragaer/jtt/JTTWidgetProvider.java
@@ -5,7 +5,7 @@ package com.aragaer.jtt;
 import java.util.Map;
 import java.util.HashMap;
 
-import com.aragaer.jtt.core.Clockwork;
+import com.aragaer.jtt.android.AndroidTicker;
 import com.aragaer.jtt.core.Hour;
 import com.aragaer.jtt.graphics.Paints;
 import com.aragaer.jtt.graphics.WadokeiDraw;
@@ -15,16 +15,10 @@ import com.aragaer.jtt.resources.StringResources;
 import android.app.PendingIntent;
 import android.appwidget.AppWidgetManager;
 import android.appwidget.AppWidgetProvider;
-import android.content.ComponentName;
-import android.content.Context;
-import android.content.Intent;
+import android.content.*;
 import android.content.res.Resources.Theme;
 import android.content.res.TypedArray;
-import android.graphics.Bitmap;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.graphics.Path;
-import android.graphics.RectF;
+import android.graphics.*;
 import android.util.Log;
 import android.widget.RemoteViews;
 
@@ -75,7 +69,7 @@ public class JTTWidgetProvider {
 			final String action = i.getAction();
 			if (action.equals(AppWidgetManager.ACTION_APPWIDGET_UPDATE))
 				update(c, i);
-			else if (action.equals(Clockwork.ACTION_JTT_TICK))
+			else if (action.equals(AndroidTicker.ACTION_JTT_TICK))
 				tick(c, i, getClass());
 			else
 				Log.d("Widgets", "Got action "+action);
diff --git a/src/com/aragaer/jtt/JttService.java b/src/com/aragaer/jtt/JttService.java
index 8f683a9..6dd98ef 100644
--- a/src/com/aragaer/jtt/JttService.java
+++ b/src/com/aragaer/jtt/JttService.java
@@ -3,7 +3,7 @@
 package com.aragaer.jtt;
 
 import com.aragaer.jtt.core.Calculator;
-import com.aragaer.jtt.core.Clockwork;
+import com.aragaer.jtt.android.AndroidTicker;
 
 import android.app.Service;
 import android.content.*;
@@ -62,6 +62,6 @@ public class JttService extends Service implements SharedPreferences.OnSharedPre
         location.put("lat", l[0]);
         location.put("lon", l[1]);
         getContentResolver().update(Calculator.LOCATION, location, null, null);
-        Clockwork.schedule(this);
+        AndroidTicker.schedule(this);
     }
 }
diff --git a/src/com/aragaer/jtt/JttStatus.java b/src/com/aragaer/jtt/JttStatus.java
index fc9808d..4116d7d 100644
--- a/src/com/aragaer/jtt/JttStatus.java
+++ b/src/com/aragaer/jtt/JttStatus.java
@@ -1,5 +1,8 @@
+// -*- Mode: Java; tab-width: 4; indent-tabs-mode: nil; -*-
+// vim: et ts=4 sts=4 sw=4 syntax=java
 package com.aragaer.jtt;
 
+import com.aragaer.jtt.android.AndroidTicker;
 import com.aragaer.jtt.core.*;
 import com.aragaer.jtt.resources.RuntimeResources;
 import com.aragaer.jtt.resources.StringResources;
@@ -20,70 +23,70 @@ public class JttStatus extends BroadcastReceiver implements StringResourceChange
     private final NotificationManager nm;
 
     public JttStatus(final Context ctx) {
-	context = ctx;
-	nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
+        context = ctx;
+        nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
 
-	sr = RuntimeResources.get(context).getInstance(StringResources.class);
-	sr.registerStringResourceChangeListener(this,
-						StringResources.TYPE_HOUR_NAME | StringResources.TYPE_TIME_FORMAT);
+        sr = RuntimeResources.get(context).getInstance(StringResources.class);
+        sr.registerStringResourceChangeListener(this,
+                                                StringResources.TYPE_HOUR_NAME | StringResources.TYPE_TIME_FORMAT);
 
-	context.registerReceiver(this, new IntentFilter(Clockwork.ACTION_JTT_TICK));
+        context.registerReceiver(this, new IntentFilter(AndroidTicker.ACTION_JTT_TICK));
     }
 
     public void release() {
-	nm.cancel(APP_ID);
-	sr.unregisterStringResourceChangeListener(this);
-	context.unregisterReceiver(this);
+        nm.cancel(APP_ID);
+        sr.unregisterStringResourceChangeListener(this);
+        context.unregisterReceiver(this);
     }
 
     @Override
     public void onReceive(Context ctx, Intent intent) {
-	final String action = intent.getAction();
-	if (!action.equals(Clockwork.ACTION_JTT_TICK))
-	    return;
-
-	final ThreeIntervals intervals = (ThreeIntervals) intent.getSerializableExtra("intervals");
-	Interval currentInterval = intervals.getMiddleInterval();
-	Hour.fromInterval(currentInterval, System.currentTimeMillis(), h);
-	final long tr[] = intervals.getTransitions();
-	final int lower = Hour.lowerBoundary(h.num),
-	    upper = Hour.upperBoundary(h.num);
-	start = Hour.getHourBoundary(currentInterval.start, currentInterval.end, lower);
-	end = Hour.getHourBoundary(currentInterval.start, currentInterval.end, upper);
-	if (end < start) {// Cock or Hare
-	    if (h.quarter >= 2) // we've passed the transition
-		start = Hour.getHourBoundary(tr[0], tr[1], lower);
-	    else
-		end = Hour.getHourBoundary(tr[2], tr[3], upper);
-	}
-
-	show();
+        final String action = intent.getAction();
+        if (!action.equals(AndroidTicker.ACTION_JTT_TICK))
+            return;
+
+        final ThreeIntervals intervals = (ThreeIntervals) intent.getSerializableExtra("intervals");
+        Interval currentInterval = intervals.getMiddleInterval();
+        Hour.fromInterval(currentInterval, System.currentTimeMillis(), h);
+        final long tr[] = intervals.getTransitions();
+        final int lower = Hour.lowerBoundary(h.num),
+            upper = Hour.upperBoundary(h.num);
+        start = Hour.getHourBoundary(currentInterval.start, currentInterval.end, lower);
+        end = Hour.getHourBoundary(currentInterval.start, currentInterval.end, upper);
+        if (end < start) {// Cock or Hare
+            if (h.quarter >= 2) // we've passed the transition
+                start = Hour.getHourBoundary(tr[0], tr[1], lower);
+            else
+                end = Hour.getHourBoundary(tr[2], tr[3], upper);
+        }
+
+        show();
     }
 
     private void show() {
-	final int hf = h.quarter * Hour.QUARTER_PARTS + h.quarter_parts;
-	final RemoteViews rv = new RemoteViews(context.getPackageName(), R.layout.notification);
-
-	rv.setTextViewText(R.id.image, Hour.Glyphs[h.num]);
-	rv.setTextViewText(R.id.title, sr.getHrOf(h.num));
-	rv.setTextViewText(R.id.quarter, sr.getQuarter(h.quarter));
-	rv.setProgressBar(R.id.fraction, Hour.HOUR_PARTS, hf, false);
-	rv.setProgressBar(R.id.fraction, Hour.HOUR_PARTS, hf, false);
-	rv.setTextViewText(R.id.start, sr.format_time(start));
-	rv.setTextViewText(R.id.end, sr.format_time(end));
-
-	final Notification n = new NotificationCompat.Builder(context)
-	    .setContent(rv)
-	    .setOngoing(true)
-	    .setSmallIcon(R.drawable.notification_icon, h.num)
-	    .setContentIntent(PendingIntent.getActivity(context, 0,
-							new Intent(context, JTTMainActivity.class), 0))
-	    .build();
-
-	nm.notify(APP_ID, n);
+        final int hf = h.quarter * Hour.QUARTER_PARTS + h.quarter_parts;
+        final RemoteViews rv = new RemoteViews(context.getPackageName(), R.layout.notification);
+
+        rv.setTextViewText(R.id.image, Hour.Glyphs[h.num]);
+        rv.setTextViewText(R.id.title, sr.getHrOf(h.num));
+        rv.setTextViewText(R.id.quarter, sr.getQuarter(h.quarter));
+        rv.setProgressBar(R.id.fraction, Hour.HOUR_PARTS, hf, false);
+        rv.setProgressBar(R.id.fraction, Hour.HOUR_PARTS, hf, false);
+        rv.setTextViewText(R.id.start, sr.format_time(start));
+        rv.setTextViewText(R.id.end, sr.format_time(end));
+
+        final Notification n = new NotificationCompat.Builder(context)
+            .setContent(rv)
+            .setOngoing(true)
+            .setSmallIcon(R.drawable.notification_icon, h.num)
+            .setContentIntent(PendingIntent.getActivity(context, 0,
+                                                        new Intent(context, JTTMainActivity.class), 0))
+            .build();
+
+        nm.notify(APP_ID, n);
     }
 
     public void onStringResourcesChanged(final int changes) {
-	show();
+        show();
     }
 }
diff --git a/src/com/aragaer/jtt/core/Clockwork.java b/src/com/aragaer/jtt/android/AndroidTicker.java
similarity index 59%
rename from src/com/aragaer/jtt/core/Clockwork.java
rename to src/com/aragaer/jtt/android/AndroidTicker.java
index 669906a..e8aac91 100644
--- a/src/com/aragaer/jtt/core/Clockwork.java
+++ b/src/com/aragaer/jtt/android/AndroidTicker.java
@@ -1,36 +1,38 @@
 // -*- Mode: Java; tab-width: 4; indent-tabs-mode: nil; -*-
 // vim: et ts=4 sts=4 sw=4 syntax=java
-package com.aragaer.jtt.core;
+package com.aragaer.jtt.android;
+
+import com.aragaer.jtt.core.*;
 
 import android.app.*;
 import android.content.*;
 import android.util.Log;
+import java.io.Serializable;
+
 
-public class Clockwork extends IntentService {
+public class AndroidTicker extends IntentService {
     public static final String ACTION_JTT_TICK = "com.aragaer.jtt.action.TICK";
     private static final Intent TickAction = new Intent(ACTION_JTT_TICK);
 
-    public Clockwork() {
+    public AndroidTicker() {
         super("CLOCKWORK");
     }
 
     public static void schedule(final Context context) {
         long now = System.currentTimeMillis();
-        ThreeIntervals intervals = Calculator.getSurroundingTransitions(context, now);
-        Interval currentInterval = intervals.getMiddleInterval();
-        long tickLength = Math.round(currentInterval.getLength()/Hour.TICKS_PER_INTERVAL);
+        ClockworkStarter starter = new ClockworkStarter(context, now);
 
-        Intent TickActionInternal = new Intent(context, Clockwork.class)
-            .putExtra("intervals", intervals);
+        Intent TickActionInternal = new Intent(context, AndroidTicker.class)
+            .putExtra("intervals", starter.data);
 
         AlarmManager am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
-        am.setRepeating(AlarmManager.RTC, currentInterval.start, tickLength,
+        am.setRepeating(AlarmManager.RTC, starter.start, starter.repeat,
                         PendingIntent.getService(context, 0, TickActionInternal, PendingIntent.FLAG_UPDATE_CURRENT));
     }
 
     public static void unschedule(final Context context) {
         AlarmManager am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
-        am.cancel(PendingIntent.getService(context, 0, new Intent(context, Clockwork.class), 0));
+        am.cancel(PendingIntent.getService(context, 0, new Intent(context, AndroidTicker.class), 0));
     }
 
     @Override
@@ -40,7 +42,8 @@ public class Clockwork extends IntentService {
         Hour hour = Hour.fromInterval(intervals.getMiddleInterval(), now, null);
 
         if (intervals.surrounds(now)) {
-            TickAction.putExtra("intervals", intervals)
+            Intent TickAction = new Intent(ACTION_JTT_TICK)
+                .putExtra("intervals", intervals)
                 .putExtra("hour", hour.num)
                 .putExtra("jtt", hour.wrapped);
             sendStickyBroadcast(TickAction);
@@ -53,4 +56,17 @@ public class Clockwork extends IntentService {
 
         stopSelf();
     }
+
+    private static class ClockworkStarter {
+        public final long start, repeat;
+        public Serializable data;
+
+        public ClockworkStarter(Context context, long now) {
+            ThreeIntervals intervals = Calculator.getSurroundingTransitions(context, now);
+            Interval currentInterval = intervals.getMiddleInterval();
+            start = currentInterval.start;
+            repeat = Math.round(currentInterval.getLength()/Hour.TICKS_PER_INTERVAL);
+            data = intervals;
+        }
+    }
 }
diff --git a/src/com/aragaer/jtt/android/TimeChangeReceiver.java b/src/com/aragaer/jtt/android/TimeChangeReceiver.java
index 810e3f5..dc3ebb7 100644
--- a/src/com/aragaer/jtt/android/TimeChangeReceiver.java
+++ b/src/com/aragaer/jtt/android/TimeChangeReceiver.java
@@ -2,8 +2,6 @@
 // vim: et ts=4 sts=4 sw=4 syntax=java
 package com.aragaer.jtt.android;
 
-import com.aragaer.jtt.core.Clockwork;
-
 import android.content.*;
 import android.util.Log;
 
@@ -16,7 +14,7 @@ public class TimeChangeReceiver extends BroadcastReceiver {
         if (action.equals(Intent.ACTION_TIME_CHANGED)
             || action.equals(Intent.ACTION_DATE_CHANGED))
             try {
-                Clockwork.schedule(context);
+                AndroidTicker.schedule(context);
             } catch (IllegalStateException e) {
                 Log.i("JTT CLOCKWORK", "Time change while service is not running, ignore");
             }
