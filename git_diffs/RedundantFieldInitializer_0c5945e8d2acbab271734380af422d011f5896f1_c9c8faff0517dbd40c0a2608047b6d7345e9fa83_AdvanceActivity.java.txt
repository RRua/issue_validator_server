diff --git a/app/src/main/java/com/github/xfalcon/vhosts/AdvanceActivity.java b/app/src/main/java/com/github/xfalcon/vhosts/AdvanceActivity.java
deleted file mode 100644
index 8c52d90..0000000
--- a/app/src/main/java/com/github/xfalcon/vhosts/AdvanceActivity.java
+++ /dev/null
@@ -1,153 +0,0 @@
-package com.github.xfalcon.vhosts;
-
-import android.content.Context;
-import android.content.SharedPreferences;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Looper;
-import android.text.Editable;
-import android.text.TextWatcher;
-import android.view.MenuItem;
-import android.view.View;
-import android.widget.*;
-import androidx.appcompat.app.AppCompatActivity;
-import com.github.xfalcon.vhosts.util.FileUtils;
-import com.github.xfalcon.vhosts.util.HttpUtils;
-import com.github.xfalcon.vhosts.util.LogUtils;
-import com.github.xfalcon.vhosts.vservice.DnsChange;
-
-import java.util.Objects;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-import static com.github.xfalcon.vhosts.VhostsActivity.IS_LOCAL;
-import static com.github.xfalcon.vhosts.VhostsActivity.PREFS_NAME;
-
-public class AdvanceActivity extends AppCompatActivity {
-    private static final String TAG = AdvanceActivity.class.getSimpleName();
-    private Handler handler=null;
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_advance);
-        Objects.requireNonNull(getSupportActionBar()).setDisplayHomeAsUpEnabled(true);
-        final Button confirm_button = findViewById(R.id.confirm_button);
-        final RadioButton local_radio_button = findViewById(R.id.local_radio_button);
-        final RadioButton net_radio_button = findViewById(R.id.net_radio_button);
-        final EditText url_edit_text = findViewById(R.id.url_edit_text);
-        final RadioGroup ln_radio_group = findViewById(R.id.ln_radio_group);
-        final ImageButton down_button = findViewById(R.id.down_button);
-        final ProgressBar progressBar = findViewById(R.id.progressBar);
-        SharedPreferences settings = getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
-        url_edit_text.setText(settings.getString(VhostsActivity.HOSTS_URL,"https://raw.githubusercontent.com/x-falcon/tools/master/hosts"));
-        url_edit_text.setSelection(4);
-        boolean isLocal = settings.getBoolean(IS_LOCAL, true);
-        if (isLocal) local_radio_button.setChecked(true);
-        else net_radio_button.setChecked(true);
-        handler=new Handler();
-
-        confirm_button.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                finish();
-            }
-        });
-        down_button.setOnClickListener(new View.OnClickListener() {
-
-            @Override
-            public void onClick(View view) {
-                try {
-                    down_button.setEnabled(false);
-                    progressBar.setVisibility(View.VISIBLE);
-                    new Thread(new Runnable() {
-                        @Override
-                        public void run() {
-                            Looper.prepare();
-                            try {
-                                String result = HttpUtils.get(url_edit_text.getText().toString());
-                                FileUtils.writeFile(openFileOutput(VhostsActivity.NET_HOST_FILE, Context.MODE_PRIVATE), result);
-                                Toast.makeText(getApplication(), String.format(getString(R.string.down_success), DnsChange.handle_hosts(openFileInput(VhostsActivity.NET_HOST_FILE))), Toast.LENGTH_LONG).show();
-                                SharedPreferences settings = getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
-                                SharedPreferences.Editor editor = settings.edit();
-                                editor.putString(VhostsActivity.HOSTS_URL,url_edit_text.getText().toString());
-                                editor.apply();
-                            } catch (Exception e) {
-                                Toast.makeText(getApplication(), getString(R.string.down_error), Toast.LENGTH_LONG).show();
-                                LogUtils.e(TAG, e.getMessage(), e);
-                            }
-                            handler.post(new Runnable() {
-                                @Override
-                                public void run() {
-                                    down_button.setEnabled(true);
-                                    progressBar.setVisibility(View.GONE);
-                                }
-                            });
-                            Looper.loop();
-
-                        }
-                    }).start();
-
-                } catch (Exception e) {
-                    LogUtils.e(TAG, e.getMessage(), e);
-                }
-            }
-        });
-
-        url_edit_text.addTextChangedListener(new TextWatcher() {
-            @Override
-            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-
-            }
-
-            @Override
-            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-
-            }
-
-            @Override
-            public void afterTextChanged(Editable editable) {
-                if (isUrl(editable.toString())) {
-                    url_edit_text.setError(null);
-                    down_button.setEnabled(true);
-                } else {
-                    url_edit_text.setError(getString(R.string.url_error));
-                    down_button.setEnabled(false);
-                }
-            }
-        });
-
-        ln_radio_group.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
-            @Override
-            public void onCheckedChanged(RadioGroup group, int checkedId) {
-                SharedPreferences settings = getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
-                SharedPreferences.Editor editor = settings.edit();
-                if (checkedId == R.id.local_radio_button) editor.putBoolean(IS_LOCAL, true);
-                else editor.putBoolean(IS_LOCAL, false);
-                editor.apply();
-            }
-        });
-
-
-    }
-
-    public boolean isUrl(String str) {
-        String regex = "http(s)?://([\\w-]+\\.)+[\\w-]+(/[\\w- ./?%&=]*)?";
-        return this.match(regex, str);
-    }
-
-    private boolean match(String regex, String str) {
-        Pattern pattern = Pattern.compile(regex);
-        Matcher matcher = pattern.matcher(str);
-        return matcher.matches();
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        int id = item.getItemId();
-        if (id == android.R.id.home) {
-            finish();
-            return true;
-        }
-        return super.onOptionsItemSelected(item);
-    }
-}
diff --git a/app/src/main/java/com/github/xfalcon/vhosts/BootReceiver.java b/app/src/main/java/com/github/xfalcon/vhosts/BootReceiver.java
index bf6f862..d5f5921 100644
--- a/app/src/main/java/com/github/xfalcon/vhosts/BootReceiver.java
+++ b/app/src/main/java/com/github/xfalcon/vhosts/BootReceiver.java
@@ -23,7 +23,6 @@ import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 
-import com.github.xfalcon.vhosts.util.LogUtils;
 import com.github.xfalcon.vhosts.vservice.VhostsService;
 //use adb for test
 //am broadcast -a android.intent.action.BOOT_COMPLETED -p com.github.xfalcon.vhosts
@@ -32,14 +31,14 @@ public class BootReceiver extends BroadcastReceiver {
     public static final String RECONNECT_ON_REBOOT = "RECONNECT_ON_REBOOT";
 
     public static void setEnabled(Context context,Boolean enabled){
-        SharedPreferences settings = context.getSharedPreferences(VhostsActivity.PREFS_NAME, Context.MODE_PRIVATE);
+        SharedPreferences settings =  androidx.preference.PreferenceManager.getDefaultSharedPreferences(context);
         SharedPreferences.Editor editor = settings.edit();
         editor.putBoolean(RECONNECT_ON_REBOOT, enabled);
         editor.apply();
     }
 
     public static boolean getEnabled(Context context){
-        SharedPreferences settings = context.getSharedPreferences(VhostsActivity.PREFS_NAME, Context.MODE_PRIVATE);
+        SharedPreferences settings =  androidx.preference.PreferenceManager.getDefaultSharedPreferences(context);
         return settings.getBoolean(RECONNECT_ON_REBOOT, false);
     }
 
diff --git a/app/src/main/java/com/github/xfalcon/vhosts/SettingsFragment.java b/app/src/main/java/com/github/xfalcon/vhosts/SettingsFragment.java
index 932562a..6877a97 100644
--- a/app/src/main/java/com/github/xfalcon/vhosts/SettingsFragment.java
+++ b/app/src/main/java/com/github/xfalcon/vhosts/SettingsFragment.java
@@ -19,84 +19,128 @@
 package com.github.xfalcon.vhosts;
 
 import android.app.AlertDialog;
+import android.app.ProgressDialog;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.SharedPreferences;
+import android.graphics.Color;
 import android.os.Bundle;
-import android.widget.EditText;
-import android.widget.LinearLayout;
+import android.os.Handler;
+import android.os.Looper;
+import android.view.*;
+import android.widget.*;
 import androidx.preference.*;
-
+import com.github.xfalcon.vhosts.util.FileUtils;
+import com.github.xfalcon.vhosts.util.HttpUtils;
+import com.github.xfalcon.vhosts.util.LogUtils;
+import com.github.xfalcon.vhosts.vservice.DnsChange;
 
 public class SettingsFragment extends PreferenceFragmentCompat implements
         SharedPreferences.OnSharedPreferenceChangeListener {
 
+    private static String TAG = SettingsFragment.class.getName();
+
+    public static final int VPN_REQUEST_CODE = 0x0F;
+    public static final int SELECT_FILE_CODE = 0x05;
+    public static final String PREFS_NAME = SettingsFragment.class.getName();
+    public static final String IS_NET = "IS_NET";
+    public static final String HOSTS_URL = "HOSTS_URL";
+    public static final String HOSTS_URI = "HOST_URI";
+    public static final String NET_HOST_FILE = "net_hosts";
+    public static final String IPV4_DNS = "IPV4_DNS";
+    public static final String IS_CUS_DNS= "IS_CUS_DNS";
+
+    private Handler handler=null;
+
 
     @Override
     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
         setPreferencesFromResource(R.xml.preferences, rootKey);
-        SharedPreferences sharedPreferences = getPreferenceScreen().getSharedPreferences();
+        final SharedPreferences sharedPreferences = getPreferenceScreen().getSharedPreferences();
         PreferenceScreen prefScreen = getPreferenceScreen();
         handeleSummary(prefScreen, sharedPreferences);
-        Preference yourCustomPref = (Preference) findPreference(VhostsActivity.HOSTS_URL);
+        Preference yourCustomPref = (Preference) findPreference(HOSTS_URL);
         yourCustomPref.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
 
             public boolean onPreferenceClick(Preference preference) {
-
-
-                buildDialog(preference.getContext()).show();
+                String url = sharedPreferences.getString(HOSTS_URL,"");
+                setProgressDialog(preference.getContext(),url);
 
                 return true;
             }
         });
     }
-    public AlertDialog.Builder buildDialog(final Context c) {
-
-        AlertDialog.Builder builder = new AlertDialog.Builder(c);
-        builder.setTitle("EditText Dialog");
-        builder.setMessage("Enter text:");
-
-        LinearLayout llV = new LinearLayout(c);
-        llV.setOrientation(1); // 1 = vertical
-
-        final EditText patName = new EditText(c);
-        patName.setHint("Enter text...");
-
-        LinearLayout.LayoutParams lp = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT, 1f);
-        lp.bottomMargin = 20;
-        lp.rightMargin = 30;
-        lp.leftMargin = 15;
-
-        patName.setLayoutParams(lp);
-
-        llV.addView(patName);
-
-        builder.setView(llV);
-
-        builder.setPositiveButton("Save", new DialogInterface.OnClickListener() {
+    public void setProgressDialog(final Context context, final String url) {
+
+        int llPadding = 30;
+        LinearLayout ll = new LinearLayout(context);
+        ll.setOrientation(LinearLayout.HORIZONTAL);
+        ll.setPadding(llPadding, llPadding, llPadding, llPadding);
+        ll.setGravity(Gravity.CENTER);
+        LinearLayout.LayoutParams llParam = new LinearLayout.LayoutParams(
+                LinearLayout.LayoutParams.WRAP_CONTENT,
+                LinearLayout.LayoutParams.WRAP_CONTENT);
+        llParam.gravity = Gravity.CENTER;
+        ll.setLayoutParams(llParam);
+
+        ProgressBar progressBar = new ProgressBar(context);
+        progressBar.setIndeterminate(true);
+        progressBar.setPadding(0, 0, llPadding, 0);
+        progressBar.setLayoutParams(llParam);
+
+        llParam = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
+                ViewGroup.LayoutParams.WRAP_CONTENT);
+        llParam.gravity = Gravity.CENTER;
+        TextView tvText = new TextView(context);
+        tvText.setText("Download ...");
+        tvText.setTextColor(Color.parseColor("#000000"));
+        tvText.setTextSize(20);
+        tvText.setLayoutParams(llParam);
+
+        ll.addView(progressBar);
+        ll.addView(tvText);
+
+        AlertDialog.Builder builder = new AlertDialog.Builder(context);
+        builder.setCancelable(true);
+        builder.setView(ll);
+
+        final AlertDialog dialog = builder.create();
+        Window window = dialog.getWindow();
+        if (window != null) {
+            WindowManager.LayoutParams layoutParams = new WindowManager.LayoutParams();
+            layoutParams.copyFrom(dialog.getWindow().getAttributes());
+            layoutParams.width = LinearLayout.LayoutParams.WRAP_CONTENT;
+            layoutParams.height = LinearLayout.LayoutParams.WRAP_CONTENT;
+            dialog.getWindow().setAttributes(layoutParams);
+        }
+        handler=new Handler();
 
+        new Thread(new Runnable() {
             @Override
-            public void onClick(DialogInterface dialog, int which) {
-
-                if(patName.getText().toString().length() > 0) {
-
-                } else {
-
+            public void run() {
+                try {
+                    Looper.prepare();
+                    String result = HttpUtils.get(url);
+                    FileUtils.writeFile(context.openFileOutput(NET_HOST_FILE, Context.MODE_PRIVATE), result);
+                    Toast.makeText(context, String.format(getString(R.string.down_success), DnsChange.handle_hosts(context.openFileInput(NET_HOST_FILE))), Toast.LENGTH_LONG).show();
+                    handler.post(new Runnable() {
+                        @Override
+                        public void run() {
+                            dialog.hide();
+                        }
+                    });
+                    Looper.loop();
+                } catch (Exception e) {
+                    Toast.makeText(context, getString(R.string.down_error), Toast.LENGTH_LONG).show();
+                    LogUtils.e(TAG, e.getMessage(), e);
                 }
-            }
-        });
-
-        builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
-
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
 
-                dialog.dismiss();
             }
-        });
+        }).start();
+        dialog.show();
 
-        return builder;
     }
+
     private void handeleSummary(PreferenceGroup preferenceGroup, SharedPreferences sharedPreferences) {
         int count = preferenceGroup.getPreferenceCount();
 
diff --git a/app/src/main/java/com/github/xfalcon/vhosts/VhostsActivity.java b/app/src/main/java/com/github/xfalcon/vhosts/VhostsActivity.java
index 286028a..17546c4 100644
--- a/app/src/main/java/com/github/xfalcon/vhosts/VhostsActivity.java
+++ b/app/src/main/java/com/github/xfalcon/vhosts/VhostsActivity.java
@@ -38,15 +38,6 @@ import java.lang.reflect.Field;
 public class VhostsActivity extends AppCompatActivity {
 
     private static final String TAG = VhostsActivity.class.getSimpleName();
-    private static final int VPN_REQUEST_CODE = 0x0F;
-    private static final int SELECT_FILE_CODE = 0x05;
-    public static final String PREFS_NAME = VhostsActivity.class.getName();
-    public static final String IS_LOCAL = "IS_LOCAL";
-    public static final String HOSTS_URL = "HOSTS_URL";
-    public static final String HOSTS_URI = "HOST_URI";
-    public static final String NET_HOST_FILE = "net_hosts";
-    public static final String IPV4_DNS = "IPV4_DNS";
-    public static final String IS_CUS_DNS= "IS_CUS_DNS";
 
     private FirebaseAnalytics mFirebaseAnalytics;
 
@@ -67,9 +58,6 @@ public class VhostsActivity extends AppCompatActivity {
         super.onCreate(savedInstanceState);
         launch();
 
-        SharedPreferences settings =  androidx.preference.PreferenceManager.getDefaultSharedPreferences(this);
-
-
 //        StatService.autoTrace(this, true, false);
         mFirebaseAnalytics = FirebaseAnalytics.getInstance(this);
 
@@ -78,8 +66,10 @@ public class VhostsActivity extends AppCompatActivity {
         final SwitchButton vpnButton = findViewById(R.id.button_start_vpn);
 
         final Button selectHosts = findViewById(R.id.button_select_hosts);
+        final FloatingActionButton fab_setting = findViewById(R.id.fab_setting);
         final FloatingActionButton fab_boot = findViewById(R.id.fab_boot);
         final FloatingActionButton fab_donation = findViewById(R.id.fab_donation);
+
         if (checkHostUri() == -1) {
             selectHosts.setText(getString(R.string.select_hosts));
         }
@@ -100,7 +90,12 @@ public class VhostsActivity extends AppCompatActivity {
                 }
             }
         });
-
+        fab_setting.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                startActivity(new Intent(getApplicationContext(), SettingsActivity.class));
+            }
+        });
         fab_boot.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -122,7 +117,6 @@ public class VhostsActivity extends AppCompatActivity {
         selectHosts.setOnLongClickListener(new View.OnLongClickListener() {
             @Override
             public boolean onLongClick(View view) {
-//                startActivity(new Intent(getApplicationContext(), AdvanceActivity.class));
                   startActivity(new Intent(getApplicationContext(), SettingsActivity.class));
                 return false;
             }
@@ -171,15 +165,15 @@ public class VhostsActivity extends AppCompatActivity {
 
         try {
             intent.addCategory(Intent.CATEGORY_OPENABLE);
-            startActivityForResult(intent, SELECT_FILE_CODE);
+            startActivityForResult(intent, SettingsFragment.SELECT_FILE_CODE);
         } catch (Exception e) {
             Toast.makeText(this, R.string.file_select_error, Toast.LENGTH_LONG).show();
             LogUtils.e(TAG, "START SELECT_FILE_ACTIVE FAIL",e);
-            SharedPreferences settings = getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
+            SharedPreferences settings = getSharedPreferences(SettingsFragment.PREFS_NAME, Context.MODE_PRIVATE);
             SharedPreferences.Editor editor = settings.edit();
-            editor.putBoolean(IS_LOCAL, false);
+            editor.putBoolean(SettingsFragment.IS_NET, true);
             editor.apply();
-            startActivity(new Intent(getApplicationContext(), AdvanceActivity.class));
+            startActivity(new Intent(getApplicationContext(), SettingsActivity.class));
         }
 
     }
@@ -188,34 +182,34 @@ public class VhostsActivity extends AppCompatActivity {
         waitingForVPNStart = false;
         Intent vpnIntent = VhostsService.prepare(this);
         if (vpnIntent != null)
-            startActivityForResult(vpnIntent, VPN_REQUEST_CODE);
+            startActivityForResult(vpnIntent, SettingsFragment.VPN_REQUEST_CODE);
         else
-            onActivityResult(VPN_REQUEST_CODE, RESULT_OK, null);
+            onActivityResult(SettingsFragment.VPN_REQUEST_CODE, RESULT_OK, null);
     }
 
     private int checkHostUri() {
-        SharedPreferences settings = getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
-        if (settings.getBoolean(VhostsActivity.IS_LOCAL, true)) {
+        SharedPreferences settings =  androidx.preference.PreferenceManager.getDefaultSharedPreferences(this);
+        if (settings.getBoolean(SettingsFragment.IS_NET, false)) {
             try {
-                getContentResolver().openInputStream(Uri.parse(settings.getString(HOSTS_URI, null))).close();
-                return 1;
+                openFileInput(SettingsFragment.NET_HOST_FILE).close();
+                return 2;
             } catch (Exception e) {
-                LogUtils.e(TAG, "HOSTS FILE NOT FOUND", e);
-                return -1;
+                LogUtils.e(TAG, "NET HOSTS FILE NOT FOUND", e);
+                return -2;
             }
         } else {
             try {
-                openFileInput(VhostsActivity.NET_HOST_FILE).close();
-                return 2;
+                getContentResolver().openInputStream(Uri.parse(settings.getString(SettingsFragment.HOSTS_URI, null))).close();
+                return 1;
             } catch (Exception e) {
-                LogUtils.e(TAG, "NET HOSTS FILE NOT FOUND", e);
-                return -2;
+                LogUtils.e(TAG, "HOSTS FILE NOT FOUND", e);
+                return -1;
             }
         }
     }
 
     private void setUriByPREFS(Intent intent) {
-        SharedPreferences settings = getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
+        SharedPreferences settings =  androidx.preference.PreferenceManager.getDefaultSharedPreferences(this);
         SharedPreferences.Editor editor = settings.edit();
         Uri uri = intent.getData();
         final int takeFlags = intent.getFlags()
@@ -223,7 +217,7 @@ public class VhostsActivity extends AppCompatActivity {
                 | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
         try {
             getContentResolver().takePersistableUriPermission(uri, takeFlags);
-            editor.putString(HOSTS_URI, uri.toString());
+            editor.putString(SettingsFragment.HOSTS_URI, uri.toString());
             editor.apply();
             if (checkHostUri() == 1) {
                 setButton(true);
@@ -247,11 +241,11 @@ public class VhostsActivity extends AppCompatActivity {
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
-        if (requestCode == VPN_REQUEST_CODE && resultCode == RESULT_OK) {
+        if (requestCode == SettingsFragment.VPN_REQUEST_CODE && resultCode == RESULT_OK) {
             waitingForVPNStart = true;
             startService(new Intent(this, VhostsService.class).setAction(VhostsService.ACTION_CONNECT));
             setButton(false);
-        } else if (requestCode == SELECT_FILE_CODE && resultCode == RESULT_OK) {
+        } else if (requestCode == SettingsFragment.SELECT_FILE_CODE && resultCode == RESULT_OK) {
             setUriByPREFS(data);
         }
     }
diff --git a/app/src/main/java/com/github/xfalcon/vhosts/vservice/VhostsService.java b/app/src/main/java/com/github/xfalcon/vhosts/vservice/VhostsService.java
index 5e8f112..3249f1b 100644
--- a/app/src/main/java/com/github/xfalcon/vhosts/vservice/VhostsService.java
+++ b/app/src/main/java/com/github/xfalcon/vhosts/vservice/VhostsService.java
@@ -31,6 +31,7 @@ import android.os.ParcelFileDescriptor;
 import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 import com.github.xfalcon.vhosts.NetworkReceiver;
 import com.github.xfalcon.vhosts.R;
+import com.github.xfalcon.vhosts.SettingsFragment;
 import com.github.xfalcon.vhosts.VhostsActivity;
 import com.github.xfalcon.vhosts.util.LogUtils;
 import org.xbill.DNS.Address;
@@ -131,14 +132,14 @@ public class VhostsService extends VpnService {
 
     private void setupHostFile() {
         SharedPreferences settings =  androidx.preference.PreferenceManager.getDefaultSharedPreferences(this);
-        boolean is_local = settings.getBoolean(VhostsActivity.IS_LOCAL, true);
-        String uri_path = settings.getString(VhostsActivity.HOSTS_URI, null);
+        boolean is_net = settings.getBoolean(SettingsFragment.IS_NET, false);
+        String uri_path = settings.getString(SettingsFragment.HOSTS_URI, null);
         try {
             final InputStream inputStream;
-            if (is_local)
+            if (is_net)
+                inputStream = openFileInput(SettingsFragment.NET_HOST_FILE);
+            else
                 inputStream = getContentResolver().openInputStream(Uri.parse(uri_path));
-            else inputStream = openFileInput(VhostsActivity.NET_HOST_FILE);
-
             new Thread() {
                 public void run() {
                     DnsChange.handle_hosts(inputStream);
@@ -159,10 +160,10 @@ public class VhostsService extends VpnService {
 
             SharedPreferences settings =  androidx.preference.PreferenceManager.getDefaultSharedPreferences(this);
             String VPN_DNS4_DEFAULT = getString(R.string.dns_server);
-            boolean is_cus_dns = settings.getBoolean(VhostsActivity.IS_CUS_DNS,false);
+            boolean is_cus_dns = settings.getBoolean(SettingsFragment.IS_CUS_DNS,false);
             String VPN_DNS4=VPN_DNS4_DEFAULT;
             if(is_cus_dns){
-                VPN_DNS4 = settings.getString(VhostsActivity.IPV4_DNS, VPN_DNS4_DEFAULT);
+                VPN_DNS4 = settings.getString(SettingsFragment.IPV4_DNS, VPN_DNS4_DEFAULT);
                 try {
                     Address.getByAddress(VPN_DNS4);
                 } catch (Exception e) {
