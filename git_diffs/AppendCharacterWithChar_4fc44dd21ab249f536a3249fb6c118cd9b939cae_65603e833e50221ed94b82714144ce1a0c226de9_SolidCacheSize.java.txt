diff --git a/app/src/main/java/ch/bailu/aat/activities/MapActivity.java b/app/src/main/java/ch/bailu/aat/activities/MapActivity.java
index ebe95819..999d272c 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MapActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MapActivity.java
@@ -23,6 +23,7 @@ import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.aat.views.ContentView;
 import ch.bailu.aat.views.bar.ControlBar;
 import ch.bailu.aat.views.bar.MainControlBar;
+import ch.bailu.util_java.util.Objects;
 
 public class MapActivity extends AbsDispatcher{
 
@@ -50,7 +51,7 @@ public class MapActivity extends AbsDispatcher{
         Intent intent = getIntent();
         Uri uri = intent.getData();
 
-        if (intent.getAction().equals(Intent.ACTION_VIEW) && uri != null) {
+        if (Objects.equals(intent.getAction(),Intent.ACTION_VIEW) && uri != null) {
             AppLog.d(uri, uri.toString());
             setMapCenterFromUri(map, uri);
             openQueryFromUri(uri);
diff --git a/app/src/main/java/ch/bailu/aat/activities/MapFeaturesActivity.java b/app/src/main/java/ch/bailu/aat/activities/MapFeaturesActivity.java
index d5364ec9..6b56ed77 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MapFeaturesActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MapFeaturesActivity.java
@@ -5,7 +5,6 @@ import android.widget.LinearLayout;
 
 import ch.bailu.aat.R;
 import ch.bailu.aat.services.InsideContext;
-import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.util.ui.AppTheme;
 import ch.bailu.aat.views.ContentView;
 import ch.bailu.aat.views.bar.ControlBar;
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/Dispatcher.java b/app/src/main/java/ch/bailu/aat/dispatcher/Dispatcher.java
index 5b7751a4..c31beb8c 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/Dispatcher.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/Dispatcher.java
@@ -11,9 +11,9 @@ public class Dispatcher implements DispatcherInterface, OnContentUpdatedInterfac
 
 
     private final SparseArray<TargetList>
-            targets = new SparseArray(10);
+            targets = new SparseArray<>(10);
 
-    private final ArrayList<ContentSource> sources = new ArrayList(5);
+    private final ArrayList<ContentSource> sources = new ArrayList<>(5);
 
 
     private OnContentUpdatedInterface updater = OFF;
@@ -72,7 +72,7 @@ public class Dispatcher implements DispatcherInterface, OnContentUpdatedInterfac
         public final static TargetList NULL_LIST = new TargetList();
 
         private final ArrayList<OnContentUpdatedInterface> targets =
-                new ArrayList(10);
+                new ArrayList<>(10);
 
 
         @Override
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/LifeCycleDispatcher.java b/app/src/main/java/ch/bailu/aat/dispatcher/LifeCycleDispatcher.java
index f2ff1a72..7b0f5024 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/LifeCycleDispatcher.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/LifeCycleDispatcher.java
@@ -3,7 +3,7 @@ package ch.bailu.aat.dispatcher;
 import java.util.ArrayList;
 
 public class LifeCycleDispatcher implements LifeCycleInterface {
-    private final ArrayList<LifeCycleInterface> targets = new ArrayList(10);
+    private final ArrayList<LifeCycleInterface> targets = new ArrayList<>(10);
 
     private boolean awake=false;
 
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/OnContentUpdatedInterface.java b/app/src/main/java/ch/bailu/aat/dispatcher/OnContentUpdatedInterface.java
index 7962743f..11d725f1 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/OnContentUpdatedInterface.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/OnContentUpdatedInterface.java
@@ -4,7 +4,7 @@ import ch.bailu.aat.gpx.GpxInformation;
 
 
 public interface OnContentUpdatedInterface {
-    static final OnContentUpdatedInterface NULL = new OnContentUpdatedInterface() {
+    OnContentUpdatedInterface NULL = new OnContentUpdatedInterface() {
         @Override
         public void onContentUpdated(int iid, GpxInformation info) {
 
diff --git a/app/src/main/java/ch/bailu/aat/map/AndroidDraw.java b/app/src/main/java/ch/bailu/aat/map/AndroidDraw.java
index c4cbc78e..2c95caa4 100644
--- a/app/src/main/java/ch/bailu/aat/map/AndroidDraw.java
+++ b/app/src/main/java/ch/bailu/aat/map/AndroidDraw.java
@@ -71,21 +71,12 @@ public class AndroidDraw implements MapDraw {
         return canvas;
     }
 
-    @Override
-    public Paint getTextPaint() {
-        return textPaint;
-    }
 
     @Override
     public Paint getGridPaint() {
         return gridPaint;
     }
 
-    @Override
-    public Paint getLegendPaint() {
-        return legendPaint;
-    }
-
     @Override
     public Bitmap getNodeBitmap() {
         return nodeBitmap.getTileBitmap();
diff --git a/app/src/main/java/ch/bailu/aat/map/MapDensity.java b/app/src/main/java/ch/bailu/aat/map/MapDensity.java
index c65fa738..92ab9cf2 100644
--- a/app/src/main/java/ch/bailu/aat/map/MapDensity.java
+++ b/app/src/main/java/ch/bailu/aat/map/MapDensity.java
@@ -4,7 +4,6 @@ import android.content.Context;
 
 import ch.bailu.aat.util.ui.AppDensity;
 import ch.bailu.aat.preferences.SolidTileSize;
-import ch.bailu.aat.services.cache.TileObject;
 
 
 public class MapDensity extends AppDensity {
diff --git a/app/src/main/java/ch/bailu/aat/map/MapDraw.java b/app/src/main/java/ch/bailu/aat/map/MapDraw.java
index a061ae2f..af88575d 100644
--- a/app/src/main/java/ch/bailu/aat/map/MapDraw.java
+++ b/app/src/main/java/ch/bailu/aat/map/MapDraw.java
@@ -7,13 +7,10 @@ import org.mapsforge.core.graphics.Bitmap;
 import org.mapsforge.core.graphics.Paint;
 
 public interface MapDraw {
-    final static int POINT_RADIUS=3;
-    final static int MARGIN=5;
+    int POINT_RADIUS=3;
+    int MARGIN=5;
 
-    Paint getTextPaint();
     Paint getGridPaint();
-    Paint getLegendPaint();
-
     Bitmap getNodeBitmap();
 
 
@@ -33,8 +30,8 @@ public interface MapDraw {
     void bitmap(Bitmap b, Point pixel);
     void bitmap(Bitmap b, Point pixel, int color);
 
-    public void edge(TwoNodes nodes);
-    public void edge(TwoNodes nodes, Paint paint);
+    void edge(TwoNodes nodes);
+    void edge(TwoNodes nodes, Paint paint);
 
-    public void label(String text, Point pixel);
+    void label(String text, Point pixel);
 }
diff --git a/app/src/main/java/ch/bailu/aat/map/layer/Dem3NameLayer.java b/app/src/main/java/ch/bailu/aat/map/layer/Dem3NameLayer.java
index 7b1c262f..e1481c6a 100644
--- a/app/src/main/java/ch/bailu/aat/map/layer/Dem3NameLayer.java
+++ b/app/src/main/java/ch/bailu/aat/map/layer/Dem3NameLayer.java
@@ -2,7 +2,6 @@ package ch.bailu.aat.map.layer;
 
 import android.content.SharedPreferences;
 
-import org.mapsforge.core.model.LatLong;
 import org.mapsforge.core.model.Point;
 
 import ch.bailu.aat.coordinates.SrtmCoordinates;
diff --git a/app/src/main/java/ch/bailu/aat/map/layer/grid/WGS84Layer.java b/app/src/main/java/ch/bailu/aat/map/layer/grid/WGS84Layer.java
index df7313bb..e39caac9 100644
--- a/app/src/main/java/ch/bailu/aat/map/layer/grid/WGS84Layer.java
+++ b/app/src/main/java/ch/bailu/aat/map/layer/grid/WGS84Layer.java
@@ -3,7 +3,6 @@ package ch.bailu.aat.map.layer.grid;
 import android.content.Context;
 import android.content.SharedPreferences;
 
-import org.mapsforge.core.model.BoundingBox;
 import org.mapsforge.core.model.LatLong;
 
 import java.util.Locale;
diff --git a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeTileLayer.java b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeTileLayer.java
index 42188f84..fce0b7fe 100644
--- a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeTileLayer.java
+++ b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeTileLayer.java
@@ -23,7 +23,6 @@ import ch.bailu.aat.map.layer.MapLayerInterface;
 import ch.bailu.aat.map.tile.TileProvider;
 import ch.bailu.aat.services.InsideContext;
 import ch.bailu.aat.services.ServiceContext;
-import ch.bailu.aat.util.ui.AppLog;
 
 public class MapsForgeTileLayer extends Layer implements MapLayerInterface, Observer {
 
diff --git a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeViewBase.java b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeViewBase.java
index 459d8f8e..6cead0c7 100644
--- a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeViewBase.java
+++ b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeViewBase.java
@@ -28,7 +28,6 @@ import ch.bailu.aat.map.MapViewInterface;
 import ch.bailu.aat.map.layer.MapLayerInterface;
 import ch.bailu.aat.preferences.Storage;
 import ch.bailu.aat.services.ServiceContext;
-import ch.bailu.aat.util.ui.AppLog;
 
 public class MapsForgeViewBase extends MapView implements
         MapViewInterface,
@@ -46,7 +45,7 @@ public class MapsForgeViewBase extends MapView implements
     private final FrameBufferHack frameBufferHack;
     private final FrameBufferController frameBufferControllerHack;
 
-    private final ArrayList<MapLayerInterface> layers = new ArrayList(10);
+    private final ArrayList<MapLayerInterface> layers = new ArrayList<>(10);
 
     private boolean areLayersAttached=false;
 
diff --git a/app/src/main/java/ch/bailu/aat/map/tile/TileObjectCache.java b/app/src/main/java/ch/bailu/aat/map/tile/TileObjectCache.java
index e93f5de7..59e2e762 100644
--- a/app/src/main/java/ch/bailu/aat/map/tile/TileObjectCache.java
+++ b/app/src/main/java/ch/bailu/aat/map/tile/TileObjectCache.java
@@ -13,7 +13,7 @@ public class TileObjectCache extends TileCache<TileObject> {
     private final static int INITIAL_CAPACITY = 5;
 
 
-    private final LockCache<TileObject> tiles = new LockCache(INITIAL_CAPACITY);
+    private final LockCache<TileObject> tiles = new LockCache<>(INITIAL_CAPACITY);
 
     @Override
     public TileObject get(String string) {
diff --git a/app/src/main/java/ch/bailu/aat/map/tile/TileProvider.java b/app/src/main/java/ch/bailu/aat/map/tile/TileProvider.java
index 65f2b4a2..0b19e988 100644
--- a/app/src/main/java/ch/bailu/aat/map/tile/TileProvider.java
+++ b/app/src/main/java/ch/bailu/aat/map/tile/TileProvider.java
@@ -18,7 +18,6 @@ import ch.bailu.aat.map.tile.source.Source;
 import ch.bailu.aat.services.InsideContext;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.cache.ObjectHandle;
-import ch.bailu.aat.services.cache.OnObject;
 import ch.bailu.aat.services.cache.TileObject;
 import ch.bailu.aat.util.AppBroadcaster;
 import ch.bailu.aat.util.AppIntent;
@@ -27,7 +26,7 @@ public class TileProvider implements Attachable, ObservableInterface {
 
 
     private final ServiceContext scontext;
-    private final ArrayList<Observer> observers = new ArrayList(2);
+    private final ArrayList<Observer> observers = new ArrayList<>(2);
     private final Source source;
 
     private TileCache<TileObject> cache = TileCache.NULL;
diff --git a/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java b/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java
index 3d378229..31b1e339 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java
@@ -7,6 +7,7 @@ import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
 
 public abstract class AbsSolidType implements SolidTypeInterface {
     public static final String NULL_LABEL="";
+    public static final String DEFAULT_MARKER=" X";
 
 
     public int getIconResource() {return 0;}
@@ -46,4 +47,21 @@ public abstract class AbsSolidType implements SolidTypeInterface {
     public String toString() {
         return getValueAsString();
     }
+
+
+
+    protected static String toDefaultString(String s) {
+        return s + DEFAULT_MARKER;
+    }
+
+    protected static String toDefaultString(String s, int sel) {
+        return toDefaultString(s, sel, 0);
+    }
+
+    protected static String toDefaultString(String s, int sel, int def) {
+        if (def == sel) return toDefaultString(s);
+        return s;
+    }
+
+
 }
diff --git a/app/src/main/java/ch/bailu/aat/preferences/PresetDependent.java b/app/src/main/java/ch/bailu/aat/preferences/PresetDependent.java
index 9774a0d4..413ae59b 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/PresetDependent.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/PresetDependent.java
@@ -3,5 +3,5 @@ package ch.bailu.aat.preferences;
 import android.content.Context;
 
 public interface PresetDependent {
-    public void preferencesChanged(Context c, int i);
+    void preferencesChanged(Context c, int i);
 }
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidCacheSize.java b/app/src/main/java/ch/bailu/aat/preferences/SolidCacheSize.java
index 5cd12c23..a9d67cee 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidCacheSize.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidCacheSize.java
@@ -2,7 +2,6 @@ package ch.bailu.aat.preferences;
 
 import android.content.Context;
 
-import ch.bailu.aat.R;
 import ch.bailu.aat.util.MemSize;
 
 public class SolidCacheSize extends SolidIndexList {
@@ -45,10 +44,7 @@ public class SolidCacheSize extends SolidIndexList {
 
         MemSize.describe(b, sizes[i]);
 
-        if (i == 0) {
-            b.append(" ").append(getContext().getString(R.string.auto));
-        }
-        return b.toString();
+        return toDefaultString(b.toString(), i);
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidFile.java b/app/src/main/java/ch/bailu/aat/preferences/SolidFile.java
index 9cf5f9d5..969a39da 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidFile.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidFile.java
@@ -94,12 +94,14 @@ public abstract class SolidFile extends SolidString {
 
                 Uri uri = data.getData();
 
-                requestPersistablePermission(c, uri);
+                if (uri != null) {
 
-                Storage.global(c).writeString(browseDirKey, ""); // forces update notification
-                                                                 // (needed because permission changed)
-                Storage.global(c).writeString(browseDirKey, uri.toString());
+                    requestPersistablePermission(c, uri);
 
+                    Storage.global(c).writeString(browseDirKey, ""); // forces update notification
+                    // (needed because permission changed)
+                    Storage.global(c).writeString(browseDirKey, uri.toString());
+                }
             }
             browseDirKey = null;
         }
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidLocationProvider.java b/app/src/main/java/ch/bailu/aat/preferences/SolidLocationProvider.java
index 77e87d5d..53ecbafd 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidLocationProvider.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidLocationProvider.java
@@ -18,7 +18,7 @@ public class SolidLocationProvider extends SolidStaticIndexList {
     private static String[] generateProviderList(Context c) {
         if (provider_list == null) {
             provider_list = new String[]{
-                    c.getString(R.string.p_location_gps),
+                    toDefaultString(c.getString(R.string.p_location_gps)),
                     c.getString(R.string.p_location_gps) + " 2000ms",
                     c.getString(R.string.p_location_gps) + " 3000ms",
                     c.getString(R.string.p_location_gps) + " or Network*",
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidRendererThreads.java b/app/src/main/java/ch/bailu/aat/preferences/SolidRendererThreads.java
index b5f67be7..203903cb 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidRendererThreads.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidRendererThreads.java
@@ -27,6 +27,7 @@ public class SolidRendererThreads extends SolidIndexList {
         }
         return 1;
     }
+
     @Override
     public int length() {
         return values.length;
@@ -34,7 +35,7 @@ public class SolidRendererThreads extends SolidIndexList {
 
     @Override
     protected String getValueAsString(int i) {
-        return String.valueOf(values[i]);
+        return toDefaultString(String.valueOf(values[i]), i);
     }
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidTileSize.java b/app/src/main/java/ch/bailu/aat/preferences/SolidTileSize.java
index 148c4fdd..780e445d 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidTileSize.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidTileSize.java
@@ -4,7 +4,6 @@ import android.content.Context;
 
 import ch.bailu.aat.R;
 import ch.bailu.aat.util.ui.AppDensity;
-import ch.bailu.aat.services.cache.TileObject;
 
 
 public class SolidTileSize extends SolidIndexList {
@@ -66,7 +65,7 @@ public class SolidTileSize extends SolidIndexList {
 
     @Override
     public String getValueAsString(int i) {
-        if (i==0)  return tileSizeDP + " " + getContext().getString(R.string.auto);
+        if (i==0)  return toDefaultString(String.valueOf(tileSizeDP));
 
         return String.valueOf(VALUE_LIST[i]);
     }
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidTypeInterface.java b/app/src/main/java/ch/bailu/aat/preferences/SolidTypeInterface.java
index ad0451e7..bbb34a27 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidTypeInterface.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidTypeInterface.java
@@ -9,11 +9,11 @@ public interface SolidTypeInterface extends
         ContextWrapperInterface,
         ContentInterface {
 
-    public String getKey();
-    public Storage getStorage();
+    String getKey();
+    Storage getStorage();
     
-    public boolean hasKey(String key);
+    boolean hasKey(String key);
     
-    public void register(OnSharedPreferenceChangeListener listener);
-    public void unregister(OnSharedPreferenceChangeListener listener);
+    void register(OnSharedPreferenceChangeListener listener);
+    void unregister(OnSharedPreferenceChangeListener listener);
 }
diff --git a/app/src/main/java/ch/bailu/aat/services/InsideContext.java b/app/src/main/java/ch/bailu/aat/services/InsideContext.java
index 506675ff..c7f183db 100644
--- a/app/src/main/java/ch/bailu/aat/services/InsideContext.java
+++ b/app/src/main/java/ch/bailu/aat/services/InsideContext.java
@@ -1,9 +1,5 @@
 package ch.bailu.aat.services;
 
-/**
- * Created by bailuk on 03.12.17.
- */
-
 public abstract class InsideContext {
 
     public InsideContext(ServiceContext sc) {
diff --git a/app/src/main/java/ch/bailu/aat/services/background/ThreadControl.java b/app/src/main/java/ch/bailu/aat/services/background/ThreadControl.java
index 0c2ed288..d668d9cb 100644
--- a/app/src/main/java/ch/bailu/aat/services/background/ThreadControl.java
+++ b/app/src/main/java/ch/bailu/aat/services/background/ThreadControl.java
@@ -1,10 +1,10 @@
 package ch.bailu.aat.services.background;
 
 public interface ThreadControl {
-	public boolean canContinue();
+	boolean canContinue();
 
 
-	public static final ThreadControl KEEP_ON = new ThreadControl() {
+	ThreadControl KEEP_ON = new ThreadControl() {
 		@Override
 		public boolean canContinue() {
 			return true;
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/CacheOnlyTileObject.java b/app/src/main/java/ch/bailu/aat/services/cache/CacheOnlyTileObject.java
index 1e00b899..e71ddb0a 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/CacheOnlyTileObject.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/CacheOnlyTileObject.java
@@ -76,7 +76,7 @@ public class CacheOnlyTileObject extends TileObject {
 
 
         }
-    };
+    }
 
     @Override
     public TileBitmap getTileBitmap() {
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/MapsForgeTileObject.java b/app/src/main/java/ch/bailu/aat/services/cache/MapsForgeTileObject.java
index c00b6493..20597152 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/MapsForgeTileObject.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/MapsForgeTileObject.java
@@ -9,7 +9,6 @@ import ch.bailu.aat.preferences.SolidTileSize;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.util.AppBroadcaster;
 import ch.bailu.aat.util.graphic.SyncTileBitmap;
-import ch.bailu.aat.util.ui.AppLog;
 
 public class MapsForgeTileObject extends TileObject {
     private static long DEFAULT_SIZE = SolidTileSize.DEFAULT_TILESIZE_BYTES * 4;
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/ObjectTable.java b/app/src/main/java/ch/bailu/aat/services/cache/ObjectTable.java
index b800bd91..15d94995 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/ObjectTable.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/ObjectTable.java
@@ -30,7 +30,7 @@ public class ObjectTable  {
         }
     }
 
-    private final HashMap<String, Container> hashMap = new HashMap(INITIAL_CAPACITY);
+    private final HashMap<String, Container> hashMap = new HashMap<>(INITIAL_CAPACITY);
 
 
     public synchronized ObjectHandle getHandle(String key, ServiceContext sc) {
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/OnObject.java b/app/src/main/java/ch/bailu/aat/services/cache/OnObject.java
index 54a9d42b..ecaed951 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/OnObject.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/OnObject.java
@@ -3,31 +3,8 @@ package ch.bailu.aat.services.cache;
 import ch.bailu.aat.services.InsideContext;
 import ch.bailu.aat.services.ServiceContext;
 
-/**
- * Created by bailuk on 03.12.17.
- */
 
 public abstract class OnObject {
-    public OnObject(final ServiceContext sc, final String id,
-                    final ObjectHandle.Factory factory, final Class c) {
-        new InsideContext(sc) {
-
-            @Override
-            public void run() {
-
-                ObjectHandle handle = sc.getCacheService().getObject(
-                        id,
-                        factory
-                );
-
-                if (c.isInstance(handle)) {
-                    OnObject.this.run(handle);
-                }
-            }
-        };
-
-    }
-
     public OnObject(final ServiceContext sc, final String id, final Class c) {
 
         new InsideContext(sc) {
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/elevation/ElevationColorTile.java b/app/src/main/java/ch/bailu/aat/services/cache/elevation/ElevationColorTile.java
index 73547ba6..5ea04ba7 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/elevation/ElevationColorTile.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/elevation/ElevationColorTile.java
@@ -4,7 +4,6 @@ import org.mapsforge.core.model.Tile;
 
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.cache.ObjectHandle;
-import ch.bailu.aat.services.cache.TileObject;
 import ch.bailu.aat.services.dem.tile.DemProvider;
 import ch.bailu.aat.views.graph.AltitudeColorTable;
 
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/elevation/ElevationTile.java b/app/src/main/java/ch/bailu/aat/services/cache/elevation/ElevationTile.java
index 47f57274..a5cfd923 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/elevation/ElevationTile.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/elevation/ElevationTile.java
@@ -7,12 +7,8 @@ import android.graphics.Rect;
 import org.mapsforge.core.graphics.TileBitmap;
 import org.mapsforge.core.model.Tile;
 
-import java.lang.annotation.Inherited;
-import java.util.ArrayList;
-
 import ch.bailu.aat.preferences.SolidTileSize;
 import ch.bailu.aat.services.ServiceContext;
-import ch.bailu.aat.services.cache.Span;
 import ch.bailu.aat.services.cache.TileObject;
 import ch.bailu.aat.services.dem.tile.Dem3Tile;
 import ch.bailu.aat.services.dem.tile.DemDimension;
@@ -21,7 +17,6 @@ import ch.bailu.aat.services.dem.tile.DemProvider;
 import ch.bailu.aat.services.dem.tile.DemSplitter;
 import ch.bailu.aat.services.dem.updater.ElevationUpdaterClient;
 import ch.bailu.aat.util.graphic.SyncTileBitmap;
-import ch.bailu.aat.util.ui.AppLog;
 
 public abstract class ElevationTile extends TileObject implements ElevationUpdaterClient {
 
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/elevation/Raster.java b/app/src/main/java/ch/bailu/aat/services/cache/elevation/Raster.java
index df73d5b9..ace3a0b3 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/elevation/Raster.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/elevation/Raster.java
@@ -11,7 +11,6 @@ import java.util.ArrayList;
 
 import ch.bailu.aat.preferences.SolidTileSize;
 import ch.bailu.aat.services.cache.Span;
-import ch.bailu.aat.services.cache.TileObject;
 import ch.bailu.aat.services.dem.tile.DemGeoToIndex;
 
 public class Raster {
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/elevation/SubTile.java b/app/src/main/java/ch/bailu/aat/services/cache/elevation/SubTile.java
index 8bc15eda..ce09140f 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/elevation/SubTile.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/elevation/SubTile.java
@@ -3,9 +3,7 @@ package ch.bailu.aat.services.cache.elevation;
 import android.graphics.Rect;
 
 import ch.bailu.aat.coordinates.SrtmCoordinates;
-import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.cache.Span;
-import ch.bailu.aat.services.dem.tile.Dem3Tile;
 
 public class SubTile {
     public final Span laSpan;
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/loader/Dem3TileLoader.java b/app/src/main/java/ch/bailu/aat/services/dem/loader/Dem3TileLoader.java
index 715b8c5a..1734bcae 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/loader/Dem3TileLoader.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/loader/Dem3TileLoader.java
@@ -13,7 +13,6 @@ import ch.bailu.aat.services.dem.tile.Dem3Tile;
 import ch.bailu.aat.util.AppBroadcaster;
 import ch.bailu.aat.util.AppIntent;
 import ch.bailu.aat.util.Timer;
-import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.util_java.foc.Foc;
 
 public class Dem3TileLoader implements Closeable {
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/tile/ElevationProvider.java b/app/src/main/java/ch/bailu/aat/services/dem/tile/ElevationProvider.java
index a9ea72bc..f331f5fc 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/tile/ElevationProvider.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/tile/ElevationProvider.java
@@ -3,11 +3,7 @@ package ch.bailu.aat.services.dem.tile;
 
 
 public interface ElevationProvider {
-    final static int NULL_ALTITUDE=0;
-
-
-    public short getElevation(int laE6, int loE6);
-    
-    
+    int NULL_ALTITUDE=0;
 
+    short getElevation(int laE6, int loE6);
 }
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/updater/ElevationUpdater.java b/app/src/main/java/ch/bailu/aat/services/dem/updater/ElevationUpdater.java
index 26a896c2..30c98775 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/updater/ElevationUpdater.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/updater/ElevationUpdater.java
@@ -108,31 +108,18 @@ public class ElevationUpdater implements Closeable {
         if (tile.getStatus() == Dem3Status.VALID) {
             ArrayList<ElevationUpdaterClient> l = pendingUpdates.get(tile.getCoordinates());
 
-            int size =0 ;
-
             if (l != null) {
-                size = l.size();
-
                 for (ElevationUpdaterClient e : l) {
-
                     e.updateFromSrtmTile(scontext, tile);
                 }
             }
-            //AppLog.d(this, "update " + tile.getCoordinates().toString() + "["+size + "]");
         }
 
-        /*
-        if (tile.getStatus() == Dem3Status.EMPTY) {
-            AppLog.d(this, "update " + tile.getCoordinates().toString() + "[E!]");
-        }
-*/
         if (tile.getStatus() == Dem3Status.VALID || tile.getStatus() == Dem3Status.EMPTY) {
             pendingUpdates.remove(tile.getCoordinates());
         }
 
         tile.free(this);
-
-
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/updater/ElevationUpdaterClient.java b/app/src/main/java/ch/bailu/aat/services/dem/updater/ElevationUpdaterClient.java
index 4453c425..1a842f92 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/updater/ElevationUpdaterClient.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/updater/ElevationUpdaterClient.java
@@ -1,6 +1,5 @@
 package ch.bailu.aat.services.dem.updater;
 
-import ch.bailu.aat.coordinates.SrtmCoordinates;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.dem.tile.Dem3Tile;
 
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/FilesInDirectory.java b/app/src/main/java/ch/bailu/aat/services/directory/FilesInDirectory.java
index a901f129..f54506cf 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/FilesInDirectory.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/FilesInDirectory.java
@@ -20,7 +20,7 @@ public class FilesInDirectory {
 
     
     private static NavigableMap<String,Foc> getFileList(Foc directory) {
-        final NavigableMap<String, Foc> files = new TreeMap();
+        final NavigableMap<String, Foc> files = new TreeMap<>();
 
         directory.foreachFile(new Foc.Execute() {
             @Override
diff --git a/app/src/main/java/ch/bailu/aat/services/icons/IconCache.java b/app/src/main/java/ch/bailu/aat/services/icons/IconCache.java
index 86ab2232..ce51ab92 100644
--- a/app/src/main/java/ch/bailu/aat/services/icons/IconCache.java
+++ b/app/src/main/java/ch/bailu/aat/services/icons/IconCache.java
@@ -14,7 +14,7 @@ import ch.bailu.aat.services.cache.ObjectHandle;
 import ch.bailu.aat.services.cache.SVGAssetImageObject;
 
 public class IconCache implements Closeable {
-    private final LockCache<ImageObjectAbstract> icons = new LockCache(20);
+    private final LockCache<ImageObjectAbstract> icons = new LockCache<>(20);
 
     private final ServiceContext scontext;
 
diff --git a/app/src/main/java/ch/bailu/aat/services/render/Cache.java b/app/src/main/java/ch/bailu/aat/services/render/Cache.java
index c10e1ea5..2bcf2349 100644
--- a/app/src/main/java/ch/bailu/aat/services/render/Cache.java
+++ b/app/src/main/java/ch/bailu/aat/services/render/Cache.java
@@ -15,7 +15,7 @@ import ch.bailu.aat.util.ui.AppLog;
 
 public class Cache implements TileCache {
 
-    private final SparseArray<MapsForgeTileObject> cache = new SparseArray(20);
+    private final SparseArray<MapsForgeTileObject> cache = new SparseArray<>(20);
 
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/services/render/Configuration.java b/app/src/main/java/ch/bailu/aat/services/render/Configuration.java
index a65e5aa8..995aff90 100644
--- a/app/src/main/java/ch/bailu/aat/services/render/Configuration.java
+++ b/app/src/main/java/ch/bailu/aat/services/render/Configuration.java
@@ -60,7 +60,7 @@ public class Configuration {
     public void lockToRenderer(MapsForgeTileObject o) {
             if (isConfigured() && themeID.equals(o.getThemeID()))
                 renderer.addJob(o.getTile());
-;
+
         }
 
     public void freeFromRenderer(MapsForgeTileObject o) {
diff --git a/app/src/main/java/ch/bailu/aat/services/render/RenderService.java b/app/src/main/java/ch/bailu/aat/services/render/RenderService.java
index 4c5f493b..27a8c622 100644
--- a/app/src/main/java/ch/bailu/aat/services/render/RenderService.java
+++ b/app/src/main/java/ch/bailu/aat/services/render/RenderService.java
@@ -2,7 +2,6 @@ package ch.bailu.aat.services.render;
 
 import android.content.SharedPreferences;
 
-import org.mapsforge.core.graphics.TileBitmap;
 import org.mapsforge.core.model.Tile;
 
 import ch.bailu.aat.preferences.SolidMapsForgeDirectory;
diff --git a/app/src/main/java/ch/bailu/aat/services/render/Renderer.java b/app/src/main/java/ch/bailu/aat/services/render/Renderer.java
index 75571a6f..5443e3e5 100644
--- a/app/src/main/java/ch/bailu/aat/services/render/Renderer.java
+++ b/app/src/main/java/ch/bailu/aat/services/render/Renderer.java
@@ -1,7 +1,6 @@
 package ch.bailu.aat.services.render;
 
 import org.mapsforge.core.graphics.Canvas;
-import org.mapsforge.core.graphics.TileBitmap;
 import org.mapsforge.core.model.BoundingBox;
 import org.mapsforge.core.model.Point;
 import org.mapsforge.core.model.Tile;
diff --git a/app/src/main/java/ch/bailu/aat/services/tileremover/TilesList.java b/app/src/main/java/ch/bailu/aat/services/tileremover/TilesList.java
index 3a376ee6..1b64e21a 100644
--- a/app/src/main/java/ch/bailu/aat/services/tileremover/TilesList.java
+++ b/app/src/main/java/ch/bailu/aat/services/tileremover/TilesList.java
@@ -27,7 +27,7 @@ public class TilesList {
         }
     });
 
-    private  final ArrayList<TileFile> filesToRemove = new ArrayList(FILES_LIMIT);
+    private  final ArrayList<TileFile> filesToRemove = new ArrayList<>(FILES_LIMIT);
 
 
     public void resetToRemove() {
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/Backlight.java b/app/src/main/java/ch/bailu/aat/services/tracker/Backlight.java
index b7f68358..5a6293c7 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/Backlight.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/Backlight.java
@@ -34,9 +34,14 @@ public class  Backlight extends ContextWrapper {
     }
     
     private void initWakeLock(int mode) {
-        PowerManager powerManager = (PowerManager) getSystemService(Service.POWER_SERVICE); 
-        wakeLock = powerManager.newWakeLock(mode, getClass().getName());
-        wakeLock.acquire();
+        PowerManager powerManager = (PowerManager) getSystemService(Service.POWER_SERVICE);
+
+        if (powerManager != null) {
+            wakeLock = powerManager.newWakeLock(mode, getClass().getName());
+
+            if (haveWakeLock())
+                wakeLock.acquire();
+        }
     }
 
     private boolean haveWakeLock() {
diff --git a/app/src/main/java/ch/bailu/aat/util/Clipboard.java b/app/src/main/java/ch/bailu/aat/util/Clipboard.java
index c1554af3..6e82a7c9 100644
--- a/app/src/main/java/ch/bailu/aat/util/Clipboard.java
+++ b/app/src/main/java/ch/bailu/aat/util/Clipboard.java
@@ -37,7 +37,7 @@ public class Clipboard {
     private void setTextSDK1(CharSequence text) {
         android.text.ClipboardManager clipboard = (android.text.ClipboardManager) context
                 .getSystemService(Context.CLIPBOARD_SERVICE);
-        clipboard.setText(text);
+        if (clipboard != null) clipboard.setText(text);
     }
 
 
@@ -45,7 +45,11 @@ public class Clipboard {
     private CharSequence getTextSDK1() {
         android.text.ClipboardManager clipboard = (android.text.ClipboardManager) context
                 .getSystemService(Context.CLIPBOARD_SERVICE);
-        return clipboard.getText().toString();
+
+        if (clipboard != null)
+            return clipboard.getText().toString();
+
+        return null;
     }
 
 
@@ -54,8 +58,10 @@ public class Clipboard {
         ClipboardManager clipboard = (ClipboardManager)
                 context.getSystemService(Context.CLIPBOARD_SERVICE);
 
-        ClipData clip = ClipData.newPlainText(label, text);
-        clipboard.setPrimaryClip(clip);
+        if (clipboard != null) {
+            ClipData clip = ClipData.newPlainText(label, text);
+            clipboard.setPrimaryClip(clip);
+        }
     }
 
     @TargetApi(11)
@@ -63,11 +69,13 @@ public class Clipboard {
         ClipboardManager clipboard = (ClipboardManager)
                 context.getSystemService(Context.CLIPBOARD_SERVICE);
 
-        ClipData clip = clipboard.getPrimaryClip();
-        if (clip != null) {
-            ClipData.Item i = clipboard.getPrimaryClip().getItemAt(0);
-            if (i!= null) {
-                return i.getText();
+        if (clipboard != null) {
+            ClipData clip = clipboard.getPrimaryClip();
+            if (clip != null) {
+                ClipData.Item i = clipboard.getPrimaryClip().getItemAt(0);
+                if (i != null) {
+                    return i.getText();
+                }
             }
         }
         return null;
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/foc/FocAsset.java b/app/src/main/java/ch/bailu/aat/util/fs/foc/FocAsset.java
index 547d07ab..7c9908be 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/foc/FocAsset.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/foc/FocAsset.java
@@ -28,7 +28,7 @@ public class FocAsset extends Foc {
 
 
     public static ArrayList<String> listAssets(AssetManager am, String path) {
-        ArrayList<String> r = new ArrayList();
+        ArrayList<String> r = new ArrayList<>();
 
         try {
             String [] files = am.list(path);
diff --git a/app/src/main/java/ch/bailu/aat/views/PercentageLayout.java b/app/src/main/java/ch/bailu/aat/views/PercentageLayout.java
index 4faf8038..db12967f 100644
--- a/app/src/main/java/ch/bailu/aat/views/PercentageLayout.java
+++ b/app/src/main/java/ch/bailu/aat/views/PercentageLayout.java
@@ -26,7 +26,7 @@ public class PercentageLayout  extends ViewGroup {
         }
     }
 
-    private final ArrayList<Entry> list = new ArrayList(5);
+    private final ArrayList<Entry> list = new ArrayList<>(5);
 
     private int orientation= LinearLayout.VERTICAL;
 
diff --git a/app/src/main/java/ch/bailu/aat/views/bar/ControlBar.java b/app/src/main/java/ch/bailu/aat/views/bar/ControlBar.java
index 0f9c34e0..75ce2ec7 100644
--- a/app/src/main/java/ch/bailu/aat/views/bar/ControlBar.java
+++ b/app/src/main/java/ch/bailu/aat/views/bar/ControlBar.java
@@ -1,10 +1,8 @@
 package ch.bailu.aat.views.bar;
 
 import android.content.Context;
-import android.graphics.Canvas;
 import android.graphics.Color;
 import android.view.View;
-import android.view.animation.AlphaAnimation;
 import android.widget.FrameLayout;
 import android.widget.HorizontalScrollView;
 import android.widget.ImageButton;
diff --git a/app/src/main/java/ch/bailu/aat/views/description/MultiView.java b/app/src/main/java/ch/bailu/aat/views/description/MultiView.java
index a4b32805..0442dd4a 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/MultiView.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/MultiView.java
@@ -35,7 +35,7 @@ public class MultiView extends ViewGroup {
 
 
 
-    private final ArrayList<Page> pages = new ArrayList(5);
+    private final ArrayList<Page> pages = new ArrayList<>(5);
     private int active=0;
 
 
diff --git a/app/src/main/java/ch/bailu/aat/views/graph/DistanceAltitudeGraphView.java b/app/src/main/java/ch/bailu/aat/views/graph/DistanceAltitudeGraphView.java
index 617da67f..ddd03e24 100644
--- a/app/src/main/java/ch/bailu/aat/views/graph/DistanceAltitudeGraphView.java
+++ b/app/src/main/java/ch/bailu/aat/views/graph/DistanceAltitudeGraphView.java
@@ -11,7 +11,6 @@ import ch.bailu.aat.gpx.GpxPointNode;
 import ch.bailu.aat.gpx.GpxSegmentNode;
 import ch.bailu.aat.preferences.SolidUnit;
 import ch.bailu.aat.util.ui.AppDensity;
-import ch.bailu.aat.util.ui.AppLog;
 
 public class DistanceAltitudeGraphView extends AbsGraphView {
 
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/GeneralPreferencesView.java b/app/src/main/java/ch/bailu/aat/views/preferences/GeneralPreferencesView.java
index 25fcd389..174bf831 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/GeneralPreferencesView.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/GeneralPreferencesView.java
@@ -8,7 +8,6 @@ import ch.bailu.aat.preferences.SolidPostprocessedAutopause;
 import ch.bailu.aat.preferences.SolidDataDirectory;
 import ch.bailu.aat.preferences.SolidExternalDirectory;
 import ch.bailu.aat.preferences.SolidLocationProvider;
-import ch.bailu.aat.preferences.SolidRendererThreads;
 import ch.bailu.aat.preferences.SolidUnit;
 import ch.bailu.aat.preferences.SolidWeight;
 
@@ -28,7 +27,6 @@ public class GeneralPreferencesView extends VerticalScrollView {
         add(new SolidDirectoryViewSAF(context, new SolidDataDirectory(context)));
         add(new SolidDirectoryViewSAF(context, new SolidExternalDirectory(context)));
         add(new SolidIndexListView( new SolidCacheSize(context)));
-        add(new SolidIndexListView( new SolidRendererThreads(context)));
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/views/preferences/MapTilePreferencesView.java b/app/src/main/java/ch/bailu/aat/views/preferences/MapTilePreferencesView.java
index cc7bad2e..4961e4a0 100644
--- a/app/src/main/java/ch/bailu/aat/views/preferences/MapTilePreferencesView.java
+++ b/app/src/main/java/ch/bailu/aat/views/preferences/MapTilePreferencesView.java
@@ -9,6 +9,7 @@ import ch.bailu.aat.map.tile.source.Source;
 import ch.bailu.aat.preferences.SolidEnableTileCache;
 import ch.bailu.aat.preferences.SolidMapsForgeDirectory;
 import ch.bailu.aat.preferences.SolidRenderTheme;
+import ch.bailu.aat.preferences.SolidRendererThreads;
 import ch.bailu.aat.preferences.SolidTileCacheDirectory;
 import ch.bailu.aat.preferences.SolidTileSize;
 import ch.bailu.aat.preferences.SolidTrimDate;
@@ -33,6 +34,7 @@ public class MapTilePreferencesView extends VerticalScrollView {
         add(new TitleView(context, MapsForgeSource.NAME));
         add(new SolidDirectoryView(new SolidMapsForgeDirectory(context)));
         add(new SolidStringView(new SolidRenderTheme(context)));
+        add(new SolidIndexListView( new SolidRendererThreads(context)));
         add(new SolidCheckBox(new SolidEnableTileCache.MapsForge(context)));
 
         add(new TitleView(context, Source.ELEVATION_HILLSHADE.getName()));
diff --git a/util-java/src/main/java/ch/bailu/util_java/parser/OnParsedInterface.java b/util-java/src/main/java/ch/bailu/util_java/parser/OnParsedInterface.java
index 707a9439..7fdb535c 100644
--- a/util-java/src/main/java/ch/bailu/util_java/parser/OnParsedInterface.java
+++ b/util-java/src/main/java/ch/bailu/util_java/parser/OnParsedInterface.java
@@ -4,11 +4,11 @@ import java.io.IOException;
 
 
 public interface OnParsedInterface {
-    public void onHaveSegment();
-    public void onHavePoint() throws IOException;
+    void onHaveSegment();
+    void onHavePoint() throws IOException;
     
     
-    public final static OnParsedInterface NULL = new OnParsedInterface() {
+    OnParsedInterface NULL = new OnParsedInterface() {
 		@Override
 		public void onHaveSegment() {}
 		@Override
