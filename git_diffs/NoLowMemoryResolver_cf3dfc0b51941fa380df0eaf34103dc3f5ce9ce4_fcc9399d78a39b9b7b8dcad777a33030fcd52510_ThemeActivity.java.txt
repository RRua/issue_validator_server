diff --git a/app/src/main/java/com/dkanada/chip/activities/MainActivity.java b/app/src/main/java/com/dkanada/chip/activities/MainActivity.java
index 3c00a47..709a76f 100644
--- a/app/src/main/java/com/dkanada/chip/activities/MainActivity.java
+++ b/app/src/main/java/com/dkanada/chip/activities/MainActivity.java
@@ -3,7 +3,9 @@ package com.dkanada.chip.activities;
 import android.content.Intent;
 import android.os.Environment;
 import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
+import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.WindowManager;
@@ -11,7 +13,6 @@ import android.widget.LinearLayout;
 
 import com.dkanada.chip.R;
 import com.dkanada.chip.core.Core;
-import com.dkanada.chip.utils.AppPreferences;
 import com.dkanada.chip.utils.Utils;
 import com.dkanada.chip.views.ControllerView;
 import com.dkanada.chip.views.DisplayView;
@@ -19,7 +20,8 @@ import com.dkanada.chip.views.DisplayView;
 import ru.bartwell.exfilepicker.ExFilePicker;
 import ru.bartwell.exfilepicker.data.ExFilePickerResult;
 
-public class MainActivity extends ThemeActivity {
+public class MainActivity extends AppCompatActivity {
+    Core core;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -32,8 +34,8 @@ public class MainActivity extends ThemeActivity {
         // output
         DisplayView displayView = new DisplayView(this);
 
-        Core core = new Core(displayView);
-        core.start();
+        // create core
+        core = new Core(displayView);
 
         // input
         ControllerView controllerView = new ControllerView(this, core);
@@ -41,18 +43,20 @@ public class MainActivity extends ThemeActivity {
         LinearLayout main = findViewById(R.id.main);
         main.addView(displayView);
         main.addView(controllerView);
+
+        Log.e("MainActivity", "start core");
+        core.start();
     }
 
     private void setInitialConfiguration() {
         Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setTitle(R.string.app_name);
-        toolbar.setBackgroundColor(AppPreferences.get(this).getPrimaryColor());
+        toolbar.setBackgroundColor(getResources().getColor(R.color.primary));
 
         setSupportActionBar(toolbar);
 
         getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
-        getWindow().setStatusBarColor(Utils.dark(AppPreferences.get(this).getPrimaryColor(), 0.8));
-        getWindow().setNavigationBarColor(AppPreferences.get(this).getPrimaryColor());
+        getWindow().setNavigationBarColor(getResources().getColor(R.color.primary));
     }
 
     @Override
@@ -60,7 +64,7 @@ public class MainActivity extends ThemeActivity {
         if (requestCode == 0) {
             ExFilePickerResult result = ExFilePickerResult.getFromIntent(data);
             if (result != null && result.getCount() > 0) {
-                // contains selected files names and path
+                core.load(result.getPath() + result.getNames().get(0));
             }
         }
     }
diff --git a/app/src/main/java/com/dkanada/chip/activities/SettingsActivity.java b/app/src/main/java/com/dkanada/chip/activities/SettingsActivity.java
index dc031c5..f4b1839 100644
--- a/app/src/main/java/com/dkanada/chip/activities/SettingsActivity.java
+++ b/app/src/main/java/com/dkanada/chip/activities/SettingsActivity.java
@@ -14,7 +14,7 @@ import com.dkanada.chip.fragments.SettingsFragment;
 import com.dkanada.chip.utils.AppPreferences;
 import com.dkanada.chip.utils.Utils;
 
-public class SettingsActivity extends ThemeActivity {
+public class SettingsActivity extends AppCompatActivity {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -38,13 +38,12 @@ public class SettingsActivity extends ThemeActivity {
                 onBackPressed();
             }
         });
-        toolbar.setBackgroundColor(AppPreferences.get(this).getPrimaryColor());
+        toolbar.setBackgroundColor(getResources().getColor(R.color.primary));
 
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
         getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
-        getWindow().setStatusBarColor(Utils.dark(AppPreferences.get(this).getPrimaryColor(), 0.8));
-        getWindow().setNavigationBarColor(AppPreferences.get(this).getPrimaryColor());
+        getWindow().setNavigationBarColor(getResources().getColor(R.color.primary));
     }
 }
diff --git a/app/src/main/java/com/dkanada/chip/activities/ThemeActivity.java b/app/src/main/java/com/dkanada/chip/activities/ThemeActivity.java
deleted file mode 100644
index ff2960d..0000000
--- a/app/src/main/java/com/dkanada/chip/activities/ThemeActivity.java
+++ /dev/null
@@ -1,41 +0,0 @@
-package com.dkanada.chip.activities;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
-
-import com.dkanada.chip.R;
-import com.dkanada.chip.utils.AppPreferences;
-
-public abstract class ThemeActivity extends AppCompatActivity {
-
-    private AppPreferences appPreferences;
-    private String currentTheme;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        appPreferences = AppPreferences.get(this);
-        currentTheme = appPreferences.getTheme();
-        if (appPreferences.getTheme().equals("0")) {
-            setTheme(R.style.Light);
-        } else {
-            setTheme(R.style.Dark);
-        }
-        super.onCreate(savedInstanceState);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        if (!appPreferences.getTheme().equals(currentTheme)) {
-            restart();
-        }
-    }
-
-    protected void restart() {
-        Intent intent = new Intent(this, getClass());
-        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-        overridePendingTransition(0, 0);
-        startActivity(intent);
-    }
-}
diff --git a/app/src/main/java/com/dkanada/chip/core/CPU.java b/app/src/main/java/com/dkanada/chip/core/CPU.java
index 7494507..fb11ffd 100644
--- a/app/src/main/java/com/dkanada/chip/core/CPU.java
+++ b/app/src/main/java/com/dkanada/chip/core/CPU.java
@@ -207,16 +207,16 @@ public class CPU {
             case 0xE000:
                 switch (opcode & 0x00FF) {
                     case 0x009E:
-                        if (keypad.getKey(v[getX(opcode)]) == 1) {
+                        pc += 2;
+                        if (keypad.getKey() == v[getX(opcode)]) {
                             pc += 2;
                         }
-                        pc += 2;
                         break;
                     case 0x00A1:
-                        if (keypad.getKey(v[getX(opcode)]) == 0) {
+                        pc += 2;
+                        if (keypad.getKey() != v[getX(opcode)]) {
                             pc += 2;
                         }
-                        pc += 2;
                         break;
                 }
                 break;
@@ -227,7 +227,10 @@ public class CPU {
                         pc += 2;
                         break;
                     case 0x000A:
-                        // TODO
+                        if (keypad.getKey() != 1000) {
+                            v[getX(opcode)] = keypad.getKey();
+                            pc += 2;
+                        }
                         break;
                     case 0x0015:
                         delay = v[getX(opcode)];
diff --git a/app/src/main/java/com/dkanada/chip/core/Core.java b/app/src/main/java/com/dkanada/chip/core/Core.java
index 595e3b6..281bb86 100644
--- a/app/src/main/java/com/dkanada/chip/core/Core.java
+++ b/app/src/main/java/com/dkanada/chip/core/Core.java
@@ -1,6 +1,5 @@
 package com.dkanada.chip.core;
 
-import android.os.Environment;
 import android.util.Log;
 
 import com.dkanada.chip.interfaces.DisplayListener;
@@ -20,19 +19,16 @@ public class Core extends Thread implements DisplayListener, KeypadListener {
 
     private DisplayView displayView;
 
-    public boolean flagLoad;
-    public boolean flagStart;
+    public boolean load;
+    public int time;
 
-    public Core(DisplayView displayView) {
+    public Core(DisplayView display) {
         memoryCore = new Memory();
         displayCore = new Display();
         keypadCore = new Keypad();
         cpuCore = new CPU(memoryCore, displayCore, keypadCore, this);
 
-        this.displayView = displayView;
-
-        loadFont();
-        loadProgram(Environment.getExternalStorageDirectory().toString() + "/Chip8/c8games/BRIX");
+        displayView = display;
     }
 
     public void step() {
@@ -43,8 +39,7 @@ public class Core extends Thread implements DisplayListener, KeypadListener {
         loadFont();
         loadProgram(file);
 
-        flagLoad = true;
-        flagStart = true;
+        load = true;
     }
 
     public void loadFont() {
@@ -88,20 +83,16 @@ public class Core extends Thread implements DisplayListener, KeypadListener {
                 address++;
             }
         } catch (FileNotFoundException e) {
-            Log.e("core.loadFile: ", "file not found");
+            Log.e("Core.loadFile", "file not found :: " + file);
         } catch (IOException e) {
-            Log.e("core.loadFile: ", "error reading file data");
+            Log.e("Core.loadFile", "error reading file :: " + file);
         }
-
-        // TODO remove
-        flagLoad = true;
-        flagStart = true;
     }
 
     @Override
     public void run() {
         while (true) {
-            if (flagLoad && flagStart) {
+            if (load) {
                 step();
             }
             try {
@@ -120,11 +111,11 @@ public class Core extends Thread implements DisplayListener, KeypadListener {
 
     @Override
     public void keyDown(char key) {
-        keypadCore.setKey(key, 1);
+        keypadCore.setKey(key);
     }
 
     @Override
     public void keyUp(char key) {
-        keypadCore.setKey(key, 0);
+        keypadCore.setKey((char) 1000);
     }
 }
diff --git a/app/src/main/java/com/dkanada/chip/core/Keypad.java b/app/src/main/java/com/dkanada/chip/core/Keypad.java
index 054df6f..db3f133 100644
--- a/app/src/main/java/com/dkanada/chip/core/Keypad.java
+++ b/app/src/main/java/com/dkanada/chip/core/Keypad.java
@@ -1,17 +1,16 @@
 package com.dkanada.chip.core;
 
 public class Keypad {
-    private int[] keypad;
+    private char key;
 
     public Keypad() {
-        keypad = new int[16];
     }
 
-    public char getKey(char index) {
-        return (char) keypad[index];
+    public char getKey() {
+        return key;
     }
 
-    public void setKey(char index, int value) {
-        keypad[index] = value;
+    public void setKey(char index) {
+        key = index;
     }
 }
diff --git a/app/src/main/java/com/dkanada/chip/fragments/SettingsFragment.java b/app/src/main/java/com/dkanada/chip/fragments/SettingsFragment.java
index f92f2c4..3d13b7b 100644
--- a/app/src/main/java/com/dkanada/chip/fragments/SettingsFragment.java
+++ b/app/src/main/java/com/dkanada/chip/fragments/SettingsFragment.java
@@ -1,7 +1,6 @@
 package com.dkanada.chip.fragments;
 
 import android.content.SharedPreferences;
-import android.os.Build;
 import android.os.Bundle;
 import android.preference.ListPreference;
 import android.preference.Preference;
@@ -13,7 +12,7 @@ import com.dkanada.chip.utils.AppPreferences;
 
 public class SettingsFragment extends PreferenceFragment implements SharedPreferences.OnSharedPreferenceChangeListener {
     private AppPreferences appPreferences;
-    private ListPreference theme;
+    private ListPreference speed;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -24,21 +23,21 @@ public class SettingsFragment extends PreferenceFragment implements SharedPrefer
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
         prefs.registerOnSharedPreferenceChangeListener(this);
 
-        theme = (ListPreference) findPreference(getString(R.string.pref_theme));
-        setThemeSummary();
+        speed = (ListPreference) findPreference(getString(R.string.pref_speed));
+        setSpeedSummary();
     }
 
-    private void setThemeSummary() {
-        int themeValue = Integer.valueOf(appPreferences.getTheme());
-        theme.setSummary(getResources().getStringArray(R.array.themeEntries)[themeValue]);
+    private void setSpeedSummary() {
+        int speedValue = Integer.valueOf(appPreferences.getSpeed());
+        speed.setSummary(getResources().getStringArray(R.array.speedEntries)[speedValue]);
     }
 
     @Override
     public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
         if (isAdded()) {
             Preference preference = findPreference(key);
-            if (preference == theme) {
-                setThemeSummary();
+            if (preference == speed) {
+                setSpeedSummary();
             }
         }
     }
diff --git a/app/src/main/java/com/dkanada/chip/utils/AppPreferences.java b/app/src/main/java/com/dkanada/chip/utils/AppPreferences.java
index 9a296f0..08a427b 100644
--- a/app/src/main/java/com/dkanada/chip/utils/AppPreferences.java
+++ b/app/src/main/java/com/dkanada/chip/utils/AppPreferences.java
@@ -8,12 +8,10 @@ import com.dkanada.chip.R;
 
 public class AppPreferences {
     private SharedPreferences sharedPreferences;
-    private SharedPreferences.Editor editor;
     private Context context;
 
     public AppPreferences(Context context) {
         this.sharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);
-        this.editor = sharedPreferences.edit();
         this.context = context;
     }
 
@@ -21,15 +19,15 @@ public class AppPreferences {
         return new AppPreferences(context);
     }
 
-    public String getTheme() {
-        return sharedPreferences.getString(context.getString(R.string.pref_theme), "1");
+    public String getSpeed() {
+        return sharedPreferences.getString(context.getString(R.string.pref_speed), "1");
     }
 
-    public int getPrimaryColor() {
-        return sharedPreferences.getInt(context.getString(R.string.pref_primary_color), context.getResources().getColor(R.color.primary));
+    public int getForegroundColor() {
+        return sharedPreferences.getInt(context.getString(R.string.pref_foreground_color), context.getResources().getColor(R.color.foreground));
     }
 
-    public int getAccentColor() {
-        return sharedPreferences.getInt(context.getString(R.string.pref_accent_color), context.getResources().getColor(R.color.accent));
+    public int getBackgroundColor() {
+        return sharedPreferences.getInt(context.getString(R.string.pref_background_color), context.getResources().getColor(R.color.background));
     }
 }
diff --git a/app/src/main/java/com/dkanada/chip/views/ButtonView.java b/app/src/main/java/com/dkanada/chip/views/ButtonView.java
new file mode 100644
index 0000000..bcab4c8
--- /dev/null
+++ b/app/src/main/java/com/dkanada/chip/views/ButtonView.java
@@ -0,0 +1,29 @@
+package com.dkanada.chip.views;
+
+import android.content.Context;
+import android.support.v7.widget.AppCompatButton;
+import android.util.Log;
+import android.view.KeyEvent;
+import android.view.MotionEvent;
+import android.view.View;
+
+import com.dkanada.chip.interfaces.KeypadListener;
+
+public class ButtonView extends AppCompatButton {
+    public ButtonView(Context context, final KeypadListener keypadListener, final char key) {
+        super(context);
+
+        setOnTouchListener(new OnTouchListener() {
+            @Override
+            public boolean onTouch(View v, MotionEvent event) {
+                Log.e("ButtonView", "onTouch :: " + key);
+                if (event.getAction() == KeyEvent.ACTION_DOWN) {
+                    keypadListener.keyDown(key);
+                } else {
+                    keypadListener.keyUp(key);
+                }
+                return true;
+            }
+        });
+    }
+}
diff --git a/app/src/main/java/com/dkanada/chip/views/ControllerView.java b/app/src/main/java/com/dkanada/chip/views/ControllerView.java
index 11753d8..9c30291 100644
--- a/app/src/main/java/com/dkanada/chip/views/ControllerView.java
+++ b/app/src/main/java/com/dkanada/chip/views/ControllerView.java
@@ -1,89 +1,39 @@
 package com.dkanada.chip.views;
 
 import android.content.Context;
-import android.graphics.Canvas;
-import android.support.constraint.ConstraintLayout;
-import android.support.constraint.ConstraintSet;
 import android.util.Log;
 import android.view.KeyEvent;
 import android.view.MotionEvent;
 import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Button;
 import android.widget.LinearLayout;
 
-import com.dkanada.chip.R;
-import com.dkanada.chip.core.Core;
 import com.dkanada.chip.interfaces.KeypadListener;
+import com.dkanada.chip.views.ButtonView;
 
 public class ControllerView extends LinearLayout {
-    Button top;
-    Button bottom;
-    Button left;
-    Button right;
+    ButtonView up;
+    ButtonView down;
+    ButtonView left;
+    ButtonView right;
 
     public ControllerView(Context context, final KeypadListener keypadListener) {
         super(context);
 
         this.setOrientation(VERTICAL);
 
-        top = new Button(context);
-        top.setOnTouchListener(new OnTouchListener() {
-            @Override
-            public boolean onTouch(View v, MotionEvent event) {
-                if (event.getAction() == KeyEvent.ACTION_DOWN) {
-                    keypadListener.keyDown((char) 0x2);
-                } else {
-                    keypadListener.keyUp((char) 0x2);
-                }
-                return true;
-            }
-        });
-        this.addView(top);
+        up = new ButtonView(context, keypadListener, (char) 0x2);
+        this.addView(up);
 
-        left = new Button(context);
-        left.setOnTouchListener(new OnTouchListener() {
-            @Override
-            public boolean onTouch(View v, MotionEvent event) {
-                if (event.getAction() == KeyEvent.ACTION_DOWN) {
-                    keypadListener.keyDown((char) 0x4);
-                } else {
-                    keypadListener.keyUp((char) 0x4);
-                }
-                return false;
-            }
-        });
-        right = new Button(context);
-        right.setOnTouchListener(new OnTouchListener() {
-            @Override
-            public boolean onTouch(View v, MotionEvent event) {
-                if (event.getAction() == KeyEvent.ACTION_DOWN) {
-                    keypadListener.keyDown((char) 0x6);
-                } else {
-                    keypadListener.keyUp((char) 0x6);
-                }
-                return false;
-            }
-        });
+        left = new ButtonView(context, keypadListener, (char) 0x4);
+        right = new ButtonView(context, keypadListener, (char) 0x6);
 
         LinearLayout side = new LinearLayout(context);
         side.addView(left);
         side.addView(right);
         this.addView(side);
 
-        bottom = new Button(context);
-        bottom.setOnTouchListener(new OnTouchListener() {
-            @Override
-            public boolean onTouch(View v, MotionEvent event) {
-                if (event.getAction() == KeyEvent.ACTION_DOWN) {
-                    keypadListener.keyDown((char) 0x8);
-                } else {
-                    keypadListener.keyUp((char) 0x8);
-                }
-                return false;
-            }
-        });
-        this.addView(bottom);
+        down = new ButtonView(context, keypadListener, (char) 0x8);
+        this.addView(down);
     }
 
     @Override
@@ -91,8 +41,8 @@ public class ControllerView extends LinearLayout {
         int height = MeasureSpec.getSize(heightMeasureSpec) / 3;
         int width = MeasureSpec.getSize(widthMeasureSpec) / 2;
 
-        top.setHeight(height);
-        bottom.setHeight(height);
+        up.setHeight(height);
+        down.setHeight(height);
 
         left.setHeight(height);
         left.setWidth(width);
diff --git a/app/src/main/java/com/dkanada/chip/views/DisplayView.java b/app/src/main/java/com/dkanada/chip/views/DisplayView.java
index 6831170..5f59587 100644
--- a/app/src/main/java/com/dkanada/chip/views/DisplayView.java
+++ b/app/src/main/java/com/dkanada/chip/views/DisplayView.java
@@ -8,10 +8,11 @@ import android.util.AttributeSet;
 import android.view.SurfaceView;
 
 import com.dkanada.chip.interfaces.DisplayListener;
+import com.dkanada.chip.utils.AppPreferences;
 
 public class DisplayView extends SurfaceView {
-    private Paint background;
     private Paint foreground;
+    private Paint background;
     private byte[][] display;
 
     public DisplayView(Context context) {
@@ -19,13 +20,13 @@ public class DisplayView extends SurfaceView {
         setFocusable(true);
         setWillNotDraw(false);
 
-        background = new Paint();
-        background.setColor(Color.BLACK);
-        background.setStyle(Paint.Style.FILL);
-
         foreground = new Paint();
-        foreground.setColor(Color.WHITE);
+        foreground.setColor(AppPreferences.get(context).getForegroundColor());
         foreground.setStyle(Paint.Style.FILL);
+
+        background = new Paint();
+        background.setColor(AppPreferences.get(context).getBackgroundColor());
+        background.setStyle(Paint.Style.FILL);
     }
 
     public void setDisplay(byte[][] array) {
