diff --git a/app/src/main/java/com/foobnix/android/utils/Safe.java b/app/src/main/java/com/foobnix/android/utils/Safe.java
index c46b40958..9150dc119 100644
--- a/app/src/main/java/com/foobnix/android/utils/Safe.java
+++ b/app/src/main/java/com/foobnix/android/utils/Safe.java
@@ -1,7 +1,6 @@
 package com.foobnix.android.utils;
 
 import android.graphics.Bitmap;
-import android.view.View;
 import android.widget.ImageView;
 
 import androidx.annotation.Nullable;
@@ -17,22 +16,15 @@ import com.bumptech.glide.request.target.Target;
 
 import org.ebookdroid.LibreraApp;
 
-import java.util.ArrayList;
-import java.util.List;
 import java.util.Random;
 
 public class Safe {
 
     public static final String TXT_SAFE_RUN = "file://SAFE_RUN-";
-    public static List<Target> targets = new ArrayList<>();
-    public static List<ImageView> targets2 = new ArrayList<>();
     static Random r = new Random();
     static int counter;
 
     public static void run(final Runnable action) {
-        clearAll(null);
-
-
         Glide.with(LibreraApp.context)
                 .asBitmap().load(TXT_SAFE_RUN)
                 .skipMemoryCache(true)
@@ -46,7 +38,6 @@ public class Safe {
 
                     @Override
                     public boolean onResourceReady(Bitmap resource, Object model, Target<Bitmap> target, DataSource dataSource, boolean isFirstResource) {
-                        clearAll(target);
                         if (action != null) {
                             action.run();
                         }
@@ -57,30 +48,14 @@ public class Safe {
 
     }
 
-    public static void clearAll() {
-        clearAll(null);
-    }
-    public static void clearAll(Target exlude) {
-
-        for (Target t : targets) {
-            if (exlude != null && exlude.equals(t)) {
-                continue;
-            }
-            Glide.with(LibreraApp.context).clear(t);
-        }
-        for (View v : targets2) {
-            Glide.with(LibreraApp.context).clear(v);
-        }
 
-    }
 
     public static SimpleTarget<Bitmap> target(SimpleTarget<Bitmap> add) {
-        targets.add(add);
         return add;
     }
 
-    public static ImageView targetView(ImageView view) {
-        targets2.add(view);
+    public static ImageView target(ImageView view) {
+        //targets2.add(view);
         return view;
     }
 
diff --git a/app/src/main/java/com/foobnix/pdf/info/IMG.java b/app/src/main/java/com/foobnix/pdf/info/IMG.java
index d5bef43ef..ae09dd216 100644
--- a/app/src/main/java/com/foobnix/pdf/info/IMG.java
+++ b/app/src/main/java/com/foobnix/pdf/info/IMG.java
@@ -24,6 +24,7 @@ import com.bumptech.glide.request.RequestListener;
 import com.bumptech.glide.request.target.Target;
 import com.foobnix.android.utils.Dips;
 import com.foobnix.android.utils.LOG;
+import com.foobnix.android.utils.Safe;
 import com.foobnix.model.AppState;
 import com.foobnix.sys.ImageExtractor;
 
@@ -184,7 +185,7 @@ public class IMG {
                     }
                 })
                 .diskCacheStrategy(DiskCacheStrategy.ALL)
-                .into(img);
+                .into(Safe.target(img));
     }
 
 
diff --git a/app/src/main/java/com/foobnix/pdf/info/presentation/PageThumbnailAdapter.java b/app/src/main/java/com/foobnix/pdf/info/presentation/PageThumbnailAdapter.java
index f485af57c..e60df5d41 100644
--- a/app/src/main/java/com/foobnix/pdf/info/presentation/PageThumbnailAdapter.java
+++ b/app/src/main/java/com/foobnix/pdf/info/presentation/PageThumbnailAdapter.java
@@ -12,7 +12,6 @@ import android.widget.TextView;
 
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.foobnix.android.utils.Safe;
 import com.foobnix.android.utils.TxtUtils;
 import com.foobnix.model.AppSP;
 import com.foobnix.pdf.info.IMG;
@@ -73,7 +72,7 @@ public class PageThumbnailAdapter extends BaseAdapter {
         PageUrl pageUrl = getPageUrl(position);
         final String url = pageUrl.toString();
 
-        Glide.with(LibreraApp.context).asBitmap().diskCacheStrategy(DiskCacheStrategy.NONE).load(url).into(Safe.targetView(img));
+        Glide.with(LibreraApp.context).asBitmap().diskCacheStrategy(DiskCacheStrategy.NONE).load(url).into(img);
 
         TextView txt = (TextView) view.findViewById(R.id.text1);
         txt.setText(TxtUtils.deltaPage((position + 1)));
diff --git a/app/src/main/java/com/foobnix/pdf/info/view/DragingDialogs.java b/app/src/main/java/com/foobnix/pdf/info/view/DragingDialogs.java
index e591b52e9..6d8b1aa57 100644
--- a/app/src/main/java/com/foobnix/pdf/info/view/DragingDialogs.java
+++ b/app/src/main/java/com/foobnix/pdf/info/view/DragingDialogs.java
@@ -71,6 +71,7 @@ import androidx.fragment.app.FragmentActivity;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.bumptech.glide.Glide;
 import com.foobnix.StringResponse;
 import com.foobnix.android.utils.BaseItemAdapter;
 import com.foobnix.android.utils.BaseItemLayoutAdapter;
@@ -142,6 +143,7 @@ import com.foobnix.ui2.adapter.DefaultListeners;
 import com.foobnix.ui2.adapter.FileMetaAdapter;
 
 import org.ebookdroid.BookType;
+import org.ebookdroid.LibreraApp;
 import org.ebookdroid.common.settings.CoreSettings;
 import org.ebookdroid.common.settings.SettingsManager;
 import org.ebookdroid.common.settings.books.SharedBooks;
@@ -1575,7 +1577,7 @@ public class DragingDialogs {
                         text = text.replace(TxtUtils.TTS_PAUSE, "");
 
                         TTSEngine.get().speek(text);
-                        Toast.makeText(controller.getActivity(),text,Toast.LENGTH_SHORT).show();
+                        Toast.makeText(controller.getActivity(), text, Toast.LENGTH_SHORT).show();
                     }
                 });
                 view.findViewById(R.id.readTTS).setOnLongClickListener(new OnLongClickListener() {
@@ -1584,7 +1586,7 @@ public class DragingDialogs {
                         TTSEngine.get().stop();
                         String text = editText.getText().toString().trim();
                         TTSEngine.get().speek(text);
-                        Toast.makeText(controller.getActivity(),text,Toast.LENGTH_SHORT).show();
+                        Toast.makeText(controller.getActivity(), text, Toast.LENGTH_SHORT).show();
                         return true;
                     }
                 });
@@ -1933,6 +1935,7 @@ public class DragingDialogs {
 
                         ;
                     });
+
                 }
 
                 grid.setOnItemClickListener(new OnItemClickListener() {
@@ -1989,7 +1992,12 @@ public class DragingDialogs {
 
                     @Override
                     public void onScrollStateChanged(AbsListView view, int scrollState) {
-
+                        if (scrollState == OnScrollListener.SCROLL_STATE_FLING) {
+                            Glide.with(LibreraApp.context).pauseRequests();
+                        } else {
+                            Glide.with(LibreraApp.context).resumeRequests();
+                        }
+                        LOG.d("onScrollStateChanged", scrollState);
                     }
 
                     @Override
diff --git a/app/src/main/java/com/foobnix/sys/LibreraAppGlideModule.java b/app/src/main/java/com/foobnix/sys/LibreraAppGlideModule.java
index b53c58d90..0a0c677ed 100644
--- a/app/src/main/java/com/foobnix/sys/LibreraAppGlideModule.java
+++ b/app/src/main/java/com/foobnix/sys/LibreraAppGlideModule.java
@@ -16,6 +16,7 @@ import com.bumptech.glide.load.DataSource;
 import com.bumptech.glide.load.DecodeFormat;
 import com.bumptech.glide.load.Options;
 import com.bumptech.glide.load.data.DataFetcher;
+import com.bumptech.glide.load.engine.executor.GlideExecutor;
 import com.bumptech.glide.load.model.ModelLoader;
 import com.bumptech.glide.load.model.ModelLoaderFactory;
 import com.bumptech.glide.load.model.MultiModelLoaderFactory;
@@ -95,7 +96,11 @@ public class LibreraAppGlideModule extends AppGlideModule {
     public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder) {
         super.applyOptions(context, builder);
         builder.setDefaultRequestOptions(new RequestOptions().format(DecodeFormat.PREFER_RGB_565));
-        builder.setSourceExecutor(newSourceBuilder().setThreadCount(1).build());
+        builder.setSourceExecutor(
+                newSourceBuilder()
+                        .setUncaughtThrowableStrategy(GlideExecutor.UncaughtThrowableStrategy.IGNORE)
+                        .setThreadCount(1)
+                        .build());
 
 
     }
