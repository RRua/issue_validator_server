diff --git a/app/src/main/java/com/foobnix/android/utils/LinkedJSONOjbect.java b/app/src/main/java/com/foobnix/android/utils/LinkedJSONOjbect.java
deleted file mode 100644
index 56583bb7d..000000000
--- a/app/src/main/java/com/foobnix/android/utils/LinkedJSONOjbect.java
+++ /dev/null
@@ -1,65 +0,0 @@
-package com.foobnix.android.utils;
-
-import java.util.Iterator;
-import java.util.LinkedHashMap;
-
-public class LinkedJSONOjbect {
-
-    LinkedHashMap<String, String> map = new LinkedHashMap<>();
-
-    public LinkedJSONOjbect(String in) {
-
-        LOG.d("LinkedJSONOjbect", "in", in);
-
-        in = in.replace("'","\"");
-
-        in = in.substring(1);
-        in = in.substring(0, in.length() - 1);
-
-        LOG.d("LinkedJSONOjbect", "in", in);
-
-
-
-        String items[] = in.split("\",\"");
-        for (String line : items) {
-            String keyValue[] = line.split("\":\"");
-            String key = keyValue[0];
-            String value = keyValue[1];
-
-            map.put(key, value);
-            LOG.d("LinkedJSONOjbect", "put", key, value);
-
-        }
-
-    }
-
-    public LinkedJSONOjbect() {
-
-    }
-
-    public void put(String from, String to) {
-        map.put(from, to);
-    }
-
-    public String toString() {
-        StringBuilder res = new StringBuilder();
-        res.append("{");
-        for (String key : map.keySet()) {
-            res.append("\"" + key + "\"");
-            res.append(":");
-            res.append("\"" + map.get(key) + "\"");
-            res.append(",");
-        }
-        res.append("}");
-        return res.toString().replace(",}", "}");
-
-    }
-
-    public Iterator<String> keys() {
-        return map.keySet().iterator();
-    }
-
-    public String getString(String key) {
-        return map.get(key);
-    }
-}
diff --git a/app/src/main/java/com/foobnix/pdf/info/model/BookCSS.java b/app/src/main/java/com/foobnix/pdf/info/model/BookCSS.java
index fb3db1978..7df247ff7 100644
--- a/app/src/main/java/com/foobnix/pdf/info/model/BookCSS.java
+++ b/app/src/main/java/com/foobnix/pdf/info/model/BookCSS.java
@@ -25,6 +25,7 @@ import com.foobnix.ui2.FileMetaCore;
 
 import org.ebookdroid.common.settings.books.SharedBooks;
 import org.ebookdroid.droids.DocContext;
+import org.librera.LinkedJSONObject;
 
 import java.io.File;
 import java.io.FilenameFilter;
@@ -76,7 +77,7 @@ public class BookCSS {
     public String fontFolder = DEFAULT_FOLDER;
     public volatile int fontSizeSp = Dips.isXLargeScreen() ? 32 : 24;
     public float appFontScale = 1.0f;
-    public String mp3BookPath;
+    public String mp3BookPathJson;
     public String dirLastPath;
     public String pathSAF = "";
     public boolean isSyncWifiOnly;
@@ -115,6 +116,9 @@ public class BookCSS {
     @IgnoreHashCode
     public String linkColorNigths = LINKCOLOR_NIGTHS;
 
+    private String lastBookPathCache = "";
+    private String trackPathCache;
+
     public static String filterFontName(String fontName) {
         if (!fontName.contains(".")) {
             return fontName;
@@ -156,6 +160,29 @@ public class BookCSS {
         }
     }
 
+    public void mp3BookPath(String track) {
+        final LinkedJSONObject obj = (mp3BookPathJson == null) ? new LinkedJSONObject() : new LinkedJSONObject(mp3BookPathJson);
+        obj.put(AppSP.get().lastBookPath, track);
+        LOG.d("mp3BookPath-set", AppSP.get().lastBookPath, track);
+        mp3BookPathJson = obj.toString();
+
+        trackPathCache = track;
+        lastBookPathCache = AppSP.get().lastBookPath;
+    }
+
+    public String mp3BookPathGet() {
+        if (lastBookPathCache != null && lastBookPathCache.equals(AppSP.get().lastBookPath)) {
+            return trackPathCache;
+        }
+        final LinkedJSONObject obj = (mp3BookPathJson == null) ? new LinkedJSONObject() : new LinkedJSONObject(mp3BookPathJson);
+        final String track = obj.optString(AppSP.get().lastBookPath);
+        LOG.d("mp3BookPath-get", AppSP.get().lastBookPath, track);
+        trackPathCache = track;
+        lastBookPathCache = AppSP.get().lastBookPath;
+
+        return track;
+    }
+
     public boolean isTextFormat() {
         try {
             return ExtUtils.isTextFomat(AppSP.get().lastBookPath);
@@ -221,11 +248,11 @@ public class BookCSS {
         try {
             if (TxtUtils.isNotEmpty(instance.searchPaths)) {
                 String sub[] = instance.searchPaths.split(",");
-                instance.searchPaths =null;
-                for(String line:sub){
-                    if(new File(line).isDirectory()){
-                        instance.searchPathsJson = JsonDB.add(instance.searchPathsJson,line);
-                        LOG.d("Migration-add",line);
+                instance.searchPaths = null;
+                for (String line : sub) {
+                    if (new File(line).isDirectory()) {
+                        instance.searchPathsJson = JsonDB.add(instance.searchPathsJson, line);
+                        LOG.d("Migration-add", line);
                     }
                 }
             }
diff --git a/app/src/main/java/com/foobnix/pdf/info/view/DragingDialogs.java b/app/src/main/java/com/foobnix/pdf/info/view/DragingDialogs.java
index 5589e3c9b..e66bcf3e0 100644
--- a/app/src/main/java/com/foobnix/pdf/info/view/DragingDialogs.java
+++ b/app/src/main/java/com/foobnix/pdf/info/view/DragingDialogs.java
@@ -589,6 +589,7 @@ public class DragingDialogs {
                 final TTSControlsView tts = (TTSControlsView) view.findViewById(R.id.ttsActive);
                 tts.setDC(controller);
 
+
                 TextView ttsSkeakToFile = (TextView) view.findViewById(R.id.ttsSkeakToFile);
 
                 final TextView ttsLang = (TextView) view.findViewById(R.id.ttsLang);
@@ -941,7 +942,7 @@ public class DragingDialogs {
                                 }
                                 if (ExtUtils.isAudioContent(result1)) {
 
-                                    BookCSS.get().mp3BookPath = result1;
+                                    BookCSS.get().mp3BookPath(result1);
                                     AppState.get().mp3seek = 0;
 
                                     tts.udateButtons();
@@ -2501,7 +2502,7 @@ public class DragingDialogs {
                                                 LOG.d("Try to open path", aPath);
                                                 if (ExtUtils.isAudioContent(aPath.getPath())) {
                                                     TTSEngine.get().mp3Destroy();
-                                                    BookCSS.get().mp3BookPath = aPath.getPath();
+                                                    BookCSS.get().mp3BookPath(aPath.getPath());
                                                     AppState.get().mp3seek = 0;
                                                     TTSService.playBookPage(controller.getCurentPageFirst1() - 1, controller.getCurrentBook().getPath(), "", controller.getBookWidth(), controller.getBookHeight(), BookCSS.get().fontSizeSp, controller.getTitle());
                                                 } else {
diff --git a/app/src/main/java/com/foobnix/pdf/info/wrapper/DocumentController.java b/app/src/main/java/com/foobnix/pdf/info/wrapper/DocumentController.java
index a916864e3..b41e8883d 100644
--- a/app/src/main/java/com/foobnix/pdf/info/wrapper/DocumentController.java
+++ b/app/src/main/java/com/foobnix/pdf/info/wrapper/DocumentController.java
@@ -120,6 +120,7 @@ public abstract class DocumentController {
     public DocumentController(final Activity activity) {
         this.activity = activity;
         readTimeStart = System.currentTimeMillis();
+        TTSEngine.get().mp3Destroy();
     }
 
     public static int getRotationText() {
diff --git a/app/src/main/java/com/foobnix/tts/TTSControlsView.java b/app/src/main/java/com/foobnix/tts/TTSControlsView.java
index f09fa7972..84f029d3f 100644
--- a/app/src/main/java/com/foobnix/tts/TTSControlsView.java
+++ b/app/src/main/java/com/foobnix/tts/TTSControlsView.java
@@ -37,28 +37,43 @@ import java.io.File;
 
 public class TTSControlsView extends FrameLayout {
 
+    Handler handler;
     private ImageView ttsPlayPause;
     private DocumentController controller;
-
-    public void setDC(DocumentController dc) {
-        controller = dc;
-    }
-
     private ImageView ttsDialog;
+    private View layoutMp3;
+    private SeekBar seekMp3;
+    private TextView seekCurrent;
+    private TextView seekMax;
+    private TextView trackName;
+    private ImageView ttsPrevTrack;
+    private ImageView ttsNextTrack;
+    private int colorTint;
+    Runnable update = new Runnable() {
 
-    Handler handler;
+        @Override
+        public void run() {
+            if (TTSEngine.get().isMp3()) {
+                initMp3();
+                if (TTSEngine.get().mp != null) {
+                    seekCurrent.setText(TxtUtils.getMp3TimeString(TTSEngine.get().mp.getCurrentPosition()));
+                    seekMax.setText(TxtUtils.getMp3TimeString(TTSEngine.get().mp.getDuration()));
 
-    public void addOnDialogRunnable(final Runnable run) {
-        ttsDialog.setVisibility(View.VISIBLE);
-        ttsDialog.setOnClickListener(new OnClickListener() {
+                    seekMp3.setMax(TTSEngine.get().mp.getDuration());
+                    seekMp3.setProgress(TTSEngine.get().mp.getCurrentPosition());
 
-            @Override
-            public void onClick(View v) {
-                run.run();
+                    udateButtons();
+                }
+
+            } else {
+                layoutMp3.setVisibility(View.GONE);
+                trackName.setVisibility(View.GONE);
             }
-        });
-    }
 
+            LOG.d("TtsStatus-isPlaying", TTSEngine.get().isPlaying());
+            ttsPlayPause.setImageResource(TTSEngine.get().isPlaying() ? R.drawable.glyphicons_175_pause : R.drawable.glyphicons_174_play);
+        }
+    };
     @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
     public TTSControlsView(final Context context, AttributeSet attrs) {
         super(context, attrs);
@@ -176,7 +191,7 @@ public class TTSControlsView extends FrameLayout {
             public void onClick(View v) {
                 String track = TTSTracks.getPrevTrack();
                 if (track != null) {
-                    BookCSS.get().mp3BookPath = track;
+                    BookCSS.get().mp3BookPath(track);
                     TTSEngine.get().loadMP3(track, true);
                     udateButtons();
                 }
@@ -189,7 +204,7 @@ public class TTSControlsView extends FrameLayout {
             public void onClick(View v) {
                 String track = TTSTracks.getNextTrack();
                 if (track != null) {
-                    BookCSS.get().mp3BookPath = track;
+                    BookCSS.get().mp3BookPath(track);
                     TTSEngine.get().loadMP3(track, true);
                     udateButtons();
                 }
@@ -215,7 +230,7 @@ public class TTSControlsView extends FrameLayout {
                         @Override
                         public boolean onMenuItemClick(MenuItem item) {
                             TTSEngine.get().stop();
-                            BookCSS.get().mp3BookPath = file.getPath();
+                            BookCSS.get().mp3BookPath(file.getPath());
                             TTSEngine.get().loadMP3(file.getPath(), true);
                             udateButtons();
                             return false;
@@ -231,6 +246,21 @@ public class TTSControlsView extends FrameLayout {
 
     }
 
+    public void setDC(DocumentController dc) {
+        controller = dc;
+    }
+
+    public void addOnDialogRunnable(final Runnable run) {
+        ttsDialog.setVisibility(View.VISIBLE);
+        ttsDialog.setOnClickListener(new OnClickListener() {
+
+            @Override
+            public void onClick(View v) {
+                run.run();
+            }
+        });
+    }
+
     public void initMp3() {
         if (TTSEngine.get().isMp3() && layoutMp3.getVisibility() == View.GONE) {
             layoutMp3.setVisibility(View.VISIBLE);
@@ -290,44 +320,14 @@ public class TTSControlsView extends FrameLayout {
     @Subscribe(threadMode = ThreadMode.MAIN)
     public void onTTSStatus(TtsStatus status) {
         if (ttsPlayPause != null) {
-            update.run();
             handler.removeCallbacksAndMessages(null);
             handler.postDelayed(update, 200);
         }
     }
+    public void reset(){
+        TTSEngine.get().loadMP3(BookCSS.get().mp3BookPathGet());
+        update.run();
 
-    Runnable update = new Runnable() {
-
-        @Override
-        public void run() {
-            if (TTSEngine.get().isMp3()) {
-                initMp3();
-                if (TTSEngine.get().mp != null) {
-                    seekCurrent.setText(TxtUtils.getMp3TimeString(TTSEngine.get().mp.getCurrentPosition()));
-                    seekMax.setText(TxtUtils.getMp3TimeString(TTSEngine.get().mp.getDuration()));
-
-                    seekMp3.setMax(TTSEngine.get().mp.getDuration());
-                    seekMp3.setProgress(TTSEngine.get().mp.getCurrentPosition());
-
-                    udateButtons();
-                }
-
-            } else {
-                layoutMp3.setVisibility(View.GONE);
-                trackName.setVisibility(View.GONE);
-            }
-
-            LOG.d("TtsStatus-isPlaying", TTSEngine.get().isPlaying());
-            ttsPlayPause.setImageResource(TTSEngine.get().isPlaying() ? R.drawable.glyphicons_175_pause : R.drawable.glyphicons_174_play);
-        }
-    };
-    private View layoutMp3;
-    private SeekBar seekMp3;
-    private TextView seekCurrent;
-    private TextView seekMax;
-    private TextView trackName;
-    private ImageView ttsPrevTrack;
-    private ImageView ttsNextTrack;
-    private int colorTint;
+    }
 
 }
diff --git a/app/src/main/java/com/foobnix/tts/TTSEngine.java b/app/src/main/java/com/foobnix/tts/TTSEngine.java
index e385dce68..8a6503e94 100644
--- a/app/src/main/java/com/foobnix/tts/TTSEngine.java
+++ b/app/src/main/java/com/foobnix/tts/TTSEngine.java
@@ -144,7 +144,7 @@ public class TTSEngine {
         synchronized (helpObject) {
 
             if (TTSEngine.get().isMp3() && mp == null) {
-                TTSEngine.get().loadMP3(BookCSS.get().mp3BookPath);
+                TTSEngine.get().loadMP3(BookCSS.get().mp3BookPathGet());
             }
 
             if (ttsEngine != null) {
@@ -166,6 +166,7 @@ public class TTSEngine {
 
     @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1)
     public void stop() {
+
         LOG.d(TAG, "stop");
         synchronized (helpObject) {
 
@@ -474,6 +475,11 @@ public class TTSEngine {
     }
 
     public void loadMP3(String ttsPlayMp3Path, final boolean play) {
+        LOG.d("loadMP3-", ttsPlayMp3Path);
+        if(TxtUtils.isEmpty(ttsPlayMp3Path) || !new File(ttsPlayMp3Path).isFile()){
+            LOG.d("loadMP3-skip mp3");
+            return;
+        }
         try {
             mp3Destroy();
             mp = new MediaPlayer();
@@ -540,7 +546,7 @@ public class TTSEngine {
     public boolean isMp3PlayPause() {
         if (isMp3()) {
             if (mp == null) {
-                loadMP3(BookCSS.get().mp3BookPath);
+                loadMP3(BookCSS.get().mp3BookPathGet());
             }
             if (mp.isPlaying()) {
                 mp.pause();
@@ -566,7 +572,7 @@ public class TTSEngine {
     }
 
     public boolean isMp3() {
-        return TxtUtils.isNotEmpty(BookCSS.get().mp3BookPath);
+        return TxtUtils.isNotEmpty(BookCSS.get().mp3BookPathGet());
     }
 
     public void seekTo(int i) {
diff --git a/app/src/main/java/com/foobnix/tts/TTSNotification.java b/app/src/main/java/com/foobnix/tts/TTSNotification.java
index 54af62fb2..940043c82 100644
--- a/app/src/main/java/com/foobnix/tts/TTSNotification.java
+++ b/app/src/main/java/com/foobnix/tts/TTSNotification.java
@@ -167,8 +167,8 @@ public class TTSNotification {
 
             String textLine = pageNumber + " " + fileMetaBookName;
 
-            if (TxtUtils.isNotEmpty(BookCSS.get().mp3BookPath)) {
-                textLine = "[" + ExtUtils.getFileName(BookCSS.get().mp3BookPath) + "] " + textLine;
+            if (TxtUtils.isNotEmpty(BookCSS.get().mp3BookPathGet())) {
+                textLine = "[" + ExtUtils.getFileName(BookCSS.get().mp3BookPathGet()) + "] " + textLine;
             }
 
             remoteViews.setTextViewText(R.id.bookInfo, textLine.replace(TxtUtils.LONG_DASH1+ " ","\n").trim());
diff --git a/app/src/main/java/com/foobnix/tts/TTSService.java b/app/src/main/java/com/foobnix/tts/TTSService.java
index a53aad453..dda74106a 100644
--- a/app/src/main/java/com/foobnix/tts/TTSService.java
+++ b/app/src/main/java/com/foobnix/tts/TTSService.java
@@ -368,7 +368,7 @@ public class TTSService extends Service {
 
         if (TTSNotification.TTS_STOP_DESTROY.equals(intent.getAction())) {
             TTSEngine.get().mp3Destroy();
-            BookCSS.get().mp3BookPath = null;
+            BookCSS.get().mp3BookPath(null);
             AppState.get().mp3seek = 0;
             TTSEngine.get().stop();
 
diff --git a/app/src/main/java/com/foobnix/tts/TTSTracks.java b/app/src/main/java/com/foobnix/tts/TTSTracks.java
index eade1b233..3b83b3f29 100644
--- a/app/src/main/java/com/foobnix/tts/TTSTracks.java
+++ b/app/src/main/java/com/foobnix/tts/TTSTracks.java
@@ -29,7 +29,7 @@ public class TTSTracks {
 
         for (int i = 0; i < listFiles.size(); i++) {
             File file = listFiles.get(i);
-            if (file.getPath().equals(BookCSS.get().mp3BookPath)) {
+            if (file.getPath().equals(BookCSS.get().mp3BookPathGet())) {
                 return listFiles.size() > i + 1 ? listFiles.get(i + 1).getPath() : null;
             }
         }
@@ -45,7 +45,7 @@ public class TTSTracks {
 
         for (int i = 0; i < listFiles.size(); i++) {
             File file = listFiles.get(i);
-            if (file.getPath().equals(BookCSS.get().mp3BookPath)) {
+            if (file.getPath().equals(BookCSS.get().mp3BookPathGet())) {
                 return i > 0 ? listFiles.get(i - 1).getPath() : null;
             }
         }
@@ -54,15 +54,15 @@ public class TTSTracks {
     }
 
     public static String getCurrentTrackName() {
-        return ExtUtils.getFileName(BookCSS.get().mp3BookPath);
+        return ExtUtils.getFileName(BookCSS.get().mp3BookPathGet());
     }
 
     public static List<File> getAllMp3InFolder() {
-        if (TxtUtils.isEmpty(BookCSS.get().mp3BookPath)) {
+        if (TxtUtils.isEmpty(BookCSS.get().mp3BookPathGet())) {
             return Collections.emptyList();
 
         }
-        File file = new File(BookCSS.get().mp3BookPath);
+        File file = new File(BookCSS.get().mp3BookPathGet());
         File root = file.getParentFile();
         if (!file.isFile() || !root.isDirectory()) {
             return Collections.emptyList();
