diff --git a/app/src/main/java/com/gianlu/aria2app/Main/DrawerManager.java b/app/src/main/java/com/gianlu/aria2app/Main/DrawerManager.java
index 8a48218c..929a30ff 100644
--- a/app/src/main/java/com/gianlu/aria2app/Main/DrawerManager.java
+++ b/app/src/main/java/com/gianlu/aria2app/Main/DrawerManager.java
@@ -40,9 +40,9 @@ public class DrawerManager {
     private LinearLayout drawerProfilesFooter;
     private IDrawerListener listener;
     private ProfilesAdapter profilesAdapter;
-
     private boolean isProfilesLockedUntilSelected;
 
+    // TODO: Finish header
     public DrawerManager(Activity context, DrawerLayout drawerLayout) {
         this.context = context;
         this.drawerLayout = drawerLayout;
diff --git a/app/src/main/java/com/gianlu/aria2app/Main/Profile/AddProfileActivity.java b/app/src/main/java/com/gianlu/aria2app/Main/Profile/AddProfileActivity.java
index e18b5751..faa645d2 100644
--- a/app/src/main/java/com/gianlu/aria2app/Main/Profile/AddProfileActivity.java
+++ b/app/src/main/java/com/gianlu/aria2app/Main/Profile/AddProfileActivity.java
@@ -50,6 +50,7 @@ import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
 
+// TODO: Fix that one
 public class AddProfileActivity extends AppCompatActivity {
     private Activity _this;
     private boolean isEditMode = true;
diff --git a/app/src/main/java/com/gianlu/aria2app/Main/Profile/ProfilesCustomAdapter.java b/app/src/main/java/com/gianlu/aria2app/Main/Profile/ProfilesCustomAdapter.java
deleted file mode 100644
index 741c93c3..00000000
--- a/app/src/main/java/com/gianlu/aria2app/Main/Profile/ProfilesCustomAdapter.java
+++ /dev/null
@@ -1,254 +0,0 @@
-package com.gianlu.aria2app.Main.Profile;
-
-import android.annotation.SuppressLint;
-import android.app.Activity;
-import android.content.Context;
-import android.util.Pair;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.BaseExpandableListAdapter;
-import android.widget.ExpandableListView;
-import android.widget.ImageButton;
-import android.widget.ImageView;
-import android.widget.ProgressBar;
-import android.widget.TextView;
-
-import com.gianlu.aria2app.R;
-import com.gianlu.aria2app.Utils;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Locale;
-
-public class ProfilesCustomAdapter extends BaseExpandableListAdapter {
-    private Activity context;
-    private List<ProfileItem> profiles;
-    private OnItemSelected onItemSelected;
-    private OnItemEdit onItemEdit;
-    private ExpandableListView listView;
-
-    public ProfilesCustomAdapter(Activity context, ExpandableListView listView, List<ProfileItem> profiles, OnItemSelected onItemSelected, OnItemEdit onItemEdit) {
-        this.context = context;
-        this.profiles = profiles;
-        this.onItemSelected = onItemSelected;
-        this.onItemEdit = onItemEdit;
-        this.listView = listView;
-    }
-
-    @Override
-    public int getGroupCount() {
-        return profiles.size();
-    }
-
-    @Override
-    public int getChildrenCount(int i) {
-        if (getGroup(i).isSingleMode()) {
-            return 0;
-        } else {
-            return ((MultiModeProfileItem) profiles.get(i)).getProfiles().size();
-        }
-    }
-
-    @Override
-    public ProfileItem getGroup(int i) {
-        return profiles.get(i);
-    }
-
-    @Override
-    public Pair<ConnectivityCondition, SingleModeProfileItem> getChild(int i, int i1) {
-        ConnectivityCondition cond = new ArrayList<>(((MultiModeProfileItem) getGroup(i)).getProfiles().keySet()).get(i1);
-        return new Pair<>(cond, ((MultiModeProfileItem) getGroup(i)).getProfiles().get(cond));
-    }
-
-    @Override
-    public long getGroupId(int i) {
-        return i;
-    }
-
-    @Override
-    public long getChildId(int i, int i1) {
-        return i1;
-    }
-
-    @Override
-    public boolean hasStableIds() {
-        return true;
-    }
-
-    @SuppressLint("InflateParams")
-    @Override
-    public View getGroupView(int i, boolean b, View view, ViewGroup viewGroup) {
-        ProfileItem item = getGroup(i);
-        return createGroupView(((LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE)).inflate(R.layout.profile_custom_single_item, null), i, item);
-    }
-
-    @SuppressLint("InflateParams")
-    @Override
-    public View getChildView(int i, int i1, boolean b, View view, ViewGroup viewGroup) {
-        Pair<ConnectivityCondition, SingleModeProfileItem> item = getChild(i, i1);
-        return createChildView(((LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE)).inflate(R.layout.profile_custom_child, null), getGroup(i).getGlobalProfileName(), item.first, item.second);
-    }
-
-    @Override
-    public boolean isChildSelectable(int i, int i1) {
-        return true;
-    }
-
-    private View createGroupView(final View view, final int position, final ProfileItem item) {
-        TextView profileName = (TextView) view.findViewById(R.id.profileCustomItem_profileName);
-        TextView serverIP = (TextView) view.findViewById(R.id.profileCustomItem_serverIP);
-        TextView latency = (TextView) view.findViewById(R.id.profileCustomItem_latency);
-        ImageView serverStatus = (ImageView) view.findViewById(R.id.profileCustomItem_serverStatus);
-        ProgressBar serverProgressBar = (ProgressBar) view.findViewById(R.id.profileCustomItem_serverProgressBar);
-        ImageButton select = (ImageButton) view.findViewById(R.id.profileCustomItem_select);
-        ImageButton edit = (ImageButton) view.findViewById(R.id.profileCustomItem_edit);
-        final ImageButton expand = (ImageButton) view.findViewById(R.id.profileCustomItem_expand);
-
-        profileName.setText(item.getGlobalProfileName());
-        serverIP.setText(item.isSingleMode() ? ((SingleModeProfileItem) item).getFullServerAddr() : ((MultiModeProfileItem) item).getCurrentProfile(context).getFullServerAddr());
-
-        select.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                onItemSelected.onSelected(item.getGlobalProfileName(), item);
-            }
-        });
-        edit.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                onItemEdit.onEdit(item);
-            }
-        });
-        serverStatus.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                Utils.UIToast(context, item.getStatusMessage());
-            }
-        });
-
-        if (!item.isSingleMode()) {
-            expand.setVisibility(View.VISIBLE);
-            expand.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View view) {
-                    if (listView.isGroupExpanded(position)) {
-                        listView.collapseGroup(position);
-                        expand.setImageResource(R.drawable.ic_keyboard_arrow_right_black_48dp);
-                    } else {
-                        listView.expandGroup(position);
-                        expand.setImageResource(R.drawable.ic_keyboard_arrow_down_black_48dp);
-                    }
-
-                    expand.invalidate();
-                }
-            });
-        } else {
-            expand.setVisibility(View.INVISIBLE);
-        }
-
-        switch (item.getStatus()) {
-            case ONLINE:
-                serverStatus.setVisibility(View.VISIBLE);
-                serverProgressBar.setVisibility(View.INVISIBLE);
-                serverStatus.setImageResource(R.drawable.ic_done_black_48dp);
-                break;
-            case OFFLINE:
-                serverStatus.setVisibility(View.VISIBLE);
-                serverProgressBar.setVisibility(View.INVISIBLE);
-                serverStatus.setImageResource(R.drawable.ic_clear_black_48dp);
-                break;
-            case ERROR:
-                serverStatus.setVisibility(View.VISIBLE);
-                serverProgressBar.setVisibility(View.INVISIBLE);
-                serverStatus.setImageResource(R.drawable.ic_error_black_48dp);
-                break;
-            case UNKNOWN:
-                serverStatus.setVisibility(View.INVISIBLE);
-                serverProgressBar.setVisibility(View.VISIBLE);
-                serverProgressBar.setIndeterminate(true);
-                break;
-        }
-
-        return view;
-    }
-
-    private View createChildView(View view, final String pprofileName, ConnectivityCondition condition, final SingleModeProfileItem profile) {
-        ImageView profileType = (ImageView) view.findViewById(R.id.profileCustomChild_type);
-        TextView profileName = (TextView) view.findViewById(R.id.profileCustomChild_profileName);
-        TextView serverIP = (TextView) view.findViewById(R.id.profileCustomChild_serverIP);
-        TextView latency = (TextView) view.findViewById(R.id.profileCustomChild_latency);
-        ImageView serverStatus = (ImageView) view.findViewById(R.id.profileCustomChild_serverStatus);
-        ProgressBar serverProgressBar = (ProgressBar) view.findViewById(R.id.profileCustomChild_serverProgressBar);
-        ImageButton select = (ImageButton) view.findViewById(R.id.profileCustomChild_select);
-
-        profileName.setText(profile.getProfileName());
-        latency.setText(String.format(Locale.getDefault(), "%s ms", profile.getLatency() == -1 ? "-" : String.valueOf(profile.getLatency())));
-        serverIP.setText(profile.getFullServerAddr());
-
-        select.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                onItemSelected.onSelected(pprofileName, profile);
-            }
-        });
-        serverStatus.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                Utils.UIToast(context, profile.getStatusMessage());
-            }
-        });
-
-        switch (condition.getType()) {
-            case WIFI:
-                profileType.setImageResource(R.drawable.ic_network_wifi_black_48dp);
-                break;
-            case MOBILE:
-                profileType.setImageResource(R.drawable.ic_network_cell_black_48dp);
-                break;
-            case ETHERNET:
-                profileType.setImageResource(R.drawable.ic_settings_ethernet_black_48dp);
-                break;
-            case BLUETOOTH:
-                profileType.setImageResource(R.drawable.ic_bluetooth_black_48dp);
-                break;
-            case UNKNOWN:
-                profileType.setImageResource(R.drawable.ic_help_black_48dp);
-                break;
-        }
-
-
-        switch (profile.getStatus()) {
-            case ONLINE:
-                serverStatus.setVisibility(View.VISIBLE);
-                serverProgressBar.setVisibility(View.INVISIBLE);
-                serverStatus.setImageResource(R.drawable.ic_done_black_48dp);
-                break;
-            case OFFLINE:
-                serverStatus.setVisibility(View.VISIBLE);
-                serverProgressBar.setVisibility(View.INVISIBLE);
-                serverStatus.setImageResource(R.drawable.ic_clear_black_48dp);
-                break;
-            case ERROR:
-                serverStatus.setVisibility(View.VISIBLE);
-                serverProgressBar.setVisibility(View.INVISIBLE);
-                serverStatus.setImageResource(R.drawable.ic_error_black_48dp);
-                break;
-            case UNKNOWN:
-                serverStatus.setVisibility(View.INVISIBLE);
-                serverProgressBar.setVisibility(View.VISIBLE);
-                serverProgressBar.setIndeterminate(true);
-                break;
-        }
-
-        return view;
-    }
-
-    public interface OnItemSelected {
-        void onSelected(String profileName, ProfileItem item);
-    }
-
-    public interface OnItemEdit {
-        void onEdit(ProfileItem item);
-    }
-}
\ No newline at end of file
diff --git a/app/src/main/java/com/gianlu/aria2app/MainActivity.java b/app/src/main/java/com/gianlu/aria2app/MainActivity.java
index 13f04587..98c170b3 100644
--- a/app/src/main/java/com/gianlu/aria2app/MainActivity.java
+++ b/app/src/main/java/com/gianlu/aria2app/MainActivity.java
@@ -430,6 +430,7 @@ public class MainActivity extends AppCompatActivity {
             sharedPreferences.edit().putLong("lastSourceRefresh", System.currentTimeMillis()).apply();
         }
 
+        // TODO: If no profiles...
         try {
             SingleModeProfileItem profile = defaultProfile();
             if (profile == null) {
diff --git a/app/src/main/java/com/gianlu/aria2app/Options/OptionAdapter.java b/app/src/main/java/com/gianlu/aria2app/Options/OptionAdapter.java
index f83a47d9..da0c006d 100644
--- a/app/src/main/java/com/gianlu/aria2app/Options/OptionAdapter.java
+++ b/app/src/main/java/com/gianlu/aria2app/Options/OptionAdapter.java
@@ -20,6 +20,7 @@ import com.gianlu.aria2app.Utils;
 import java.util.List;
 import java.util.Map;
 
+// TODO: Optimizing
 public class OptionAdapter extends BaseExpandableListAdapter {
     private Context context;
     private List<OptionHeader> headers;
diff --git a/app/src/main/java/com/gianlu/aria2app/SelectProfileActivity.java b/app/src/main/java/com/gianlu/aria2app/SelectProfileActivity.java
deleted file mode 100644
index 48e9b3db..00000000
--- a/app/src/main/java/com/gianlu/aria2app/SelectProfileActivity.java
+++ /dev/null
@@ -1,163 +0,0 @@
-package com.gianlu.aria2app;
-
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.AlertDialog;
-import android.support.v7.app.AppCompatActivity;
-import android.widget.ExpandableListView;
-
-import com.gianlu.aria2app.Google.UncaughtExceptionHandler;
-import com.gianlu.aria2app.Main.Profile.AddProfileActivity;
-import com.gianlu.aria2app.Main.Profile.MultiModeProfileItem;
-import com.gianlu.aria2app.Main.Profile.ProfileItem;
-import com.gianlu.aria2app.Main.Profile.ProfilesCustomAdapter;
-import com.gianlu.aria2app.Main.Profile.SingleModeProfileItem;
-import com.gianlu.aria2app.NetIO.JTA2.JTA2;
-
-import org.json.JSONException;
-
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.FileOutputStream;
-import java.io.FilenameFilter;
-import java.io.IOException;
-import java.io.OutputStreamWriter;
-import java.util.ArrayList;
-import java.util.List;
-
-public class SelectProfileActivity extends AppCompatActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_select_profile);
-        setTitle(R.string.title_activity_select_profile);
-
-        UncaughtExceptionHandler.application = getApplication();
-        Thread.setDefaultUncaughtExceptionHandler(new UncaughtExceptionHandler(this));
-
-        ExpandableListView listView = (ExpandableListView) findViewById(R.id.selectProfile_listView);
-
-        List<ProfileItem> profiles = new ArrayList<>();
-        File files[] = getFilesDir().listFiles(new FilenameFilter() {
-            @Override
-            public boolean accept(File file, String s) {
-                return s.toLowerCase().endsWith(".profile");
-            }
-        });
-
-        for (File profile : files) {
-            try {
-                if (ProfileItem.isSingleMode(this, profile)) {
-                    profiles.add(SingleModeProfileItem.fromFile(this, profile));
-                } else {
-                    profiles.add(MultiModeProfileItem.fromFile(this, profile));
-                }
-            } catch (FileNotFoundException ex) {
-                Utils.UIToast(this, Utils.TOAST_MESSAGES.FILE_NOT_FOUND, ex);
-            } catch (JSONException | IOException ex) {
-                Utils.UIToast(this, Utils.TOAST_MESSAGES.FATAL_EXCEPTION, ex);
-                ex.printStackTrace();
-            }
-        }
-
-        listView.setAdapter(new ProfilesCustomAdapter(this, listView, profiles, new ProfilesCustomAdapter.OnItemSelected() {
-            @Override
-            public void onSelected(final String profileName, final ProfileItem item) {
-                if (item.getStatus() != ProfileItem.STATUS.ONLINE) {
-                    AlertDialog.Builder builder = new AlertDialog.Builder(SelectProfileActivity.this);
-                    builder.setMessage(R.string.serverOffline)
-                            .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
-                                @Override
-                                public void onClick(DialogInterface dialogInterface, int i) {
-                                    SingleModeProfileItem profile = item.isSingleMode() ? ((SingleModeProfileItem) item) : ((MultiModeProfileItem) item).getCurrentProfile(SelectProfileActivity.this);
-                                    Intent intent = new Intent(SelectProfileActivity.this, MainActivity.class);
-                                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK)
-                                            .putExtra("profile", profile);
-                                    startActivity(intent);
-                                }
-                            })
-                            .setNegativeButton(android.R.string.no, new DialogInterface.OnClickListener() {
-                                @Override
-                                public void onClick(DialogInterface dialogInterface, int i) {
-                                }
-                            }).create().show();
-                } else {
-                    SingleModeProfileItem profile = item.isSingleMode() ? ((SingleModeProfileItem) item) : ((MultiModeProfileItem) item).getCurrentProfile(SelectProfileActivity.this);
-                    Intent intent = new Intent(SelectProfileActivity.this, MainActivity.class);
-                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK)
-                            .putExtra("profile", profile);
-                    startActivity(intent);
-                }
-            }
-        },
-                new ProfilesCustomAdapter.OnItemEdit() {
-                    @Override
-                    public void onEdit(ProfileItem item) {
-                        startActivity(new Intent(SelectProfileActivity.this, AddProfileActivity.class)
-                                .putExtra("edit", true)
-                                .putExtra("isSingleMode", item.isSingleMode())
-                                .putExtra("name", item.getGlobalProfileName()));
-                    }
-                }));
-
-
-        if (getIntent().getBooleanExtra("external", false)) {
-            if (ProfileItem.exists(this, "Local device")) {
-                startExternal(getIntent());
-            } else {
-                new AlertDialog.Builder(this).
-                        setTitle(R.string.saveProfile)
-                        .setMessage(R.string.saveProfile_message)
-                        .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                                try {
-                                    FileOutputStream fOut = openFileOutput("Local device.profile", Context.MODE_PRIVATE);
-                                    OutputStreamWriter osw = new OutputStreamWriter(fOut);
-
-                                    osw.write(new SingleModeProfileItem("Local device",
-                                            "localhost",
-                                            getIntent().getIntExtra("port", 6800),
-                                            "/jsonrpc",
-                                            JTA2.AUTH_METHOD.TOKEN,
-                                            false,
-                                            getIntent().getStringExtra("token"),
-                                            false,
-                                            null).toJSON().toString());
-                                    osw.flush();
-                                    osw.close();
-                                } catch (IOException | JSONException ex) {
-                                    Utils.UIToast(SelectProfileActivity.this, Utils.TOAST_MESSAGES.FATAL_EXCEPTION, ex);
-                                    ex.printStackTrace();
-                                }
-
-                                startExternal(getIntent());
-                            }
-                        })
-                        .setNegativeButton(android.R.string.no, new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                                startExternal(getIntent());
-                            }
-                        }).create().show();
-            }
-        }
-    }
-
-    private void startExternal(Intent intent) {
-        startActivity(new Intent(this, MainActivity.class)
-                .setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK)
-                .putExtra("profile", new SingleModeProfileItem("Local device",
-                        "localhost",
-                        intent.getIntExtra("port", 6800),
-                        "/jsonrpc",
-                        JTA2.AUTH_METHOD.TOKEN,
-                        false,
-                        intent.getStringExtra("token"),
-                        false,
-                        null).setGlobalProfileName("Local device")));
-    }
-}
