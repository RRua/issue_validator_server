diff --git a/app/src/main/java/com/dkanada/chip/activities/MainActivity.java b/app/src/main/java/com/dkanada/chip/activities/MainActivity.java
index fd41181..3c00a47 100644
--- a/app/src/main/java/com/dkanada/chip/activities/MainActivity.java
+++ b/app/src/main/java/com/dkanada/chip/activities/MainActivity.java
@@ -6,40 +6,41 @@ import android.os.Bundle;
 import android.support.v7.widget.Toolbar;
 import android.view.Menu;
 import android.view.MenuItem;
-import android.view.ViewGroup;
 import android.view.WindowManager;
 import android.widget.LinearLayout;
 
 import com.dkanada.chip.R;
-import com.dkanada.chip.async.GameThread;
+import com.dkanada.chip.core.Core;
 import com.dkanada.chip.utils.AppPreferences;
 import com.dkanada.chip.utils.Utils;
 import com.dkanada.chip.views.ControllerView;
-import com.dkanada.chip.views.GameView;
+import com.dkanada.chip.views.DisplayView;
 
 import ru.bartwell.exfilepicker.ExFilePicker;
 import ru.bartwell.exfilepicker.data.ExFilePickerResult;
 
 public class MainActivity extends ThemeActivity {
-    private AppPreferences appPreferences;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
-        appPreferences = AppPreferences.get(this);
         setInitialConfiguration();
-
         Utils.checkPermissions(this);
-        GameView gameView = findViewById(R.id.display);
 
-        GameThread gameThread = new GameThread(gameView);
-        gameThread.start();
+        // output
+        DisplayView displayView = new DisplayView(this);
+
+        Core core = new Core(displayView);
+        core.start();
+
+        // input
+        ControllerView controllerView = new ControllerView(this, core);
 
-        LinearLayout linearLayout = new ControllerView(this);
         LinearLayout main = findViewById(R.id.main);
-        main.addView(linearLayout, new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
+        main.addView(displayView);
+        main.addView(controllerView);
     }
 
     private void setInitialConfiguration() {
@@ -50,8 +51,8 @@ public class MainActivity extends ThemeActivity {
         setSupportActionBar(toolbar);
 
         getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
-        getWindow().setStatusBarColor(Utils.dark(appPreferences.getPrimaryColor(), 0.8));
-        getWindow().setNavigationBarColor(appPreferences.getPrimaryColor());
+        getWindow().setStatusBarColor(Utils.dark(AppPreferences.get(this).getPrimaryColor(), 0.8));
+        getWindow().setNavigationBarColor(AppPreferences.get(this).getPrimaryColor());
     }
 
     @Override
diff --git a/app/src/main/java/com/dkanada/chip/activities/SettingsActivity.java b/app/src/main/java/com/dkanada/chip/activities/SettingsActivity.java
index 67eb745..dc031c5 100644
--- a/app/src/main/java/com/dkanada/chip/activities/SettingsActivity.java
+++ b/app/src/main/java/com/dkanada/chip/activities/SettingsActivity.java
@@ -15,11 +15,8 @@ import com.dkanada.chip.utils.AppPreferences;
 import com.dkanada.chip.utils.Utils;
 
 public class SettingsActivity extends ThemeActivity {
-    private AppPreferences appPreferences;
-
     @Override
     public void onCreate(Bundle savedInstanceState) {
-        appPreferences = AppPreferences.get(this);
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_settings);
 
@@ -47,7 +44,7 @@ public class SettingsActivity extends ThemeActivity {
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
         getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
-        getWindow().setStatusBarColor(Utils.dark(appPreferences.getPrimaryColor(), 0.8));
-        getWindow().setNavigationBarColor(appPreferences.getPrimaryColor());
+        getWindow().setStatusBarColor(Utils.dark(AppPreferences.get(this).getPrimaryColor(), 0.8));
+        getWindow().setNavigationBarColor(AppPreferences.get(this).getPrimaryColor());
     }
 }
diff --git a/app/src/main/java/com/dkanada/chip/async/GameThread.java b/app/src/main/java/com/dkanada/chip/async/GameThread.java
deleted file mode 100644
index 737e8d2..0000000
--- a/app/src/main/java/com/dkanada/chip/async/GameThread.java
+++ /dev/null
@@ -1,35 +0,0 @@
-package com.dkanada.chip.async;
-
-import android.util.Log;
-
-import com.dkanada.chip.core.Core;
-import com.dkanada.chip.interfaces.EventListener;
-import com.dkanada.chip.views.GameView;
-
-public class GameThread extends Thread implements EventListener {
-    GameView gameView;
-
-    public GameThread(GameView view) {
-        gameView = view;
-    }
-
-    @Override
-    public void run() {
-        Log.e("GameThread: ", "START THREAD");
-        Core core = new Core(this);
-        while (true) {
-            core.step();
-            try {
-                sleep(1);
-            } catch (Exception e) {
-                // nothing
-            }
-        }
-    }
-
-    @Override
-    public void updateDisplay(byte[][] array) {
-        gameView.setDisplay(array);
-        gameView.postInvalidate();
-    }
-}
diff --git a/app/src/main/java/com/dkanada/chip/core/CPU.java b/app/src/main/java/com/dkanada/chip/core/CPU.java
index 1019822..7494507 100644
--- a/app/src/main/java/com/dkanada/chip/core/CPU.java
+++ b/app/src/main/java/com/dkanada/chip/core/CPU.java
@@ -4,13 +4,13 @@ import java.util.Random;
 import java.util.Timer;
 import java.util.TimerTask;
 
-import com.dkanada.chip.interfaces.EventListener;
+import com.dkanada.chip.interfaces.DisplayListener;
 
 public class CPU {
     private Memory memory;
     private Display display;
     private Keypad keypad;
-    private EventListener event;
+    private DisplayListener event;
 
     private char[] v;
 
@@ -21,11 +21,11 @@ public class CPU {
     private char delay;
     private char sound;
 
-    public CPU(Memory memoryCore, Display displayCore, Keypad keypadCore, EventListener eventListener) {
+    public CPU(Memory memoryCore, Display displayCore, Keypad keypadCore, DisplayListener displayListener) {
         memory = memoryCore;
         display = displayCore;
         keypad = keypadCore;
-        event = eventListener;
+        event = displayListener;
 
         v = new char[16];
 
diff --git a/app/src/main/java/com/dkanada/chip/core/Core.java b/app/src/main/java/com/dkanada/chip/core/Core.java
index 71adbe6..595e3b6 100644
--- a/app/src/main/java/com/dkanada/chip/core/Core.java
+++ b/app/src/main/java/com/dkanada/chip/core/Core.java
@@ -3,35 +3,50 @@ package com.dkanada.chip.core;
 import android.os.Environment;
 import android.util.Log;
 
-import com.dkanada.chip.interfaces.EventListener;
+import com.dkanada.chip.interfaces.DisplayListener;
+import com.dkanada.chip.interfaces.KeypadListener;
+import com.dkanada.chip.views.DisplayView;
 
 import java.io.DataInputStream;
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 
-public class Core {
+public class Core extends Thread implements DisplayListener, KeypadListener {
     private Memory memoryCore;
     private Display displayCore;
     private Keypad keypadCore;
-
     private CPU cpuCore;
 
-    public Core(EventListener eventListener) {
+    private DisplayView displayView;
+
+    public boolean flagLoad;
+    public boolean flagStart;
+
+    public Core(DisplayView displayView) {
         memoryCore = new Memory();
         displayCore = new Display();
         keypadCore = new Keypad();
+        cpuCore = new CPU(memoryCore, displayCore, keypadCore, this);
 
-        cpuCore = new CPU(memoryCore, displayCore, keypadCore, eventListener);
+        this.displayView = displayView;
 
         loadFont();
-        loadProgram(Environment.getExternalStorageDirectory().toString() + "/Download/c8games/BRIX");
+        loadProgram(Environment.getExternalStorageDirectory().toString() + "/Chip8/c8games/BRIX");
     }
 
     public void step() {
         cpuCore.cycle();
     }
 
+    public void load(String file) {
+        loadFont();
+        loadProgram(file);
+
+        flagLoad = true;
+        flagStart = true;
+    }
+
     public void loadFont() {
         char[] font = {
                 0xF0, 0x90, 0x90, 0x90, 0xF0,
@@ -77,5 +92,39 @@ public class Core {
         } catch (IOException e) {
             Log.e("core.loadFile: ", "error reading file data");
         }
+
+        // TODO remove
+        flagLoad = true;
+        flagStart = true;
+    }
+
+    @Override
+    public void run() {
+        while (true) {
+            if (flagLoad && flagStart) {
+                step();
+            }
+            try {
+                sleep(4);
+            } catch (Exception e) {
+                // nothing
+            }
+        }
+    }
+
+    @Override
+    public void updateDisplay(byte[][] array) {
+        displayView.setDisplay(array);
+        displayView.postInvalidate();
+    }
+
+    @Override
+    public void keyDown(char key) {
+        keypadCore.setKey(key, 1);
+    }
+
+    @Override
+    public void keyUp(char key) {
+        keypadCore.setKey(key, 0);
     }
 }
diff --git a/app/src/main/java/com/dkanada/chip/core/Keypad.java b/app/src/main/java/com/dkanada/chip/core/Keypad.java
index a1ff968..054df6f 100644
--- a/app/src/main/java/com/dkanada/chip/core/Keypad.java
+++ b/app/src/main/java/com/dkanada/chip/core/Keypad.java
@@ -1,17 +1,17 @@
 package com.dkanada.chip.core;
 
 public class Keypad {
-    private char[] keypad;
+    private int[] keypad;
 
     public Keypad() {
-        keypad = new char[16];
+        keypad = new int[16];
     }
 
     public char getKey(char index) {
-        return keypad[index];
+        return (char) keypad[index];
     }
 
-    public void setKey(char index, char value) {
+    public void setKey(char index, int value) {
         keypad[index] = value;
     }
 }
diff --git a/app/src/main/java/com/dkanada/chip/interfaces/EventListener.java b/app/src/main/java/com/dkanada/chip/interfaces/DisplayListener.java
similarity index 69%
rename from app/src/main/java/com/dkanada/chip/interfaces/EventListener.java
rename to app/src/main/java/com/dkanada/chip/interfaces/DisplayListener.java
index d5005f9..2531652 100644
--- a/app/src/main/java/com/dkanada/chip/interfaces/EventListener.java
+++ b/app/src/main/java/com/dkanada/chip/interfaces/DisplayListener.java
@@ -1,5 +1,5 @@
 package com.dkanada.chip.interfaces;
 
-public interface EventListener {
+public interface DisplayListener {
     void updateDisplay(byte[][] array);
 }
diff --git a/app/src/main/java/com/dkanada/chip/interfaces/KeypadListener.java b/app/src/main/java/com/dkanada/chip/interfaces/KeypadListener.java
new file mode 100644
index 0000000..d832122
--- /dev/null
+++ b/app/src/main/java/com/dkanada/chip/interfaces/KeypadListener.java
@@ -0,0 +1,6 @@
+package com.dkanada.chip.interfaces;
+
+public interface KeypadListener {
+    void keyDown(char key);
+    void keyUp(char key);
+}
diff --git a/app/src/main/java/com/dkanada/chip/views/ControllerView.java b/app/src/main/java/com/dkanada/chip/views/ControllerView.java
index 14ac756..11753d8 100644
--- a/app/src/main/java/com/dkanada/chip/views/ControllerView.java
+++ b/app/src/main/java/com/dkanada/chip/views/ControllerView.java
@@ -4,11 +4,17 @@ import android.content.Context;
 import android.graphics.Canvas;
 import android.support.constraint.ConstraintLayout;
 import android.support.constraint.ConstraintSet;
+import android.util.Log;
+import android.view.KeyEvent;
+import android.view.MotionEvent;
+import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.LinearLayout;
 
 import com.dkanada.chip.R;
+import com.dkanada.chip.core.Core;
+import com.dkanada.chip.interfaces.KeypadListener;
 
 public class ControllerView extends LinearLayout {
     Button top;
@@ -16,16 +22,49 @@ public class ControllerView extends LinearLayout {
     Button left;
     Button right;
 
-    public ControllerView(Context context) {
+    public ControllerView(Context context, final KeypadListener keypadListener) {
         super(context);
 
         this.setOrientation(VERTICAL);
 
         top = new Button(context);
+        top.setOnTouchListener(new OnTouchListener() {
+            @Override
+            public boolean onTouch(View v, MotionEvent event) {
+                if (event.getAction() == KeyEvent.ACTION_DOWN) {
+                    keypadListener.keyDown((char) 0x2);
+                } else {
+                    keypadListener.keyUp((char) 0x2);
+                }
+                return true;
+            }
+        });
         this.addView(top);
 
         left = new Button(context);
+        left.setOnTouchListener(new OnTouchListener() {
+            @Override
+            public boolean onTouch(View v, MotionEvent event) {
+                if (event.getAction() == KeyEvent.ACTION_DOWN) {
+                    keypadListener.keyDown((char) 0x4);
+                } else {
+                    keypadListener.keyUp((char) 0x4);
+                }
+                return false;
+            }
+        });
         right = new Button(context);
+        right.setOnTouchListener(new OnTouchListener() {
+            @Override
+            public boolean onTouch(View v, MotionEvent event) {
+                if (event.getAction() == KeyEvent.ACTION_DOWN) {
+                    keypadListener.keyDown((char) 0x6);
+                } else {
+                    keypadListener.keyUp((char) 0x6);
+                }
+                return false;
+            }
+        });
 
         LinearLayout side = new LinearLayout(context);
         side.addView(left);
@@ -33,7 +72,17 @@ public class ControllerView extends LinearLayout {
         this.addView(side);
 
         bottom = new Button(context);
-        top.setPadding(4, 0, 4, 4);
+        bottom.setOnTouchListener(new OnTouchListener() {
+            @Override
+            public boolean onTouch(View v, MotionEvent event) {
+                if (event.getAction() == KeyEvent.ACTION_DOWN) {
+                    keypadListener.keyDown((char) 0x8);
+                } else {
+                    keypadListener.keyUp((char) 0x8);
+                }
+                return false;
+            }
+        });
         this.addView(bottom);
     }
 
@@ -43,7 +92,6 @@ public class ControllerView extends LinearLayout {
         int width = MeasureSpec.getSize(widthMeasureSpec) / 2;
 
         top.setHeight(height);
-        top.setPadding(4, 4, 40, 0);
         bottom.setHeight(height);
 
         left.setHeight(height);
diff --git a/app/src/main/java/com/dkanada/chip/views/GameView.java b/app/src/main/java/com/dkanada/chip/views/DisplayView.java
similarity index 94%
rename from app/src/main/java/com/dkanada/chip/views/GameView.java
rename to app/src/main/java/com/dkanada/chip/views/DisplayView.java
index 9c7914d..6831170 100644
--- a/app/src/main/java/com/dkanada/chip/views/GameView.java
+++ b/app/src/main/java/com/dkanada/chip/views/DisplayView.java
@@ -7,14 +7,15 @@ import android.graphics.Paint;
 import android.util.AttributeSet;
 import android.view.SurfaceView;
 
-public class GameView extends SurfaceView {
+import com.dkanada.chip.interfaces.DisplayListener;
+
+public class DisplayView extends SurfaceView {
     private Paint background;
     private Paint foreground;
     private byte[][] display;
 
-
-    public GameView(Context context, AttributeSet attributeSet) {
-        super(context, attributeSet);
+    public DisplayView(Context context) {
+        super(context);
         setFocusable(true);
         setWillNotDraw(false);
 
