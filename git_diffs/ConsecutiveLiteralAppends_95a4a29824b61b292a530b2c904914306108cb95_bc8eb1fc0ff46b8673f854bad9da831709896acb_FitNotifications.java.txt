diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppChoicesActivity.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppChoicesActivity.java
index f460fca..be05d39 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppChoicesActivity.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppChoicesActivity.java
@@ -22,6 +22,10 @@ import android.widget.ImageView;
 import android.widget.TextView;
 
 import com.abhijitvalluri.android.fitnotifications.models.AppSelection;
+import com.abhijitvalluri.android.fitnotifications.services.NLService;
+import com.abhijitvalluri.android.fitnotifications.utils.AppSelectionsStore;
+import com.abhijitvalluri.android.fitnotifications.utils.Constants;
+import com.abhijitvalluri.android.fitnotifications.utils.Func;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -137,7 +141,7 @@ public class AppChoicesActivity extends AppCompatActivity {
     @Override
     public void onStop() {
         super.onStop();
-        NotificationListener.onAppSelectionsUpdated(this);
+        NLService.onAppSelectionsUpdated(this);
     }
 
     @Override
@@ -147,11 +151,8 @@ public class AppChoicesActivity extends AppCompatActivity {
     }
 
     private Void appListTask() {
-        Intent startupIntent = new Intent(Intent.ACTION_MAIN);
-        startupIntent.addCategory(Intent.CATEGORY_LAUNCHER);
-
-        List<ResolveInfo> activities = mPackageManager.queryIntentActivities(startupIntent, 0);
-        Collections.sort(activities, new Comparator<ResolveInfo>() {
+        List<ResolveInfo> packages = Func.getInstalledPackages(mPackageManager);
+        Collections.sort(packages, new Comparator<ResolveInfo>() {
             @Override
             public int compare(ResolveInfo lhs, ResolveInfo rhs) {
                 return String.CASE_INSENSITIVE_ORDER.compare(
@@ -163,7 +164,7 @@ public class AppChoicesActivity extends AppCompatActivity {
         // getAppSelectionsSubList is also needed for the subsequent calls to contains()
         List<AppSelection> appSelections = mAppSelectionsStore.getAppSelections();
 
-        for (ResolveInfo info : activities) {
+        for (ResolveInfo info : packages) {
             String appPackageName = info.activityInfo.packageName;
             String appName = info.loadLabel(mPackageManager).toString();
 
@@ -174,7 +175,7 @@ public class AppChoicesActivity extends AppCompatActivity {
 
         // Remove uninstalled apps from the database.
         for (AppSelection appSelection : appSelections) {
-            if (isUninstalled(appSelection.getAppPackageName(), activities)) {
+            if (isUninstalled(appSelection.getAppPackageName(), packages)) {
                 mAppSelectionsStore.deleteAppSelection(appSelection);
             }
         }
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppCompatPreferenceActivity.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppCompatPreferenceActivity.java
deleted file mode 100644
index 0018170..0000000
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppCompatPreferenceActivity.java
+++ /dev/null
@@ -1,109 +0,0 @@
-package com.abhijitvalluri.android.fitnotifications;
-
-import android.content.res.Configuration;
-import android.os.Bundle;
-import android.preference.PreferenceActivity;
-import android.support.annotation.LayoutRes;
-import android.support.annotation.Nullable;
-import android.support.v7.app.ActionBar;
-import android.support.v7.app.AppCompatDelegate;
-import android.support.v7.widget.Toolbar;
-import android.view.MenuInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-/**
- * A {@link android.preference.PreferenceActivity} which implements and proxies the necessary calls
- * to be used with AppCompat.
- */
-public abstract class AppCompatPreferenceActivity extends PreferenceActivity {
-
-    private AppCompatDelegate mDelegate;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        getDelegate().installViewFactory();
-        getDelegate().onCreate(savedInstanceState);
-        super.onCreate(savedInstanceState);
-    }
-
-    @Override
-    protected void onPostCreate(Bundle savedInstanceState) {
-        super.onPostCreate(savedInstanceState);
-        getDelegate().onPostCreate(savedInstanceState);
-    }
-
-    public ActionBar getSupportActionBar() {
-        return getDelegate().getSupportActionBar();
-    }
-
-    public void setSupportActionBar(@Nullable Toolbar toolbar) {
-        getDelegate().setSupportActionBar(toolbar);
-    }
-
-    @Override
-    public MenuInflater getMenuInflater() {
-        return getDelegate().getMenuInflater();
-    }
-
-    @Override
-    public void setContentView(@LayoutRes int layoutResID) {
-        getDelegate().setContentView(layoutResID);
-    }
-
-    @Override
-    public void setContentView(View view) {
-        getDelegate().setContentView(view);
-    }
-
-    @Override
-    public void setContentView(View view, ViewGroup.LayoutParams params) {
-        getDelegate().setContentView(view, params);
-    }
-
-    @Override
-    public void addContentView(View view, ViewGroup.LayoutParams params) {
-        getDelegate().addContentView(view, params);
-    }
-
-    @Override
-    protected void onPostResume() {
-        super.onPostResume();
-        getDelegate().onPostResume();
-    }
-
-    @Override
-    protected void onTitleChanged(CharSequence title, int color) {
-        super.onTitleChanged(title, color);
-        getDelegate().setTitle(title);
-    }
-
-    @Override
-    public void onConfigurationChanged(Configuration newConfig) {
-        super.onConfigurationChanged(newConfig);
-        getDelegate().onConfigurationChanged(newConfig);
-    }
-
-    @Override
-    protected void onStop() {
-        super.onStop();
-        getDelegate().onStop();
-    }
-
-    @Override
-    protected void onDestroy() {
-        super.onDestroy();
-        getDelegate().onDestroy();
-    }
-
-    public void invalidateOptionsMenu() {
-        getDelegate().invalidateOptionsMenu();
-    }
-
-    private AppCompatDelegate getDelegate() {
-        if (mDelegate == null) {
-            mDelegate = AppCompatDelegate.create(this, null);
-        }
-        return mDelegate;
-    }
-}
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppIntroActivity.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppIntroActivity.java
new file mode 100644
index 0000000..f067ed5
--- /dev/null
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppIntroActivity.java
@@ -0,0 +1,414 @@
+package com.abhijitvalluri.android.fitnotifications;
+
+import android.app.ActivityOptions;
+import android.app.NotificationManager;
+import android.content.ActivityNotFoundException;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.content.pm.PackageManager;
+import android.net.Uri;
+import android.os.Build;
+import android.os.Bundle;
+import android.os.Handler;
+import android.preference.PreferenceManager;
+import android.provider.Settings;
+import android.support.v4.app.NotificationManagerCompat;
+import android.support.v7.app.AlertDialog;
+import android.support.v7.app.NotificationCompat;
+import android.view.View;
+import android.widget.RemoteViews;
+import android.widget.Toast;
+
+import com.abhijitvalluri.android.fitnotifications.services.NLService;
+import com.abhijitvalluri.android.fitnotifications.utils.Constants;
+import com.abhijitvalluri.android.fitnotifications.utils.Func;
+import com.heinrichreimersoftware.materialintro.app.IntroActivity;
+import com.heinrichreimersoftware.materialintro.slide.SimpleSlide;
+
+import java.util.Date;
+import java.util.List;
+import java.util.Set;
+
+/**
+ * Intro activity to display a helpful setup tutorial
+ */
+public class AppIntroActivity extends IntroActivity {
+
+    private final Integer NOTIFICATION_ID = (int)((new Date().getTime() / 1000L) % Integer.MAX_VALUE);
+    private static final int ENABLE_NOTIFICATION_ACCESS_INTENT = 1;
+    private static final int INSTALL_FITBIT_INTENT = 2;
+    private static final int LAUNCH_FITBIT_INTENT = 3;
+    private static final int APP_CHOICES_INTENT = 4;
+
+    private Bundle LAUNCH_ACTIVITY_ANIM_BUNDLE;
+
+    private SimpleSlide mEnableNotificationSlide;
+    private SimpleSlide mFitbitInstallSlide;
+    private SimpleSlide mLaunchFitbitSlide;
+    private SimpleSlide mAppChoicesSlide;
+    private PackageManager mPackageManager;
+
+    public static Intent newIntent(Context packageContext) {
+        return new Intent(packageContext, AppIntroActivity.class);
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState){
+        super.onCreate(savedInstanceState);
+
+        LAUNCH_ACTIVITY_ANIM_BUNDLE = ActivityOptions.
+                makeCustomAnimation(AppIntroActivity.this,
+                        R.transition.left_in,
+                        R.transition.left_out).toBundle();
+        mPackageManager = getPackageManager();
+
+        // Introduction slide
+        addSlide(new SimpleSlide.Builder()
+                .layout(R.layout.fragment_intro)
+                .title(R.string.intro_welcome_title)
+                .description(R.string.intro_welcome_desc)
+                .image(R.drawable.intro_welcome)
+                .background(R.color.colorPrimary)
+                .backgroundDark(R.color.colorPrimaryDark)
+                .canGoBackward(true)
+                .buttonCtaLabel(R.string.intro_get_started_button)
+                .buttonCtaClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        nextSlide();
+                    }
+                })
+                .build());
+
+        // Fitbit install slide
+        List<String> packageNames = Func.getInstalledPackageNames(mPackageManager);
+        if (!packageNames.contains(Constants.FITBIT_PACKAGE_NAME)) { // Fitbit app is not installed
+            mFitbitInstallSlide = createFitbitSlide(false);
+            addSlide(mFitbitInstallSlide);
+        }
+
+        // Enable notifications slide
+        Set<String> EnabledListenerPackagesSet = NotificationManagerCompat.
+                getEnabledListenerPackages(this);
+        if (EnabledListenerPackagesSet.contains(Constants.PACKAGE_NAME)
+                && EnabledListenerPackagesSet.contains(Constants.FITBIT_PACKAGE_NAME)) {
+            mEnableNotificationSlide = new SimpleSlide.Builder()
+                    .layout(R.layout.fragment_intro)
+                    .title(R.string.intro_enable_access_success_title)
+                    .description(R.string.intro_enable_access_success_desc)
+                    .image(R.drawable.intro_enable_notifications)
+                    .background(R.color.purple_intro)
+                    .backgroundDark(R.color.purpleDark_intro)
+                    .canGoForward(true)
+                    .build();
+        } else {
+            mEnableNotificationSlide = new SimpleSlide.Builder()
+                    .layout(R.layout.fragment_intro)
+                    .title(R.string.intro_enable_access_title)
+                    .description(R.string.intro_enable_access_desc)
+                    .image(R.drawable.intro_enable_notifications)
+                    .background(R.color.purple_intro)
+                    .backgroundDark(R.color.purpleDark_intro)
+                    .canGoForward(false)
+                    .buttonCtaLabel(R.string.enable_notification_access)
+                    .buttonCtaClickListener(new View.OnClickListener() {
+                        @Override
+                        public void onClick(View v) {
+                            startActivityForResult(
+                               new Intent("android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS"),
+                               ENABLE_NOTIFICATION_ACCESS_INTENT);
+                        }
+                    })
+                    .build();
+        }
+
+        addSlide(mEnableNotificationSlide);
+
+        // Fitbit setup - 3 steps (3 slides)
+        addSlide(new SimpleSlide.Builder()
+                .layout(R.layout.fragment_intro)
+                .title(R.string.intro_setup_fitbit_title1)
+                .description(R.string.intro_setup_fitbit_desc1)
+                .image(R.drawable.step_one)
+                .background(R.color.fitbitColor_intro)
+                .backgroundDark(R.color.fitbitColorDark_intro)
+                .buttonCtaLabel(R.string.intro_setup_fitbit_toast_button)
+                .buttonCtaClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        Toast.makeText(
+                              AppIntroActivity.this,
+                              getString(R.string.intro_setup_fitbit_toast_text1), Toast.LENGTH_LONG)
+                             .show();
+                    }
+                })
+                .build());
+
+        addSlide(new SimpleSlide.Builder()
+                .layout(R.layout.fragment_intro)
+                .title(R.string.intro_setup_fitbit_title2)
+                .description(R.string.intro_setup_fitbit_desc2)
+                .image(R.drawable.step_two)
+                .background(R.color.fitbitColor_intro)
+                .backgroundDark(R.color.fitbitColorDark_intro)
+                .build());
+
+        // Launch Fitbit slide
+        mLaunchFitbitSlide = createLaunchFitbitSlide(false);
+        addSlide(mLaunchFitbitSlide);
+
+        // App Choices slide
+        mAppChoicesSlide = createAppChoicesSlide(false);
+        addSlide(mAppChoicesSlide);
+
+        // Start service
+        SimpleSlide startServiceSlide = new SimpleSlide.Builder()
+                .layout(R.layout.fragment_intro)
+                .title(R.string.intro_start_service_title)
+                .description(R.string.intro_start_service_desc)
+                .image(R.drawable.intro_check)
+                .background(R.color.colorAccent)
+                .backgroundDark(R.color.colorAccentDark)
+                .canGoForward(true)
+                .buttonCtaLabel(R.string.start_service)
+                .buttonCtaClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        startService(new Intent(AppIntroActivity.this, NLService.class));
+                        setNLSEnabled(true);
+                        nextSlide();
+                    }
+                })
+                .build();
+        addSlide(startServiceSlide);
+
+        // Do not disturb mode announcement slide
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+            addSlide(new SimpleSlide.Builder()
+                    .layout(R.layout.fragment_intro)
+                    .title(R.string.intro_dnd_mode_title)
+                    .description(R.string.intro_dnd_mode_desc)
+                    .image(R.drawable.intro_dnd_mode_info)
+                    .background(R.color.black)
+                    .backgroundDark(R.color.grey)
+                    .buttonCtaLabel(R.string.intro_dnd_mode_button)
+                    .buttonCtaClickListener(new View.OnClickListener() {
+                        @Override
+                        public void onClick(View v) {
+                            new AlertDialog.Builder(AppIntroActivity.this)
+                                    .setMessage(getString(R.string.intro_dnd_mode_message))
+                                    .setTitle(getString(R.string.intro_dnd_mode_button))
+                                    .setPositiveButton("Configure", new DialogInterface.OnClickListener() {
+                                        @Override
+                                        public void onClick(DialogInterface dialog, int which) {
+                                            Intent intent = new Intent();
+                                            intent.setAction(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
+                                            Uri uri = Uri.fromParts("package", Constants.PACKAGE_NAME, null);
+                                            intent.setData(uri);
+                                            startActivity(intent);
+                                        }
+                                    })
+                                    .setNegativeButton("CANCEL", null)
+                                    .create()
+                                    .show();
+                        }
+                    })
+                    .build());
+        }
+
+        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
+        final boolean dismissPlaceholderNotif = preferences.getBoolean(
+                getString(R.string.dismiss_placeholder_notif_key), false);
+        final int placeholderNotifDismissDelayMillis = preferences.getInt(
+                getString(R.string.placeholder_dismiss_delay_key), Constants.DEFAULT_DELAY_SECONDS)
+                *1000;
+        final Handler handler = new Handler();
+
+        // Demo
+        addSlide(new SimpleSlide.Builder()
+                .layout(R.layout.fragment_intro)
+                .title(R.string.intro_done_title)
+                .description(R.string.intro_done_desc)
+                .image(R.drawable.intro_done)
+                .background(R.color.colorAccent)
+                .backgroundDark(R.color.colorAccentDark)
+                .buttonCtaLabel(R.string.test_notification)
+                .buttonCtaClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        Bundle newExtra = new Bundle();
+
+                        NotificationCompat.Builder builder = new NotificationCompat.Builder(AppIntroActivity.this);
+                        String notificationText = "Sample notification subject";
+                        String notificationBigText = "Sample notification body. This is where the details of the notification will be shown.";
+
+
+                        StringBuilder sb = new StringBuilder();
+                        sb.append("[").append("example").append("] ");
+                        sb.append(notificationText);
+                        if (notificationBigText.length() > 0) {
+                            sb.append(" -- ").append(notificationBigText);
+                        }
+
+                        RemoteViews contentView = new RemoteViews(getPackageName(), R.layout.custom_notification);
+                        contentView.setTextViewText(R.id.customNotificationText, getString(R.string.test_notification_text));
+                        builder.setSmallIcon(R.mipmap.ic_launcher)
+                                .setContentText(sb.toString())
+                                .setExtras(newExtra)
+                                .setContentTitle("Sample Notification Title")
+                                .setContent(contentView);
+
+                        ((NotificationManager) getSystemService(NOTIFICATION_SERVICE))
+                                .notify(NOTIFICATION_ID, builder.build());
+
+                        Toast.makeText(AppIntroActivity.this, getString(R.string.test_notification_sent), Toast.LENGTH_LONG)
+                                .show();
+
+                        if (dismissPlaceholderNotif) {
+                            handler.postDelayed(new Runnable() {
+                                @Override
+                                public void run() {
+                                    ((NotificationManager) getSystemService(NOTIFICATION_SERVICE))
+                                            .cancel(NOTIFICATION_ID);
+                                }
+                            }, placeholderNotifDismissDelayMillis);
+                        }
+                    }
+                })
+                .build());
+
+        setButtonBackVisible(true);
+        setButtonBackFunction(BUTTON_BACK_FUNCTION_BACK);
+        setButtonNextVisible(true);
+        setButtonNextFunction(BUTTON_NEXT_FUNCTION_NEXT_FINISH);
+
+        /**
+         * Custom fragment slide
+         */
+       /* addSlide(new FragmentSlide.Builder()
+                .background(R.color.background_2)
+                .backgroundDark(R.color.background_dark_2)
+                .fragment(R.layout.fragment_2, R.style.FragmentTheme)
+                .build());*/
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        int slideIndex;
+        switch(requestCode) {
+            case ENABLE_NOTIFICATION_ACCESS_INTENT:
+                Set<String> EnabledListenerPackagesSet = NotificationManagerCompat.
+                        getEnabledListenerPackages(this);
+                if (EnabledListenerPackagesSet.contains(Constants.PACKAGE_NAME)
+                        && EnabledListenerPackagesSet.contains(Constants.FITBIT_PACKAGE_NAME)) {
+                    slideIndex = indexOfSlide(mEnableNotificationSlide);
+                    mEnableNotificationSlide = new SimpleSlide.Builder()
+                            .layout(R.layout.fragment_intro)
+                            .title(R.string.intro_enable_access_update_title)
+                            .description(R.string.intro_enable_access_update_desc)
+                            .image(R.drawable.intro_enable_notifications)
+                            .background(R.color.purple_intro)
+                            .backgroundDark(R.color.purpleDark_intro)
+                            .canGoForward(true)
+                            .canGoBackward(false)
+                            .build();
+                    setSlide(slideIndex, mEnableNotificationSlide);
+                    nextSlide();
+                }
+                return;
+            case INSTALL_FITBIT_INTENT:
+                slideIndex = indexOfSlide(mFitbitInstallSlide);
+                mFitbitInstallSlide = createFitbitSlide(true);
+                setSlide(slideIndex, mFitbitInstallSlide);
+                return;
+            case LAUNCH_FITBIT_INTENT:
+                slideIndex = indexOfSlide(mLaunchFitbitSlide);
+                mLaunchFitbitSlide = createLaunchFitbitSlide(true);
+                setSlide(slideIndex, mLaunchFitbitSlide);
+                return;
+            case APP_CHOICES_INTENT:
+                slideIndex = indexOfSlide(mAppChoicesSlide);
+                mAppChoicesSlide = createAppChoicesSlide(true);
+                setSlide(slideIndex, mAppChoicesSlide);
+                return;
+            default:
+        }
+    }
+
+    private SimpleSlide createAppChoicesSlide(boolean canGoFwd) {
+        return new SimpleSlide.Builder()
+                .layout(R.layout.fragment_intro)
+                .title(R.string.app_choices)
+                .description(R.string.intro_select_apps_desc)
+                .image(R.drawable.view_list)
+                .background(R.color.colorPrimary)
+                .backgroundDark(R.color.colorPrimaryDark)
+                .canGoForward(canGoFwd)
+                .buttonCtaLabel(R.string.app_choices_activity_title)
+                .buttonCtaClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        startActivityForResult(AppChoicesActivity.newIntent(AppIntroActivity.this),
+                                APP_CHOICES_INTENT, LAUNCH_ACTIVITY_ANIM_BUNDLE);
+                    }
+                })
+                .build();
+    }
+
+    private SimpleSlide createLaunchFitbitSlide(boolean canGoFwd) {
+        return new SimpleSlide.Builder()
+                .layout(R.layout.fragment_intro)
+                .title(R.string.intro_setup_fitbit_title3)
+                .description(R.string.intro_setup_fitbit_desc3)
+                .image(R.drawable.step_three)
+                .background(R.color.fitbitColor_intro)
+                .backgroundDark(R.color.fitbitColorDark_intro)
+                .canGoForward(canGoFwd)
+                .buttonCtaLabel(R.string.intro_setup_fitbit_button3)
+                .buttonCtaClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        try {
+                            Intent i = mPackageManager.
+                                    getLaunchIntentForPackage(Constants.FITBIT_PACKAGE_NAME);
+                            startActivityForResult(i, LAUNCH_FITBIT_INTENT);
+
+                        } catch (ActivityNotFoundException e) {
+                            Toast.makeText(AppIntroActivity.this, getString(R.string.intro_get_fitbit_toast_text3), Toast.LENGTH_LONG).show();
+                        }
+                    }
+                })
+                .build();
+    }
+
+    private SimpleSlide createFitbitSlide(boolean canGoFwd) {
+        return new SimpleSlide.Builder()
+                .layout(R.layout.fragment_intro)
+                .title(R.string.intro_get_fitbit_title)
+                .description(R.string.intro_get_fitbit_desc)
+                .image(R.drawable.get_app)
+                .background(R.color.fitbitColor_intro)
+                .backgroundDark(R.color.fitbitColorDark_intro)
+                .canGoForward(canGoFwd)
+                .buttonCtaLabel(R.string.intro_get_fitbit_button)
+                .buttonCtaClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        try {
+                            startActivityForResult(new Intent(Intent.ACTION_VIEW, Uri.parse("market://details?id=" + Constants.FITBIT_PACKAGE_NAME)), INSTALL_FITBIT_INTENT);
+                        } catch (android.content.ActivityNotFoundException e) {
+                            startActivityForResult(new Intent(Intent.ACTION_VIEW, Uri.parse("https://play.google.com/store/apps/details?id=" + Constants.FITBIT_PACKAGE_NAME)), INSTALL_FITBIT_INTENT);
+                        }
+                    }
+                })
+                .build();
+    }
+
+    private void setNLSEnabled(boolean enabled) {
+        PreferenceManager.getDefaultSharedPreferences(this)
+                .edit().putBoolean(Constants.SERVICE_STATE, enabled).apply();
+        NLService.setEnabled(enabled);
+    }
+}
\ No newline at end of file
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/Constants.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/Constants.java
deleted file mode 100644
index 3d9a070..0000000
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/Constants.java
+++ /dev/null
@@ -1,11 +0,0 @@
-package com.abhijitvalluri.android.fitnotifications;
-
-/**
- * List of all constants used in the app
- */
-public class Constants {
-    public static final String PACKAGE_NAME = "com.abhijitvalluri.android.fitnotifications";
-    public static final String DEMO_NOTIFICATION = "BlazeNotificationsSmartDinosaurs";
-    public static final String SERVICE_STATE = "serviceState";
-    public static final int DEFAULT_DELAY_SECONDS = 5;
-}
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/FitNotifications.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/HomeActivity.java
similarity index 57%
rename from app/src/main/java/com/abhijitvalluri/android/fitnotifications/FitNotifications.java
rename to app/src/main/java/com/abhijitvalluri/android/fitnotifications/HomeActivity.java
index 252c182..57735d8 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/FitNotifications.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/HomeActivity.java
@@ -1,5 +1,6 @@
 package com.abhijitvalluri.android.fitnotifications;
 
+import android.app.Activity;
 import android.app.ActivityOptions;
 import android.app.NotificationManager;
 import android.content.DialogInterface;
@@ -11,6 +12,7 @@ import android.support.v7.app.AlertDialog;
 import android.support.v7.app.AppCompatActivity;
 import android.os.Bundle;
 import android.support.v7.app.NotificationCompat;
+import android.text.Html;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
@@ -19,16 +21,26 @@ import android.widget.RemoteViews;
 import android.widget.TextView;
 import android.widget.Toast;
 
+import com.abhijitvalluri.android.fitnotifications.services.NLService;
+import com.abhijitvalluri.android.fitnotifications.utils.Constants;
+
 import java.util.Date;
 
-public class FitNotifications extends AppCompatActivity {
+public class HomeActivity extends AppCompatActivity
+        implements SettingsActivity.SettingsFragment.SetupCallback {
+
+    private static final int APP_INTRO_FIRST_LAUNCH_INTENT = 1;
 
     private static boolean mDismissPlaceholderNotif;
     private static int mPlaceholderNotifDismissDelayMillis;
+    private static boolean mInteractiveSetupEnabled;
 
     private final Integer NOTIFICATION_ID = (int)((new Date().getTime() / 1000L) % Integer.MAX_VALUE);
     private final Handler mHandler = new Handler();
 
+
+    private Bundle LAUNCH_ACTIVITY_ANIM_BUNDLE;
+
     private TextView mInstructionTB;
     private TextView mAppSelectionTB;
     private TextView mAboutAppTB;
@@ -42,27 +54,32 @@ public class FitNotifications extends AppCompatActivity {
     private Button mDemoButton;
     private Button mEnableNotificationsButton;
 
-    private Bundle mBundleAnim;
     private SharedPreferences mPreferences;
 
+    // TODO: implement proper callbacks where possible
+    //TODO: use Google Analytics! HIGH PRIORITY!
     public static void onPlaceholderNotifSettingUpdated(boolean dismissNotif, int delaySeconds) {
         mDismissPlaceholderNotif = dismissNotif;
         mPlaceholderNotifDismissDelayMillis = delaySeconds*1000;
     }
 
+    public void onOverrideInteractiveSetup(boolean enabled) {
+        mInteractiveSetupEnabled = enabled;
+        updateSetup();
+    }
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_fit_notifications);
+        setContentView(R.layout.activity_home);
+
+        LAUNCH_ACTIVITY_ANIM_BUNDLE = ActivityOptions.
+                makeCustomAnimation(HomeActivity.this,
+                        R.transition.left_in,
+                        R.transition.left_out).toBundle();
 
         // Initialize settings to defaults
-        PreferenceManager.setDefaultValues(this, R.xml.main_settings, false);
-        mPreferences = PreferenceManager.getDefaultSharedPreferences(this);
-        mDismissPlaceholderNotif = mPreferences.getBoolean(
-                getString(R.string.dismiss_placeholder_notif_key), false);
-        mPlaceholderNotifDismissDelayMillis = mPreferences.getInt(
-                getString(R.string.placeholder_dismiss_delay_key), Constants.DEFAULT_DELAY_SECONDS)
-                *1000;
+        initializeSettings();
 
         mInstructionTB = (TextView) findViewById(R.id.instructionsTB);
         mAppSelectionTB = (TextView) findViewById(R.id.appSelectionTB);
@@ -76,13 +93,28 @@ public class FitNotifications extends AppCompatActivity {
         mStopServiceButton = (Button) findViewById(R.id.rightButton);
         mDemoButton = (Button) findViewById(R.id.demoNotificationButton);
         mEnableNotificationsButton = (Button) findViewById(R.id.enableNotificationAccessButton);
-        mBundleAnim = ActivityOptions.
-                makeCustomAnimation(FitNotifications.this,
-                                    R.transition.left_in,
-                                    R.transition.left_out).toBundle();
 
         activateTextViewLinks();
         initializeButtons();
+
+        if (mPreferences.getInt(getString(R.string.version_key), 0) < Constants.VERSION_CODE
+            && mPreferences.getInt(getString(R.string.version_key), 0) > 0) {
+            // Updated from old version
+            new AlertDialog.Builder(HomeActivity.this)
+                    .setTitle(R.string.whats_new)
+                    .setMessage(Html.fromHtml(getString(R.string.whats_new_text)))
+                    .setPositiveButton(android.R.string.ok, null)
+                    .create()
+                    .show();
+
+            mPreferences.edit().putInt(getString(R.string.version_key), Constants.VERSION_CODE).apply();
+        }
+
+        if (!mPreferences.getBoolean(getString(R.string.done_first_launch_key), false)) { // This is the first launch
+            startActivityForResult(new Intent(HomeActivity.this, AppIntroActivity.class),
+                    APP_INTRO_FIRST_LAUNCH_INTENT,
+                    LAUNCH_ACTIVITY_ANIM_BUNDLE);
+        }
     }
 
     @Override
@@ -96,7 +128,7 @@ public class FitNotifications extends AppCompatActivity {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.menu_main_settings:
-                startActivity(SettingsActivity.newIntent(this), mBundleAnim);
+                startActivity(SettingsActivity.newIntent(this), LAUNCH_ACTIVITY_ANIM_BUNDLE);
                 return true;
             default:
                 return super.onOptionsItemSelected(item);
@@ -104,59 +136,86 @@ public class FitNotifications extends AppCompatActivity {
 
     }
 
+    private void initializeSettings() {
+        PreferenceManager.setDefaultValues(this, R.xml.main_settings, false);
+        mPreferences = PreferenceManager.getDefaultSharedPreferences(this);
+        mDismissPlaceholderNotif = mPreferences.getBoolean(
+                getString(R.string.dismiss_placeholder_notif_key), false);
+        mPlaceholderNotifDismissDelayMillis = mPreferences.getInt(
+                getString(R.string.placeholder_dismiss_delay_key), Constants.DEFAULT_DELAY_SECONDS)
+                *1000;
+        mInteractiveSetupEnabled = !mPreferences.getBoolean(getString(R.string.override_interactive_setup_key), false);
+
+    }
+
+    private void updateSetup() {
+        if (mInteractiveSetupEnabled) {
+            mInstructionTB.setText(R.string.instructions);
+            mInstructionTB.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    startActivity(AppIntroActivity.newIntent(HomeActivity.this), LAUNCH_ACTIVITY_ANIM_BUNDLE);
+                }
+            });
+        } else {
+            mInstructionTB.setText(R.string.instructions_manual);
+            mInstructionTB.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    Intent intent = InfoActivity.newIntent(HomeActivity.this, getString(R.string.instructions_manual_heading), getString(R.string.instructions_text));
+                    startActivity(intent, LAUNCH_ACTIVITY_ANIM_BUNDLE);
+                }
+            });
+        }
+    }
+
     private void activateTextViewLinks() {
-        mInstructionTB.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent intent = InfoActivity.newIntent(FitNotifications.this, getString(R.string.instructions), getString(R.string.instructions_text));
-                startActivity(intent, mBundleAnim);
-            }
-        });
+        updateSetup();
 
         mAppSelectionTB.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                startActivity(AppChoicesActivity.newIntent(FitNotifications.this), mBundleAnim);
+                startActivity(AppChoicesActivity.newIntent(HomeActivity.this), LAUNCH_ACTIVITY_ANIM_BUNDLE);
             }
         });
 
         mAboutAppTB.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent = InfoActivity.newIntent(FitNotifications.this, getString(R.string.about_app), getString(R.string.about_app_text));
-                startActivity(intent, mBundleAnim);
+                Intent intent = InfoActivity.newIntent(HomeActivity.this, getString(R.string.about_app), getString(R.string.about_app_text));
+                startActivity(intent, LAUNCH_ACTIVITY_ANIM_BUNDLE);
             }
         });
 
         mFAQsTB.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent = InfoActivity.newIntent(FitNotifications.this, getString(R.string.faqs), getString(R.string.faqs_text));
-                startActivity(intent, mBundleAnim);
+                Intent intent = InfoActivity.newIntent(HomeActivity.this, getString(R.string.faqs), getString(R.string.faqs_text));
+                startActivity(intent, LAUNCH_ACTIVITY_ANIM_BUNDLE);
             }
         });
 
         mChangelogTB.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent = InfoActivity.newIntent(FitNotifications.this, getString(R.string.changelog), getString(R.string.changelog_text));
-                startActivity(intent, mBundleAnim);
+                Intent intent = InfoActivity.newIntent(HomeActivity.this, getString(R.string.whats_new), getString(R.string.whats_new_text));
+                startActivity(intent, LAUNCH_ACTIVITY_ANIM_BUNDLE);
             }
         });
 
         mDisclaimerTB.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent = InfoActivity.newIntent(FitNotifications.this, getString(R.string.disclaimer), getString(R.string.disclaimer_text));
-                startActivity(intent, mBundleAnim);
+                Intent intent = InfoActivity.newIntent(HomeActivity.this, getString(R.string.disclaimer), getString(R.string.disclaimer_text));
+                startActivity(intent, LAUNCH_ACTIVITY_ANIM_BUNDLE);
             }
         });
 
         mCreditsTB.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent = InfoActivity.newIntent(FitNotifications.this, getString(R.string.credits), getString(R.string.credits_text));
-                startActivity(intent, mBundleAnim);
+                Intent intent = InfoActivity.newIntent(HomeActivity.this, getString(R.string.credits), getString(R.string.credits_text));
+                startActivity(intent, LAUNCH_ACTIVITY_ANIM_BUNDLE);
             }
         });
     }
@@ -180,9 +239,8 @@ public class FitNotifications extends AppCompatActivity {
             @Override
             public void onClick(View v) {
                 Bundle newExtra = new Bundle();
-                newExtra.putChar(Constants.DEMO_NOTIFICATION, '1');
 
-                NotificationCompat.Builder builder = new NotificationCompat.Builder(FitNotifications.this);
+                NotificationCompat.Builder builder = new NotificationCompat.Builder(HomeActivity.this);
                 String notificationText = "Sample notification subject";
                 String notificationBigText = "Sample notification body. This is where the details of the notification will be shown.";
 
@@ -195,7 +253,7 @@ public class FitNotifications extends AppCompatActivity {
                 }
 
                 RemoteViews contentView = new RemoteViews(getPackageName(), R.layout.custom_notification);
-                contentView.setTextViewText(R.id.customNotificationText, getString(R.string.demo_notification_text));
+                contentView.setTextViewText(R.id.customNotificationText, getString(R.string.test_notification_text));
                 builder.setSmallIcon(R.mipmap.ic_launcher)
                         .setContentText(sb.toString())
                         .setExtras(newExtra)
@@ -205,7 +263,7 @@ public class FitNotifications extends AppCompatActivity {
                 ((NotificationManager) getSystemService(NOTIFICATION_SERVICE))
                         .notify(NOTIFICATION_ID, builder.build());
 
-                Toast.makeText(FitNotifications.this, "Demo notification sent", Toast.LENGTH_LONG)
+                Toast.makeText(HomeActivity.this, getString(R.string.test_notification_sent), Toast.LENGTH_LONG)
                         .show();
 
                 if (mDismissPlaceholderNotif) {
@@ -226,7 +284,7 @@ public class FitNotifications extends AppCompatActivity {
                 "To enable notification access, allow access for " + getString(R.string.app_name) +
                 " on the next screen.";
 
-        new AlertDialog.Builder(FitNotifications.this)
+        new AlertDialog.Builder(HomeActivity.this)
                 .setMessage(message)
                 .setTitle(getString(R.string.enable_notification_access))
                 .setPositiveButton("ENABLE", new DialogInterface.OnClickListener() {
@@ -249,7 +307,7 @@ public class FitNotifications extends AppCompatActivity {
         mStartServiceButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                startService(new Intent(FitNotifications.this, NotificationListener.class));
+                startService(new Intent(HomeActivity.this, NLService.class));
                 setNLSEnabled(true);
                 mStartServiceButton.setEnabled(false);
                 mStopServiceButton.setEnabled(true);
@@ -258,7 +316,7 @@ public class FitNotifications extends AppCompatActivity {
         mStopServiceButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                stopService(new Intent(FitNotifications.this, NotificationListener.class));
+                stopService(new Intent(HomeActivity.this, NLService.class));
                 setNLSEnabled(false);
                 mStartServiceButton.setEnabled(true);
                 mStopServiceButton.setEnabled(false);
@@ -268,11 +326,42 @@ public class FitNotifications extends AppCompatActivity {
 
     private void setNLSEnabled(boolean enabled) {
         mPreferences.edit().putBoolean(Constants.SERVICE_STATE, enabled).apply();
-        NotificationListener.setEnabled(enabled);
+        NLService.setEnabled(enabled);
     }
 
     private boolean isNLSEnabled() {
         return mPreferences.getBoolean(Constants.SERVICE_STATE, false);
     }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        switch (requestCode) {
+            case APP_INTRO_FIRST_LAUNCH_INTENT:
+                if (resultCode == Activity.RESULT_OK) {
+                    mPreferences.edit().putBoolean(getString(R.string.done_first_launch_key), true).apply();
+                } else {
+                    new AlertDialog.Builder(HomeActivity.this)
+                            .setMessage(getString(R.string.setup_incomplete))
+                            .setTitle(getString(R.string.setup_incomplete_title))
+                            .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
+                                @Override
+                                public void onClick(DialogInterface dialog, int which) {
+                                    startActivityForResult(new Intent(HomeActivity.this, AppIntroActivity.class), APP_INTRO_FIRST_LAUNCH_INTENT, LAUNCH_ACTIVITY_ANIM_BUNDLE);
+                                }
+                            })
+                            .setNegativeButton(android.R.string.cancel, new DialogInterface.OnClickListener() {
+                                @Override
+                                public void onClick(DialogInterface dialog, int which) {
+                                    mPreferences.edit().putBoolean(getString(R.string.done_first_launch_key), true).apply();
+                                    Toast.makeText(HomeActivity.this, "Okay, you can check out the new setup process at any time!", Toast.LENGTH_LONG).show();
+                                }
+                            })
+                            .create()
+                            .show();
+                }
+                return;
+            default:
+        }
+    }
 }
 
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/SettingsActivity.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/SettingsActivity.java
index 6e8225b..a08ab16 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/SettingsActivity.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/SettingsActivity.java
@@ -9,12 +9,18 @@ import android.preference.PreferenceManager;
 import android.support.v7.app.AppCompatActivity;
 import android.view.MenuItem;
 
+import com.abhijitvalluri.android.fitnotifications.services.NLService;
+import com.abhijitvalluri.android.fitnotifications.utils.Constants;
+
 /**
  * This is the main settings activity to store the various settings in the SharedPreferences
  */
 public class SettingsActivity extends AppCompatActivity {
 
+    private static Context sHomeActivityContext;
+
     public static Intent newIntent(Context packageContext) {
+        sHomeActivityContext = packageContext;
         return new Intent(packageContext, SettingsActivity.class);
     }
 
@@ -31,39 +37,58 @@ public class SettingsActivity extends AppCompatActivity {
     public static class SettingsFragment extends PreferenceFragment
             implements SharedPreferences.OnSharedPreferenceChangeListener {
 
+        // Callback interface to let HomeActivity update the setup menu
+        public interface SetupCallback {
+            void onOverrideInteractiveSetup(boolean enabled);
+        }
+
         private SharedPreferences mPreferences;
+        private SetupCallback mSetupCallback;
 
         @Override
         public void onCreate(Bundle savedInstanceState) {
             super.onCreate(savedInstanceState);
 
+            mSetupCallback = (SetupCallback) sHomeActivityContext;
+
             addPreferencesFromResource(R.xml.main_settings);
             mPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
 
             // Initialize delay summaries
             String key = getString(R.string.placeholder_dismiss_delay_key);
-            updateSummary(key,
+            updateDelaySummary(key,
                     mPreferences.getInt(key, Constants.DEFAULT_DELAY_SECONDS),
                     R.plurals.placeholder_dismiss_delay_summary,
                     R.string.placeholder_dismiss_delay_summary0,
                     mPreferences.getBoolean(getString(R.string.dismiss_placeholder_notif_key), false));
 
             key = getString(R.string.relayed_dismiss_delay_key);
-            updateSummary(key,
+            updateDelaySummary(key,
                     mPreferences.getInt(key, Constants.DEFAULT_DELAY_SECONDS),
                     R.plurals.relayed_dismiss_delay_summary,
                     R.string.relayed_dismiss_delay_summary0,
                     mPreferences.getBoolean(getString(R.string.dismiss_relayed_notif_key), false));
 
             key = getString(R.string.notif_limit_duration_key);
-            updateSummary(key,
+            updateDelaySummary(key,
                     mPreferences.getInt(key, Constants.DEFAULT_DELAY_SECONDS),
                     R.plurals.notif_limit_duration_summary,
                     R.string.notif_limit_duration_summary0,
                     mPreferences.getBoolean(getString(R.string.limit_notif_key), false));
+
+            key = getString(R.string.override_interactive_setup_key);
+            updateInteractiveSetupSummary(key);
+        }
+
+        private void updateInteractiveSetupSummary(String summaryKey) {
+            if (mPreferences.getBoolean(summaryKey, false)) {
+                findPreference(summaryKey).setSummary(getResources().getString(R.string.override_interactive_setup_enabled_summary));
+            } else {
+                findPreference(summaryKey).setSummary(getResources().getString(R.string.override_interactive_setup_disabled_summary));
+            }
         }
 
-        private void updateSummary(
+        private void updateDelaySummary(
                 String summaryKey, int delaySeconds, int pluralsId, int stringId, boolean enabled) {
             if (enabled) {
                 findPreference(summaryKey).setSummary(getResources()
@@ -82,13 +107,13 @@ public class SettingsActivity extends AppCompatActivity {
                 int delaySeconds = mPreferences.getInt(
                         getString(R.string.placeholder_dismiss_delay_key), 
                         Constants.DEFAULT_DELAY_SECONDS);
-                updateSummary(getString(R.string.placeholder_dismiss_delay_key),
+                updateDelaySummary(getString(R.string.placeholder_dismiss_delay_key),
                               delaySeconds,
                               R.plurals.placeholder_dismiss_delay_summary,
                               R.string.placeholder_dismiss_delay_summary0,
                               dismissNotif);
-                FitNotifications.onPlaceholderNotifSettingUpdated(dismissNotif, delaySeconds);
-                NotificationListener.onPlaceholderNotifSettingUpdated(dismissNotif, delaySeconds);
+                HomeActivity.onPlaceholderNotifSettingUpdated(dismissNotif, delaySeconds);
+                NLService.onPlaceholderNotifSettingUpdated(dismissNotif, delaySeconds);
 
             } else if (key.equals(getString(R.string.dismiss_relayed_notif_key))
                     || key.equals(getString(R.string.relayed_dismiss_delay_key))) {
@@ -97,12 +122,12 @@ public class SettingsActivity extends AppCompatActivity {
                 int delaySeconds = mPreferences.getInt(
                         getString(R.string.relayed_dismiss_delay_key),
                         Constants.DEFAULT_DELAY_SECONDS);
-                updateSummary(getString(R.string.relayed_dismiss_delay_key),
+                updateDelaySummary(getString(R.string.relayed_dismiss_delay_key),
                               delaySeconds,
                               R.plurals.relayed_dismiss_delay_summary,
                               R.string.relayed_dismiss_delay_summary0,
                               dismissNotif);
-                NotificationListener.onRelayedNotifSettingUpdated(dismissNotif, delaySeconds);
+                NLService.onRelayedNotifSettingUpdated(dismissNotif, delaySeconds);
 
             } else if (key.equals(getString(R.string.limit_notif_key))
                     || key.equals(getString(R.string.notif_limit_duration_key))) {
@@ -111,12 +136,15 @@ public class SettingsActivity extends AppCompatActivity {
                 int durationSeconds = mPreferences.getInt(
                         getString(R.string.notif_limit_duration_key),
                         Constants.DEFAULT_DELAY_SECONDS);
-                updateSummary(getString(R.string.notif_limit_duration_key),
+                updateDelaySummary(getString(R.string.notif_limit_duration_key),
                               durationSeconds,
                               R.plurals.notif_limit_duration_summary,
                               R.string.notif_limit_duration_summary0,
                               limitNotif);
-                NotificationListener.onLimitNotificationSettingUpdated(limitNotif, durationSeconds);
+                NLService.onLimitNotificationSettingUpdated(limitNotif, durationSeconds);
+            } else if (key.equals(getString(R.string.override_interactive_setup_key))) {
+                updateInteractiveSetupSummary(key);
+                mSetupCallback.onOverrideInteractiveSetup(!mPreferences.getBoolean(key, false));
             }
         }
 
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/models/AppSelection.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/models/AppSelection.java
index 2c0a3da..85021bb 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/models/AppSelection.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/models/AppSelection.java
@@ -5,7 +5,6 @@ package com.abhijitvalluri.android.fitnotifications.models;
  */
 public class AppSelection {
 
-
     private String mAppPackageName;
     private String mAppName;
     private boolean mIsSelected;
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/NotificationListener.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/NLService.java
similarity index 95%
rename from app/src/main/java/com/abhijitvalluri/android/fitnotifications/NotificationListener.java
rename to app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/NLService.java
index c41589a..64d2f79 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/NotificationListener.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/services/NLService.java
@@ -1,4 +1,4 @@
-package com.abhijitvalluri.android.fitnotifications;
+package com.abhijitvalluri.android.fitnotifications.services;
 
 import android.app.Notification;
 import android.app.NotificationManager;
@@ -16,6 +16,10 @@ import android.support.v7.app.NotificationCompat;
 import android.widget.RemoteViews;
 import android.widget.Toast;
 
+import com.abhijitvalluri.android.fitnotifications.utils.AppSelectionsStore;
+import com.abhijitvalluri.android.fitnotifications.utils.Constants;
+import com.abhijitvalluri.android.fitnotifications.R;
+
 import java.util.Date;
 import java.util.HashMap;
 import java.util.List;
@@ -23,7 +27,7 @@ import java.util.List;
 /**
  * Blaze Notification Service
  */
-public class NotificationListener extends NotificationListenerService {
+public class NLService extends NotificationListenerService {
 
     private static final Integer NOTIFICATION_ID = (int)((new Date().getTime() / 1000L) % Integer.MAX_VALUE);
     private final Handler mHandler = new Handler();
@@ -202,7 +206,7 @@ public class NotificationListener extends NotificationListenerService {
 
     // Checks if the notification comes from a selected application
     private boolean notificationFromSelectedApp(String appPackageName) {
-        return NotificationListener.mSelectedAppsPackageNames.contains(appPackageName);
+        return NLService.mSelectedAppsPackageNames.contains(appPackageName);
     }
 
     public static void setEnabled(boolean enabled) {
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppSelectionsStore.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/AppSelectionsStore.java
similarity index 98%
rename from app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppSelectionsStore.java
rename to app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/AppSelectionsStore.java
index bd9cfcf..8797335 100644
--- a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/AppSelectionsStore.java
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/AppSelectionsStore.java
@@ -1,4 +1,4 @@
-package com.abhijitvalluri.android.fitnotifications;
+package com.abhijitvalluri.android.fitnotifications.utils;
 
 import android.content.ContentValues;
 import android.content.Context;
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/Constants.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/Constants.java
new file mode 100644
index 0000000..f69656a
--- /dev/null
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/Constants.java
@@ -0,0 +1,14 @@
+package com.abhijitvalluri.android.fitnotifications.utils;
+
+import com.abhijitvalluri.android.fitnotifications.BuildConfig;
+
+/**
+ * List of all constants used in the app
+ */
+public class Constants {
+    public static final String PACKAGE_NAME = BuildConfig.APPLICATION_ID;
+    public static final int VERSION_CODE = BuildConfig.VERSION_CODE;
+    public static final String FITBIT_PACKAGE_NAME = "com.fitbit.FitbitMobile";
+    public static final String SERVICE_STATE = "serviceState";
+    public static final int DEFAULT_DELAY_SECONDS = 5;
+}
diff --git a/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/Func.java b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/Func.java
new file mode 100644
index 0000000..9559e2a
--- /dev/null
+++ b/app/src/main/java/com/abhijitvalluri/android/fitnotifications/utils/Func.java
@@ -0,0 +1,32 @@
+package com.abhijitvalluri.android.fitnotifications.utils;
+
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.content.pm.ResolveInfo;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Useful functions for the app
+ */
+public class Func {
+
+    public static List<String> getInstalledPackageNames(PackageManager pm) {
+        List<String> packageNames = new ArrayList<>();
+        for (ResolveInfo info : getInstalledPackages(pm)) {
+            packageNames.add(info.activityInfo.packageName);
+        }
+
+        return packageNames;
+    }
+
+    public static List<ResolveInfo> getInstalledPackages(PackageManager pm) {
+        Intent startupIntent = new Intent(Intent.ACTION_MAIN);
+        startupIntent.addCategory(Intent.CATEGORY_LAUNCHER);
+        return pm.queryIntentActivities(startupIntent, 0);
+
+
+
+    }
+}
