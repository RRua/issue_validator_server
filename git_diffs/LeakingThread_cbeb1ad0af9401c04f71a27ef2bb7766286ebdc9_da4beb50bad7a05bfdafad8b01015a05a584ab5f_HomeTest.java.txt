diff --git a/src/com/dconstructing/cooper/MainActivity.java b/src/com/dconstructing/cooper/MainActivity.java
index 3611df8..f645514 100644
--- a/src/com/dconstructing/cooper/MainActivity.java
+++ b/src/com/dconstructing/cooper/MainActivity.java
@@ -2,32 +2,39 @@ package com.dconstructing.cooper;
 
 import android.app.Activity;
 import android.app.FragmentTransaction;
+import android.app.LoaderManager;
 import android.content.ComponentName;
-import android.content.Context;
-import android.content.Intent;
+import android.content.CursorLoader;
+import android.content.Loader;
 import android.content.ServiceConnection;
 import android.content.pm.ApplicationInfo;
+import android.database.Cursor;
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.IBinder;
 import android.os.Message;
 import android.os.Messenger;
 import android.os.RemoteException;
+import android.provider.BaseColumns;
 import android.util.Log;
+import android.widget.SimpleCursorAdapter;
 
+import com.dconstructing.cooper.contentproviders.ConnectionsContentProvider;
+import com.dconstructing.cooper.database.CooperOpenHelper;
 import com.dconstructing.cooper.fragments.ConnectionsFragment;
 import com.dconstructing.cooper.fragments.ConnectionsFragment.OnAddConnectionOptionListener;
 import com.dconstructing.cooper.fragments.NewConnectionFragment;
 import com.dconstructing.cooper.services.ConnectionService;
 
 
-public class MainActivity extends Activity implements OnAddConnectionOptionListener{
+public class MainActivity extends Activity implements LoaderManager.LoaderCallbacks<Cursor>, OnAddConnectionOptionListener {
 	
 	public final String TAG = getClass().getSimpleName();
     public static boolean isDebuggable = false;
     
     public final static String EXTRA_MESSAGE = "com.dconstructing.cooper.MESSAGE";
     
+    SimpleCursorAdapter mAdapter;
     Messenger mService = null;
     
     final Messenger mMessenger = new Messenger(new IncomingHandler());
@@ -44,7 +51,12 @@ public class MainActivity extends Activity implements OnAddConnectionOptionListe
         }
         
         if (savedInstanceState == null) {
-            // During initial setup, plug in the connections fragment.
+            // During initial setup
+        	
+        	// Open the database
+        	getLoaderManager().initLoader(ConnectionsContentProvider.ALL_CONNECTIONS, null, this);
+        	
+        	// plug in the connections fragment.
         	// TODO: Add a secondary fragment for large/wide screens for two-pane view
             ConnectionsFragment connections = new ConnectionsFragment();
             connections.setArguments(getIntent().getExtras());
@@ -71,7 +83,47 @@ public class MainActivity extends Activity implements OnAddConnectionOptionListe
 		transaction.commit();
 	}
 
+	@Override
+	public Loader<Cursor> onCreateLoader(int loaderId, Bundle bundle) {
+		switch(loaderId) {
+			case ConnectionsContentProvider.ALL_CONNECTIONS:
+				String[] projection = {BaseColumns._ID,
+						CooperOpenHelper.USERNAME_FIELD_NAME,
+						CooperOpenHelper.HOST_FIELD_NAME};
+				String selection = null;
+				String[] args = null;
+				String sort = null;
+				return new CursorLoader(this, ConnectionsContentProvider.CONTENT_URI, projection, selection, args, sort);
+			default:
+				return null;
+		}
+	}
+
+	@Override
+	public void onLoadFinished(Loader<Cursor> loader, Cursor cursor) {
+		if (MainActivity.isDebuggable) Log.i(TAG, "Finished Loading Loader");
+		// TODO: Different action, depending on ID of loader.
+		sendToList(cursor);
+	}
+
+	@Override
+	public void onLoaderReset(Loader<Cursor> arg0) {
+		if (MainActivity.isDebuggable) Log.i(TAG, "Loader being reset");
+		mAdapter.swapCursor(null);
+	}
+
+	
+	
 
+
+	
+	
+	
+	
+	
+	public void sendToList(Cursor cursor) {
+		// Send cursor to Connections Fragment to populate list.
+	}
 	
     public void sendCommand() {
         try {
diff --git a/src/com/dconstructing/cooper/contentproviders/ConnectionsContentProvider.java b/src/com/dconstructing/cooper/contentproviders/ConnectionsContentProvider.java
new file mode 100755
index 0000000..7d6ed1a
--- /dev/null
+++ b/src/com/dconstructing/cooper/contentproviders/ConnectionsContentProvider.java
@@ -0,0 +1,76 @@
+package com.dconstructing.cooper.contentproviders;
+
+import android.content.ContentProvider;
+import android.content.ContentResolver;
+import android.content.ContentValues;
+import android.content.UriMatcher;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.net.Uri;
+
+import com.dconstructing.cooper.database.CooperOpenHelper;
+
+public class ConnectionsContentProvider extends ContentProvider {
+
+	public static final int ALL_CONNECTIONS = 1;
+	
+	private static final int CONNECTIONS = 10;
+	private static final int CONNECTION_ID = 20;
+	
+	private static final String AUTHORITY = "com.dconstructing.cooper.contentproviders";
+	private static final String BASE_PATH = "connections";
+	public static final Uri CONTENT_URI = Uri.parse("content://" + AUTHORITY + "/" + BASE_PATH);
+	
+	public static final String CONTENT_TYPE = ContentResolver.CURSOR_DIR_BASE_TYPE + "/todos";
+	public static final String CONTENT_ITEM_TYPE = ContentResolver.CURSOR_ITEM_BASE_TYPE + "/todo";
+	private static final UriMatcher sURIMatcher = new UriMatcher(UriMatcher.NO_MATCH);
+	
+	static {
+		sURIMatcher.addURI(AUTHORITY, BASE_PATH, CONNECTIONS);
+		sURIMatcher.addURI(AUTHORITY, BASE_PATH + "/#", CONNECTION_ID);
+	}
+	
+	protected CooperOpenHelper mOpenHelper;
+	private SQLiteDatabase db;
+	
+	public ConnectionsContentProvider() {
+		// TODO Auto-generated constructor stub
+	}
+
+	@Override
+	public int delete(Uri arg0, String arg1, String[] arg2) {
+		// TODO Auto-generated method stub
+		return 0;
+	}
+
+	@Override
+	public String getType(Uri uri) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	@Override
+	public Uri insert(Uri uri, ContentValues values) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	@Override
+	public boolean onCreate() {
+		mOpenHelper = new CooperOpenHelper(getContext());
+		return true;
+	}
+
+	@Override
+	public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	@Override
+	public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs) {
+		// TODO Auto-generated method stub
+		return 0;
+	}
+
+}
diff --git a/src/com/dconstructing/cooper/database/CooperOpenHelper.java b/src/com/dconstructing/cooper/database/CooperOpenHelper.java
new file mode 100755
index 0000000..d623500
--- /dev/null
+++ b/src/com/dconstructing/cooper/database/CooperOpenHelper.java
@@ -0,0 +1,44 @@
+package com.dconstructing.cooper.database;
+
+import android.content.Context;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+import android.provider.BaseColumns;
+
+/**
+ * @author burgundy
+ *
+ */
+public class CooperOpenHelper extends SQLiteOpenHelper {
+
+	public final String TAG = getClass().getSimpleName();
+	
+	public static final String DATABASE_NAME="connections.db";
+	public static final int DATABASE_VERSION=1;
+	
+	public static final String CONNECTIONS_TABLE_NAME="connections";
+	public static final String USERNAME_FIELD_NAME="username";
+	public static final String HOST_FIELD_NAME="host";
+	
+	private static final String CONNECTIONS_TABLE_CREATE =
+            "CREATE TABLE " + CONNECTIONS_TABLE_NAME + " (" +
+            BaseColumns._ID + " INT, " +
+            USERNAME_FIELD_NAME + " TEXT, " +
+            HOST_FIELD_NAME + " TEXT);";
+	
+
+	public CooperOpenHelper(Context context) {
+		super(context, DATABASE_NAME, null, DATABASE_VERSION);
+	}
+	
+	@Override
+	public void onCreate(SQLiteDatabase db) {
+		db.execSQL(CONNECTIONS_TABLE_CREATE);
+
+	}
+
+	@Override
+	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+	}
+
+}
diff --git a/src/com/dconstructing/cooper/fragments/NewConnectionFragment.java b/src/com/dconstructing/cooper/fragments/NewConnectionFragment.java
index 0a6e520..b2e881f 100644
--- a/src/com/dconstructing/cooper/fragments/NewConnectionFragment.java
+++ b/src/com/dconstructing/cooper/fragments/NewConnectionFragment.java
@@ -79,8 +79,11 @@ public class NewConnectionFragment extends Fragment {
 	    // Called when the user exits the action mode
 	    @Override
 	    public void onDestroyActionMode(ActionMode mode) {
+	    	if (MainActivity.isDebuggable) Log.i(TAG, "Address to Save: " + mAddressField.getText());
+	    	if (MainActivity.isDebuggable) Log.i(TAG, "Username to Save: " + mUsernameField.getText());
 	    	if (MainActivity.isDebuggable) Log.i(TAG, "Destroying ActionMode");
 	    	// TODO: Save should take place here (or as a result of this)
+	    	
 	        mActionMode = null;
 	        getFragmentManager().popBackStack(); // to go back
 	    }
