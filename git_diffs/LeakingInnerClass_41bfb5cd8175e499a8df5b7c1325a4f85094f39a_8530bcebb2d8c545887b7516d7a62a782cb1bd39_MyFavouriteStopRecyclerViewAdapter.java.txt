diff --git a/app/src/main/java/at/flausch_productions/amsprung/FavouriteStopAdapter.java b/app/src/main/java/at/flausch_productions/amsprung/FavouriteStopAdapter.java
new file mode 100644
index 0000000..9f8f4de
--- /dev/null
+++ b/app/src/main/java/at/flausch_productions/amsprung/FavouriteStopAdapter.java
@@ -0,0 +1,30 @@
+package at.flausch_productions.amsprung;
+
+import android.content.Context;
+import android.os.AsyncTask;
+
+import at.flausch_productions.amsprung.persistance.room.AppDatabase;
+
+public class FavouriteStopAdapter extends StopsAdapter{
+
+    private final AppDatabase db;
+
+    public FavouriteStopAdapter(Context context, ClickListener listener) {
+        super(listener);
+        db = AppDatabase.via(context);
+    }
+
+    public void update() {
+        new AsyncTask<Void, Void, Void>() {
+            @Override
+            protected Void doInBackground(Void... voids) {
+                updateStops(db.favouriteStopDao().loadAllFavouritedStops());
+                return null;
+            }
+        }.execute();
+    }
+
+    interface FavouriteStopClickListener {
+        void onClicked(int stopId);
+    }
+}
diff --git a/app/src/main/java/at/flausch_productions/amsprung/FavouriteStopFragment.java b/app/src/main/java/at/flausch_productions/amsprung/FavouriteStopFragment.java
index ac561ec..56f997f 100644
--- a/app/src/main/java/at/flausch_productions/amsprung/FavouriteStopFragment.java
+++ b/app/src/main/java/at/flausch_productions/amsprung/FavouriteStopFragment.java
@@ -1,31 +1,20 @@
 package at.flausch_productions.amsprung;
 
-import android.content.Context;
-import android.os.AsyncTask;
+import android.content.Intent;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
-import android.support.v7.widget.GridLayoutManager;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 
-import at.flausch_productions.amsprung.persistance.StopModel;
-import at.flausch_productions.amsprung.persistance.StopsHelper;
-
-import java.util.ArrayList;
-import java.util.List;
-
 /**
  * A fragment representing a list of Items.
- * <p/>
- * Activities containing this fragment MUST implement the {@link OnListFragmentInteractionListener}
- * interface.
  */
 public class FavouriteStopFragment extends Fragment {
 
-    private OnListFragmentInteractionListener mListener;
+    private FavouriteStopAdapter adapter;
 
     /**
      * Mandatory empty constructor for the fragment manager to instantiate the
@@ -48,62 +37,26 @@ public class FavouriteStopFragment extends Fragment {
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
 
-        final View view = inflater.inflate(R.layout.fragment_favouritestop_list, container, false);
-
-        new AsyncTask<Void, Void, List<StopModel>>(){
-            @Override
-            protected List<StopModel> doInBackground(Void... params) {
-                StopsHelper.Cache cache = new StopsHelper.Cache(getContext());
-                List<StopModel> stops = new ArrayList<>();
-                stops.add(StopsHelper.findStopById(cache, 219364357));
-                stops.add(StopsHelper.findStopById(cache, 214460404));
-                stops.add(StopsHelper.findStopById(cache, 214550392));
-                return stops;
-            }
+        final RecyclerView recyclerView = (RecyclerView) inflater.inflate(R.layout.fragment_favouritestop_list, container, false);
 
+        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
+        adapter = new FavouriteStopAdapter(getContext(), new StopsAdapter.ClickListener() {
             @Override
-            protected void onPostExecute(List<StopModel> stops) {
-                if (view instanceof RecyclerView) {
-                    Context context = view.getContext();
-                    RecyclerView recyclerView = (RecyclerView) view;
-                    recyclerView.setLayoutManager(new LinearLayoutManager(context));
-                    recyclerView.setAdapter(new MyFavouriteStopRecyclerViewAdapter(stops, mListener));
-                }
+            public void onClicked(int stopId) {
+                Intent i = new Intent(getActivity(), StopDetailsActivity.class);
+                i.putExtra(StopDetailsActivity.EXTRA_STOP_ID, stopId);
+                startActivity(i);
             }
-        }.execute();
-
-        return view;
-    }
-
+        });
+        recyclerView.setAdapter(adapter);
 
-    @Override
-    public void onAttach(Context context) {
-        super.onAttach(context);
-        if (context instanceof OnListFragmentInteractionListener) {
-            mListener = (OnListFragmentInteractionListener) context;
-        } else {
-            throw new RuntimeException(context.toString()
-                    + " must implement OnListFragmentInteractionListener");
-        }
+        return recyclerView;
     }
 
     @Override
-    public void onDetach() {
-        super.onDetach();
-        mListener = null;
+    public void onResume() {
+        super.onResume();
+        adapter.update();
     }
 
-    /**
-     * This interface must be implemented by activities that contain this
-     * fragment to allow an interaction in this fragment to be communicated
-     * to the activity and potentially other fragments contained in that
-     * activity.
-     * <p/>
-     * See the Android Training lesson <a href=
-     * "http://developer.android.com/training/basics/fragments/communicating.html"
-     * >Communicating with Other Fragments</a> for more information.
-     */
-    public interface OnListFragmentInteractionListener {
-        void onListFragmentInteraction(StopModel stop);
-    }
 }
diff --git a/app/src/main/java/at/flausch_productions/amsprung/HomeActivity.java b/app/src/main/java/at/flausch_productions/amsprung/HomeActivity.java
index da29347..e557b23 100644
--- a/app/src/main/java/at/flausch_productions/amsprung/HomeActivity.java
+++ b/app/src/main/java/at/flausch_productions/amsprung/HomeActivity.java
@@ -10,9 +10,7 @@ import android.view.MenuItem;
 import android.view.View;
 import android.widget.Toast;
 
-import at.flausch_productions.amsprung.persistance.StopModel;
-
-public class HomeActivity extends AppCompatActivity implements FavouriteStopFragment.OnListFragmentInteractionListener{
+public class HomeActivity extends AppCompatActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -30,15 +28,6 @@ public class HomeActivity extends AppCompatActivity implements FavouriteStopFrag
         });
     }
 
-    @Override
-    public void onListFragmentInteraction(StopModel item) {
-        Toast.makeText(this, "bla bla, list-item clicked", Toast.LENGTH_SHORT).show();
-
-        Intent i = new Intent(this, StopDetailsActivity.class);
-        i.putExtra(StopDetailsActivity.EXTRA_STOP_ID, item.getId());
-        startActivity(i);
-    }
-
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getMenuInflater().inflate(R.menu.menu_home, menu);
diff --git a/app/src/main/java/at/flausch_productions/amsprung/MyFavouriteStopRecyclerViewAdapter.java b/app/src/main/java/at/flausch_productions/amsprung/MyFavouriteStopRecyclerViewAdapter.java
deleted file mode 100644
index 22ba356..0000000
--- a/app/src/main/java/at/flausch_productions/amsprung/MyFavouriteStopRecyclerViewAdapter.java
+++ /dev/null
@@ -1,72 +0,0 @@
-package at.flausch_productions.amsprung;
-
-import android.support.v7.widget.RecyclerView;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import at.flausch_productions.amsprung.FavouriteStopFragment.OnListFragmentInteractionListener;
-import at.flausch_productions.amsprung.persistance.StopModel;
-
-import java.util.List;
-
-public class MyFavouriteStopRecyclerViewAdapter extends RecyclerView.Adapter<MyFavouriteStopRecyclerViewAdapter.ViewHolder> {
-
-    private final List<StopModel> stops;
-    private final OnListFragmentInteractionListener mListener;
-
-    public MyFavouriteStopRecyclerViewAdapter(List<StopModel> stops, OnListFragmentInteractionListener listener) {
-        this.stops = stops;
-        mListener = listener;
-    }
-
-    @Override
-    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        View view = LayoutInflater.from(parent.getContext())
-                .inflate(R.layout.fragment_favouritestop, parent, false);
-        return new ViewHolder(view);
-    }
-
-    @Override
-    public void onBindViewHolder(final ViewHolder holder, int position) {
-        holder.stop = stops.get(position);
-        holder.mIdView.setText(String.valueOf(stops.get(position).getId()));
-        holder.mContentView.setText(stops.get(position).getName());
-
-        holder.mView.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                if (null != mListener) {
-                    // Notify the active callbacks interface (the activity, if the
-                    // fragment is attached to one) that an item has been selected.
-                    mListener.onListFragmentInteraction(holder.stop);
-                }
-            }
-        });
-    }
-
-    @Override
-    public int getItemCount() {
-        return stops.size();
-    }
-
-    public class ViewHolder extends RecyclerView.ViewHolder {
-        public final View mView;
-        public final TextView mIdView;
-        public final TextView mContentView;
-        public StopModel stop;
-
-        public ViewHolder(View view) {
-            super(view);
-            mView = view;
-            mIdView = (TextView) view.findViewById(R.id.id);
-            mContentView = (TextView) view.findViewById(R.id.content);
-        }
-
-        @Override
-        public String toString() {
-            return super.toString() + " '" + mContentView.getText() + "'";
-        }
-    }
-}
diff --git a/app/src/main/java/at/flausch_productions/amsprung/SearchActivity.java b/app/src/main/java/at/flausch_productions/amsprung/SearchActivity.java
index f6fcf8c..5fcd668 100644
--- a/app/src/main/java/at/flausch_productions/amsprung/SearchActivity.java
+++ b/app/src/main/java/at/flausch_productions/amsprung/SearchActivity.java
@@ -2,20 +2,17 @@ package at.flausch_productions.amsprung;
 
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.design.widget.FloatingActionButton;
-import android.support.design.widget.Snackbar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
 import android.support.v7.widget.SearchView;
 import android.support.v7.widget.Toolbar;
-import android.view.SearchEvent;
-import android.view.View;
 
 import at.flausch_productions.amsprung.util.MinLog;
 
-public class SearchActivity extends AppCompatActivity implements SearchResultsAdapter.SearchResultClickListener {
+public class SearchActivity extends AppCompatActivity implements StopsAdapter.ClickListener {
+
+    private SearchResultAdapter searchResultAdapter;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -25,20 +22,19 @@ public class SearchActivity extends AppCompatActivity implements SearchResultsAd
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
-        /*
-        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
-        fab.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
-                        .setAction("Action", null).show();
-            }
-        });
-        */
+        // Don't setup floating action button.
+        // FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
+        // fab.setOnClickListener(new View.OnClickListener() {
+        //    @Override
+        //    public void onClick(View view) {
+        //        Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
+        //                .setAction("Action", null).show();
+        //    }
+        // });
 
         RecyclerView recycler = findViewById(R.id.recycler);
         recycler.setLayoutManager(new LinearLayoutManager(this));
-        final SearchResultsAdapter searchResultAdapter = new SearchResultsAdapter(getApplicationContext(), this);
+        searchResultAdapter = new SearchResultAdapter(getApplicationContext(), this);
         recycler.setAdapter(searchResultAdapter);
 
         SearchView searchView = findViewById(R.id.search_view);
@@ -52,12 +48,16 @@ public class SearchActivity extends AppCompatActivity implements SearchResultsAd
             @Override
             public boolean onQueryTextChange(String newText) {
                 MinLog.i("### change %s", newText);
-                searchResultAdapter.updateQuery(newText);
+                updateStops(newText);
                 return false;
             }
         });
     }
 
+    private void updateStops(String newText) {
+        searchResultAdapter.updateQuery(newText);
+    }
+
     @Override
     public void onClicked(int stopId) {
         Intent i = new Intent(this, StopDetailsActivity.class);
diff --git a/app/src/main/java/at/flausch_productions/amsprung/SearchResultAdapter.java b/app/src/main/java/at/flausch_productions/amsprung/SearchResultAdapter.java
new file mode 100644
index 0000000..efa66e0
--- /dev/null
+++ b/app/src/main/java/at/flausch_productions/amsprung/SearchResultAdapter.java
@@ -0,0 +1,45 @@
+package at.flausch_productions.amsprung;
+
+import android.content.Context;
+import android.os.AsyncTask;
+
+import java.util.ArrayList;
+
+import at.flausch_productions.amsprung.persistance.room.AppDatabase;
+import at.flausch_productions.amsprung.persistance.room.model.Stop;
+
+public class SearchResultAdapter extends StopsAdapter {
+
+    private final AppDatabase db;
+
+    public SearchResultAdapter(Context applicationContext, ClickListener listener) {
+        super(listener);
+        db = AppDatabase.via(applicationContext);
+    }
+
+    public void updateQuery(final String query) {
+        new AsyncTask<Void, Void, Void>() {
+            @Override
+            protected Void doInBackground(Void... voids) {
+
+                if (query == null) {
+                    updateStops(new ArrayList<Stop>());
+                    return null;
+                }
+
+                if (query.length() >= 3) {
+                   updateStops(db.stopDao().findByName("%" + query + "%"));
+                } else {
+                    updateStops(new ArrayList<Stop>());
+                }
+                return null;
+            }
+
+            @Override
+            protected void onPostExecute(Void aVoid) {
+                notifyDataSetChanged();
+                super.onPostExecute(aVoid);
+            }
+        }.execute();
+    }
+}
diff --git a/app/src/main/java/at/flausch_productions/amsprung/SearchResultsAdapter.java b/app/src/main/java/at/flausch_productions/amsprung/StopsAdapter.java
similarity index 61%
rename from app/src/main/java/at/flausch_productions/amsprung/SearchResultsAdapter.java
rename to app/src/main/java/at/flausch_productions/amsprung/StopsAdapter.java
index 3593fe1..25f370f 100644
--- a/app/src/main/java/at/flausch_productions/amsprung/SearchResultsAdapter.java
+++ b/app/src/main/java/at/flausch_productions/amsprung/StopsAdapter.java
@@ -1,7 +1,7 @@
 package at.flausch_productions.amsprung;
 
-import android.content.Context;
-import android.os.AsyncTask;
+import android.os.Handler;
+import android.os.Looper;
 import android.support.annotation.NonNull;
 import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
@@ -11,55 +11,33 @@ import android.widget.LinearLayout;
 import android.widget.TextView;
 
 import java.util.Arrays;
-import java.util.Comparator;
+import java.util.Collections;
 import java.util.List;
 
-import at.flausch_productions.amsprung.persistance.room.AppDatabase;
 import at.flausch_productions.amsprung.persistance.room.model.Stop;
 import at.flausch_productions.amsprung.wienerlinienapi.LineBadgeHelper;
 
-class SearchResultsAdapter extends RecyclerView.Adapter<SearchResultsAdapter.ViewHolder> {
+class StopsAdapter extends RecyclerView.Adapter<StopsAdapter.ViewHolder> {
 
-    private final AppDatabase db;
+    private final Handler mainHandler = new Handler(Looper.getMainLooper());
     private volatile List<Stop> stops;
-    private final SearchResultClickListener listener;
+    private final ClickListener listener;
 
-    public SearchResultsAdapter(Context applicationContext, SearchResultClickListener listener) {
-        db = AppDatabase.via(applicationContext);
+    public StopsAdapter(ClickListener listener) {
         stops = Arrays.asList();
         this.listener = listener;
     }
 
-    public void updateQuery(final String query) {
-        new AsyncTask<Void, Void, Void>() {
-            @Override
-            protected Void doInBackground(Void... voids) {
-
-                if (query == null) {
-                    synchronized (SearchResultsAdapter.this) {
-                        stops = Arrays.asList();
-                        return null;
-                    }
-                }
-
-                if (query.length() >= 3) {
-                    synchronized (SearchResultsAdapter.this) {
-                        stops = db.stopDao().findByName("%" + query + "%");
-                    }
-                } else {
-                    synchronized (SearchResultsAdapter.this) {
-                        stops = Arrays.asList();
-                    }
-                }
-                return null;
-            }
-
+    public void updateStops(List<Stop> stops) {
+        synchronized (StopsAdapter.this) {
+            this.stops = Collections.unmodifiableList(stops);
+        }
+        mainHandler.post(new Runnable() {
             @Override
-            protected void onPostExecute(Void aVoid) {
+            public void run() {
                 notifyDataSetChanged();
-                super.onPostExecute(aVoid);
             }
-        }.execute();
+        });
     }
 
     @NonNull
@@ -72,7 +50,7 @@ class SearchResultsAdapter extends RecyclerView.Adapter<SearchResultsAdapter.Vie
 
     @Override
     public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
-        synchronized (SearchResultsAdapter.this) {
+        synchronized (StopsAdapter.this) {
             if (position < stops.size()) {
                 Stop stop = stops.get(position);
 
@@ -95,7 +73,7 @@ class SearchResultsAdapter extends RecyclerView.Adapter<SearchResultsAdapter.Vie
 
     @Override
     public int getItemCount() {
-        synchronized (SearchResultsAdapter.this) {
+        synchronized (StopsAdapter.this) {
             return stops.size();
         }
     }
@@ -118,7 +96,7 @@ class SearchResultsAdapter extends RecyclerView.Adapter<SearchResultsAdapter.Vie
         }
     }
 
-    interface SearchResultClickListener {
+    interface ClickListener {
         void onClicked(int stopId);
     }
 }
diff --git a/app/src/main/java/at/flausch_productions/amsprung/persistance/room/AppDatabase.java b/app/src/main/java/at/flausch_productions/amsprung/persistance/room/AppDatabase.java
index 5f7b02d..da8d206 100644
--- a/app/src/main/java/at/flausch_productions/amsprung/persistance/room/AppDatabase.java
+++ b/app/src/main/java/at/flausch_productions/amsprung/persistance/room/AppDatabase.java
@@ -23,7 +23,7 @@ import at.flausch_productions.amsprung.persistance.room.model.StopDao;
  * Docs: https://developer.android.com/topic/libraries/architecture/room
  */
 // TODO: re-evaluate setting exportSchema to false (just false to silence lint atm.)
-@Database(entities = {Stop.class, Stair.class, Line.class, FavouriteStop.class}, version = 2, exportSchema = true)
+@Database(entities = {Stop.class, Stair.class, Line.class, FavouriteStop.class}, version = 2, exportSchema = false)
 public abstract class AppDatabase extends RoomDatabase{
 
     private static volatile AppDatabase INSTANCE;
diff --git a/app/src/main/java/at/flausch_productions/amsprung/persistance/room/model/FavouriteStopDao.java b/app/src/main/java/at/flausch_productions/amsprung/persistance/room/model/FavouriteStopDao.java
index 8b9a9a3..7d275f8 100644
--- a/app/src/main/java/at/flausch_productions/amsprung/persistance/room/model/FavouriteStopDao.java
+++ b/app/src/main/java/at/flausch_productions/amsprung/persistance/room/model/FavouriteStopDao.java
@@ -30,4 +30,7 @@ public interface FavouriteStopDao {
 
     @Query("delete from " + FavouriteStop.TABLE_NAME + " where " + FavouriteStop.C_ID + " = :stopId")
     void deleteById(int stopId);
+
+    @Query("select * from " + Stop.TABLE_NAME + " where " + Stop.C_ID + " in (select * from " + FavouriteStop.TABLE_NAME + ")")
+    List<Stop> loadAllFavouritedStops();
 }
diff --git a/app/src/main/java/at/flausch_productions/amsprung/wienerlinienapi/LineBadgeHelper.java b/app/src/main/java/at/flausch_productions/amsprung/wienerlinienapi/LineBadgeHelper.java
index 82c5721..34bca3b 100644
--- a/app/src/main/java/at/flausch_productions/amsprung/wienerlinienapi/LineBadgeHelper.java
+++ b/app/src/main/java/at/flausch_productions/amsprung/wienerlinienapi/LineBadgeHelper.java
@@ -21,7 +21,6 @@ import at.flausch_productions.amsprung.persistance.room.model.LineType;
 public class LineBadgeHelper {
 
     public static final void lineBadgesForStop(final int stopId, final LinearLayout linearLayout) {
-        linearLayout.removeAllViews();
         new AsyncTask<Void, Void, List<Line>>() {
             @Override
             protected List<Line> doInBackground(Void... voids) {
@@ -30,6 +29,7 @@ public class LineBadgeHelper {
             }
             @Override
             protected void onPostExecute(List<Line> lines) {
+                linearLayout.removeAllViews();
                 for (Line line : lines) {
 
                     TextView textView = new TextView(linearLayout.getContext());
