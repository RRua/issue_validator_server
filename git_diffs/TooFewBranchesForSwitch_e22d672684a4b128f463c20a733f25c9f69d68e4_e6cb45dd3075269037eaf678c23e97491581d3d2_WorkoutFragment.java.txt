diff --git a/app/src/main/java/com/health/openworkout/gui/datatypes/GenericAdapter.java b/app/src/main/java/com/health/openworkout/gui/datatypes/GenericAdapter.java
index 569bdad..d79b8e5 100644
--- a/app/src/main/java/com/health/openworkout/gui/datatypes/GenericAdapter.java
+++ b/app/src/main/java/com/health/openworkout/gui/datatypes/GenericAdapter.java
@@ -10,23 +10,20 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 
-import androidx.annotation.Keep;
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.health.openworkout.R;
 
 public abstract class GenericAdapter<VH extends GenericAdapter.ViewHolder> extends RecyclerView.Adapter<VH> {
-    @Keep
-    public enum FRAGMENT_MODE {VIEW, EDIT}
-    private FRAGMENT_MODE mode;
+    private GenericFragment.FRAGMENT_MODE mode;
     private Context context;
     private static OnGenericClickListener onDefaultClickListener;
     private static OnGenericClickListener onEditClickListener;
     private static OnGenericClickListener onDeleteClickListener;
     private static OnGenericClickListener onReorderClickListener;
 
-    public GenericAdapter(Context aContext, FRAGMENT_MODE mode) {
+    public GenericAdapter(Context aContext, GenericFragment.FRAGMENT_MODE mode) {
         this.mode = mode;
         this.context = aContext;
     }
diff --git a/app/src/main/java/com/health/openworkout/gui/datatypes/GenericFragment.java b/app/src/main/java/com/health/openworkout/gui/datatypes/GenericFragment.java
new file mode 100644
index 0000000..e29cac1
--- /dev/null
+++ b/app/src/main/java/com/health/openworkout/gui/datatypes/GenericFragment.java
@@ -0,0 +1,164 @@
+/*
+ * Copyright (C) 2020 by olie.xdev@googlemail.com All Rights Reserved
+ */
+
+package com.health.openworkout.gui.datatypes;
+
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.Toast;
+
+import androidx.annotation.Keep;
+import androidx.annotation.NonNull;
+import androidx.fragment.app.Fragment;
+import androidx.recyclerview.widget.ItemTouchHelper;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.health.openworkout.R;
+
+import java.util.Collections;
+import java.util.List;
+
+public abstract class GenericFragment extends Fragment {
+    @Keep
+    public enum FRAGMENT_MODE {VIEW, EDIT}
+
+    protected static FRAGMENT_MODE mode = FRAGMENT_MODE.VIEW;
+
+    private ItemTouchHelper touchHelper;
+
+    private MenuItem saveMenu;
+    private MenuItem editMenu;
+
+    public GenericFragment() {
+        setHasOptionsMenu(true);
+
+        touchHelper = new ItemTouchHelper(new ItemTouchHelper
+                .SimpleCallback(ItemTouchHelper.DOWN | ItemTouchHelper.UP | ItemTouchHelper.RIGHT | ItemTouchHelper.LEFT, ItemTouchHelper.ACTION_STATE_IDLE) {
+
+            @Override
+            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {
+                int from = viewHolder.getAdapterPosition();
+                int to = target.getAdapterPosition();
+
+                Collections.swap(getItemList(), from, to);
+                getAdapter().notifyItemMoved(from, to);
+                return true;
+            }
+
+            @Override
+            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {
+            }
+
+            @Override
+            public boolean isLongPressDragEnabled() {
+                return false;
+            }
+        });
+    }
+
+    protected abstract String getTitle();
+    protected abstract void loadFromDatabase();
+    protected abstract void saveToDatabase();
+    protected abstract GenericAdapter getAdapter();
+    protected abstract RecyclerView getRecyclerView();
+    protected abstract List getItemList();
+    protected abstract void onSelectClick(int position);
+    protected abstract void onEditClick(int position);
+    protected abstract void onDeleteClick(int position);
+    protected abstract void onAddClick();
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.fragment_menu, menu);
+
+        saveMenu = menu.findItem(R.id.save);
+        editMenu = menu.findItem(R.id.edit);
+
+        refreshMenuVisibility();
+
+        super.onCreateOptionsMenu(menu, inflater);
+    }
+
+    private void refreshMenuVisibility() {
+        switch (mode) {
+            case VIEW:
+                saveMenu.setVisible(false);
+                editMenu.setVisible(true);
+                break;
+            case EDIT:
+                saveMenu.setVisible(true);
+                editMenu.setVisible(false);
+                break;
+        }
+
+        if (mode == GenericFragment.FRAGMENT_MODE.VIEW) {
+            touchHelper.attachToRecyclerView(null);
+
+            getAdapter().setOnItemClickListener(new GenericAdapter.OnGenericClickListener() {
+                @Override
+                public void onItemClick(int position, View v) {
+                    onSelectClick(position);
+                }
+            });
+        }
+
+        if (mode == GenericFragment.FRAGMENT_MODE.EDIT) {
+            getAdapter().setOnItemClickListener(null);
+
+            touchHelper.attachToRecyclerView(getRecyclerView());
+
+            getAdapter().setOnItemEditClickListener(new GenericAdapter.OnGenericClickListener() {
+                @Override
+                public void onItemClick(int position, View v) {
+                    onEditClick(position);
+                }
+            });
+
+            getAdapter().setOnItemDeleteClickListener(new GenericAdapter.OnGenericClickListener() {
+                @Override
+                public void onItemClick(int position, View v) {
+                    getAdapter().notifyItemRemoved(position);
+
+                    onDeleteClick(position);
+                }
+            });
+
+            getAdapter().setOnItemReorderClickListener(new GenericAdapter.OnGenericClickListener() {
+                @Override
+                public void onItemClick(int position, View v) {
+                    touchHelper.startDrag(getRecyclerView().findViewHolderForLayoutPosition(position));
+                }
+            });
+        }
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case R.id.add:
+                onAddClick();
+                return true;
+            case R.id.edit:
+                mode = GenericFragment.FRAGMENT_MODE.EDIT;
+                refreshMenuVisibility();
+                loadFromDatabase();
+                return true;
+            case R.id.save:
+                mode = GenericFragment.FRAGMENT_MODE.VIEW;
+                refreshMenuVisibility();
+                saveToDatabase();
+                loadFromDatabase();
+                Toast.makeText(getContext(), String.format(getString(R.string.label_save_toast), getTitle()), Toast.LENGTH_SHORT).show();
+                return true;
+            case R.id.reset:
+                Toast.makeText(getContext(), String.format(getString(R.string.label_reset_toast), getTitle()), Toast.LENGTH_SHORT).show();
+                loadFromDatabase();
+                return true;
+            default:
+                return super.onOptionsItemSelected(item);
+        }
+    }
+}
diff --git a/app/src/main/java/com/health/openworkout/gui/session/SessionFragment.java b/app/src/main/java/com/health/openworkout/gui/session/SessionFragment.java
index 5d42f9d..0a36e1a 100644
--- a/app/src/main/java/com/health/openworkout/gui/session/SessionFragment.java
+++ b/app/src/main/java/com/health/openworkout/gui/session/SessionFragment.java
@@ -6,18 +6,13 @@ package com.health.openworkout.gui.session;
 
 import android.os.Bundle;
 import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuInflater;
-import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
-import androidx.fragment.app.Fragment;
 import androidx.navigation.Navigation;
 import androidx.recyclerview.widget.GridLayoutManager;
-import androidx.recyclerview.widget.ItemTouchHelper;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.health.openworkout.R;
@@ -25,63 +20,89 @@ import com.health.openworkout.core.OpenWorkout;
 import com.health.openworkout.core.datatypes.TrainingPlan;
 import com.health.openworkout.core.datatypes.WorkoutSession;
 import com.health.openworkout.gui.datatypes.GenericAdapter;
+import com.health.openworkout.gui.datatypes.GenericFragment;
 
-import java.util.Collections;
 import java.util.List;
 
-public class SessionFragment extends Fragment {
+public class SessionFragment extends GenericFragment {
     private RecyclerView sessionsView;
 
     private TrainingPlan trainingPlan;
     private List<WorkoutSession> workoutSessionList;
 
     private SessionsAdapter sessionsAdapter;
-    private ItemTouchHelper touchHelper;
-
-    private static GenericAdapter.FRAGMENT_MODE mode = GenericAdapter.FRAGMENT_MODE.VIEW;
-    private MenuItem saveMenu;
-    private MenuItem editMenu;
 
     public View onCreateView(@NonNull LayoutInflater inflater,
                              ViewGroup container, Bundle savedInstanceState) {
         View root = inflater.inflate(R.layout.fragment_session, container, false);
 
-        setHasOptionsMenu(true);
-
         sessionsView = root.findViewById(R.id.sessionsView);
 
         sessionsView.setHasFixedSize(true);
         sessionsView.setLayoutManager(new GridLayoutManager(getContext(), getNumberOfColumns()));
 
-        touchHelper = new ItemTouchHelper(new ItemTouchHelper
-                .SimpleCallback(ItemTouchHelper.DOWN | ItemTouchHelper.UP | ItemTouchHelper.RIGHT | ItemTouchHelper.LEFT, ItemTouchHelper.ACTION_STATE_IDLE) {
+        loadFromDatabase();
 
-            @Override
-            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {
-                int from = viewHolder.getAdapterPosition();
-                int to = target.getAdapterPosition();
+        return root;
+    }
 
-                Collections.swap(workoutSessionList, from, to);
-                sessionsAdapter.notifyItemMoved(from, to);
-                return true;
-            }
+    @Override
+    protected String getTitle() {
+        return trainingPlan.getName();
+    }
 
-            @Override
-            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {
-            }
+    @Override
+    protected GenericAdapter getAdapter() {
+        return sessionsAdapter;
+    }
 
-            @Override
-            public boolean isLongPressDragEnabled() {
-                return false;
-            }
-        });
+    @Override
+    protected RecyclerView getRecyclerView() {
+        return sessionsView;
+    }
 
-        loadFromDatabase();
+    @Override
+    protected List getItemList() {
+        return workoutSessionList;
+    }
 
-        return root;
+    @Override
+    protected void onSelectClick(int position) {
+        WorkoutSession workoutSession = workoutSessionList.get(position);
+
+        SessionFragmentDirections.ActionSessionFragmentToWorkoutFragment action = SessionFragmentDirections.actionSessionFragmentToWorkoutFragment();
+        action.setSessionWorkoutId(workoutSession.getWorkoutSessionId());
+        Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
+    }
+
+    @Override
+    protected void onEditClick(int position) {
+        WorkoutSession workoutSession = workoutSessionList.get(position);
+
+        SessionFragmentDirections.ActionSessionsFragmentToSessionSettingsFragment action = SessionFragmentDirections.actionSessionsFragmentToSessionSettingsFragment();
+        action.setWorkoutSessionId(workoutSession.getWorkoutSessionId());
+        action.setMode(SessionSettingsFragment.SESSION_MODE.EDIT);
+        action.setTitle(getString(R.string.label_edit));
+        Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
+    }
+
+    @Override
+    protected void onDeleteClick(int position) {
+        Toast.makeText(getContext(), String.format(getString(R.string.label_delete_toast), workoutSessionList.get(position).getName()), Toast.LENGTH_SHORT).show();
+        getItemList().remove(position);
     }
 
-    private void loadFromDatabase() {
+    @Override
+    protected void onAddClick() {
+        SessionFragmentDirections.ActionSessionsFragmentToSessionSettingsFragment action = SessionFragmentDirections.actionSessionsFragmentToSessionSettingsFragment();
+        action.setTrainingPlanId(trainingPlan.getTrainingPlanId());
+        action.setMode(SessionSettingsFragment.SESSION_MODE.ADD);
+        action.setTitle(getString(R.string.label_add));
+        Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
+    }
+
+    @Override
+    protected void loadFromDatabase() {
         long trainingPlanId = SessionFragmentArgs.fromBundle(getArguments()).getTrainingPlanId();
         trainingPlan = OpenWorkout.getInstance().getTrainingPlan(trainingPlanId);
 
@@ -89,60 +110,10 @@ public class SessionFragment extends Fragment {
 
         sessionsAdapter = new SessionsAdapter(getContext(), workoutSessionList, mode);
         sessionsView.setAdapter(sessionsAdapter);
-
-        if (mode == GenericAdapter.FRAGMENT_MODE.VIEW) {
-            touchHelper.attachToRecyclerView(null);
-
-            sessionsAdapter.setOnItemClickListener(new GenericAdapter.OnGenericClickListener() {
-                @Override
-                public void onItemClick(int position, View v) {
-                    WorkoutSession workoutSession = workoutSessionList.get(position);
-
-                    SessionFragmentDirections.ActionSessionFragmentToWorkoutFragment action = SessionFragmentDirections.actionSessionFragmentToWorkoutFragment();
-                    action.setSessionWorkoutId(workoutSession.getWorkoutSessionId());
-                    Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
-                }
-            });
-        }
-
-        if (mode == GenericAdapter.FRAGMENT_MODE.EDIT) {
-            sessionsAdapter.setOnItemClickListener(null);
-
-            touchHelper.attachToRecyclerView(sessionsView);
-
-            sessionsAdapter.setOnItemEditClickListener(new GenericAdapter.OnGenericClickListener() {
-                @Override
-                public void onItemClick(int position, View v) {
-                    WorkoutSession workoutSession = workoutSessionList.get(position);
-
-                    SessionFragmentDirections.ActionSessionsFragmentToSessionSettingsFragment action = SessionFragmentDirections.actionSessionsFragmentToSessionSettingsFragment();
-                    action.setWorkoutSessionId(workoutSession.getWorkoutSessionId());
-                    action.setMode(SessionSettingsFragment.SESSION_MODE.EDIT);
-                    action.setTitle(getString(R.string.label_edit));
-                    Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
-                }
-            });
-
-            sessionsAdapter.setOnItemDeleteClickListener(new GenericAdapter.OnGenericClickListener() {
-                @Override
-                public void onItemClick(int position, View v) {
-                    Toast.makeText(getContext(), String.format(getString(R.string.label_delete_toast), workoutSessionList.get(position).getName()), Toast.LENGTH_SHORT).show();
-                    workoutSessionList.remove(position);
-
-                    sessionsAdapter.notifyItemRemoved(position);
-                }
-            });
-
-            sessionsAdapter.setOnItemReorderClickListener(new GenericAdapter.OnGenericClickListener() {
-                @Override
-                public void onItemClick(int position, View v) {
-                    touchHelper.startDrag(sessionsView.findViewHolderForLayoutPosition(position));
-                }
-            });
-        }
     }
 
-    private void saveToDatabase() {
+    @Override
+    protected void saveToDatabase() {
         TrainingPlan databaseTrainingPlan = OpenWorkout.getInstance().getTrainingPlan(trainingPlan.getTrainingPlanId());
         OpenWorkout.getInstance().deleteTrainingPlan(databaseTrainingPlan);
 
@@ -154,62 +125,6 @@ public class SessionFragment extends Fragment {
         OpenWorkout.getInstance().insertTrainingPlan(trainingPlan);
     }
 
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.fragment_menu, menu);
-
-        saveMenu = menu.findItem(R.id.save);
-        editMenu = menu.findItem(R.id.edit);
-
-        refreshMenuVisibility();
-
-        super.onCreateOptionsMenu(menu, inflater);
-    }
-
-    private void refreshMenuVisibility() {
-        switch (mode) {
-            case VIEW:
-                saveMenu.setVisible(false);
-                editMenu.setVisible(true);
-                break;
-            case EDIT:
-                saveMenu.setVisible(true);
-                editMenu.setVisible(false);
-                break;
-        }
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            case R.id.add:
-                SessionFragmentDirections.ActionSessionsFragmentToSessionSettingsFragment action = SessionFragmentDirections.actionSessionsFragmentToSessionSettingsFragment();
-                action.setTrainingPlanId(trainingPlan.getTrainingPlanId());
-                action.setMode(SessionSettingsFragment.SESSION_MODE.ADD);
-                action.setTitle(getString(R.string.label_add));
-                Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
-                return true;
-            case R.id.edit:
-                mode = GenericAdapter.FRAGMENT_MODE.EDIT;
-                refreshMenuVisibility();
-                loadFromDatabase();
-                return true;
-            case R.id.save:
-                mode = GenericAdapter.FRAGMENT_MODE.VIEW;
-                refreshMenuVisibility();
-                saveToDatabase();
-                loadFromDatabase();
-                Toast.makeText(getContext(), String.format(getString(R.string.label_save_toast), trainingPlan.getName()), Toast.LENGTH_SHORT).show();
-                return true;
-            case R.id.reset:
-                Toast.makeText(getContext(), String.format(getString(R.string.label_reset_toast), trainingPlan.getName()), Toast.LENGTH_SHORT).show();
-                loadFromDatabase();
-                return true;
-            default:
-                return super.onOptionsItemSelected(item);
-        }
-    }
-
     private int getNumberOfColumns() {
         View view = View.inflate(getContext(), R.layout.item_session, null);
         view.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);
diff --git a/app/src/main/java/com/health/openworkout/gui/session/SessionsAdapter.java b/app/src/main/java/com/health/openworkout/gui/session/SessionsAdapter.java
index de10b39..fc06b63 100644
--- a/app/src/main/java/com/health/openworkout/gui/session/SessionsAdapter.java
+++ b/app/src/main/java/com/health/openworkout/gui/session/SessionsAdapter.java
@@ -16,15 +16,16 @@ import androidx.annotation.NonNull;
 import com.health.openworkout.R;
 import com.health.openworkout.core.datatypes.WorkoutSession;
 import com.health.openworkout.gui.datatypes.GenericAdapter;
+import com.health.openworkout.gui.datatypes.GenericFragment;
 
 import java.util.List;
 
 public class SessionsAdapter extends GenericAdapter<SessionsAdapter.ViewHolder> {
-    private GenericAdapter.FRAGMENT_MODE mode;
+    private GenericFragment.FRAGMENT_MODE mode;
     private List<WorkoutSession> workoutSessionList;
     private Context context;
 
-    public SessionsAdapter(Context aContext, List<WorkoutSession> workoutSessionList, GenericAdapter.FRAGMENT_MODE mode) {
+    public SessionsAdapter(Context aContext, List<WorkoutSession> workoutSessionList, GenericFragment.FRAGMENT_MODE mode) {
         super(aContext, mode);
         this.mode = mode;
         this.context = aContext;
diff --git a/app/src/main/java/com/health/openworkout/gui/training/TrainingFragment.java b/app/src/main/java/com/health/openworkout/gui/training/TrainingFragment.java
index 752beb1..ebf4135 100644
--- a/app/src/main/java/com/health/openworkout/gui/training/TrainingFragment.java
+++ b/app/src/main/java/com/health/openworkout/gui/training/TrainingFragment.java
@@ -6,17 +6,12 @@ package com.health.openworkout.gui.training;
 
 import android.os.Bundle;
 import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuInflater;
-import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
-import androidx.fragment.app.Fragment;
 import androidx.navigation.Navigation;
-import androidx.recyclerview.widget.ItemTouchHelper;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -25,119 +20,46 @@ import com.health.openworkout.core.OpenWorkout;
 import com.health.openworkout.core.datatypes.TrainingPlan;
 import com.health.openworkout.core.datatypes.User;
 import com.health.openworkout.gui.datatypes.GenericAdapter;
+import com.health.openworkout.gui.datatypes.GenericFragment;
 
-import java.util.Collections;
 import java.util.List;
 
-public class TrainingFragment extends Fragment {
+public class TrainingFragment extends GenericFragment {
     private RecyclerView trainingsView;
 
     private List<TrainingPlan> trainingPlanList;
 
     private TrainingsAdapter trainingsAdapter;
-    private ItemTouchHelper touchHelper;
-
-    private static GenericAdapter.FRAGMENT_MODE mode = GenericAdapter.FRAGMENT_MODE.VIEW;
-    private MenuItem saveMenu;
-    private MenuItem editMenu;
 
     public View onCreateView(@NonNull LayoutInflater inflater,
                              ViewGroup container, Bundle savedInstanceState) {
         View root = inflater.inflate(R.layout.fragment_training, container, false);
-        setHasOptionsMenu(true);
 
         trainingsView = root.findViewById(R.id.trainingsView);
 
         trainingsView.setHasFixedSize(true);
         trainingsView.setLayoutManager(new LinearLayoutManager(getContext()));
 
-        touchHelper = new ItemTouchHelper(new ItemTouchHelper
-                .SimpleCallback(ItemTouchHelper.DOWN | ItemTouchHelper.UP, ItemTouchHelper.ACTION_STATE_IDLE) {
-
-            @Override
-            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {
-                int from = viewHolder.getAdapterPosition();
-                int to = target.getAdapterPosition();
-
-                Collections.swap(trainingPlanList, from, to);
-                trainingsAdapter.notifyItemMoved(from, to);
-                return true;
-            }
-
-            @Override
-            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {
-            }
-
-            @Override
-            public boolean isLongPressDragEnabled() {
-                return false;
-            }
-        });
-
         loadFromDatabase();
 
         return root;
     }
 
-    private void loadFromDatabase() {
+    @Override
+    protected String getTitle() {
+        return getString(R.string.label_training_plans);
+    }
+
+    @Override
+    protected void loadFromDatabase() {
         trainingPlanList = OpenWorkout.getInstance().getTrainingPlans();
 
         trainingsAdapter = new TrainingsAdapter(getContext(), trainingPlanList, mode);
         trainingsView.setAdapter(trainingsAdapter);
-
-        if (mode == GenericAdapter.FRAGMENT_MODE.VIEW) {
-            touchHelper.attachToRecyclerView(null);
-
-            trainingsAdapter.setOnItemClickListener(new GenericAdapter.OnGenericClickListener() {
-                @Override
-                public void onItemClick(int position, View v) {
-                    TrainingPlan trainingPlan = trainingPlanList.get(position);
-
-                    TrainingFragmentDirections.ActionTrainingFragmentToSessionFragment action = TrainingFragmentDirections.actionTrainingFragmentToSessionFragment();
-                    action.setTrainingPlanId(trainingPlan.getTrainingPlanId());
-                    Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
-                }
-            });
-        }
-
-        if (mode == GenericAdapter.FRAGMENT_MODE.EDIT) {
-            trainingsAdapter.setOnItemClickListener(null);
-
-            touchHelper.attachToRecyclerView(trainingsView);
-
-            trainingsAdapter.setOnItemEditClickListener(new GenericAdapter.OnGenericClickListener() {
-                @Override
-                public void onItemClick(int position, View v) {
-                    TrainingPlan trainingPlan = trainingPlanList.get(position);
-
-                    TrainingFragmentDirections.ActionTrainingFragmentToTrainingSettingsFragment action = TrainingFragmentDirections.actionTrainingFragmentToTrainingSettingsFragment();
-                    action.setTrainingPlanId(trainingPlan.getTrainingPlanId());
-                    action.setMode(TrainingSettingsFragment.TRAINING_MODE.EDIT);
-                    action.setTitle(getString(R.string.label_edit));
-                    Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
-                }
-            });
-
-            trainingsAdapter.setOnItemDeleteClickListener(new GenericAdapter.OnGenericClickListener() {
-                @Override
-                public void onItemClick(int position, View v) {
-                    Toast.makeText(getContext(), String.format(getString(R.string.label_delete_toast), trainingPlanList.get(position).getName()), Toast.LENGTH_SHORT).show();
-                    trainingPlanList.remove(position);
-
-                    trainingsAdapter.notifyItemRemoved(position);
-                }
-            });
-
-            trainingsAdapter.setOnItemReorderClickListener(new GenericAdapter.OnGenericClickListener() {
-                @Override
-                public void onItemClick(int position, View v) {
-                    touchHelper.startDrag(trainingsView.findViewHolderForLayoutPosition(position));
-                }
-            });
-        }
     }
 
-    private void saveToDatabase() {
+    @Override
+    protected void saveToDatabase() {
         User user = OpenWorkout.getInstance().getCurrentUser();
         long userTrainingPlanId = user.getTrainingsPlanId();
 
@@ -162,57 +84,51 @@ public class TrainingFragment extends Fragment {
     }
 
     @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.fragment_menu, menu);
+    protected GenericAdapter getAdapter() {
+        return trainingsAdapter;
+    }
+
+    @Override
+    protected RecyclerView getRecyclerView() {
+        return trainingsView;
+    }
+
+    @Override
+    protected List getItemList() {
+        return trainingPlanList;
+    }
 
-        saveMenu = menu.findItem(R.id.save);
-        editMenu = menu.findItem(R.id.edit);
+    @Override
+    protected void onSelectClick(int position) {
+        TrainingPlan trainingPlan = trainingPlanList.get(position);
 
-        refreshMenuVisibility();
+        TrainingFragmentDirections.ActionTrainingFragmentToSessionFragment action = TrainingFragmentDirections.actionTrainingFragmentToSessionFragment();
+        action.setTrainingPlanId(trainingPlan.getTrainingPlanId());
+        Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
+    }
 
-        super.onCreateOptionsMenu(menu, inflater);
+    @Override
+    protected void onEditClick(int position) {
+        TrainingPlan trainingPlan = trainingPlanList.get(position);
+
+        TrainingFragmentDirections.ActionTrainingFragmentToTrainingSettingsFragment action = TrainingFragmentDirections.actionTrainingFragmentToTrainingSettingsFragment();
+        action.setTrainingPlanId(trainingPlan.getTrainingPlanId());
+        action.setMode(TrainingSettingsFragment.TRAINING_MODE.EDIT);
+        action.setTitle(getString(R.string.label_edit));
+        Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
     }
 
-    private void refreshMenuVisibility() {
-        switch (mode) {
-            case VIEW:
-                saveMenu.setVisible(false);
-                editMenu.setVisible(true);
-                break;
-            case EDIT:
-                saveMenu.setVisible(true);
-                editMenu.setVisible(false);
-                break;
-        }
+    @Override
+    protected void onDeleteClick(int position) {
+        Toast.makeText(getContext(), String.format(getString(R.string.label_delete_toast), trainingPlanList.get(position).getName()), Toast.LENGTH_SHORT).show();
+        trainingPlanList.remove(position);
     }
 
     @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            case R.id.add:
-                TrainingFragmentDirections.ActionTrainingFragmentToTrainingSettingsFragment action = TrainingFragmentDirections.actionTrainingFragmentToTrainingSettingsFragment();
-                action.setMode(TrainingSettingsFragment.TRAINING_MODE.ADD);
-                action.setTitle(getString(R.string.label_add));
-                Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
-                return true;
-            case R.id.edit:
-                mode = GenericAdapter.FRAGMENT_MODE.EDIT;
-                refreshMenuVisibility();
-                loadFromDatabase();
-                return true;
-            case R.id.save:
-                mode = GenericAdapter.FRAGMENT_MODE.VIEW;
-                refreshMenuVisibility();
-                saveToDatabase();
-                loadFromDatabase();
-                Toast.makeText(getContext(), String.format(getString(R.string.label_save_toast), getString(R.string.label_training_plans)), Toast.LENGTH_SHORT).show();
-                return true;
-            case R.id.reset:
-                Toast.makeText(getContext(), String.format(getString(R.string.label_reset_toast), getString(R.string.label_training_plans)), Toast.LENGTH_SHORT).show();
-                loadFromDatabase();
-                return true;
-            default:
-                return super.onOptionsItemSelected(item);
-        }
+    protected void onAddClick() {
+        TrainingFragmentDirections.ActionTrainingFragmentToTrainingSettingsFragment action = TrainingFragmentDirections.actionTrainingFragmentToTrainingSettingsFragment();
+        action.setMode(TrainingSettingsFragment.TRAINING_MODE.ADD);
+        action.setTitle(getString(R.string.label_add));
+        Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
     }
 }
diff --git a/app/src/main/java/com/health/openworkout/gui/training/TrainingsAdapter.java b/app/src/main/java/com/health/openworkout/gui/training/TrainingsAdapter.java
index 059f15e..9b3c799 100644
--- a/app/src/main/java/com/health/openworkout/gui/training/TrainingsAdapter.java
+++ b/app/src/main/java/com/health/openworkout/gui/training/TrainingsAdapter.java
@@ -18,6 +18,7 @@ import com.health.openworkout.R;
 import com.health.openworkout.core.OpenWorkout;
 import com.health.openworkout.core.datatypes.TrainingPlan;
 import com.health.openworkout.gui.datatypes.GenericAdapter;
+import com.health.openworkout.gui.datatypes.GenericFragment;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -26,11 +27,11 @@ import java.util.List;
 import timber.log.Timber;
 
 public class TrainingsAdapter extends GenericAdapter<TrainingsAdapter.ViewHolder> {
-    private GenericAdapter.FRAGMENT_MODE mode;
+    private GenericFragment.FRAGMENT_MODE mode;
     private List<TrainingPlan> trainingPlanList;
     private Context context;
 
-    public TrainingsAdapter(Context aContext, List<TrainingPlan> trainingPlanList, GenericAdapter.FRAGMENT_MODE mode) {
+    public TrainingsAdapter(Context aContext, List<TrainingPlan> trainingPlanList, GenericFragment.FRAGMENT_MODE mode) {
         super(aContext, mode);
         this.mode = mode;
         this.context = aContext;
diff --git a/app/src/main/java/com/health/openworkout/gui/workout/WorkoutFragment.java b/app/src/main/java/com/health/openworkout/gui/workout/WorkoutFragment.java
index cd535c9..1cb4875 100644
--- a/app/src/main/java/com/health/openworkout/gui/workout/WorkoutFragment.java
+++ b/app/src/main/java/com/health/openworkout/gui/workout/WorkoutFragment.java
@@ -6,17 +6,12 @@ package com.health.openworkout.gui.workout;
 
 import android.os.Bundle;
 import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuInflater;
-import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
-import androidx.fragment.app.Fragment;
 import androidx.navigation.Navigation;
-import androidx.recyclerview.widget.ItemTouchHelper;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -25,21 +20,16 @@ import com.health.openworkout.core.OpenWorkout;
 import com.health.openworkout.core.datatypes.WorkoutItem;
 import com.health.openworkout.core.datatypes.WorkoutSession;
 import com.health.openworkout.gui.datatypes.GenericAdapter;
+import com.health.openworkout.gui.datatypes.GenericFragment;
 
-import java.util.Collections;
 import java.util.List;
 
-public class WorkoutFragment extends Fragment {
+public class WorkoutFragment extends GenericFragment {
     private RecyclerView workoutsView;
     private WorkoutSession workoutSession;
     private List<WorkoutItem> workoutItemList;
 
     private WorkoutsAdapter workoutsAdapter;
-    private ItemTouchHelper touchHelper;
-
-    private static GenericAdapter.FRAGMENT_MODE mode = GenericAdapter.FRAGMENT_MODE.VIEW;
-    private MenuItem saveMenu;
-    private MenuItem editMenu;
 
     public View onCreateView(@NonNull LayoutInflater inflater,
                              final ViewGroup container, Bundle savedInstanceState) {
@@ -51,35 +41,18 @@ public class WorkoutFragment extends Fragment {
         workoutsView.setHasFixedSize(true);
         workoutsView.setLayoutManager(new LinearLayoutManager(getContext()));
 
-        touchHelper = new ItemTouchHelper(new ItemTouchHelper
-                .SimpleCallback(ItemTouchHelper.DOWN | ItemTouchHelper.UP, ItemTouchHelper.ACTION_STATE_IDLE) {
-
-            @Override
-            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {
-                int from = viewHolder.getAdapterPosition();
-                int to = target.getAdapterPosition();
-
-                Collections.swap(workoutItemList, from, to);
-                workoutsAdapter.notifyItemMoved(from, to);
-                return true;
-            }
-
-            @Override
-            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {
-            }
-
-            @Override
-            public boolean isLongPressDragEnabled() {
-                return false;
-            }
-        });
-
         loadFromDatabase();
 
         return root;
     }
 
-    private void loadFromDatabase() {
+    @Override
+    protected String getTitle() {
+        return workoutSession.getName();
+    }
+
+    @Override
+    protected void loadFromDatabase() {
         final long workoutSessionId = WorkoutFragmentArgs.fromBundle(getArguments()).getSessionWorkoutId();
         workoutSession = OpenWorkout.getInstance().getWorkoutSession(workoutSessionId);
 
@@ -87,62 +60,10 @@ public class WorkoutFragment extends Fragment {
 
         workoutsAdapter = new WorkoutsAdapter(getContext(), workoutItemList, mode);
         workoutsView.setAdapter(workoutsAdapter);
-
-        if (mode == GenericAdapter.FRAGMENT_MODE.VIEW) {
-            touchHelper.attachToRecyclerView(null);
-
-            workoutsAdapter.setOnItemClickListener(new GenericAdapter.OnGenericClickListener() {
-                @Override
-                public void onItemClick(int position, View v) {
-                    WorkoutItem workoutItem = workoutItemList.get(position);
-
-                    WorkoutFragmentDirections.ActionWorkoutFragmentToWorkoutSlideFragment action = WorkoutFragmentDirections.actionWorkoutFragmentToWorkoutSlideFragment();
-                    action.setSessionWorkoutId(workoutSession.getWorkoutSessionId());
-                    action.setWorkoutItemId(workoutItem.getWorkoutItemId());
-                    Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
-                }
-            });
-        }
-
-        if (mode == GenericAdapter.FRAGMENT_MODE.EDIT) {
-            workoutsAdapter.setOnItemClickListener(null);
-
-            touchHelper.attachToRecyclerView(workoutsView);
-
-            workoutsAdapter.setOnItemEditClickListener(new GenericAdapter.OnGenericClickListener() {
-                @Override
-                public void onItemClick(int position, View v) {
-                    WorkoutItem workoutItem = workoutItemList.get(position);
-
-                    WorkoutFragmentDirections.ActionWorkoutFramgentToWorkoutSettingsFragment action = WorkoutFragmentDirections.actionWorkoutFramgentToWorkoutSettingsFragment();
-                    action.setSessionWorkoutId(workoutSession.getWorkoutSessionId());
-                    action.setWorkoutItemId(workoutItem.getWorkoutItemId());
-                    action.setMode(WorkoutSettingsFragment.WORKOUT_MODE.EDIT);
-                    action.setTitle(getString(R.string.label_edit));
-                    Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
-                }
-            });
-
-            workoutsAdapter.setOnItemDeleteClickListener(new GenericAdapter.OnGenericClickListener() {
-                @Override
-                public void onItemClick(int position, View v) {
-                    Toast.makeText(getContext(), String.format(getString(R.string.label_delete_toast), workoutItemList.get(position).getName()), Toast.LENGTH_SHORT).show();
-                    workoutItemList.remove(position);
-
-                    workoutsAdapter.notifyItemRemoved(position);
-                }
-            });
-
-            workoutsAdapter.setOnItemReorderClickListener(new GenericAdapter.OnGenericClickListener() {
-                @Override
-                public void onItemClick(int position, View v) {
-                    touchHelper.startDrag(workoutsView.findViewHolderForLayoutPosition(position));
-                }
-            });
-        }
     }
 
-    private void saveToDatabase() {
+    @Override
+    protected void saveToDatabase() {
         WorkoutSession databaseWorkoutSession = OpenWorkout.getInstance().getWorkoutSession(workoutSession.getWorkoutSessionId());
         OpenWorkout.getInstance().deleteWorkoutSession(databaseWorkoutSession);
 
@@ -155,58 +76,54 @@ public class WorkoutFragment extends Fragment {
     }
 
     @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.fragment_menu, menu);
+    protected GenericAdapter getAdapter() {
+        return workoutsAdapter;
+    }
 
-        saveMenu = menu.findItem(R.id.save);
-        editMenu = menu.findItem(R.id.edit);
+    @Override
+    protected RecyclerView getRecyclerView() {
+        return workoutsView;
+    }
 
-        refreshMenuVisibility();
+    @Override
+    protected List getItemList() {
+        return workoutItemList;
+    }
 
-        super.onCreateOptionsMenu(menu, inflater);
+    @Override
+    protected void onSelectClick(int position) {
+        WorkoutItem workoutItem = workoutItemList.get(position);
+
+        WorkoutFragmentDirections.ActionWorkoutFragmentToWorkoutSlideFragment action = WorkoutFragmentDirections.actionWorkoutFragmentToWorkoutSlideFragment();
+        action.setSessionWorkoutId(workoutSession.getWorkoutSessionId());
+        action.setWorkoutItemId(workoutItem.getWorkoutItemId());
+        Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
     }
 
-    private void refreshMenuVisibility() {
-        switch (mode) {
-            case VIEW:
-                saveMenu.setVisible(false);
-                editMenu.setVisible(true);
-                break;
-            case EDIT:
-                saveMenu.setVisible(true);
-                editMenu.setVisible(false);
-                break;
-        }
+    @Override
+    protected void onEditClick(int position) {
+        WorkoutItem workoutItem = workoutItemList.get(position);
+
+        WorkoutFragmentDirections.ActionWorkoutFramgentToWorkoutSettingsFragment action = WorkoutFragmentDirections.actionWorkoutFramgentToWorkoutSettingsFragment();
+        action.setSessionWorkoutId(workoutSession.getWorkoutSessionId());
+        action.setWorkoutItemId(workoutItem.getWorkoutItemId());
+        action.setMode(WorkoutSettingsFragment.WORKOUT_MODE.EDIT);
+        action.setTitle(getString(R.string.label_edit));
+        Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
     }
 
     @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            case R.id.add:
-                WorkoutFragmentDirections.ActionWorkoutFramgentToWorkoutSettingsFragment action = WorkoutFragmentDirections.actionWorkoutFramgentToWorkoutSettingsFragment();
-                action.setSessionWorkoutId(workoutSession.getWorkoutSessionId());
-                action.setMode(WorkoutSettingsFragment.WORKOUT_MODE.ADD);
-                action.setTitle(getString(R.string.label_add));
-                Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
-                return true;
-            case R.id.edit:
-                mode = GenericAdapter.FRAGMENT_MODE.EDIT;
-                refreshMenuVisibility();
-                loadFromDatabase();
-                return true;
-            case R.id.save:
-                mode = GenericAdapter.FRAGMENT_MODE.VIEW;
-                refreshMenuVisibility();
-                saveToDatabase();
-                loadFromDatabase();
-                Toast.makeText(getContext(), String.format(getString(R.string.label_save_toast), workoutSession.getName()), Toast.LENGTH_SHORT).show();
-                return true;
-            case R.id.reset:
-                Toast.makeText(getContext(), String.format(getString(R.string.label_reset_toast), workoutSession.getName()), Toast.LENGTH_SHORT).show();
-                loadFromDatabase();
-                return true;
-            default:
-                return super.onOptionsItemSelected(item);
-        }
+    protected void onDeleteClick(int position) {
+        Toast.makeText(getContext(), String.format(getString(R.string.label_delete_toast), workoutItemList.get(position).getName()), Toast.LENGTH_SHORT).show();
+        workoutItemList.remove(position);
+    }
+
+    @Override
+    protected void onAddClick() {
+        WorkoutFragmentDirections.ActionWorkoutFramgentToWorkoutSettingsFragment action = WorkoutFragmentDirections.actionWorkoutFramgentToWorkoutSettingsFragment();
+        action.setSessionWorkoutId(workoutSession.getWorkoutSessionId());
+        action.setMode(WorkoutSettingsFragment.WORKOUT_MODE.ADD);
+        action.setTitle(getString(R.string.label_add));
+        Navigation.findNavController(getActivity(), R.id.nav_host_fragment).navigate(action);
     }
 }
diff --git a/app/src/main/java/com/health/openworkout/gui/workout/WorkoutsAdapter.java b/app/src/main/java/com/health/openworkout/gui/workout/WorkoutsAdapter.java
index 357729e..da4de82 100644
--- a/app/src/main/java/com/health/openworkout/gui/workout/WorkoutsAdapter.java
+++ b/app/src/main/java/com/health/openworkout/gui/workout/WorkoutsAdapter.java
@@ -18,6 +18,7 @@ import com.health.openworkout.R;
 import com.health.openworkout.core.OpenWorkout;
 import com.health.openworkout.core.datatypes.WorkoutItem;
 import com.health.openworkout.gui.datatypes.GenericAdapter;
+import com.health.openworkout.gui.datatypes.GenericFragment;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -26,11 +27,11 @@ import java.util.List;
 import timber.log.Timber;
 
 public class WorkoutsAdapter extends GenericAdapter<WorkoutsAdapter.ViewHolder> {
-    private GenericAdapter.FRAGMENT_MODE mode;
+    private GenericFragment.FRAGMENT_MODE mode;
     private final List<WorkoutItem> workoutItemList;
     private Context context;
 
-    public WorkoutsAdapter(Context aContext, List<WorkoutItem> workoutItemList, GenericAdapter.FRAGMENT_MODE mode) {
+    public WorkoutsAdapter(Context aContext, List<WorkoutItem> workoutItemList, GenericFragment.FRAGMENT_MODE mode) {
         super(aContext, mode);
         this.mode = mode;
         this.context = aContext;
