diff --git a/app/src/main/java/ch/bailu/aat/gpx/parser/SimpleStream.java b/app/src/main/java/ch/bailu/aat/gpx/parser/SimpleStream.java
index 2dc4b538..57c2f5c3 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/parser/SimpleStream.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/parser/SimpleStream.java
@@ -21,10 +21,10 @@ public class SimpleStream implements Closeable {
     private final Reader reader;
     private int c=0;
 
-    public SimpleStream(AbsAccess file) throws FileNotFoundException, UnsupportedEncodingException {
+    public SimpleStream(AbsAccess file) throws IOException {
         
         
-        InputStream istream = file.open_r();//new FileInputStream(file);
+        InputStream istream = file.open_r();
         Reader ireader = new InputStreamReader(istream, CHARSET);
         reader = new BufferedReader(ireader, BUFFER_BYTES);            
     }
diff --git a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeTileLayer.java b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeTileLayer.java
index 1fa68818..456bb8fe 100644
--- a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeTileLayer.java
+++ b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeTileLayer.java
@@ -1,7 +1,6 @@
 package ch.bailu.aat.map.mapsforge;
 
 import android.content.SharedPreferences;
-import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.Rect;
 
@@ -21,7 +20,6 @@ import java.util.List;
 import ch.bailu.aat.map.MapContext;
 import ch.bailu.aat.map.layer.MapLayerInterface;
 import ch.bailu.aat.map.tile.TileProviderInterface;
-import ch.bailu.aat.util.ui.AppLog;
 
 public class MapsForgeTileLayer extends Layer implements MapLayerInterface, Observer {
 
@@ -50,14 +48,14 @@ public class MapsForgeTileLayer extends Layer implements MapLayerInterface, Obse
             draw(
                     box,
                     zoom,
-                    AndroidGraphicFactory.getCanvas(c),
+                    c,
                     tlp,
                     displayModel.getTileSize());
         }
     }
 
 
-    private void draw (BoundingBox box, byte z, android.graphics.Canvas canvas, Point tlp, int tileSize) {
+    private void draw (BoundingBox box, byte z, Canvas canvas, Point tlp, int tileSize) {
         List<TilePosition> tilePositions = LayerUtil.getTilePositions(box, z, tlp, tileSize);
 
         provider.setCapacity(tilePositions.size());
@@ -82,7 +80,8 @@ public class MapsForgeTileLayer extends Layer implements MapLayerInterface, Obse
                 r.right = r.left + tileSize;
                 r.bottom = r.top + tileSize;
 
-                canvas.drawBitmap(AndroidGraphicFactory.getBitmap(bitmap), null, r, paint);
+                AndroidGraphicFactory.getCanvas(canvas).
+                drawBitmap(AndroidGraphicFactory.getBitmap(bitmap), null, r, paint);
             }
         }
     }
diff --git a/app/src/main/java/ch/bailu/aat/services/icons/IconMap.java b/app/src/main/java/ch/bailu/aat/services/icons/IconMap.java
index c715ffe0..9579e426 100644
--- a/app/src/main/java/ch/bailu/aat/services/icons/IconMap.java
+++ b/app/src/main/java/ch/bailu/aat/services/icons/IconMap.java
@@ -5,21 +5,14 @@ import android.util.SparseArray;
 import java.io.File;
 
 public class IconMap {
-    private final static String ICON_SUFFIX_BIG=".n.64.png";
-    private final static String ICON_SUFFIX_SMALL=".n.48.png";
-
     private final static String SVG_PREFIX="symbols/";
     private final static String SVG_SUFFIX=".svg";
 
 
    public class Icon {
-        public final String big;
-        public final String small;
         public final String svg;
 
         public Icon(String file_name) {
-            big   = new File(new File(directory,"png"), file_name+ICON_SUFFIX_SMALL).toString();
-            small = new File(new File(directory,"png"), file_name+ICON_SUFFIX_BIG).toString();
             svg = toSymbolAssetPath(file_name);
         }
     }
@@ -45,12 +38,6 @@ public class IconMap {
 
 
     private final SparseArray<SparseArray<Icon>> key_list = new SparseArray<>(50);
-    private final String directory;
-
-
-    public IconMap(String d) {
-        directory = d;
-    }
 
 
     public void add(String key, String value, String file_name) {
diff --git a/app/src/main/java/ch/bailu/aat/services/icons/IconMapService.java b/app/src/main/java/ch/bailu/aat/services/icons/IconMapService.java
index c569a4e0..0e84a7d7 100644
--- a/app/src/main/java/ch/bailu/aat/services/icons/IconMapService.java
+++ b/app/src/main/java/ch/bailu/aat/services/icons/IconMapService.java
@@ -9,7 +9,9 @@ import ch.bailu.aat.gpx.GpxAttributes;
 import ch.bailu.aat.gpx.interfaces.GpxPointInterface;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.VirtualService;
+import ch.bailu.aat.util.fs.AbsAccess;
 import ch.bailu.aat.util.fs.AppDirectory;
+import ch.bailu.aat.util.fs.AssetAccess;
 import ch.bailu.aat.util.fs.FileAccess;
 import ch.bailu.aat.util.ui.AppLog;
 
@@ -17,7 +19,7 @@ public class IconMapService extends VirtualService {
     private final String NKEY_KEY = "class";
     private final String NKEY_VALUE = "type";
 
-    private final static String MAP_FILE="iconmap.txt";
+    private final static String MAP_FILE="symbols/iconmap.txt";
 
 
     private final IconMap map;
@@ -28,18 +30,13 @@ public class IconMapService extends VirtualService {
         super(sc);
 
         cache = new IconCache(sc);
+        map = new IconMap();
 
-        File directory = AppDirectory.getDataDirectory(getContext(), AppDirectory.DIR_OSM_FEATURES_ICONS);
-        map = new IconMap(directory.toString());
-
-        final File mapFile = new File(directory, MAP_FILE);
-
-        if (mapFile.exists()) {
-            try {
-                new IconMapParser(new FileAccess(mapFile), map);
-            } catch (IOException e) {
-                AppLog.e(getContext(), this, e);
-            }
+        try {
+            AbsAccess map_file = new AssetAccess(sc.getContext().getAssets(), MAP_FILE);
+            new IconMapParser(map_file, map);
+        } catch (IOException e) {
+            AppLog.e(getContext(), this, e);
         }
 
 
@@ -98,26 +95,10 @@ public class IconMapService extends VirtualService {
 
 
 */
-    private String getBigIconPath(String key, String value) {
-        final IconMap.Icon icon = map.get(key,value);
-
-        if (icon == null) {
-            return null;
-        }
-
-        return icon.big;
-    }
 
 
 
     public void iconify(StringBuilder html, String key, String value) {
-        String icon = getBigIconPath(key, value);
-
-        if (icon != null) {
-            html.append("<p><img src=\"");
-            html.append(icon);
-            html.append("\"/></p>");
-        }
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/AbsAccess.java b/app/src/main/java/ch/bailu/aat/util/fs/AbsAccess.java
index 501dad61..8926a290 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/AbsAccess.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/AbsAccess.java
@@ -12,7 +12,7 @@ import java.io.InputStream;
 import java.io.OutputStream;
 
 public abstract class AbsAccess {
-    public abstract InputStream open_r() throws FileNotFoundException;
+    public abstract InputStream open_r() throws IOException;
     public abstract OutputStream open_w() throws IOException;
 
 
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/AssetAccess.java b/app/src/main/java/ch/bailu/aat/util/fs/AssetAccess.java
new file mode 100644
index 00000000..0e290eac
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/util/fs/AssetAccess.java
@@ -0,0 +1,35 @@
+package ch.bailu.aat.util.fs;
+
+import android.content.res.AssetManager;
+
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+
+public class AssetAccess extends AbsAccess {
+
+    private final String asset;
+    private final AssetManager manager;
+
+
+    public AssetAccess(AssetManager m, String a) {
+        manager = m;
+        asset = a;
+    }
+
+    @Override
+    public InputStream open_r() throws IOException {
+        return manager.open(asset);
+    }
+
+    @Override
+    public OutputStream open_w() throws IOException {
+        throw new IOException();
+    }
+
+    @Override
+    public File toFile() {
+        return new File(asset);
+    }
+}
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/FileAccess.java b/app/src/main/java/ch/bailu/aat/util/fs/FileAccess.java
index 82a4c148..d3dcd41e 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/FileAccess.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/FileAccess.java
@@ -19,6 +19,7 @@ public class FileAccess extends AbsAccess {
     }
 
 
+
     @Override
     public InputStream open_r() throws FileNotFoundException {
         return new FileInputStream(file);
