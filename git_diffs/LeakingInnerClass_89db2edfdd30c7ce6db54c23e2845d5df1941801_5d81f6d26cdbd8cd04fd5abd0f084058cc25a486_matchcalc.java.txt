diff --git a/app/src/main/java/com/DartChecker/MainActivity.java b/app/src/main/java/com/DartChecker/MainActivity.java
index 4cbbc0b..932adf8 100644
--- a/app/src/main/java/com/DartChecker/MainActivity.java
+++ b/app/src/main/java/com/DartChecker/MainActivity.java
@@ -1,14 +1,19 @@
 package com.DartChecker;
 
+import android.annotation.TargetApi;
+import android.app.Activity;
 import android.content.Context;
+import android.content.ContextWrapper;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.os.Build;
-import android.support.constraint.ConstraintLayout;
-import android.support.v7.app.AppCompatActivity;
+
+import androidx.constraintlayout.widget.ConstraintLayout;
+import androidx.appcompat.app.AppCompatActivity;
 import android.os.Bundle;
+import android.os.LocaleList;
 import android.util.DisplayMetrics;
 import android.view.KeyEvent;
 import android.view.View;
@@ -91,21 +96,65 @@ public class MainActivity extends AppCompatActivity {
     private int maxlegs = 5;
     private int maxsets = 13;
 
+    @Override
+    protected void attachBaseContext(Context base) {
+        super.attachBaseContext(updateBaseContextLocale(base));
+    }
+
+    private Context updateBaseContextLocale(Context context) {
+        final SharedPreferences settings = context.getSharedPreferences("Einstellungen", 0);
+        String language = Locale.getDefault().getLanguage();
+        if (settings.contains("Sprache")) {
+            language = settings.getString("Sprache", "en");
+        }
+        Locale locale = new Locale(language);
+        Locale.setDefault(locale);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            return updateResourcesLocale(context, locale);
+        }
+
+        return updateResourcesLocaleLegacy(context, locale);
+    }
+
+    @TargetApi(Build.VERSION_CODES.N_MR1)
+    private Context updateResourcesLocale(Context context, Locale locale) {
+        Configuration configuration = new Configuration(context.getResources().getConfiguration());
+        configuration.setLocale(locale);
+        return context.createConfigurationContext(configuration);
+    }
+
+    @SuppressWarnings("deprecation")
+    private Context updateResourcesLocaleLegacy(Context context, Locale locale) {
+        Resources resources = context.getResources();
+        Configuration configuration = resources.getConfiguration();
+        configuration.locale = locale;
+        resources.updateConfiguration(configuration, resources.getDisplayMetrics());
+        return context;
+    }
+
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         final SharedPreferences settings = getSharedPreferences("Einstellungen", 0);
-        if (settings.contains("Sprache")) startsprache = settings.getString("Sprache","en");
+        if (settings.contains("Sprache")) {
+            startsprache = settings.getString("Sprache", "en");
+        } else {
+            SharedPreferences.Editor editor = settings.edit();
+            editor.putString("SystemSprache", Locale.getDefault().getLanguage());
+            editor.apply();
+        }
         if (settings.contains("Theme")) themeauswahl = settings.getBoolean("Theme", true);
         if (themeauswahl) setTheme(R.style.AppTheme);
         else setTheme(R.style.Theme_AppCompat_Light_NoActionBar);
         setContentView(R.layout.activity_main);
 
+
         final CharSequence[] spielmode = {"301", "401", "501", "601", "701", "801", "901"};
         final CharSequence[] spieltyptext = {"X01", "FREE", "SET/LEG", "CRICKET"};
         final CharSequence[] spielmode2 = {"15-Bull", "14-Bull", "13-Bull", "12-Bull", "11-Bull", "10-Bull", "Crazy"};
-        final CharSequence[] cricketmodes = {"Classic","Cut Throat"};
+        final CharSequence[] cricketmodes = {"Classic", "Cut Throat"};
 
         if (settings.contains("setlegmodus"))
             setlegmodus = settings.getBoolean("setlegmodus", true);
@@ -114,34 +163,6 @@ public class MainActivity extends AppCompatActivity {
             maxsets = 7;
         }
 
-
-        if (settings.contains("Sprache")) {
-            if (!(settings.getString("Sprache","en")==Locale.getDefault().getLanguage())) {
-                // Sprache setzen
-                String language_code = "en";
-                language_code = settings.getString("Sprache", "en");
-                Resources res = getApplicationContext().getResources();
-                DisplayMetrics dm = res.getDisplayMetrics();
-                Configuration conf = res.getConfiguration();
-                Locale locale = new Locale(language_code);
-                Locale.setDefault(locale);
-                if (Build.VERSION.SDK_INT >= 17) {
-                    conf.setLocale(locale);
-                } else {
-                    conf.locale = locale;
-                }
-                res.updateConfiguration(conf, dm);
-                Intent intent = getIntent();
-                finish();
-                startActivity(intent);
-            }
-        } else {
-            SharedPreferences.Editor editor = settings.edit();
-            editor.putString("SystemSprache",Locale.getDefault().getLanguage());
-            editor.apply();
-        }
-
-
         allespieler = new ArrayList<>();
         // wenn Speicherdatei vorhanden, laden! ansonsten 8 Spieler erstellen und speichern
         File file = getBaseContext().getFileStreamPath(fileName);
@@ -648,7 +669,7 @@ public class MainActivity extends AppCompatActivity {
 
                 } else {
                     Intent intent;
-                    Boolean inputmode=false;
+                    boolean inputmode=false;
                     if (settings.contains("inputmethode")) inputmode=settings.getBoolean("inputmethode",false);
                     if (inputmode) { intent = new Intent(MainActivity.this, matchcalc.class);  }
                     else { intent = new Intent(MainActivity.this, match.class);}
diff --git a/app/src/main/java/com/DartChecker/cricket.java b/app/src/main/java/com/DartChecker/cricket.java
index a7814a9..1e11b3a 100644
--- a/app/src/main/java/com/DartChecker/cricket.java
+++ b/app/src/main/java/com/DartChecker/cricket.java
@@ -1,7 +1,9 @@
 package com.DartChecker;
 
 import android.annotation.SuppressLint;
+import android.annotation.TargetApi;
 import android.app.AlertDialog;
+import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -11,11 +13,12 @@ import android.graphics.Color;
 import android.graphics.Paint;
 import android.os.Build;
 import android.os.Handler;
-import android.support.constraint.ConstraintLayout;
-import android.support.constraint.ConstraintSet;
-import android.support.v7.app.AppCompatActivity;
+
+import androidx.constraintlayout.widget.ConstraintLayout;
+import androidx.constraintlayout.widget.ConstraintSet;
+import androidx.appcompat.app.AppCompatActivity;
+
 import android.os.Bundle;
-import android.util.DisplayMetrics;
 import android.util.TypedValue;
 import android.view.View;
 import android.widget.Button;
@@ -27,8 +30,11 @@ import java.util.Locale;
 import java.util.Random;
 
 public class cricket extends AppCompatActivity {
-    private final int crazycricketFelderAnzahl=7;      // (exclusive bull)
-    private final int crazycricketRangeMinimum=6;
+    private final int crazycricketFelderAnzahl = 7;      // (exclusive bull)
+    private final int crazycricketRangeMinimum = 6;
+    private final player[] spieler = new player[9];
+    private final ArrayList<pfeil> wuerfe = new ArrayList<pfeil>();
+    private final ArrayList<crazySegmente> crazySegmentes = new ArrayList<crazySegmente>();
     private long startTime = 0;
     private int bcolor;
     private int bcolorn;
@@ -38,8 +44,6 @@ public class cricket extends AppCompatActivity {
             textsizepassiv;
     private boolean t = false;
     private boolean d = false;
-    private boolean spielgehtweiter=false;
-    private final boolean ende=false;
     private final View.OnClickListener doubletriple = new View.OnClickListener() {
         @Override
         public void onClick(View v) {
@@ -74,7 +78,7 @@ public class cricket extends AppCompatActivity {
             }
         }
     };
-
+    private boolean spielgehtweiter = false;
     private int spieleranzahl,
             aktiverSpieler = 1,       //index für namensarray
             xdart = 0,                //zähler für geworfene darts (0, 1 oder 2) pro runde
@@ -84,239 +88,241 @@ public class cricket extends AppCompatActivity {
     private String s = "";
     private CharSequence spielmodus;
     private CharSequence spielvariante;
-    private final player[] spieler = new player[9];
-    private final ArrayList<pfeil> wuerfe = new ArrayList<pfeil>();
-    private final ArrayList<crazySegmente> crazySegmentes = new ArrayList<crazySegmente>();
+    private boolean undoabfrage = true; //soll die undoabfrage beim undoclick erscheinen oder undo() ohne rückfrage durchgeführt werden - wichtig für frage beim letzten wurf
 
     // undo
     private final View.OnClickListener undoclick = new View.OnClickListener() {
         @Override
         public void onClick(View v) {
-
             // sicherheitsabfrage
-            AlertDialog alertDialog = new AlertDialog.Builder(cricket.this).create();
-            alertDialog.setTitle(getResources().getString(R.string.achtung));
-            alertDialog.setMessage(getResources().getString(R.string.willstduUndo));
-            alertDialog.setButton(AlertDialog.BUTTON_POSITIVE, getResources().getString(R.string.jaichw),
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int which) {
-                            dialog.dismiss();
-                            int dart, faktor, theoretischewurfpunkte, addpunkte, anzahltrefferabzug;
-                            TextView darts = findViewById(R.id.darts);
-                            if (ii >= 0) {
-                                if (xdart == 0) {
-                                    //spielerwechsel
-                                    xdart = 2;
-                                    s = "..";
-                                    textfeld(1, aktiverSpieler, 3).setTextColor(textcolorpassiv);
-                                    textfeld(1, aktiverSpieler, 2).setTextColor(textcolorpassiv);
-                                    textfeld(1, aktiverSpieler, 3).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizepassiv);
-                                    textfeld(1, aktiverSpieler, 2).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizepassiv);
-
-                                    aktiverSpieler=wuerfe.get(ii).spielerindex;
-                                    textfeld(1, aktiverSpieler, 3).setTextColor(textcoloraktiv);
-                                    textfeld(1, aktiverSpieler, 2).setTextColor(textcoloraktiv);
-                                    textfeld(1,aktiverSpieler,3).setPaintFlags(textfeld(1,aktiverSpieler,3).getPaintFlags() & (~Paint.STRIKE_THRU_TEXT_FLAG));
-                                    textfeld(1,aktiverSpieler,2).setPaintFlags(textfeld(1,aktiverSpieler,2).getPaintFlags() & (~Paint.STRIKE_THRU_TEXT_FLAG));
-                                    textfeld(1, aktiverSpieler, 3).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizeaktiv);
-                                    textfeld(1, aktiverSpieler, 2).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizeaktiv);
-
-                                    if (spielmodus.equals("Crazy")) {
-                                        ladeSegmente(crazySegmentes.get(crazySegmentes.size()-1)); //letzte gespeicherte segmente laden
-                                        crazySegmentes.remove(crazySegmentes.size()-1);
-                                    }
-                                    if (spieler[aktiverSpieler].gewinnerplatz!=0) spieler[aktiverSpieler].gewinnerplatz=0;
-                                } else xdart--;
-                                if (xdart == 1) s = ".";
-                                else if (xdart == 0) s = "";
-                                darts.setText(s);
-                                dart = wuerfe.get(ii).zahl;
-                                faktor = wuerfe.get(ii).faktor;
-                                addpunkte = wuerfe.get(ii).addpunkte;
-                                theoretischewurfpunkte = dart * faktor;
-                                //addpunkte sind 1x,2x oder 3x dart -> entsprechend treffer abziehn und score
-                                if (spielvariante.equals("Classic")) {
-                                    spieler[aktiverSpieler].score -= addpunkte;
-                                } else
-                                if (spielvariante.equals("Cut Throat")) {
-                                    for (int i=1;i<=spieleranzahl;i++){
-                                        if ((i!=aktiverSpieler) && !(zahlClosed(i,dart)))
-                                            spieler[i].score -= addpunkte;
-                                    }
-                                }
+             if (undoabfrage) {
+                AlertDialog alertDialog = new AlertDialog.Builder(cricket.this).create();
+                alertDialog.setTitle(getResources().getString(R.string.achtung));
+                alertDialog.setMessage(getResources().getString(R.string.willstduUndo));
+                alertDialog.setButton(AlertDialog.BUTTON_POSITIVE, getResources().getString(R.string.jaichw),
+                        new DialogInterface.OnClickListener() {
+                            public void onClick(DialogInterface dialog, int which) {
+                                dialog.dismiss();
+                                undo();
+                            }
+                        });
+                alertDialog.setButton(AlertDialog.BUTTON_NEGATIVE, getResources().getString(R.string.nein), new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        dialog.dismiss();
+                        return;
+                    }
+                });
+                alertDialog.show();
+            } else {
+                undoabfrage = true;
+                undo();
+            }
+        }
 
-                                if ((faktor > 0) && (dart > 0))
-                                    anzahltrefferabzug = (theoretischewurfpunkte - addpunkte) / dart;
-                                else anzahltrefferabzug = 0;
-                                if (closed(dart) && (anzahltrefferabzug > 0)) {
-                                    for (int i = 1; i <= spieleranzahl; i++) {
-                                        textfeld(dart, i, 1).setTextColor(textcolorpassiv);
-                                    }
-                                    switch (dart) {
-                                        case 1:
-                                            Button b1 = findViewById(R.id.b1);
-                                            b1.setEnabled(true);
-                                            break;
-                                        case 2:
-                                            Button b2 = findViewById(R.id.b2);
-                                            b2.setEnabled(true);
-                                            break;
-                                        case 3:
-                                            Button b3 = findViewById(R.id.b3);
-                                            b3.setEnabled(true);
-                                            break;
-                                        case 4:
-                                            Button b4 = findViewById(R.id.b4);
-                                            b4.setEnabled(true);
-                                            break;
-                                        case 5:
-                                            Button b5 = findViewById(R.id.b5);
-                                            b5.setEnabled(true);
-                                            break;
-                                        case 6:
-                                            Button b6 = findViewById(R.id.b6);
-                                            b6.setEnabled(true);
-                                            break;
-                                        case 7:
-                                            Button b7 = findViewById(R.id.b7);
-                                            b7.setEnabled(true);
-                                            break;
-                                        case 8:
-                                            Button b8 = findViewById(R.id.b8);
-                                            b8.setEnabled(true);
-                                            break;
-                                        case 9:
-                                            Button b9 = findViewById(R.id.b9);
-                                            b9.setEnabled(true);
-                                            break;
-                                        case 10:
-                                            Button b10 = findViewById(R.id.b10);
-                                            b10.setEnabled(true);
-                                            break;
-                                        case 11:
-                                            Button b11 = findViewById(R.id.b11);
-                                            b11.setEnabled(true);
-                                            break;
-                                        case 12:
-                                            Button b12 = findViewById(R.id.b12);
-                                            b12.setEnabled(true);
-                                            break;
-                                        case 13:
-                                            Button b13 = findViewById(R.id.b13);
-                                            b13.setEnabled(true);
-                                            break;
-                                        case 14:
-                                            Button b14 = findViewById(R.id.b14);
-                                            b14.setEnabled(true);
-                                            break;
-                                        case 15:
-                                            Button b15 = findViewById(R.id.b15);
-                                            b15.setEnabled(true);
-                                            break;
-                                        case 16:
-                                            Button b16 = findViewById(R.id.b16);
-                                            b16.setEnabled(true);
-                                            break;
-                                        case 17:
-                                            Button b17 = findViewById(R.id.b17);
-                                            b17.setEnabled(true);
-                                            break;
-                                        case 18:
-                                            Button b18 = findViewById(R.id.b18);
-                                            b18.setEnabled(true);
-                                            break;
-                                        case 19:
-                                            Button b19 = findViewById(R.id.b19);
-                                            b19.setEnabled(true);
-                                            break;
-                                        case 20:
-                                            Button b20 = findViewById(R.id.b20);
-                                            b20.setEnabled(true);
-                                            break;
-                                        case 25:
-                                            Button b25 = findViewById(R.id.bull);
-                                            b25.setEnabled(true);
-                                            break;
-                                    }
-                                }
-                                spieler[aktiverSpieler].treffer[dart] -= anzahltrefferabzug;
-                                if (dart != 0)
-                                    switch (spieler[aktiverSpieler].treffer[dart]) {
-                                        case 0:
-                                            textfeld(dart, aktiverSpieler, 1).setText("");
-                                            break;
-                                        case 1:
-                                            textfeld(dart, aktiverSpieler, 1).setText("/");
-                                            break;
-                                        case 2:
-                                            textfeld(dart, aktiverSpieler, 1).setText("X");
-                                            break;
-                                        case 3:
-                                            textfeld(dart, aktiverSpieler, 1).setText("O");
-                                            break;
-                                    }
-                                String str = "";
-                                switch (faktor) {
-                                    case 0:
-                                        str = "undo: " + getResources().getString(R.string.daneben);
-                                        break;
-                                    case 1:
-                                        str = "undo: " + dart;
-                                        break;
-                                    case 2:
-                                        str = "undo: Double " + dart;
-                                        break;
-                                    case 3:
-                                        str = "undo: Triple " + dart;
-                                        break;
-                                }
-                                str=str+" " + getResources().getString(R.string.von_spieler)+" "+spieler[wuerfe.get(ii).spielerindex].spielerName;
+        private void undo() {
+            int dart, faktor, theoretischewurfpunkte, addpunkte, anzahltrefferabzug;
+            TextView darts = findViewById(R.id.darts);
+            if (ii >= 0) {
+                if (xdart == 0) {
+                    //spielerwechsel
+                    xdart = 2;
+                    s = "..";
+                    textfeld(1, aktiverSpieler, 3).setTextColor(textcolorpassiv);
+                    textfeld(1, aktiverSpieler, 2).setTextColor(textcolorpassiv);
+                    textfeld(1, aktiverSpieler, 3).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizepassiv);
+                    textfeld(1, aktiverSpieler, 2).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizepassiv);
 
+                    aktiverSpieler = wuerfe.get(ii).spielerindex;
+                    textfeld(1, aktiverSpieler, 3).setTextColor(textcoloraktiv);
+                    textfeld(1, aktiverSpieler, 2).setTextColor(textcoloraktiv);
+                    textfeld(1, aktiverSpieler, 3).setPaintFlags(textfeld(1, aktiverSpieler, 3).getPaintFlags() & (~Paint.STRIKE_THRU_TEXT_FLAG));
+                    textfeld(1, aktiverSpieler, 2).setPaintFlags(textfeld(1, aktiverSpieler, 2).getPaintFlags() & (~Paint.STRIKE_THRU_TEXT_FLAG));
+                    textfeld(1, aktiverSpieler, 3).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizeaktiv);
+                    textfeld(1, aktiverSpieler, 2).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizeaktiv);
+
+                    if (spielmodus.equals("Crazy")) {
+                        ladeSegmente(crazySegmentes.get(crazySegmentes.size() - 1)); //letzte gespeicherte segmente laden
+                        crazySegmentes.remove(crazySegmentes.size() - 1);
+                    }
+                    if (spieler[aktiverSpieler].gewinnerplatz != 0)
+                        spieler[aktiverSpieler].gewinnerplatz = 0;
+                } else xdart--;
+                if (xdart == 1) s = ".";
+                else if (xdart == 0) s = "";
+                darts.setText(s);
+                dart = wuerfe.get(ii).zahl;
+                faktor = wuerfe.get(ii).faktor;
+                addpunkte = wuerfe.get(ii).addpunkte;
+                theoretischewurfpunkte = dart * faktor;
+                //addpunkte sind 1x,2x oder 3x dart -> entsprechend treffer abziehn und score
+                if (spielvariante.equals("Classic")) {
+                    spieler[aktiverSpieler].score -= addpunkte;
+                } else if (spielvariante.equals("Cut Throat")) {
+                    for (int i = 1; i <= spieleranzahl; i++) {
+                        if ((i != aktiverSpieler) && !(zahlClosed(i, dart)))
+                            spieler[i].score -= addpunkte;
+                    }
+                }
 
-                                Toast.makeText(cricket.this, str, Toast.LENGTH_SHORT).show();
+                if ((faktor > 0) && (dart > 0))
+                    anzahltrefferabzug = (theoretischewurfpunkte - addpunkte) / dart;
+                else anzahltrefferabzug = 0;
+                if (closed(dart) && (anzahltrefferabzug > 0)) {
+                    for (int i = 1; i <= spieleranzahl; i++) {
+                        textfeld(dart, i, 1).setTextColor(textcolorpassiv);
+                    }
+                    switch (dart) {
+                        case 1:
+                            Button b1 = findViewById(R.id.b1);
+                            b1.setEnabled(true);
+                            break;
+                        case 2:
+                            Button b2 = findViewById(R.id.b2);
+                            b2.setEnabled(true);
+                            break;
+                        case 3:
+                            Button b3 = findViewById(R.id.b3);
+                            b3.setEnabled(true);
+                            break;
+                        case 4:
+                            Button b4 = findViewById(R.id.b4);
+                            b4.setEnabled(true);
+                            break;
+                        case 5:
+                            Button b5 = findViewById(R.id.b5);
+                            b5.setEnabled(true);
+                            break;
+                        case 6:
+                            Button b6 = findViewById(R.id.b6);
+                            b6.setEnabled(true);
+                            break;
+                        case 7:
+                            Button b7 = findViewById(R.id.b7);
+                            b7.setEnabled(true);
+                            break;
+                        case 8:
+                            Button b8 = findViewById(R.id.b8);
+                            b8.setEnabled(true);
+                            break;
+                        case 9:
+                            Button b9 = findViewById(R.id.b9);
+                            b9.setEnabled(true);
+                            break;
+                        case 10:
+                            Button b10 = findViewById(R.id.b10);
+                            b10.setEnabled(true);
+                            break;
+                        case 11:
+                            Button b11 = findViewById(R.id.b11);
+                            b11.setEnabled(true);
+                            break;
+                        case 12:
+                            Button b12 = findViewById(R.id.b12);
+                            b12.setEnabled(true);
+                            break;
+                        case 13:
+                            Button b13 = findViewById(R.id.b13);
+                            b13.setEnabled(true);
+                            break;
+                        case 14:
+                            Button b14 = findViewById(R.id.b14);
+                            b14.setEnabled(true);
+                            break;
+                        case 15:
+                            Button b15 = findViewById(R.id.b15);
+                            b15.setEnabled(true);
+                            break;
+                        case 16:
+                            Button b16 = findViewById(R.id.b16);
+                            b16.setEnabled(true);
+                            break;
+                        case 17:
+                            Button b17 = findViewById(R.id.b17);
+                            b17.setEnabled(true);
+                            break;
+                        case 18:
+                            Button b18 = findViewById(R.id.b18);
+                            b18.setEnabled(true);
+                            break;
+                        case 19:
+                            Button b19 = findViewById(R.id.b19);
+                            b19.setEnabled(true);
+                            break;
+                        case 20:
+                            Button b20 = findViewById(R.id.b20);
+                            b20.setEnabled(true);
+                            break;
+                        case 25:
+                            Button b25 = findViewById(R.id.bull);
+                            b25.setEnabled(true);
+                            break;
+                    }
+                }
+                spieler[aktiverSpieler].treffer[dart] -= anzahltrefferabzug;
+                if (dart != 0)
+                    switch (spieler[aktiverSpieler].treffer[dart]) {
+                        case 0:
+                            textfeld(dart, aktiverSpieler, 1).setText("");
+                            break;
+                        case 1:
+                            textfeld(dart, aktiverSpieler, 1).setText("/");
+                            break;
+                        case 2:
+                            textfeld(dart, aktiverSpieler, 1).setText("X");
+                            break;
+                        case 3:
+                            textfeld(dart, aktiverSpieler, 1).setText("O");
+                            break;
+                    }
+                String str = "";
+                switch (faktor) {
+                    case 0:
+                        str = "undo: " + getResources().getString(R.string.daneben);
+                        break;
+                    case 1:
+                        str = "undo: " + dart;
+                        break;
+                    case 2:
+                        str = "undo: Double " + dart;
+                        break;
+                    case 3:
+                        str = "undo: Triple " + dart;
+                        break;
+                }
+                str = str + " " + getResources().getString(R.string.von_spieler) + " " + spieler[wuerfe.get(ii).spielerindex].spielerName;
 
 
-                                //score textfeld aktualisiere
-                                if (spielvariante.equals("Classic")) {
-                                    textfeld(1, aktiverSpieler, 2).setText(Integer.toString(spieler[aktiverSpieler].score));
-                                } else
-                                if (spielvariante.equals("Cut Throat")) {
-                                    for (int i=1;i<=spieleranzahl;i++){
-                                        if (i!=aktiverSpieler)
-                                            textfeld(1, i, 2).setText(Integer.toString(spieler[i].score));
-                                    }
-                                }
+                Toast.makeText(cricket.this, str, Toast.LENGTH_SHORT).show();
 
 
-                                ii--;
-                            } else Toast.makeText(cricket.this, R.string.keinundo, Toast.LENGTH_LONG).show();
-                        }
-                    });
-            alertDialog.setButton(AlertDialog.BUTTON_NEGATIVE, getResources().getString(R.string.nein), new DialogInterface.OnClickListener() {
-                @Override
-                public void onClick(DialogInterface dialog, int which) {
-                    dialog.dismiss();
-                    return;
+                //score textfeld aktualisiere
+                if (spielvariante.equals("Classic")) {
+                    textfeld(1, aktiverSpieler, 2).setText(Integer.toString(spieler[aktiverSpieler].score));
+                } else if (spielvariante.equals("Cut Throat")) {
+                    for (int i = 1; i <= spieleranzahl; i++) {
+                        if (i != aktiverSpieler)
+                            textfeld(1, i, 2).setText(Integer.toString(spieler[i].score));
+                    }
                 }
-            });
-            alertDialog.show();
 
+
+                ii--;
+            } else Toast.makeText(cricket.this, R.string.keinundo, Toast.LENGTH_LONG).show();
         }
-    };
 
-    private boolean zahlClosed(int spielerindex, int dart) {
 
-        return spieler[spielerindex].treffer[dart] == 3;
-    }
+    };
+
 
     private final View.OnClickListener buttonclick = new View.OnClickListener() {
         @SuppressLint("NonConstantResourceId")
         @Override
         public void onClick(View v) {
 
-            Integer sender = v.getId();
+            int sender = v.getId();
             Button eingabe = findViewById(sender);
-            int dart, 
+            int dart,
                     addpunkte = 0;
 
             //ergebnis = Integer.parseInt(score.getText().toString());
@@ -382,14 +388,14 @@ public class cricket extends AppCompatActivity {
                         spieler[aktiverSpieler].score += addpunkte;
                     }
                     // Cut Throat Cricket?
-                        else if (spielvariante.equals("Cut Throat")) {
-                                for (i=1;i<=spieleranzahl;i++){
-                                    if ((i!=aktiverSpieler) && !(zahlClosed(i,dart)))
-                                        spieler[i].score+=addpunkte;
-                                }
-
+                    else if (spielvariante.equals("Cut Throat")) {
+                        for (i = 1; i <= spieleranzahl; i++) {
+                            if ((i != aktiverSpieler) && !(zahlClosed(i, dart)))
+                                spieler[i].score += addpunkte;
                         }
 
+                    }
+
                 } else {
                     for (i = 1; i <= spieleranzahl; i++) {
                         textfeld(dart, i, 1).setTextColor(Color.RED);
@@ -485,7 +491,7 @@ public class cricket extends AppCompatActivity {
                 }
 
 
-                //restlichen undo daten speichern
+                //restliche undo daten speichern
                 ii++;
                 if (!closed(dart)) {
                     //aktuellerWurf.faktor=faktor;
@@ -496,7 +502,7 @@ public class cricket extends AppCompatActivity {
                         aktuellerWurf.faktor = faktor - (addpunkte / dart); //falls closed durch faktor
                 }
 
-                aktuellerWurf.spielerindex=aktiverSpieler;
+                aktuellerWurf.spielerindex = aktiverSpieler;
                 aktuellerWurf.zahl = dart;
                 wuerfe.add(ii, aktuellerWurf);
 
@@ -516,36 +522,36 @@ public class cricket extends AppCompatActivity {
                 if (spielvariante.equals("Classic")) {
                     textfeld(1, aktiverSpieler, 2).setText(Integer.toString(spieler[aktiverSpieler].score));
                 } else if (spielvariante.equals("Cut Throat")) {
-                    for (i=1;i<=spieleranzahl;i++){
-                        if (i!=aktiverSpieler)
+                    for (i = 1; i <= spieleranzahl; i++) {
+                        if (i != aktiverSpieler)
                             textfeld(1, i, 2).setText(Integer.toString(spieler[i].score));
                     }
                 }
 
                 //spiel zuende?
-              // todo: !!!!!!!!!!!  checken, ob anderer spieler gewonnen hat (spielgehtweiter und ..cutthrout?) !!!!!!!!!!!!
+                // todo: !!!!!!!!!!!  checken, ob anderer spieler gewonnen hat (spielgehtweiter und ..cutthrout?) !!!!!!!!!!!!
                 if (gewinner(aktiverSpieler) && spielgehtweiter) {
-                    textfeld(0,aktiverSpieler,2).setPaintFlags(textfeld(0,aktiverSpieler,2).getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
-                    textfeld(0,aktiverSpieler,2).setTextColor(Color.RED);
-                    textfeld(0,aktiverSpieler,3).setPaintFlags(textfeld(0,aktiverSpieler,3).getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
-                    textfeld(0,aktiverSpieler,3).setTextColor(Color.RED);
-                    xdart=2;
-                    spieler[aktiverSpieler].gewinnerplatz=1;
+                    textfeld(0, aktiverSpieler, 2).setPaintFlags(textfeld(0, aktiverSpieler, 2).getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
+                    textfeld(0, aktiverSpieler, 2).setTextColor(Color.RED);
+                    textfeld(0, aktiverSpieler, 3).setPaintFlags(textfeld(0, aktiverSpieler, 3).getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
+                    textfeld(0, aktiverSpieler, 3).setTextColor(Color.RED);
+                    xdart = 2;
+                    spieler[aktiverSpieler].gewinnerplatz = 1;
                     // richtigen platz bestimmen
-                    for (int spielerindex=1;spielerindex <= spieleranzahl;spielerindex++) {
+                    for (int spielerindex = 1; spielerindex <= spieleranzahl; spielerindex++) {
                         if ((spieler[spielerindex].gewinnerplatz != 0) && (spielerindex != aktiverSpieler))
                             spieler[aktiverSpieler].gewinnerplatz++;
                     }
                     // check spezialfall: wenn andere spieler fertig sind und nur zu wenig punkte hatten, sind sie evtl. nun auch fertig
-                    for (int anzahl=1; anzahl<=spieleranzahl;anzahl++) { //zur sicherheit, falls die spielerreihenfolge "ungünstig" ist bezogen auf gewinner() - siehe if abfrage
+                    for (int anzahl = 1; anzahl <= spieleranzahl; anzahl++) { //zur sicherheit, falls die spielerreihenfolge "ungünstig" ist bezogen auf gewinner() - siehe if abfrage
                         for (int spielerindex = 1; spielerindex <= spieleranzahl; spielerindex++) {
-                        //    if (spielerindex == aktiverSpieler) continue;
+                            //    if (spielerindex == aktiverSpieler) continue;
                             // wenn ein spieler noch keinen rang/platz hat und nun fertig/gewinner ist, dann...
                             if ((spieler[spielerindex].gewinnerplatz == 0) && (gewinner(spielerindex))) {
                                 textfeld(0, spielerindex, 2).setTextColor(Color.RED);
-                                textfeld(0,aktiverSpieler,2).setPaintFlags(textfeld(0,aktiverSpieler,2).getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
+                                textfeld(0, aktiverSpieler, 2).setPaintFlags(textfeld(0, aktiverSpieler, 2).getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
                                 textfeld(0, spielerindex, 3).setTextColor(Color.RED);
-                                textfeld(0,aktiverSpieler,3).setPaintFlags(textfeld(0,aktiverSpieler,3).getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
+                                textfeld(0, aktiverSpieler, 3).setPaintFlags(textfeld(0, aktiverSpieler, 3).getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
                                 spieler[spielerindex].gewinnerplatz = 1;
                                 // richtigen platz bestimmen
                                 for (int spielerindex2 = 1; spielerindex2 <= spieleranzahl; spielerindex2++) {
@@ -569,499 +575,505 @@ public class cricket extends AppCompatActivity {
                 }
 
 
-                if ((gewinner(aktiverSpieler) || alleZahlenClosed())  && !(spielgehtweiter)) {
+                if ((gewinner(aktiverSpieler) || alleZahlenClosed()) && !(spielgehtweiter)) {
                     //spielende einleiten und aufrufen
+                    AlertDialog alertDialog = new AlertDialog.Builder(cricket.this).create();
+                    alertDialog.setTitle(getResources().getString(R.string.achtung));
+                    alertDialog.setMessage(getResources().getString(R.string.letzteEingabeKorrekt));
+                    alertDialog.setButton(AlertDialog.BUTTON_POSITIVE, getResources().getString(R.string.ja),
+                            new DialogInterface.OnClickListener() {
+                                public void onClick(DialogInterface dialog, int which) {
+                                    dialog.dismiss();
+
+                                    long spielzeit = (System.currentTimeMillis() - startTime) / 1000;
+                                    Intent intent = new Intent(cricket.this, spielende.class);
+                                    intent.putExtra("anzahl", spieleranzahl);
+                                    intent.putExtra("cricket", true);
+                                    intent.putExtra("spielzeit", spielzeit);
+                                    SharedPreferences sp = getSharedPreferences("Einstellungen", 0);
+                                    if (sp.contains("spielgehtweiter"))
+                                        spielgehtweiter = sp.getBoolean("spielgehtweiter", false);
+                                    intent.putExtra("spielgehtweiter", spielgehtweiter);
+                                    if (spielgehtweiter) {
+                                        for (int spielerindex = 1; spielerindex <= spieleranzahl; spielerindex++) {
+                                            switch (spieler[spielerindex].gewinnerplatz) {
+                                                case 1:
+                                                    intent.putExtra("erster", spieler[spielerindex].spielerName);
+                                                    intent.putExtra("ersterscore", spieler[spielerindex].score);
+                                                    break;
+                                                case 2:
+                                                    intent.putExtra("zweiter", spieler[spielerindex].spielerName);
+                                                    intent.putExtra("zweiterscore", spieler[spielerindex].score);
+                                                    break;
+                                                case 3:
+                                                    intent.putExtra("dritter", spieler[spielerindex].spielerName);
+                                                    intent.putExtra("dritterscore", spieler[spielerindex].score);
+                                                    break;
+                                                case 4:
+                                                    intent.putExtra("vierter", spieler[spielerindex].spielerName);
+                                                    intent.putExtra("vierterscore", spieler[spielerindex].score);
+                                                    break;
+                                                case 5:
+                                                    intent.putExtra("fuenfter", spieler[spielerindex].spielerName);
+                                                    intent.putExtra("fuenfterscore", spieler[spielerindex].score);
+                                                    break;
+                                                case 6:
+                                                    intent.putExtra("sechster", spieler[spielerindex].spielerName);
+                                                    intent.putExtra("sechsterscore", spieler[spielerindex].score);
+                                                    break;
+                                                case 7:
+                                                    intent.putExtra("siebenter", spieler[spielerindex].spielerName);
+                                                    intent.putExtra("siebenterscore", spieler[spielerindex].score);
+                                                    break;
+                                                case 8:
+                                                    intent.putExtra("achter", spieler[spielerindex].spielerName);
+                                                    intent.putExtra("achtererscore", spieler[spielerindex].score);
+                                                    break;
+                                            }
+                                        }
+                                        startActivity(intent);
+                                        finish();
+                                        return;
+                                    } else {
+                                        intent.putExtra("erster", spieler[aktiverSpieler].spielerName);
+                                        intent.putExtra("ersterscore", spieler[aktiverSpieler].score);
+
+                                        if (spieleranzahl == 2) {
+                                            switch (aktiverSpieler) {
+                                                case 1:
+                                                    intent.putExtra("zweiter", spieler[2].spielerName);
+                                                    intent.putExtra("zweiterscore", spieler[2].score);
+                                                    break;
+                                                case 2:
+                                                    intent.putExtra("zweiter", spieler[1].spielerName);
+                                                    intent.putExtra("zweiterscore", spieler[1].score);
+                                                    break;
+                                            }
+
+                                        } else if (spieleranzahl == 3) {
+                                            player s2 = new player(), s3 = new player();
+                                            switch (aktiverSpieler) {
+                                                case 1:
+                                                    s2 = spieler[2];
+                                                    s3 = spieler[3];
+                                                    break;
+                                                case 2:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[3];
+                                                    break;
+                                                case 3:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    break;
+                                            }
+                                            intent.putExtra("zweiter", s2.spielerName);
+                                            intent.putExtra("zweiterscore", s2.score);
+                                            intent.putExtra("dritter", s3.spielerName);
+                                            intent.putExtra("dritterscore", s3.score);
+
+                                        } else if (spieleranzahl == 4) {
+
+                                            player s2 = new player(), s3 = new player(), s4 = new player();
+
+                                            switch (aktiverSpieler) {
+                                                case 1:
+                                                    s2 = spieler[2];
+                                                    s3 = spieler[3];
+                                                    s4 = spieler[4];
+                                                    break;
+                                                case 2:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[3];
+                                                    s4 = spieler[4];
+                                                    break;
+                                                case 3:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[4];
+                                                    break;
+                                                case 4:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    break;
+                                            }
+                                            intent.putExtra("zweiter", s2.spielerName);
+                                            intent.putExtra("zweiterscore", s2.score);
+                                            intent.putExtra("dritter", s3.spielerName);
+                                            intent.putExtra("dritterscore", s3.score);
+                                            intent.putExtra("vierter", s4.spielerName);
+                                            intent.putExtra("vierterscore", s4.score);
+
+                                        } else if (spieleranzahl == 5) {
+
+                                            player s2 = new player(), s3 = new player(), s4 = new player(), s5 = new player();
+
+                                            switch (aktiverSpieler) {
+                                                case 1:
+                                                    s2 = spieler[2];
+                                                    s3 = spieler[3];
+                                                    s4 = spieler[4];
+                                                    s5 = spieler[5];
+                                                    break;
+                                                case 2:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[3];
+                                                    s4 = spieler[4];
+                                                    s5 = spieler[5];
+                                                    break;
+                                                case 3:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[4];
+                                                    s5 = spieler[5];
+                                                    break;
+                                                case 4:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[5];
+                                                    break;
+                                                case 5:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[4];
+                                                    break;
+                                            }
+                                            intent.putExtra("zweiter", s2.spielerName);
+                                            intent.putExtra("zweiterscore", s2.score);
+                                            intent.putExtra("dritter", s3.spielerName);
+                                            intent.putExtra("dritterscore", s3.score);
+                                            intent.putExtra("vierter", s4.spielerName);
+                                            intent.putExtra("vierterscore", s4.score);
+                                            intent.putExtra("fuenfter", s5.spielerName);
+                                            intent.putExtra("fuenfterscore", s5.score);
+
+                                        } else if (spieleranzahl == 6) {
+
+                                            player s2 = new player(), s3 = new player(), s4 = new player(), s5 = new player(), s6 = new player();
+
+                                            switch (aktiverSpieler) {
+                                                case 1:
+                                                    s2 = spieler[2];
+                                                    s3 = spieler[3];
+                                                    s4 = spieler[4];
+                                                    s5 = spieler[5];
+                                                    s6 = spieler[6];
+                                                    break;
+                                                case 2:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[3];
+                                                    s4 = spieler[4];
+                                                    s5 = spieler[5];
+                                                    s6 = spieler[6];
+                                                    break;
+                                                case 3:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[4];
+                                                    s5 = spieler[5];
+                                                    s6 = spieler[6];
+                                                    break;
+                                                case 4:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[5];
+                                                    s6 = spieler[6];
+                                                    break;
+                                                case 5:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[4];
+                                                    s6 = spieler[6];
+                                                    break;
+                                                case 6:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[4];
+                                                    s6 = spieler[5];
+                                                    break;
+                                            }
+                                            intent.putExtra("zweiter", s2.spielerName);
+                                            intent.putExtra("zweiterscore", s2.score);
+                                            intent.putExtra("dritter", s3.spielerName);
+                                            intent.putExtra("dritterscore", s3.score);
+                                            intent.putExtra("vierter", s4.spielerName);
+                                            intent.putExtra("vierterscore", s4.score);
+                                            intent.putExtra("fuenfter", s5.spielerName);
+                                            intent.putExtra("fuenfterscore", s5.score);
+                                            intent.putExtra("sechster", s6.spielerName);
+                                            intent.putExtra("sechsterscore", s6.score);
+
+                                        } else if (spieleranzahl == 7) {
+
+                                            player s2 = new player(), s3 = new player(), s4 = new player(), s5 = new player(), s6 = new player(), s7 = new player();
+
+                                            switch (aktiverSpieler) {
+                                                case 1:
+                                                    s2 = spieler[2];
+                                                    s3 = spieler[3];
+                                                    s4 = spieler[4];
+                                                    s5 = spieler[5];
+                                                    s6 = spieler[6];
+                                                    s7 = spieler[7];
+                                                    break;
+                                                case 2:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[3];
+                                                    s4 = spieler[4];
+                                                    s5 = spieler[5];
+                                                    s6 = spieler[6];
+                                                    s7 = spieler[7];
+                                                    break;
+                                                case 3:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[4];
+                                                    s5 = spieler[5];
+                                                    s6 = spieler[6];
+                                                    s7 = spieler[7];
+                                                    break;
+                                                case 4:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[5];
+                                                    s6 = spieler[6];
+                                                    s7 = spieler[7];
+                                                    break;
+                                                case 5:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[4];
+                                                    s6 = spieler[6];
+                                                    s7 = spieler[7];
+                                                    break;
+                                                case 6:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[4];
+                                                    s7 = spieler[7];
+                                                    s6 = spieler[5];
+                                                    break;
+                                                case 7:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[4];
+                                                    s7 = spieler[6];
+                                                    s6 = spieler[5];
+                                                    break;
+                                            }
+                                            intent.putExtra("zweiter", s2.spielerName);
+                                            intent.putExtra("zweiterscore", s2.score);
+                                            intent.putExtra("dritter", s3.spielerName);
+                                            intent.putExtra("dritterscore", s3.score);
+                                            intent.putExtra("vierter", s4.spielerName);
+                                            intent.putExtra("vierterscore", s4.score);
+                                            intent.putExtra("fuenfter", s5.spielerName);
+                                            intent.putExtra("fuenfterscore", s5.score);
+                                            intent.putExtra("sechster", s6.spielerName);
+                                            intent.putExtra("sechsterscore", s6.score);
+                                            intent.putExtra("siebenter", s7.spielerName);
+                                            intent.putExtra("siebenterscore", s7.score);
+
+                                        } else if (spieleranzahl == 8) {
+
+                                            player s2 = new player(), s3 = new player(), s4 = new player(), s5 = new player(), s6 = new player(), s7 = new player(), s8 = new player();
+
+                                            switch (aktiverSpieler) {
+                                                case 1:
+                                                    s2 = spieler[2];
+                                                    s3 = spieler[3];
+                                                    s4 = spieler[4];
+                                                    s5 = spieler[5];
+                                                    s6 = spieler[6];
+                                                    s7 = spieler[7];
+                                                    s8 = spieler[8];
+                                                    break;
+                                                case 2:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[3];
+                                                    s4 = spieler[4];
+                                                    s5 = spieler[5];
+                                                    s6 = spieler[6];
+                                                    s7 = spieler[7];
+                                                    s8 = spieler[8];
+                                                    break;
+                                                case 3:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[4];
+                                                    s5 = spieler[5];
+                                                    s6 = spieler[6];
+                                                    s7 = spieler[7];
+                                                    s8 = spieler[8];
+                                                    break;
+                                                case 4:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[5];
+                                                    s6 = spieler[6];
+                                                    s7 = spieler[7];
+                                                    s8 = spieler[8];
+                                                    break;
+                                                case 5:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[4];
+                                                    s6 = spieler[6];
+                                                    s7 = spieler[7];
+                                                    s8 = spieler[8];
+                                                    break;
+                                                case 6:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[4];
+                                                    s7 = spieler[7];
+                                                    s6 = spieler[5];
+                                                    s8 = spieler[8];
+                                                    break;
+                                                case 7:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[4];
+                                                    s7 = spieler[6];
+                                                    s6 = spieler[5];
+                                                    s8 = spieler[8];
+                                                    break;
+                                                case 8:
+                                                    s2 = spieler[1];
+                                                    s3 = spieler[2];
+                                                    s4 = spieler[3];
+                                                    s5 = spieler[4];
+                                                    s7 = spieler[6];
+                                                    s6 = spieler[5];
+                                                    s8 = spieler[7];
+                                                    break;
+                                            }
+                                            intent.putExtra("zweiter", s2.spielerName);
+                                            intent.putExtra("zweiterscore", s2.score);
+                                            intent.putExtra("dritter", s3.spielerName);
+                                            intent.putExtra("dritterscore", s3.score);
+                                            intent.putExtra("vierter", s4.spielerName);
+                                            intent.putExtra("vierterscore", s4.score);
+                                            intent.putExtra("fuenfter", s5.spielerName);
+                                            intent.putExtra("fuenfterscore", s5.score);
+                                            intent.putExtra("sechster", s6.spielerName);
+                                            intent.putExtra("sechsterscore", s6.score);
+                                            intent.putExtra("siebenter", s7.spielerName);
+                                            intent.putExtra("siebenterscore", s7.score);
+                                            intent.putExtra("achter", s8.spielerName);
+                                            intent.putExtra("achterscore", s8.score);
+                                        }
 
-                    long spielzeit = (System.currentTimeMillis() - startTime) / 1000;
-                    Intent intent = new Intent(cricket.this, spielende.class);
-                    intent.putExtra("anzahl", spieleranzahl);
-                    intent.putExtra("cricket", true);
-                    intent.putExtra("spielzeit", spielzeit);
-                    SharedPreferences sp = getSharedPreferences("Einstellungen", 0);
-                    if (sp.contains("spielgehtweiter"))
-                        spielgehtweiter = sp.getBoolean("spielgehtweiter", false);
-                    intent.putExtra("spielgehtweiter",spielgehtweiter);
-                    if (spielgehtweiter) {
-                        for (int spielerindex = 1; spielerindex <= spieleranzahl; spielerindex++) {
-                            switch (spieler[spielerindex].gewinnerplatz) {
-                                case 1:
-                                    intent.putExtra("erster", spieler[spielerindex].spielerName);
-                                    intent.putExtra("ersterscore", spieler[spielerindex].score);
-                                    break;
-                                case 2:
-                                    intent.putExtra("zweiter", spieler[spielerindex].spielerName);
-                                    intent.putExtra("zweiterscore", spieler[spielerindex].score);
-                                    break;
-                                case 3:
-                                    intent.putExtra("dritter", spieler[spielerindex].spielerName);
-                                    intent.putExtra("dritterscore", spieler[spielerindex].score);
-                                    break;
-                                case 4:
-                                    intent.putExtra("vierter", spieler[spielerindex].spielerName);
-                                    intent.putExtra("vierterscore", spieler[spielerindex].score);
-                                    break;
-                                case 5:
-                                    intent.putExtra("fuenfter", spieler[spielerindex].spielerName);
-                                    intent.putExtra("fuenfterscore", spieler[spielerindex].score);
-                                    break;
-                                case 6:
-                                    intent.putExtra("sechster", spieler[spielerindex].spielerName);
-                                    intent.putExtra("sechsterscore", spieler[spielerindex].score);
-                                    break;
-                                case 7:
-                                    intent.putExtra("siebenter", spieler[spielerindex].spielerName);
-                                    intent.putExtra("siebenterscore", spieler[spielerindex].score);
-                                    break;
-                                case 8:
-                                    intent.putExtra("achter", spieler[spielerindex].spielerName);
-                                    intent.putExtra("achtererscore", spieler[spielerindex].score);
-                                    break;
-                            }
+                                        startActivity(intent);
+                                        finish();
+                                        return;
+                                    }
+                                }
+                            });
+                    alertDialog.setButton(AlertDialog.BUTTON_NEGATIVE, getResources().getString(R.string.nein), new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            dialog.dismiss();
+                            // letzter Wurf war eine Fehleingabe -> Spiel nicht beenden und letzte Eingabe zurücknehmen
+                            undoabfrage = false;
+                            Button undo = findViewById(R.id.undo);
+                            undo.performClick();
+                            return;
                         }
-                        startActivity(intent);
-                        finish();
-                        return;
-                    } else {
-                        intent.putExtra("erster", spieler[aktiverSpieler].spielerName);
-                        intent.putExtra("ersterscore", spieler[aktiverSpieler].score);
-
-                        if (spieleranzahl == 2) {
-                            switch (aktiverSpieler) {
-                                case 1:
-                                    intent.putExtra("zweiter", spieler[2].spielerName);
-                                    intent.putExtra("zweiterscore", spieler[2].score);
-                                    break;
-                                case 2:
-                                    intent.putExtra("zweiter", spieler[1].spielerName);
-                                    intent.putExtra("zweiterscore", spieler[1].score);
-                                    break;
-                            }
-
-                        } else if (spieleranzahl == 3) {
-                            player s2= new player(),s3=new player(),exchang=new player();
-                            switch (aktiverSpieler) {
-                                case 1:
-                                        s2=spieler[2];
-                                        s3=spieler[3];
-                                    break;
-                                case 2:
-                                        s2=spieler[1];
-                                        s3=spieler[3];
-                                    break;
-                                case 3:
-                                        s2=spieler[1];
-                                        s3=spieler[2];
-                                    break;
-                            }
-                            intent.putExtra("zweiter", s2.spielerName);
-                            intent.putExtra("zweiterscore", s2.score);
-                            intent.putExtra("dritter", s3.spielerName);
-                            intent.putExtra("dritterscore", s3.score);
-
-                        } else if (spieleranzahl == 4) {
-
-                            player s2=new player(),s3=new player(),s4=new player();
+                    });
+                    alertDialog.show();
 
-                            switch (aktiverSpieler) {
-                                case 1:
-                                    s2 = spieler[2];
-                                    s3 = spieler[3];
-                                    s4 = spieler[4];
-                                    break;
-                                case 2:
-                                    s2 = spieler[1];
-                                    s3 = spieler[3];
-                                    s4 = spieler[4];
-                                    break;
-                                case 3:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[4];
-                                    break;
-                                case 4:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    break;
-                            }
-                            intent.putExtra("zweiter", s2.spielerName);
-                            intent.putExtra("zweiterscore", s2.score);
-                            intent.putExtra("dritter", s3.spielerName);
-                            intent.putExtra("dritterscore", s3.score);
-                            intent.putExtra("vierter", s4.spielerName);
-                            intent.putExtra("vierterscore", s4.score);
-
-                        } else if (spieleranzahl == 5) {
-
-                            player s2=new player(),s3=new player(),s4=new player(), s5=new player();
-
-                            switch (aktiverSpieler) {
-                                case 1:
-                                    s2 = spieler[2];
-                                    s3 = spieler[3];
-                                    s4 = spieler[4];
-                                    s5 = spieler[5];
-                                    break;
-                                case 2:
-                                    s2 = spieler[1];
-                                    s3 = spieler[3];
-                                    s4 = spieler[4];
-                                    s5 = spieler[5];
-                                    break;
-                                case 3:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[4];
-                                    s5 = spieler[5];
-                                    break;
-                                case 4:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[5];
-                                    break;
-                                case 5:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[4];
-                                    break;
-                            }
-                            intent.putExtra("zweiter", s2.spielerName);
-                            intent.putExtra("zweiterscore", s2.score);
-                            intent.putExtra("dritter", s3.spielerName);
-                            intent.putExtra("dritterscore", s3.score);
-                            intent.putExtra("vierter", s4.spielerName);
-                            intent.putExtra("vierterscore", s4.score);
-                            intent.putExtra("fuenfter", s5.spielerName);
-                            intent.putExtra("fuenfterscore", s5.score);
-
-                        } else if (spieleranzahl == 6) {
-
-                            player s2=new player(),s3=new player(),s4=new player(), s5=new player(), s6=new player();
-
-                            switch (aktiverSpieler) {
-                                case 1:
-                                    s2 = spieler[2];
-                                    s3 = spieler[3];
-                                    s4 = spieler[4];
-                                    s5 = spieler[5];
-                                    s6 = spieler[6];
-                                    break;
-                                case 2:
-                                    s2 = spieler[1];
-                                    s3 = spieler[3];
-                                    s4 = spieler[4];
-                                    s5 = spieler[5];
-                                    s6 = spieler[6];
-                                    break;
-                                case 3:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[4];
-                                    s5 = spieler[5];
-                                    s6 = spieler[6];
-                                    break;
-                                case 4:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[5];
-                                    s6 = spieler[6];
-                                    break;
-                                case 5:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[4];
-                                    s6 = spieler[6];
-                                    break;
-                                case 6:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[4];
-                                    s6 = spieler[5];
-                                    break;
-                            }
-                            intent.putExtra("zweiter", s2.spielerName);
-                            intent.putExtra("zweiterscore", s2.score);
-                            intent.putExtra("dritter", s3.spielerName);
-                            intent.putExtra("dritterscore", s3.score);
-                            intent.putExtra("vierter", s4.spielerName);
-                            intent.putExtra("vierterscore", s4.score);
-                            intent.putExtra("fuenfter", s5.spielerName);
-                            intent.putExtra("fuenfterscore", s5.score);
-                            intent.putExtra("sechster", s6.spielerName);
-                            intent.putExtra("sechsterscore", s6.score);
-
-                        } else if (spieleranzahl == 7) {
-
-                            player s2=new player(),s3=new player(),s4=new player(), s5=new player(), s6=new player(), s7=new player();
-
-                            switch (aktiverSpieler) {
-                                case 1:
-                                    s2 = spieler[2];
-                                    s3 = spieler[3];
-                                    s4 = spieler[4];
-                                    s5 = spieler[5];
-                                    s6 = spieler[6];
-                                    s7 = spieler[7];
-                                    break;
-                                case 2:
-                                    s2 = spieler[1];
-                                    s3 = spieler[3];
-                                    s4 = spieler[4];
-                                    s5 = spieler[5];
-                                    s6 = spieler[6];
-                                    s7 = spieler[7];
-                                    break;
-                                case 3:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[4];
-                                    s5 = spieler[5];
-                                    s6 = spieler[6];
-                                    s7 = spieler[7];
-                                    break;
-                                case 4:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[5];
-                                    s6 = spieler[6];
-                                    s7 = spieler[7];
-                                    break;
-                                case 5:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[4];
-                                    s6 = spieler[6];
-                                    s7 = spieler[7];
-                                    break;
-                                case 6:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[4];
-                                    s7 = spieler[7];
-                                    s6 = spieler[5];
-                                    break;
-                                case 7:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[4];
-                                    s7 = spieler[6];
-                                    s6 = spieler[5];
-                                    break;
-                            }
-                            intent.putExtra("zweiter", s2.spielerName);
-                            intent.putExtra("zweiterscore", s2.score);
-                            intent.putExtra("dritter", s3.spielerName);
-                            intent.putExtra("dritterscore", s3.score);
-                            intent.putExtra("vierter", s4.spielerName);
-                            intent.putExtra("vierterscore", s4.score);
-                            intent.putExtra("fuenfter", s5.spielerName);
-                            intent.putExtra("fuenfterscore", s5.score);
-                            intent.putExtra("sechster", s6.spielerName);
-                            intent.putExtra("sechsterscore", s6.score);
-                            intent.putExtra("siebenter", s7.spielerName);
-                            intent.putExtra("siebenterscore", s7.score);
-
-                        } else if (spieleranzahl == 8) {
-
-                            player s2=new player(),s3=new player(),s4=new player(), s5=new player(), s6=new player(), s7=new player(), s8=new player();
-
-                            switch (aktiverSpieler) {
-                                case 1:
-                                    s2 = spieler[2];
-                                    s3 = spieler[3];
-                                    s4 = spieler[4];
-                                    s5 = spieler[5];
-                                    s6 = spieler[6];
-                                    s7 = spieler[7];
-                                    s8 = spieler[8];
-                                    break;
-                                case 2:
-                                    s2 = spieler[1];
-                                    s3 = spieler[3];
-                                    s4 = spieler[4];
-                                    s5 = spieler[5];
-                                    s6 = spieler[6];
-                                    s7 = spieler[7];
-                                    s8 = spieler[8];
-                                    break;
-                                case 3:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[4];
-                                    s5 = spieler[5];
-                                    s6 = spieler[6];
-                                    s7 = spieler[7];
-                                    s8 = spieler[8];
-                                    break;
-                                case 4:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[5];
-                                    s6 = spieler[6];
-                                    s7 = spieler[7];
-                                    s8 = spieler[8];
-                                    break;
-                                case 5:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[4];
-                                    s6 = spieler[6];
-                                    s7 = spieler[7];
-                                    s8 = spieler[8];
-                                    break;
-                                case 6:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[4];
-                                    s7 = spieler[7];
-                                    s6 = spieler[5];
-                                    s8 = spieler[8];
-                                    break;
-                                case 7:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[4];
-                                    s7 = spieler[6];
-                                    s6 = spieler[5];
-                                    s8 = spieler[8];
-                                    break;
-                                case 8:
-                                    s2 = spieler[1];
-                                    s3 = spieler[2];
-                                    s4 = spieler[3];
-                                    s5 = spieler[4];
-                                    s7 = spieler[6];
-                                    s6 = spieler[5];
-                                    s8 = spieler[7];
-                                    break;
-                            }
-                            intent.putExtra("zweiter", s2.spielerName);
-                            intent.putExtra("zweiterscore", s2.score);
-                            intent.putExtra("dritter", s3.spielerName);
-                            intent.putExtra("dritterscore", s3.score);
-                            intent.putExtra("vierter", s4.spielerName);
-                            intent.putExtra("vierterscore", s4.score);
-                            intent.putExtra("fuenfter", s5.spielerName);
-                            intent.putExtra("fuenfterscore", s5.score);
-                            intent.putExtra("sechster", s6.spielerName);
-                            intent.putExtra("sechsterscore", s6.score);
-                            intent.putExtra("siebenter", s7.spielerName);
-                            intent.putExtra("siebenterscore", s7.score);
-                            intent.putExtra("achter", s8.spielerName);
-                            intent.putExtra("achterscore", s8.score);
-                        }
 
-                        startActivity(intent);
-                        finish();
-                        return;
-                    }
                 }
             }   // kein Treffer
                 else if (!gewinner(aktiverSpieler)) {
-                ii++;
-                aktuellerWurf = new pfeil();
-                aktuellerWurf.faktor = 0;
-                aktuellerWurf.addpunkte = 0;
-                aktuellerWurf.zahl = dart;
-                aktuellerWurf.spielerindex = aktiverSpieler;
-                wuerfe.add(ii, aktuellerWurf);
-            }
-            // Spiel geht weiter
-
-            TextView darts = findViewById(R.id.darts);
-            if (xdart < 2) {
-                xdart++;
-                s = s + (".");
-
-            } else {  //Spielerwechsel
-                xdart = 0;
-                s = "";
-
-                if ((aufnahme > 0) || (spieler[aktiverSpieler].gewinnerplatz!=0)) {
-                    buttonfreeze(true);
-                    final TextView aufnahmetv = findViewById(R.id.aufnahmetv);
-                    if (spieler[aktiverSpieler].gewinnerplatz!=0) aufnahmetv.setText(spieler[aktiverSpieler].gewinnerplatz+".");
-                    else aufnahmetv.setText(Integer.toString(aufnahme));
-                    aufnahmetv.setVisibility(View.VISIBLE);
-                    new Handler().postDelayed(new Runnable() {
-                        @Override
-                        public void run() {
-                            buttonfreeze(false);
-                            aufnahmetv.setVisibility(View.INVISIBLE);
-                        }
-                    }, changetime);
-                    aufnahme = 0;
-                }
-                //if (spieler[aktiverSpieler].gewinnerplatz == spieleranzahl-1) return;
-                if (spieler[aktiverSpieler].gewinnerplatz!=0) {
-                    textfeld(1, aktiverSpieler, 3).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizepassiv);
-                    textfeld(1, aktiverSpieler, 2).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizepassiv);
-                }
-                else {
-                    textfeld(1, aktiverSpieler, 3).setTextColor(textcolorpassiv);
-                    textfeld(1, aktiverSpieler, 2).setTextColor(textcolorpassiv);
-                    textfeld(1, aktiverSpieler, 3).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizepassiv);
-                    textfeld(1, aktiverSpieler, 2).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizepassiv);
+                    ii++;
+                    aktuellerWurf = new pfeil();
+                    aktuellerWurf.faktor = 0;
+                    aktuellerWurf.addpunkte = 0;
+                    aktuellerWurf.zahl = dart;
+                    aktuellerWurf.spielerindex = aktiverSpieler;
+                    wuerfe.add(ii, aktuellerWurf);
                 }
-                do  {
-                    if (aktiverSpieler < spieleranzahl) aktiverSpieler++;
-                    else aktiverSpieler = 1;
-                } while (spieler[aktiverSpieler].gewinnerplatz !=0);    // für cricket über die volle distanz
-                textfeld(1, aktiverSpieler, 3).setTextColor(textcoloraktiv);
-                textfeld(1, aktiverSpieler, 2).setTextColor(textcoloraktiv);
-                textfeld(1, aktiverSpieler, 3).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizeaktiv);
-                textfeld(1, aktiverSpieler, 2).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizeaktiv);
-                if (spielmodus.equals("Crazy")) {
-                    crazySegmente segment = new crazySegmente();
-                    speichereSegmente(segment);
-                    crazySegmentes.add(segment);
-                    randomfieldselect();
+                // Spiel geht weiter
+
+                TextView darts = findViewById(R.id.darts);
+                if (xdart < 2) {
+                    xdart++;
+                    s = s + (".");
+
+                } else {  //Spielerwechsel
+                    xdart = 0;
+                    s = "";
+
+                    if ((aufnahme > 0) || (spieler[aktiverSpieler].gewinnerplatz != 0)) {
+                        buttonfreeze(true);
+                        final TextView aufnahmetv = findViewById(R.id.aufnahmetv);
+                        if (spieler[aktiverSpieler].gewinnerplatz != 0)
+                            aufnahmetv.setText(spieler[aktiverSpieler].gewinnerplatz + ".");
+                        else aufnahmetv.setText(Integer.toString(aufnahme));
+                        aufnahmetv.setVisibility(View.VISIBLE);
+                        new Handler().postDelayed(new Runnable() {
+                            @Override
+                            public void run() {
+                                buttonfreeze(false);
+                                aufnahmetv.setVisibility(View.INVISIBLE);
+                            }
+                        }, changetime);
+                        aufnahme = 0;
+                    }
+                    //if (spieler[aktiverSpieler].gewinnerplatz == spieleranzahl-1) return;
+                    if (spieler[aktiverSpieler].gewinnerplatz != 0) {
+                        textfeld(1, aktiverSpieler, 3).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizepassiv);
+                        textfeld(1, aktiverSpieler, 2).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizepassiv);
+                    } else {
+                        textfeld(1, aktiverSpieler, 3).setTextColor(textcolorpassiv);
+                        textfeld(1, aktiverSpieler, 2).setTextColor(textcolorpassiv);
+                        textfeld(1, aktiverSpieler, 3).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizepassiv);
+                        textfeld(1, aktiverSpieler, 2).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizepassiv);
+                    }
+                    do {
+                        if (aktiverSpieler < spieleranzahl) aktiverSpieler++;
+                        else aktiverSpieler = 1;
+                    } while (spieler[aktiverSpieler].gewinnerplatz != 0);    // für cricket über die volle distanz
+                    textfeld(1, aktiverSpieler, 3).setTextColor(textcoloraktiv);
+                    textfeld(1, aktiverSpieler, 2).setTextColor(textcoloraktiv);
+                    textfeld(1, aktiverSpieler, 3).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizeaktiv);
+                    textfeld(1, aktiverSpieler, 2).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizeaktiv);
+                    if (spielmodus.equals("Crazy")) {
+                        crazySegmente segment = new crazySegmente();
+                        speichereSegmente(segment);
+                        crazySegmentes.add(segment);
+                        randomfieldselect();
+                    }
                 }
-            }
-            darts.setText(s);
+                darts.setText(s);
+
 
         }
+
     };
 
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         if (MainActivity.themeauswahl) setTheme(R.style.AppTheme);
         else setTheme(R.style.Theme_AppCompat_Light_NoActionBar);
         setContentView(R.layout.activity_cricket);
-        // Sprache setzen
-        SharedPreferences settings = getSharedPreferences("Einstellungen", 0);
-        if (settings.contains("Sprache")) {
-            if (!(settings.getString("Sprache","en")== Locale.getDefault().getLanguage())) {
-                // Sprache setzen
-                String language_code = settings.getString("Sprache", "en");
-                Resources res = getApplicationContext().getResources();
-                DisplayMetrics dm = res.getDisplayMetrics();
-                Configuration conf = res.getConfiguration();
-                Locale locale = new Locale(language_code);
-                Locale.setDefault(locale);
-                if (Build.VERSION.SDK_INT >= 17) {conf.setLocale(locale);}
-                else {conf.locale = locale;}
-                res.updateConfiguration(conf, dm);
-                Intent intent = getIntent();
-                finish();
-                startActivity(intent);
-            }
-        }
-
         TypedValue outValue = new TypedValue();
         cricket.this.getTheme().resolveAttribute(R.attr.colorButtonNormal, outValue, true);
         bcolor = outValue.data;
@@ -1072,8 +1084,11 @@ public class cricket extends AppCompatActivity {
         TextView p2name = findViewById(R.id.p2name);
         textcoloraktiv = p1name.getCurrentTextColor();
         textcolorpassiv = p2name.getCurrentTextColor();
-        textsizeaktiv = p1name.getTextSize();
         textsizepassiv = p2name.getTextSize();
+        textsizeaktiv = textsizepassiv + 4;
+        textfeld(1, 1, 3).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizeaktiv);
+        textfeld(1, 1, 2).setTextSize(TypedValue.COMPLEX_UNIT_PX, textsizeaktiv);
+
         Intent intent = getIntent();
         spieleranzahl = Integer.parseInt(intent.getStringExtra("spieleranzahl"));
         spielmodus = intent.getCharSequenceExtra("spielmodus");
@@ -1322,8 +1337,10 @@ public class cricket extends AppCompatActivity {
         btripel.setOnClickListener(doubletriple);
         bundo.setOnClickListener(undoclick);
 
+        SharedPreferences settings = getApplicationContext().getSharedPreferences("Einstellungen", 0);
         if (settings.contains("changetime")) changetime = settings.getInt("changetime", 1500);
-        if (settings.contains("spielgehtweiter")) spielgehtweiter = settings.getBoolean("spielgehtweiter",false);
+        if (settings.contains("spielgehtweiter"))
+            spielgehtweiter = settings.getBoolean("spielgehtweiter", false);
 
 
         //Layout in Abhängikeit vom spielmodus ändern
@@ -1362,70 +1379,71 @@ public class cricket extends AppCompatActivity {
             b10.setVisibility(View.GONE);
         } else if (spielmodus.equals("Crazy")) {
             initial_randomfieldselect(crazycricketFelderAnzahl);
-             }
+        }
         findViewById(android.R.id.content).invalidate();
 
-        startTime=System.currentTimeMillis();
+        startTime = System.currentTimeMillis();
     }
 
-    private  void ladeSegmente(crazySegmente seg) {
-        for (int button=crazycricketRangeMinimum;button<=20;button++) {
+    private void ladeSegmente(crazySegmente seg) {
+        for (int button = crazycricketRangeMinimum; button <= 20; button++) {
             if (seg.segmente[button]) zeigeFeld(button);
             else versteckeFeld(button);
         }
     }
 
     private void speichereSegmente(crazySegmente seg) {
-        for (int button=crazycricketRangeMinimum;button<=20;button++) {
-            seg.segmente[button]= buttonselect(button).getVisibility() == View.VISIBLE;
+        for (int button = crazycricketRangeMinimum; button <= 20; button++) {
+            seg.segmente[button] = buttonselect(button).getVisibility() == View.VISIBLE;
         }
     }
 
     private void randomfieldselect() {
-        boolean leereZahlenfelder=false;
-        int anzahlBenoetigterNeuerZahlenfelder=0;
+        boolean leereZahlenfelder = false;
+        int anzahlBenoetigterNeuerZahlenfelder = 0;
         // zählung und ausblendung der ungetroffenen zahlenfelder
-        for (int zahlenfeld=1; zahlenfeld<=20;zahlenfeld++) {
-            if ((buttonselect(zahlenfeld).getVisibility()==View.VISIBLE) &&(!open(zahlenfeld))){
-                    leereZahlenfelder=true;
-                    versteckeFeld(zahlenfeld);
-                    anzahlBenoetigterNeuerZahlenfelder++;
+        for (int zahlenfeld = 1; zahlenfeld <= 20; zahlenfeld++) {
+            if ((buttonselect(zahlenfeld).getVisibility() == View.VISIBLE) && (!open(zahlenfeld))) {
+                leereZahlenfelder = true;
+                versteckeFeld(zahlenfeld);
+                anzahlBenoetigterNeuerZahlenfelder++;
             }
         }
         // wenn es keine zutauschenden zahlenfelder gibt, hat die funktion nichts mehr zu tun
         if (!leereZahlenfelder) return;
         // neue, zufällig gewählte Felder sichtbar machen
-        Random rand= new Random();
+        Random rand = new Random();
         int neuesFeld;
         boolean unfertig;
-        for (int anzahl=anzahlBenoetigterNeuerZahlenfelder;anzahl>0;anzahl--) {
-            unfertig=true;
+        for (int anzahl = anzahlBenoetigterNeuerZahlenfelder; anzahl > 0; anzahl--) {
+            unfertig = true;
             while (unfertig) {
-                neuesFeld = rand.nextInt(21-crazycricketRangeMinimum)+crazycricketRangeMinimum;
-                if (buttonselect(neuesFeld).getVisibility()==View.GONE) {
+                neuesFeld = rand.nextInt(21 - crazycricketRangeMinimum) + crazycricketRangeMinimum;
+                if (buttonselect(neuesFeld).getVisibility() == View.GONE) {
                     zeigeFeld(neuesFeld);
-                    unfertig=false;
+                    unfertig = false;
                 }
             }
         }
     }
+
     // versteckt nicht benötigte zahlenfelder
-    private void initial_randomfieldselect(int felderAnzahl){
-        if (felderAnzahl>20) return;
-        for (int i=1;i<crazycricketRangeMinimum;i++) {
+    private void initial_randomfieldselect(int felderAnzahl) {
+        if (felderAnzahl > 20) return;
+        for (int i = 1; i < crazycricketRangeMinimum; i++) {
             versteckeFeld(i);
         }
 
-        Random rand=new Random();
+        Random rand = new Random();
         boolean unfertig;
         int feldnummer;
-        for (int i=crazycricketRangeMinimum;i<=(20-felderAnzahl+1);i++) {
-            unfertig=true;
+        for (int i = crazycricketRangeMinimum; i <= (20 - felderAnzahl + 1); i++) {
+            unfertig = true;
             while (unfertig) {
-                feldnummer = rand.nextInt(21-crazycricketRangeMinimum)+crazycricketRangeMinimum;
+                feldnummer = rand.nextInt(21 - crazycricketRangeMinimum) + crazycricketRangeMinimum;
                 if (buttonselect(feldnummer).getVisibility() == View.VISIBLE) {
                     versteckeFeld(feldnummer);
-                    unfertig=false;
+                    unfertig = false;
                 }
             }
         }
@@ -1434,19 +1452,19 @@ public class cricket extends AppCompatActivity {
 
     private void versteckeFeld(int feld) {
         buttonselect(feld).setVisibility(View.GONE);
-        for (int spielerindex=1;spielerindex<=spieleranzahl;spielerindex++)
-            textfeld(feld,spielerindex,1).setVisibility(View.GONE);
+        for (int spielerindex = 1; spielerindex <= spieleranzahl; spielerindex++)
+            textfeld(feld, spielerindex, 1).setVisibility(View.GONE);
     }
 
     private void zeigeFeld(int feld) {
         buttonselect(feld).setVisibility(View.VISIBLE);
-        for (int spielerindex=1;spielerindex<=spieleranzahl;spielerindex++)
-            textfeld(feld,spielerindex,1).setVisibility(View.VISIBLE);
+        for (int spielerindex = 1; spielerindex <= spieleranzahl; spielerindex++)
+            textfeld(feld, spielerindex, 1).setVisibility(View.VISIBLE);
     }
 
     // hat irgendein spieler das zahlenfeld bereits wenigstens 1x getroffen?
     private boolean getroffen(int zahlenfeld) {
-        for (int spielerindex=1;spielerindex<=spieleranzahl;spielerindex++) {
+        for (int spielerindex = 1; spielerindex <= spieleranzahl; spielerindex++) {
             if (spieler[spielerindex].treffer[zahlenfeld] != 0) {
                 return true;
             }
@@ -1456,7 +1474,7 @@ public class cricket extends AppCompatActivity {
 
     // hat irgendein spieler das zahlenfeld bereits 3x getroffen?
     private boolean open(int zahlenfeld) {
-        for (int spielerindex=1;spielerindex<=spieleranzahl;spielerindex++) {
+        for (int spielerindex = 1; spielerindex <= spieleranzahl; spielerindex++) {
             if (spieler[spielerindex].treffer[zahlenfeld] == 3) {
                 return true;
             }
@@ -1465,12 +1483,12 @@ public class cricket extends AppCompatActivity {
     }
 
     private Button buttonselect(int buttonnumber) {
-        String stt = "b"+buttonnumber;
+        String stt = "b" + buttonnumber;
         int idd = getResources().getIdentifier(stt, "id", getPackageName());
         return findViewById(idd);
     }
 
-        // liefert das gewünschte textview zurück
+    // liefert das gewünschte textview zurück
     private TextView textfeld(int dart, int aktiverSpieler, int typ)
     // typ=1 -> trefferfeld
     // typ=2 -> scorefeld
@@ -1505,9 +1523,8 @@ public class cricket extends AppCompatActivity {
     }
 
     private boolean alleZahlenClosed() {
-        for (int segment=1;segment <= 20;segment++) {
-            if ((buttonselect(segment).getVisibility()==View.VISIBLE) && !closed(segment))
-            {
+        for (int segment = 1; segment <= 20; segment++) {
+            if ((buttonselect(segment).getVisibility() == View.VISIBLE) && !closed(segment)) {
                 return false;
             }
         }
@@ -1516,7 +1533,7 @@ public class cricket extends AppCompatActivity {
 
     private boolean gewinner(int aktSpieler) {
         // wenn nur noch ein spieler im spiel ist, ist er der letzte "gewinner"
-        if ((spieleranzahl>1) && spielgehtweiter) {
+        if ((spieleranzahl > 1) && spielgehtweiter) {
             int anzahlrestlicherspieler = 0;
             for (int i = 1; i <= spieleranzahl; i++) {
                 if ((spieler[i].gewinnerplatz == 0) && (i != aktSpieler)) {
@@ -1526,26 +1543,25 @@ public class cricket extends AppCompatActivity {
             if (anzahlrestlicherspieler == 0) return true;
         }
 
-        if (spielvariante.equals("Classic")){
+        if (spielvariante.equals("Classic")) {
             // gewinner ist, der a) mehr punkte hat als alle anderen mitspieler...
             for (int i = 1; i <= spieleranzahl; i++) {
                 if ((spieler[aktSpieler].score < spieler[i].score) && (aktSpieler != i) && (spieler[i].gewinnerplatz == 0))
                     return false;
             }
-        } else
-            if (spielvariante.equals("Cut Throat")) {
+        } else if (spielvariante.equals("Cut Throat")) {
             // bzw. gewinner ist, der a) am wenigsten Punkte hat als alle anderen mitspieler...
-                for (int i = 1; i <= spieleranzahl; i++) {
-                    if ((spieler[aktSpieler].score > spieler[i].score) && (aktSpieler != i) && (spieler[i].gewinnerplatz == 0))
-                        return false;
-                }
-
+            for (int i = 1; i <= spieleranzahl; i++) {
+                if ((spieler[aktSpieler].score > spieler[i].score) && (aktSpieler != i) && (spieler[i].gewinnerplatz == 0))
+                    return false;
             }
 
+        }
+
         // ...und b) der sämtliche zahlen geschlossen  (d.h. 3x getroffen) hat...
         if (spielmodus.equals("Crazy")) {
-            for (int feld=1;feld<=20;feld++) {
-                if ((buttonselect(feld).getVisibility()==View.VISIBLE) && (spieler[aktSpieler].treffer[feld] != 3))
+            for (int feld = 1; feld <= 20; feld++) {
+                if ((buttonselect(feld).getVisibility() == View.VISIBLE) && (spieler[aktSpieler].treffer[feld] != 3))
                     return false;
             }
 
@@ -1663,24 +1679,64 @@ public class cricket extends AppCompatActivity {
     }
 
     private static class player {
-        String spielerName;
         final int[] treffer = new int[26]; // feld 25 ist anzahl_bull_treffer, ansonsten 10-20, bei crazy cricket auch mehr;
+        String spielerName;
         int score;
         int darts;
         int gewinnerplatz;
     }
 
-    private class pfeil {
+    private static class pfeil {
         int zahl;
         int faktor;
         int addpunkte;
         int spielerindex;
     }
 
-    private class crazySegmente {
-         final boolean [] segmente = new boolean[26];
+    private static class crazySegmente {
+        final boolean[] segmente = new boolean[26];
     }
 
 
+    @Override
+    protected void attachBaseContext(Context base) {
+        super.attachBaseContext(updateBaseContextLocale(base));
+    }
+
+    private Context updateBaseContextLocale(Context context) {
+        final SharedPreferences settings = context.getSharedPreferences("Einstellungen", 0);
+        String language = Locale.getDefault().getLanguage();
+        if (settings.contains("Sprache")) {
+            language = settings.getString("Sprache", "en");
+        }
+        Locale locale = new Locale(language);
+        Locale.setDefault(locale);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            return updateResourcesLocale(context, locale);
+        }
+
+        return updateResourcesLocaleLegacy(context, locale);
+    }
+
+    @TargetApi(Build.VERSION_CODES.N_MR1)
+    private Context updateResourcesLocale(Context context, Locale locale) {
+        Configuration configuration = new Configuration(context.getResources().getConfiguration());
+        configuration.setLocale(locale);
+        return context.createConfigurationContext(configuration);
+    }
+
+    @SuppressWarnings("deprecation")
+    private Context updateResourcesLocaleLegacy(Context context, Locale locale) {
+        Resources resources = context.getResources();
+        Configuration configuration = resources.getConfiguration();
+        configuration.locale = locale;
+        resources.updateConfiguration(configuration, resources.getDisplayMetrics());
+        return context;
+    }
+
+    private boolean zahlClosed(int spielerindex, int dart) {
+
+        return spieler[spielerindex].treffer[dart] == 3;
+    }
 }
 
diff --git a/app/src/main/java/com/DartChecker/einstellungen.java b/app/src/main/java/com/DartChecker/einstellungen.java
index d93aede..6193f55 100644
--- a/app/src/main/java/com/DartChecker/einstellungen.java
+++ b/app/src/main/java/com/DartChecker/einstellungen.java
@@ -1,11 +1,14 @@
 package com.DartChecker;
 
+import android.annotation.TargetApi;
+import android.app.Activity;
+import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.os.Build;
-import android.support.v7.app.AppCompatActivity;
+import androidx.appcompat.app.AppCompatActivity;
 import android.os.Bundle;
 import android.util.DisplayMetrics;
 import android.view.View;
@@ -21,7 +24,46 @@ import java.util.ArrayList;
 import java.util.Locale;
 
 public class einstellungen extends AppCompatActivity {
+
+    @Override
+    protected void attachBaseContext(Context base) {
+        super.attachBaseContext(updateBaseContextLocale(base));
+    }
+
+    private Context updateBaseContextLocale(Context context) {
+        final SharedPreferences settings = context.getSharedPreferences("Einstellungen", 0);
+        String language = Locale.getDefault().getLanguage();
+        if (settings.contains("Sprache")) {
+            language = settings.getString("Sprache", "en");
+        }
+        Locale locale = new Locale(language);
+        Locale.setDefault(locale);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            return updateResourcesLocale(context, locale);
+        }
+
+        return updateResourcesLocaleLegacy(context, locale);
+    }
+
+    @TargetApi(Build.VERSION_CODES.N_MR1)
+    private Context updateResourcesLocale(Context context, Locale locale) {
+        Configuration configuration = new Configuration(context.getResources().getConfiguration());
+        configuration.setLocale(locale);
+        return context.createConfigurationContext(configuration);
+    }
+
+    @SuppressWarnings("deprecation")
+    private Context updateResourcesLocaleLegacy(Context context, Locale locale) {
+        Resources resources = context.getResources();
+        Configuration configuration = resources.getConfiguration();
+        configuration.locale = locale;
+        resources.updateConfiguration(configuration, resources.getDisplayMetrics());
+        return context;
+    }
+
+
     @Override
+
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         final SharedPreferences settings = getSharedPreferences("Einstellungen", 0);
@@ -118,25 +160,14 @@ public class einstellungen extends AppCompatActivity {
                 editor.putInt("SprachZahl",position);
                 editor.apply();
                 if (settings.contains("Sprache")) {
-                    if (!(settings.getString("Sprache","en")==Locale.getDefault().getLanguage())) {
-                        // Sprache setzen
-                        language_code = settings.getString("Sprache", "en");
-                        Resources res = getApplicationContext().getResources();
-                        DisplayMetrics dm = res.getDisplayMetrics();
-                        Configuration conf = res.getConfiguration();
-                        Locale locale = new Locale(language_code);
-                        Locale.setDefault(locale);
-                        if (Build.VERSION.SDK_INT >= 17) {
-                            conf.setLocale(locale);
-                        } else {
-                            conf.locale = locale;
-                        }
-                        res.updateConfiguration(conf, dm);
+                    if (!(language_code.equals(Locale.getDefault().getLanguage()))) {
+                        // Sprache aktualisieren durch Neustart der activity
                         Intent intent = getIntent();
                         finish();
                         startActivity(intent);
                     }
                 }
+
             }
 
             @Override
diff --git a/app/src/main/java/com/DartChecker/hilfe.java b/app/src/main/java/com/DartChecker/hilfe.java
index c2bfe38..7469241 100644
--- a/app/src/main/java/com/DartChecker/hilfe.java
+++ b/app/src/main/java/com/DartChecker/hilfe.java
@@ -1,11 +1,13 @@
 package com.DartChecker;
 
+import android.annotation.TargetApi;
+import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.os.Build;
-import android.support.v7.app.AppCompatActivity;
+import androidx.appcompat.app.AppCompatActivity;
 import android.os.Bundle;
 import android.util.DisplayMetrics;
 
@@ -13,7 +15,41 @@ import java.util.Locale;
 
 public class hilfe extends AppCompatActivity {
 
+    @Override
+    protected void attachBaseContext(Context base) {
+        super.attachBaseContext(updateBaseContextLocale(base));
+    }
 
+    private Context updateBaseContextLocale(Context context) {
+        final SharedPreferences settings = context.getSharedPreferences("Einstellungen", 0);
+        String language = Locale.getDefault().getLanguage();
+        if (settings.contains("Sprache")) {
+            language = settings.getString("Sprache", "en");
+        }
+        Locale locale = new Locale(language);
+        Locale.setDefault(locale);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            return updateResourcesLocale(context, locale);
+        }
+
+        return updateResourcesLocaleLegacy(context, locale);
+    }
+
+    @TargetApi(Build.VERSION_CODES.N_MR1)
+    private Context updateResourcesLocale(Context context, Locale locale) {
+        Configuration configuration = new Configuration(context.getResources().getConfiguration());
+        configuration.setLocale(locale);
+        return context.createConfigurationContext(configuration);
+    }
+
+    @SuppressWarnings("deprecation")
+    private Context updateResourcesLocaleLegacy(Context context, Locale locale) {
+        Resources resources = context.getResources();
+        Configuration configuration = resources.getConfiguration();
+        configuration.locale = locale;
+        resources.updateConfiguration(configuration, resources.getDisplayMetrics());
+        return context;
+    }
 
     @Override
 
@@ -22,25 +58,6 @@ public class hilfe extends AppCompatActivity {
         if (MainActivity.themeauswahl) setTheme(R.style.AppTheme);
         else setTheme(R.style.Theme_AppCompat_Light_NoActionBar);
         setContentView(R.layout.activity_hilfe);
-        // Sprache setzen
-        SharedPreferences settings = getSharedPreferences("Einstellungen", 0);
-        if (settings.contains("Sprache")) {
-            if (!(settings.getString("Sprache","en")==Locale.getDefault().getLanguage())) {
-                // Sprache setzen
-                String language_code = settings.getString("Sprache", "en");
-                Resources res = getApplicationContext().getResources();
-                DisplayMetrics dm = res.getDisplayMetrics();
-                Configuration conf = res.getConfiguration();
-                Locale locale = new Locale(language_code);
-                Locale.setDefault(locale);
-                if (Build.VERSION.SDK_INT >= 17) {conf.setLocale(locale);}
-                else {conf.locale = locale;}
-                res.updateConfiguration(conf, dm);
-                Intent intent = getIntent();
-                finish();
-                startActivity(intent);
-            }
         }
-    }
 
 }
diff --git a/app/src/main/java/com/DartChecker/info.java b/app/src/main/java/com/DartChecker/info.java
index bc7c0a1..70ab9ec 100644
--- a/app/src/main/java/com/DartChecker/info.java
+++ b/app/src/main/java/com/DartChecker/info.java
@@ -1,11 +1,13 @@
 package com.DartChecker;
 
+import android.annotation.TargetApi;
+import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.os.Build;
-import android.support.v7.app.AppCompatActivity;
+import androidx.appcompat.app.AppCompatActivity;
 import android.os.Bundle;
 import android.util.DisplayMetrics;
 import android.view.View;
@@ -16,6 +18,42 @@ import java.util.Locale;
 
 public class info extends AppCompatActivity {
 
+    @Override
+    protected void attachBaseContext(Context base) {
+        super.attachBaseContext(updateBaseContextLocale(base));
+    }
+
+    private Context updateBaseContextLocale(Context context) {
+        final SharedPreferences settings = context.getSharedPreferences("Einstellungen", 0);
+        String language = Locale.getDefault().getLanguage();
+        if (settings.contains("Sprache")) {
+            language = settings.getString("Sprache", "en");
+        }
+        Locale locale = new Locale(language);
+        Locale.setDefault(locale);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            return updateResourcesLocale(context, locale);
+        }
+
+        return updateResourcesLocaleLegacy(context, locale);
+    }
+
+    @TargetApi(Build.VERSION_CODES.N_MR1)
+    private Context updateResourcesLocale(Context context, Locale locale) {
+        Configuration configuration = new Configuration(context.getResources().getConfiguration());
+        configuration.setLocale(locale);
+        return context.createConfigurationContext(configuration);
+    }
+
+    @SuppressWarnings("deprecation")
+    private Context updateResourcesLocaleLegacy(Context context, Locale locale) {
+        Resources resources = context.getResources();
+        Configuration configuration = resources.getConfiguration();
+        configuration.locale = locale;
+        resources.updateConfiguration(configuration, resources.getDisplayMetrics());
+        return context;
+    }
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -23,26 +61,6 @@ public class info extends AppCompatActivity {
         if (MainActivity.themeauswahl) setTheme(R.style.AppTheme);
         else setTheme(R.style.Theme_AppCompat_Light_NoActionBar);
         setContentView(R.layout.activity_info);
-        // Sprache setzen
-        SharedPreferences settings = getSharedPreferences("Einstellungen", 0);
-        if (settings.contains("Sprache")) {
-            if (!(settings.getString("Sprache","en")== Locale.getDefault().getLanguage())) {
-                // Sprache setzen
-                String language_code = settings.getString("Sprache", "en");
-                Resources res = getApplicationContext().getResources();
-                DisplayMetrics dm = res.getDisplayMetrics();
-                Configuration conf = res.getConfiguration();
-                Locale locale = new Locale(language_code);
-                Locale.setDefault(locale);
-                if (Build.VERSION.SDK_INT >= 17) {conf.setLocale(locale);}
-                else {conf.locale = locale;}
-                res.updateConfiguration(conf, dm);
-                Intent intent = getIntent();
-                finish();
-                startActivity(intent);
-            }
-        }
-
         final Button ok = findViewById(R.id.okb);
         ok.setOnClickListener(new View.OnClickListener() {
             @Override
diff --git a/app/src/main/java/com/DartChecker/match.java b/app/src/main/java/com/DartChecker/match.java
index e0be740..007db04 100644
--- a/app/src/main/java/com/DartChecker/match.java
+++ b/app/src/main/java/com/DartChecker/match.java
@@ -1,7 +1,9 @@
 package com.DartChecker;
 
 import android.annotation.SuppressLint;
+import android.annotation.TargetApi;
 import android.app.AlertDialog;
+import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -9,8 +11,8 @@ import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.os.Build;
 import android.os.Handler;
-import android.support.constraint.Guideline;
-import android.support.v7.app.AppCompatActivity;
+import androidx.constraintlayout.widget.Guideline;
+import androidx.appcompat.app.AppCompatActivity;
 import android.os.Bundle;
 import android.util.DisplayMetrics;
 import android.util.TypedValue;
@@ -303,7 +305,7 @@ public class match extends AppCompatActivity {
         @SuppressLint("NonConstantResourceId")
         @Override
         public void onClick(View v) {
-            Integer sender = v.getId();
+            int sender = v.getId();
             Button eingabe = findViewById(sender);
             rundenname = name.getText().toString();  // aktueller spieler
             int ergebnis;
@@ -430,6 +432,7 @@ public class match extends AppCompatActivity {
             }
             //spieler gewinnt!
             else if ((dummy == 0 && !doubleout) || (dummy == 0 && doubleout && faktor == 2) || (dummy == 0 && masterout && faktor == 3) ) {
+
                 letzterwurf = true;
                 Toast.makeText(getApplicationContext(), rundenname + " " + getResources().getString(R.string.gewinnt), Toast.LENGTH_SHORT).show();
                 switch (xdart) {
@@ -2373,32 +2376,49 @@ public class match extends AppCompatActivity {
         checkouts[1][3] = "";
     }
 
+    @Override
+    protected void attachBaseContext(Context base) {
+        super.attachBaseContext(updateBaseContextLocale(base));
+    }
+
+    private Context updateBaseContextLocale(Context context) {
+        final SharedPreferences settings = context.getSharedPreferences("Einstellungen", 0);
+        String language = Locale.getDefault().getLanguage();
+        if (settings.contains("Sprache")) {
+            language = settings.getString("Sprache", "en");
+        }
+        Locale locale = new Locale(language);
+        Locale.setDefault(locale);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            return updateResourcesLocale(context, locale);
+        }
+
+        return updateResourcesLocaleLegacy(context, locale);
+    }
+
+    @TargetApi(Build.VERSION_CODES.N_MR1)
+    private Context updateResourcesLocale(Context context, Locale locale) {
+        Configuration configuration = new Configuration(context.getResources().getConfiguration());
+        configuration.setLocale(locale);
+        return context.createConfigurationContext(configuration);
+    }
+
+    @SuppressWarnings("deprecation")
+    private Context updateResourcesLocaleLegacy(Context context, Locale locale) {
+        Resources resources = context.getResources();
+        Configuration configuration = resources.getConfiguration();
+        configuration.locale = locale;
+        resources.updateConfiguration(configuration, resources.getDisplayMetrics());
+        return context;
+    }
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         if (MainActivity.themeauswahl) setTheme(R.style.AppTheme);
         else setTheme(R.style.Theme_AppCompat_Light_NoActionBar);
         setContentView(R.layout.activity_match);
-        // Sprache setzen
         SharedPreferences settings = getSharedPreferences("Einstellungen", 0);
-        if (settings.contains("Sprache")) {
-            if (!(settings.getString("Sprache","en")==Locale.getDefault().getLanguage())) {
-                // Sprache setzen
-                String language_code = settings.getString("Sprache", "en");
-                Resources res = getApplicationContext().getResources();
-                DisplayMetrics dm = res.getDisplayMetrics();
-                Configuration conf = res.getConfiguration();
-                Locale locale = new Locale(language_code);
-                Locale.setDefault(locale);
-                if (Build.VERSION.SDK_INT >= 17) {conf.setLocale(locale);}
-                    else {conf.locale = locale;}
-                res.updateConfiguration(conf, dm);
-                Intent intent = getIntent();
-                finish();
-                startActivity(intent);
-            }
-        }
-
 
         // spielmodus und co übernehmen
         Intent intent = getIntent();
diff --git a/app/src/main/java/com/DartChecker/matchcalc.java b/app/src/main/java/com/DartChecker/matchcalc.java
index 55075c0..2a94594 100644
--- a/app/src/main/java/com/DartChecker/matchcalc.java
+++ b/app/src/main/java/com/DartChecker/matchcalc.java
@@ -1,7 +1,9 @@
 package com.DartChecker;
 
 import android.annotation.SuppressLint;
+import android.annotation.TargetApi;
 import android.app.AlertDialog;
+import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -9,8 +11,8 @@ import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.os.Build;
 import android.os.Handler;
-import android.support.constraint.Guideline;
-import android.support.v7.app.AppCompatActivity;
+import androidx.constraintlayout.widget.Guideline;
+import androidx.appcompat.app.AppCompatActivity;
 import android.os.Bundle;
 import android.util.DisplayMetrics;
 import android.util.TypedValue;
@@ -26,7 +28,43 @@ import java.util.Locale;
 
 public class matchcalc extends AppCompatActivity {
 
-    private class aufnahme {
+    @Override
+    protected void attachBaseContext(Context base) {
+        super.attachBaseContext(updateBaseContextLocale(base));
+    }
+
+    private Context updateBaseContextLocale(Context context) {
+        final SharedPreferences settings = context.getSharedPreferences("Einstellungen", 0);
+        String language = Locale.getDefault().getLanguage();
+        if (settings.contains("Sprache")) {
+            language = settings.getString("Sprache", "en");
+        }
+        Locale locale = new Locale(language);
+        Locale.setDefault(locale);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            return updateResourcesLocale(context, locale);
+        }
+
+        return updateResourcesLocaleLegacy(context, locale);
+    }
+
+    @TargetApi(Build.VERSION_CODES.N_MR1)
+    private Context updateResourcesLocale(Context context, Locale locale) {
+        Configuration configuration = new Configuration(context.getResources().getConfiguration());
+        configuration.setLocale(locale);
+        return context.createConfigurationContext(configuration);
+    }
+
+    @SuppressWarnings("deprecation")
+    private Context updateResourcesLocaleLegacy(Context context, Locale locale) {
+        Resources resources = context.getResources();
+        Configuration configuration = resources.getConfiguration();
+        configuration.locale = locale;
+        resources.updateConfiguration(configuration, resources.getDisplayMetrics());
+        return context;
+    }
+
+    private static class aufnahme {
         int geworfenePunkte;
         Boolean busted;
     }
@@ -204,7 +242,7 @@ public class matchcalc extends AppCompatActivity {
         @Override
         public void onClick(View v) {
 
-            Integer sender = v.getId();
+            int sender = v.getId();
             Button eingabe = findViewById(sender);
             rundenname = name.getText().toString();  // aktueller spieler
             int ergebnis;
@@ -2267,26 +2305,6 @@ public class matchcalc extends AppCompatActivity {
         if (MainActivity.themeauswahl) setTheme(R.style.AppTheme);
         else setTheme(R.style.Theme_AppCompat_Light_NoActionBar);
         setContentView(R.layout.activity_matchcalc);
-        // Sprache setzen
-        SharedPreferences settings = getSharedPreferences("Einstellungen", 0);
-        if (settings.contains("Sprache")) {
-            if (!(settings.getString("Sprache","en")==Locale.getDefault().getLanguage())) {
-                // Sprache setzen
-                String language_code = settings.getString("Sprache", "en");
-                Resources res = getApplicationContext().getResources();
-                DisplayMetrics dm = res.getDisplayMetrics();
-                Configuration conf = res.getConfiguration();
-                Locale locale = new Locale(language_code);
-                Locale.setDefault(locale);
-                if (Build.VERSION.SDK_INT >= 17) {conf.setLocale(locale);}
-                else {conf.locale = locale;}
-                res.updateConfiguration(conf, dm);
-                Intent intent = getIntent();
-                finish();
-                startActivity(intent);
-            }
-        }
-
         // spielmodus und co übernehmen
         Intent intent = getIntent();
         CharSequence spieler1n = intent.getCharSequenceExtra("spieler1");
@@ -2616,7 +2634,7 @@ public class matchcalc extends AppCompatActivity {
         formater.setMaximumIntegerDigits(3);
         formater.setMinimumIntegerDigits(1);
         formater.setMinimumFractionDigits(0);
-
+        SharedPreferences settings = getApplicationContext().getSharedPreferences("Einstellungen", 0);
         if (settings.contains("changetime")) changetime = settings.getInt("changetime", 1500);
 
         TypedValue outValue = new TypedValue();
diff --git a/app/src/main/java/com/DartChecker/spielende.java b/app/src/main/java/com/DartChecker/spielende.java
index 8450f89..d919985 100644
--- a/app/src/main/java/com/DartChecker/spielende.java
+++ b/app/src/main/java/com/DartChecker/spielende.java
@@ -1,12 +1,14 @@
 package com.DartChecker;
 
+import android.annotation.TargetApi;
+import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.os.Build;
 import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
+import androidx.appcompat.app.AppCompatActivity;
 import android.util.DisplayMetrics;
 import android.view.View;
 import android.widget.Button;
@@ -20,6 +22,42 @@ import java.util.Objects;
 
 public class spielende extends AppCompatActivity {
 
+    @Override
+    protected void attachBaseContext(Context base) {
+        super.attachBaseContext(updateBaseContextLocale(base));
+    }
+
+    private Context updateBaseContextLocale(Context context) {
+        final SharedPreferences settings = context.getSharedPreferences("Einstellungen", 0);
+        String language = Locale.getDefault().getLanguage();
+        if (settings.contains("Sprache")) {
+            language = settings.getString("Sprache", "en");
+        }
+        Locale locale = new Locale(language);
+        Locale.setDefault(locale);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            return updateResourcesLocale(context, locale);
+        }
+
+        return updateResourcesLocaleLegacy(context, locale);
+    }
+
+    @TargetApi(Build.VERSION_CODES.N_MR1)
+    private Context updateResourcesLocale(Context context, Locale locale) {
+        Configuration configuration = new Configuration(context.getResources().getConfiguration());
+        configuration.setLocale(locale);
+        return context.createConfigurationContext(configuration);
+    }
+
+    @SuppressWarnings("deprecation")
+    private Context updateResourcesLocaleLegacy(Context context, Locale locale) {
+        Resources resources = context.getResources();
+        Configuration configuration = resources.getConfiguration();
+        configuration.locale = locale;
+        resources.updateConfiguration(configuration, resources.getDisplayMetrics());
+        return context;
+    }
+
     private final DecimalFormatSymbols symbols = new DecimalFormatSymbols(Locale.US);
     private final DecimalFormat formater = new DecimalFormat("###.##", symbols);
 
@@ -36,25 +74,6 @@ public class spielende extends AppCompatActivity {
         if (MainActivity.themeauswahl) setTheme(R.style.AppTheme);
         else setTheme(R.style.Theme_AppCompat_Light_NoActionBar);
         setContentView(R.layout.activity_spielende);
-        // Sprache setzen
-        SharedPreferences settings = getSharedPreferences("Einstellungen", 0);
-        if (settings.contains("Sprache")) {
-            if (!(settings.getString("Sprache","en")==Locale.getDefault().getLanguage())) {
-                // Sprache setzen
-                String language_code = settings.getString("Sprache", "en");
-                Resources res = getApplicationContext().getResources();
-                DisplayMetrics dm = res.getDisplayMetrics();
-                Configuration conf = res.getConfiguration();
-                Locale locale = new Locale(language_code);
-                Locale.setDefault(locale);
-                if (Build.VERSION.SDK_INT >= 17) {conf.setLocale(locale);}
-                else {conf.locale = locale;}
-                res.updateConfiguration(conf, dm);
-                Intent intent = getIntent();
-                finish();
-                startActivity(intent);
-            }
-        }
         TextView e1 = findViewById(R.id.erstert);
         TextView e2 = findViewById(R.id.ersterdaten);
         TextView z1 = findViewById(R.id.zweitert);
diff --git a/app/src/main/java/com/DartChecker/spielerliste.java b/app/src/main/java/com/DartChecker/spielerliste.java
index 4168922..c01ee4e 100644
--- a/app/src/main/java/com/DartChecker/spielerliste.java
+++ b/app/src/main/java/com/DartChecker/spielerliste.java
@@ -1,5 +1,6 @@
 package com.DartChecker;
 
+import android.annotation.TargetApi;
 import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
@@ -9,9 +10,9 @@ import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.os.Build;
 import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.LinearLayoutManager;
-import android.support.v7.widget.RecyclerView;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
 import android.util.DisplayMetrics;
 import android.view.KeyEvent;
 import android.view.View;
@@ -28,6 +29,41 @@ import java.util.Locale;
 
 public class spielerliste extends AppCompatActivity implements viewadapter.ItemClickListener {
 
+    @Override
+    protected void attachBaseContext(Context base) {
+        super.attachBaseContext(updateBaseContextLocale(base));
+    }
+
+    private Context updateBaseContextLocale(Context context) {
+        final SharedPreferences settings = context.getSharedPreferences("Einstellungen", 0);
+        String language = Locale.getDefault().getLanguage();
+        if (settings.contains("Sprache")) {
+            language = settings.getString("Sprache", "en");
+        }
+        Locale locale = new Locale(language);
+        Locale.setDefault(locale);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            return updateResourcesLocale(context, locale);
+        }
+
+        return updateResourcesLocaleLegacy(context, locale);
+    }
+
+    @TargetApi(Build.VERSION_CODES.N_MR1)
+    private Context updateResourcesLocale(Context context, Locale locale) {
+        Configuration configuration = new Configuration(context.getResources().getConfiguration());
+        configuration.setLocale(locale);
+        return context.createConfigurationContext(configuration);
+    }
+
+    @SuppressWarnings("deprecation")
+    private Context updateResourcesLocaleLegacy(Context context, Locale locale) {
+        Resources resources = context.getResources();
+        Configuration configuration = resources.getConfiguration();
+        configuration.locale = locale;
+        resources.updateConfiguration(configuration, resources.getDisplayMetrics());
+        return context;
+    }
 
     private viewadapter adapter;
     private int aktuelleposition = -1;
@@ -38,25 +74,6 @@ public class spielerliste extends AppCompatActivity implements viewadapter.ItemC
         if (MainActivity.themeauswahl) setTheme(R.style.AppTheme);
         else setTheme(R.style.Theme_AppCompat_Light_NoActionBar);
         setContentView(R.layout.activity_spielerliste);
-        // Sprache setzen
-        SharedPreferences settings = getSharedPreferences("Einstellungen", 0);
-        if (settings.contains("Sprache")) {
-            if (!(settings.getString("Sprache","en")== Locale.getDefault().getLanguage())) {
-                // Sprache setzen
-                String language_code = settings.getString("Sprache", "en");
-                Resources res = getApplicationContext().getResources();
-                DisplayMetrics dm = res.getDisplayMetrics();
-                Configuration conf = res.getConfiguration();
-                Locale locale = new Locale(language_code);
-                Locale.setDefault(locale);
-                if (Build.VERSION.SDK_INT >= 17) {conf.setLocale(locale);}
-                else {conf.locale = locale;}
-                res.updateConfiguration(conf, dm);
-                Intent intent = getIntent();
-                finish();
-                startActivity(intent);
-            }
-        }
         final ArrayList<String> SpielerNamen = new ArrayList<>();
         // spielernamen aus allespieler laden
         MainActivity.spieler next;
diff --git a/app/src/main/java/com/DartChecker/statistik.java b/app/src/main/java/com/DartChecker/statistik.java
index c4336c5..d458986 100644
--- a/app/src/main/java/com/DartChecker/statistik.java
+++ b/app/src/main/java/com/DartChecker/statistik.java
@@ -1,6 +1,8 @@
 package com.DartChecker;
 
+import android.annotation.TargetApi;
 import android.app.AlertDialog;
+import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -8,7 +10,7 @@ import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.os.Build;
 import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
+import androidx.appcompat.app.AppCompatActivity;
 import android.util.DisplayMetrics;
 import android.view.View;
 import android.widget.AdapterView;
@@ -23,6 +25,42 @@ import java.util.Locale;
 
 public class statistik extends AppCompatActivity {
 
+    @Override
+    protected void attachBaseContext(Context base) {
+        super.attachBaseContext(updateBaseContextLocale(base));
+    }
+
+    private Context updateBaseContextLocale(Context context) {
+        final SharedPreferences settings = context.getSharedPreferences("Einstellungen", 0);
+        String language = Locale.getDefault().getLanguage();
+        if (settings.contains("Sprache")) {
+            language = settings.getString("Sprache", "en");
+        }
+        Locale locale = new Locale(language);
+        Locale.setDefault(locale);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            return updateResourcesLocale(context, locale);
+        }
+
+        return updateResourcesLocaleLegacy(context, locale);
+    }
+
+    @TargetApi(Build.VERSION_CODES.N_MR1)
+    private Context updateResourcesLocale(Context context, Locale locale) {
+        Configuration configuration = new Configuration(context.getResources().getConfiguration());
+        configuration.setLocale(locale);
+        return context.createConfigurationContext(configuration);
+    }
+
+    @SuppressWarnings("deprecation")
+    private Context updateResourcesLocaleLegacy(Context context, Locale locale) {
+        Resources resources = context.getResources();
+        Configuration configuration = resources.getConfiguration();
+        configuration.locale = locale;
+        resources.updateConfiguration(configuration, resources.getDisplayMetrics());
+        return context;
+    }
+
     private final DecimalFormatSymbols symbols = new DecimalFormatSymbols(Locale.US);
     private final DecimalFormat formater = new DecimalFormat("###.##", symbols);
 
@@ -32,25 +70,6 @@ public class statistik extends AppCompatActivity {
         if (MainActivity.themeauswahl) setTheme(R.style.AppTheme);
         else setTheme(R.style.Theme_AppCompat_Light_NoActionBar);
         setContentView(R.layout.activity_statistik);
-        // Sprache setzen
-        SharedPreferences settings = getSharedPreferences("Einstellungen", 0);
-        if (settings.contains("Sprache")) {
-            if (!(settings.getString("Sprache","en")==Locale.getDefault().getLanguage())) {
-                // Sprache setzen
-                String language_code = settings.getString("Sprache", "en");
-                Resources res = getApplicationContext().getResources();
-                DisplayMetrics dm = res.getDisplayMetrics();
-                Configuration conf = res.getConfiguration();
-                Locale locale = new Locale(language_code);
-                Locale.setDefault(locale);
-                if (Build.VERSION.SDK_INT >= 17) {conf.setLocale(locale);}
-                else {conf.locale = locale;}
-                res.updateConfiguration(conf, dm);
-                Intent intent = getIntent();
-                finish();
-                startActivity(intent);
-            }
-        }
         ArrayAdapter<MainActivity.spieler> arrayAdapter = new ArrayAdapter<>(
                 statistik.this, R.layout.spinner_item_head, MainActivity.allespieler);
         arrayAdapter.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item);
diff --git a/app/src/main/java/com/DartChecker/viewadapter.java b/app/src/main/java/com/DartChecker/viewadapter.java
index 6774f8c..02229e1 100644
--- a/app/src/main/java/com/DartChecker/viewadapter.java
+++ b/app/src/main/java/com/DartChecker/viewadapter.java
@@ -3,7 +3,7 @@ package com.DartChecker;
 import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
-import android.support.v7.widget.RecyclerView;
+import androidx.recyclerview.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
