diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/App.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/App.java
similarity index 72%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/App.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/App.java
index 75ddfd76..d230dc5d 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/App.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/App.java
@@ -16,22 +16,28 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay;
+package com.achep.acdisplay;
 
 import android.app.Application;
-import android.content.Intent;
 
-import com.achep.activedisplay.activemode.ActiveModeService;
-import com.achep.activedisplay.services.KeyguardService;
+import com.achep.acdisplay.activemode.ActiveModeService;
+import com.achep.acdisplay.blacklist.Blacklist;
+import com.achep.acdisplay.services.KeyguardService;
 
 /**
  * Created by Artem on 22.02.14.
  */
 public class App extends Application {
 
+    public static final int ID_NOTIFY_KEYGUARD = 10;
+    public static final int ID_NOTIFY_ACTIVE_MODE = 20;
+    public static final int ID_NOTIFY_INIT = 30;
+    public static final int ID_NOTIFY_TEST = 40;
+
     @Override
     public void onCreate() {
         Config.getInstance().init(this);
+        Blacklist.getInstance().init(this);
 
         super.onCreate();
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/AsyncTask.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/AsyncTask.java
similarity index 93%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/AsyncTask.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/AsyncTask.java
index 4fb8842a..e5e06dd2 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/AsyncTask.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/AsyncTask.java
@@ -17,10 +17,10 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay;
+package com.achep.acdisplay;
 
 /**
- * A better {@link com.achep.activedisplay.AsyncTask}.
+ * A better {@link com.achep.acdisplay.AsyncTask}.
  *
  * @author Artem Chepurnoy
  */
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/Project.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/Build.java
similarity index 62%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/Project.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/Build.java
index 438a7769..7decd919 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/Project.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/Build.java
@@ -16,28 +16,17 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay;
-
-import android.content.Context;
+package com.achep.acdisplay;
 
 /**
  * Created by Artem on 30.12.13.
  */
-public class Project {
-
-    /**
-     * Is it debug version?
-     */
-    @SuppressWarnings("PointlessBooleanExpression")
-    public static final boolean DEBUG = BuildConfig.MY_DEBUG && true;
+public final class Build {
 
-    /**
-     * Support email of this project.
-     */
-    public static final String EMAIL = "support@artemchep.com";
+    public static final boolean DEBUG = BuildConfig.MY_DEBUG;
+    public static final String TIME_STAMP = BuildConfig.MY_TIME_STAMP;
+    public static final String GOOGLE_PLAY_PUBLIC_KEY = BuildConfig.MY_GOOGLE_PLAY_PUBLIC_KEY;
 
-    public static String getPackageName(Context context) {
-        return context.getApplicationInfo().packageName;
-    }
+    public static final String SUPPORT_EMAIL = "support@artemchep.com";
 
 }
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/Config.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/Config.java
similarity index 88%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/Config.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/Config.java
index 47b1aeb8..782a7430 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/Config.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/Config.java
@@ -16,16 +16,16 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay;
+package com.achep.acdisplay;
 
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.content.res.Resources;
 import android.util.Log;
 
-import com.achep.activedisplay.activemode.ActiveModeService;
-import com.achep.activedisplay.services.KeyguardService;
-import com.achep.activedisplay.utils.AccessUtils;
+import com.achep.acdisplay.activemode.ActiveModeService;
+import com.achep.acdisplay.services.KeyguardService;
+import com.achep.acdisplay.utils.AccessUtils;
 
 import java.util.ArrayList;
 
@@ -43,7 +43,10 @@ public class Config {
 
     public static final String KEY_ENABLED = "enabled";
     public static final String KEY_ONLY_WHILE_CHARGING = "only_while_charging";
-    public static final String KEY_LOW_PRIORITY_NOTIFICATIONS = "low_priority_notifications";
+
+    // notifications
+    public static final String KEY_NOTIFY_LOW_PRIORITY = "notify_low_priority";
+    public static final String KEY_NOTIFY_WAKE_UP_ON = "notify_wake_up_on";
 
     // inactive time
     public static final String KEY_INACTIVE_TIME_FROM = "inactive_time_from";
@@ -56,7 +59,7 @@ public class Config {
     public static final String KEY_TIMEOUT_SHORT = "timeout_short";
 
     // keyguard
-    public static final String KEY_KEYGUARD = "lock_screen";
+    public static final String KEY_KEYGUARD = "keyguard";
 
     // active mode
     public static final String KEY_ACTIVE_MODE = "active_mode";
@@ -70,6 +73,7 @@ public class Config {
     public static final int DYNAMIC_BG_NOTIFICATION_MASK = 2;
     public static final String KEY_UI_MIRRORED_TIMEOUT_BAR = "mirrored_timeout_progress_bar";
     public static final String KEY_UI_NOTIFY_CIRCLED_ICON = "notify_circled_icon";
+    public static final String KEY_UI_STATUS_BATTERY_ALWAYS_VISIBLE = "ui_status_battery_always_visible";
 
     private static Config sConfig;
 
@@ -79,6 +83,7 @@ public class Config {
     private boolean mActiveModeWithoutNotifies;
     private boolean mEnabledOnlyWhileCharging;
     private boolean mNotifyLowPriority;
+    private boolean mNotifyWakeUpOn;
     private boolean mTimeoutEnabled;
     private int mTimeoutNormal;
     private int mTimeoutShort;
@@ -89,8 +94,11 @@ public class Config {
     private boolean mUiWallpaper;
     private boolean mUiWallpaperShadow;
     private boolean mUiMirroredTimeoutBar;
+    private boolean mUiBatteryAlwaysVisible;
     private boolean mUiNotifyCircledIcon;
 
+    private boolean mConstAlternativePayments;
+
     private ArrayList<OnConfigChangedListener> mListeners;
     private Context mContext;
 
@@ -142,8 +150,10 @@ public class Config {
                 res.getBoolean(R.bool.config_default_active_mode_without_notifies_enabled));
 
         // notifications
-        mNotifyLowPriority = prefs.getBoolean(KEY_LOW_PRIORITY_NOTIFICATIONS,
+        mNotifyLowPriority = prefs.getBoolean(KEY_NOTIFY_LOW_PRIORITY,
                 res.getBoolean(R.bool.config_default_notify_low_priority));
+        mNotifyWakeUpOn = prefs.getBoolean(KEY_NOTIFY_WAKE_UP_ON,
+                res.getBoolean(R.bool.config_default_notify_wake_up_on));
 
         // timeout
         mTimeoutEnabled = prefs.getBoolean(KEY_TIMEOUT_ENABLED,
@@ -172,10 +182,16 @@ public class Config {
                 res.getBoolean(R.bool.config_default_ui_mirrored_timeout_bar));
         mUiNotifyCircledIcon = prefs.getBoolean(KEY_UI_NOTIFY_CIRCLED_ICON,
                 res.getBoolean(R.bool.config_default_ui_notify_circled_icon));
+        mUiBatteryAlwaysVisible = prefs.getBoolean(KEY_UI_STATUS_BATTERY_ALWAYS_VISIBLE,
+                res.getBoolean(R.bool.config_default_ui_status_battery_always_visible));
 
         // other
         mEnabledOnlyWhileCharging = prefs.getBoolean(KEY_ONLY_WHILE_CHARGING,
                 res.getBoolean(R.bool.config_default_enabled_only_while_charging));
+
+        // const
+        mConstAlternativePayments =
+                res.getBoolean(R.bool.config_alternative_payments);
     }
 
     static SharedPreferences getSharedPreferences(Context context) {
@@ -204,7 +220,7 @@ public class Config {
             return;
         }
 
-        if (Project.DEBUG) Log.d(TAG, "Saving \"" + key + "\" to config as \"" + value + "\"");
+        if (Build.DEBUG) Log.d(TAG, "Saving \"" + key + "\" to config as \"" + value + "\"");
 
         SharedPreferences.Editor editor = getSharedPreferences(context).edit();
         if (value instanceof Boolean) {
@@ -293,7 +309,13 @@ public class Config {
     public void setLowPriorityNotificationsAllowed(Context context, boolean enabled,
                                                    OnConfigChangedListener listener) {
         boolean changed = mNotifyLowPriority != (mNotifyLowPriority = enabled);
-        saveOption(context, KEY_LOW_PRIORITY_NOTIFICATIONS, enabled, listener, changed);
+        saveOption(context, KEY_NOTIFY_LOW_PRIORITY, enabled, listener, changed);
+    }
+
+    public void setWakeUpOnNotifyEnabled(Context context, boolean enabled,
+                                                   OnConfigChangedListener listener) {
+        boolean changed = mNotifyWakeUpOn != (mNotifyWakeUpOn = enabled);
+        saveOption(context, KEY_NOTIFY_WAKE_UP_ON, enabled, listener, changed);
     }
 
     /**
@@ -380,6 +402,11 @@ public class Config {
         saveOption(context, KEY_UI_NOTIFY_CIRCLED_ICON, enabled, listener, changed);
     }
 
+    public void setBatteryAlwaysVisible(Context context, boolean visible, OnConfigChangedListener listener) {
+        boolean changed = mUiBatteryAlwaysVisible != (mUiBatteryAlwaysVisible = visible);
+        saveOption(context, KEY_UI_STATUS_BATTERY_ALWAYS_VISIBLE, visible, listener, changed);
+    }
+
     public int getTimeoutNormal() {
         return mTimeoutNormal;
     }
@@ -420,6 +447,10 @@ public class Config {
         return mEnabledOnlyWhileCharging;
     }
 
+    public boolean isNotifyWakingUp() {
+        return mNotifyWakeUpOn;
+    }
+
     public boolean isLowPriorityNotificationsAllowed() {
         return mNotifyLowPriority;
     }
@@ -436,6 +467,10 @@ public class Config {
         return mUiNotifyCircledIcon;
     }
 
+    public boolean isBatteryAlwaysVisible() {
+        return mUiBatteryAlwaysVisible;
+    }
+
     public boolean isMirroredTimeoutProgressBarEnabled() {
         return mUiMirroredTimeoutBar;
     }
@@ -448,4 +483,8 @@ public class Config {
         return mTimeoutEnabled;
     }
 
+    public boolean isAlternativePaymentsEnabled() {
+        return mConstAlternativePayments;
+    }
+
 }
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/Device.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/Device.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/Device.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/Device.java
index de531de6..5dfafa2b 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/Device.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/Device.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay;
+package com.achep.acdisplay;
 
 import android.os.Build;
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/DialogHelper.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/DialogHelper.java
similarity index 82%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/DialogHelper.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/DialogHelper.java
index 66376d14..24345275 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/DialogHelper.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/DialogHelper.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay;
+package com.achep.acdisplay;
 
 /**
  * Created by Artem on 28.01.14.
@@ -29,7 +29,6 @@ import android.app.Fragment;
 import android.app.FragmentManager;
 import android.app.FragmentTransaction;
 import android.content.Context;
-import android.content.res.Configuration;
 import android.graphics.drawable.Drawable;
 import android.text.TextUtils;
 import android.text.method.LinkMovementMethod;
@@ -38,11 +37,10 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
-import com.achep.activedisplay.fragments.AboutDialog;
-import com.achep.activedisplay.fragments.DonateDialog;
-import com.achep.activedisplay.fragments.FeedbackDialog;
-import com.achep.activedisplay.fragments.HelpDialog;
-import com.achep.activedisplay.fragments.NewsDialog;
+import com.achep.acdisplay.fragments.AboutDialog;
+import com.achep.acdisplay.fragments.FeedbackDialog;
+import com.achep.acdisplay.fragments.HelpDialog;
+import com.achep.acdisplay.iab.DonationFragment;
 
 import org.apache.commons.lang.builder.EqualsBuilder;
 import org.apache.commons.lang.builder.HashCodeBuilder;
@@ -52,24 +50,25 @@ import org.apache.commons.lang.builder.HashCodeBuilder;
  */
 public class DialogHelper {
 
+    public static final String TAG_FRAGMENT_ABOUT = "dialog_about";
+    public static final String TAG_FRAGMENT_HELP = "dialog_help";
+    public static final String TAG_FRAGMENT_DONATION = "dialog_donate";
+    public static final String TAG_FRAGMENT_FEEDBACK = "dialog_feedback";
+
     public static void showAboutDialog(Activity activity) {
-        showDialog(activity, AboutDialog.class, "dialog_about");
+        showDialog(activity, AboutDialog.class, TAG_FRAGMENT_ABOUT);
     }
 
     public static void showHelpDialog(Activity activity) {
-        showDialog(activity, HelpDialog.class, "dialog_help");
+        showDialog(activity, HelpDialog.class, TAG_FRAGMENT_HELP);
     }
 
     public static void showDonateDialog(Activity activity) {
-        showDialog(activity, DonateDialog.class, "dialog_donate");
+        showDialog(activity, DonationFragment.class, TAG_FRAGMENT_DONATION);
     }
 
     public static void showFeedbackDialog(Activity activity) {
-        showDialog(activity, FeedbackDialog.class, "dialog_feedback");
-    }
-
-    public static void showNewsDialog(Activity activity) {
-        showDialog(activity, NewsDialog.class, "dialog_news");
+        showDialog(activity, FeedbackDialog.class, TAG_FRAGMENT_FEEDBACK);
     }
 
     private static void showDialog(Activity activity, Class clazz, String tag) {
@@ -101,7 +100,7 @@ public class DialogHelper {
          *
          * @see #LAYOUT_SKELETON
          * @see #createCommonView()
-         * @see #wrap(android.view.View[], int)
+         * @see #wrap(int)
          */
         public static final int LAYOUT_COMMON = 0;
 
@@ -112,7 +111,7 @@ public class DialogHelper {
          *
          * @see #LAYOUT_COMMON
          * @see #createSkeletonView()
-         * @see #wrap(android.view.View[], int)
+         * @see #wrap(int)
          */
         public static final int LAYOUT_SKELETON = 1;
 
@@ -212,6 +211,7 @@ public class DialogHelper {
         /**
          * Builds dialog's view
          *
+         * @throws IllegalArgumentException when type is not one of defined.
          * @see #LAYOUT_COMMON
          * @see #LAYOUT_SKELETON
          */
@@ -227,13 +227,18 @@ public class DialogHelper {
         }
 
         /**
+         * Builds view that based on simple {@link android.widget.ScrollView} container.
+         * This is nice to display simple layout without scrollable elements such as
+         * {@link android.widget.ListView} or any similar. Use {@link #createSkeletonView()}
+         * for them.
+         *
          * @see #LAYOUT_COMMON
          * @see #createView(int)
          */
         public View createCommonView() {
 
-            // Creating skeleton layout will also
-            // add custom view. Avoid of doing it.
+            // Creating skeleton layout will also try
+            // to add custom view. Avoid of doing it.
             int customViewRes = mViewRes;
             View customView = mView;
             mViewRes = 0;
@@ -243,7 +248,7 @@ public class DialogHelper {
                     .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
 
             ViewGroup rootLayout = (ViewGroup) createSkeletonView();
-            View bodyRootView = inflater.inflate(R.layout.dialog_common, rootLayout, false);
+            View bodyRootView = inflater.inflate(R.layout.dialog, rootLayout, false);
             ViewGroup bodyLayout = (ViewGroup) bodyRootView.findViewById(R.id.content);
             TextView messageView = (TextView) bodyLayout.findViewById(R.id.message);
 
@@ -260,6 +265,7 @@ public class DialogHelper {
             // Custom view
             if (customViewRes != 0) customView = inflater.inflate(customViewRes, bodyLayout, false);
             if (customView != null) bodyLayout.addView(customView);
+            mView = customView;
 
             return rootLayout;
         }
@@ -275,16 +281,10 @@ public class DialogHelper {
             ViewGroup rootLayout = (ViewGroup) inflater.inflate(R.layout.dialog_skeleton, null);
             TextView titleView = (TextView) rootLayout.findViewById(R.id.title);
 
-            // Setup icon
-            Drawable left = (mContext.getResources().getConfiguration().screenLayout &
-                    Configuration.SCREENLAYOUT_SIZE_MASK) !=
-                    Configuration.SCREENLAYOUT_SIZE_LARGE ? mIcon : null;
-            Drawable top = left == null ? mIcon : null;
-
             // Setup title
             if (mTitleText != null) {
                 titleView.setText(mTitleText);
-                titleView.setCompoundDrawablesWithIntrinsicBounds(left, top, null, null);
+                titleView.setCompoundDrawablesWithIntrinsicBounds(mIcon, null, null, null);
             } else {
                 // This also removes an icon.
                 rootLayout.removeView(titleView);
@@ -298,17 +298,18 @@ public class DialogHelper {
         }
 
         public AlertDialog.Builder wrap() {
-            return wrap(null, LAYOUT_COMMON);
+            return wrap(LAYOUT_COMMON);
         }
 
-        public AlertDialog.Builder wrap(View[] customView, int type) {
-            View view = createView(type);
-
-            if (customView != null && customView.length == 1) {
-                customView[0] = mView;
-            }
-
-            return new AlertDialog.Builder(mContext).setView(view);
+        /**
+         * Creates view and {@link AlertDialog.Builder#setView(android.view.View) sets}
+         * to new {@link AlertDialog.Builder}.
+         *
+         * @param type type of container layout
+         * @return AlertDialog.Builder with set custom view
+         */
+        public AlertDialog.Builder wrap(int type) {
+            return new AlertDialog.Builder(mContext).setView(createView(type));
         }
 
     }
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/InactiveHoursHelper.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/InactiveHoursHelper.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/InactiveHoursHelper.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/InactiveHoursHelper.java
index d5f96656..e37c6a36 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/InactiveHoursHelper.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/InactiveHoursHelper.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay;
+package com.achep.acdisplay;
 
 import android.text.format.Time;
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/Operator.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/Operator.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/Operator.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/Operator.java
index 793ca65e..730b1848 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/Operator.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/Operator.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay;
+package com.achep.acdisplay;
 
 /**
  * Additional functions which I'd like to see as
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/Presenter.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/Presenter.java
similarity index 95%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/Presenter.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/Presenter.java
index f6c58f43..a65c5a0f 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/Presenter.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/Presenter.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay;
+package com.achep.acdisplay;
 
 import android.app.Activity;
 import android.content.Context;
@@ -25,9 +25,9 @@ import android.os.PowerManager;
 import android.telephony.TelephonyManager;
 import android.util.Log;
 
-import com.achep.activedisplay.activities.AcDisplayActivity;
-import com.achep.activedisplay.services.KeyguardService;
-import com.achep.activedisplay.utils.PowerUtils;
+import com.achep.acdisplay.acdisplay.AcDisplayActivity;
+import com.achep.acdisplay.services.KeyguardService;
+import com.achep.acdisplay.utils.PowerUtils;
 
 import java.util.ArrayList;
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/Timeout.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/Timeout.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/Timeout.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/Timeout.java
index eddefa7b..bd8cb94b 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/Timeout.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/Timeout.java
@@ -16,16 +16,16 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay;
+package com.achep.acdisplay;
 
 import android.os.Handler;
 import android.os.Message;
 import android.os.SystemClock;
 import android.view.animation.LinearInterpolator;
 
-import com.achep.activedisplay.animations.ProgressBarAnimation;
-import com.achep.activedisplay.utils.MathUtils;
-import com.achep.activedisplay.widgets.ProgressBar;
+import com.achep.acdisplay.animations.ProgressBarAnimation;
+import com.achep.acdisplay.utils.MathUtils;
+import com.achep.acdisplay.widgets.ProgressBar;
 
 import java.util.ArrayList;
 
@@ -201,7 +201,7 @@ public class Timeout {
     }
 
     /**
-     * Updates given {@link com.achep.activedisplay.widgets.ProgressBar}
+     * Updates given {@link com.achep.acdisplay.widgets.ProgressBar}
      * due to timeout's event.
      */
     public static class Gui implements Timeout.OnTimeoutEventListener {
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activities/AcDisplayActivity.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/AcDisplayActivity.java
similarity index 94%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/activities/AcDisplayActivity.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/AcDisplayActivity.java
index 7e09a5ec..baa0ec25 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activities/AcDisplayActivity.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/AcDisplayActivity.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.activities;
+package com.achep.acdisplay.acdisplay;
 
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
@@ -38,15 +38,15 @@ import android.view.Window;
 import android.view.WindowManager;
 import android.widget.ImageView;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.Device;
-import com.achep.activedisplay.Operator;
-import com.achep.activedisplay.Presenter;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.Timeout;
-import com.achep.activedisplay.activemode.ActiveModeSensor;
-import com.achep.activedisplay.activemode.ActiveModeService;
-import com.achep.activedisplay.widgets.CircleView;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.Device;
+import com.achep.acdisplay.Operator;
+import com.achep.acdisplay.Presenter;
+import com.achep.acdisplay.Timeout;
+import com.achep.acdisplay.activemode.ActiveModeSensor;
+import com.achep.acdisplay.activemode.ActiveModeService;
+import com.achep.acdisplay.activities.KeyguardActivity;
+import com.achep.acdisplay.widgets.CircleView;
 
 /**
  * Created by Artem on 25.01.14.
@@ -163,7 +163,7 @@ public class AcDisplayActivity extends KeyguardActivity implements
             }
         }
 
-        setContentView(R.layout.activity_acdisplay);
+        setContentView(R.layout.acdisplay);
         mBackgroundView = (ImageView) findViewById(R.id.background);
         mCircleView = (CircleView) findViewById(R.id.circle);
         mCircleView.setCallback(this);
@@ -326,13 +326,17 @@ public class AcDisplayActivity extends KeyguardActivity implements
 
     /**
      * @return True is this activity may be closed by
-     * {@link com.achep.activedisplay.activemode.ActiveModeSensor active sensors}.
+     * {@link com.achep.acdisplay.activemode.ActiveModeSensor active sensors}.
      */
     // TODO: Write something better
     public boolean isCloseableBySensor() {
         return !mTimeout.isPaused() && hasWindowFocus();
     }
 
+    public boolean isBackground(int mask) {
+        return Operator.bitAnd(mConfig.getDynamicBackgroundMode(), mask);
+    }
+
     public void dispatchSetBackground(Bitmap bitmap) {
         if (bitmap == null) {
             if (mCustomBackgroundShown) {
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/AcDisplayFragment.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/AcDisplayFragment.java
similarity index 62%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/AcDisplayFragment.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/AcDisplayFragment.java
index 3506b5f3..c14e4451 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/AcDisplayFragment.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/AcDisplayFragment.java
@@ -17,15 +17,15 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.fragments;
+package com.achep.acdisplay.acdisplay;
 
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
 import android.annotation.TargetApi;
 import android.app.Activity;
 import android.app.Fragment;
 import android.content.Context;
 import android.graphics.Bitmap;
-import android.graphics.Canvas;
-import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.SystemClock;
@@ -38,32 +38,30 @@ import android.util.Log;
 import android.view.HapticFeedbackConstants;
 import android.view.LayoutInflater;
 import android.view.MotionEvent;
+import android.view.VelocityTracker;
 import android.view.View;
+import android.view.ViewConfiguration;
 import android.view.ViewGroup;
 import android.view.ViewStub;
-import android.widget.ImageView;
 import android.widget.LinearLayout;
 
-import com.achep.activedisplay.AsyncTask;
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.Device;
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.Timeout;
-import com.achep.activedisplay.activities.AcDisplayActivity;
-import com.achep.activedisplay.activities.KeyguardActivity;
-import com.achep.activedisplay.compat.SceneCompat;
-import com.achep.activedisplay.fragments.components.MusicFragment;
-import com.achep.activedisplay.fragments.components.NotificationFragment;
-import com.achep.activedisplay.fragments.components.UnlockFragment;
-import com.achep.activedisplay.notifications.NotificationPresenter;
-import com.achep.activedisplay.notifications.NotificationUtils;
-import com.achep.activedisplay.notifications.OpenStatusBarNotification;
-import com.achep.activedisplay.utils.BitmapUtils;
-import com.achep.activedisplay.utils.ViewUtils;
-import com.achep.activedisplay.view.ForwardingLayout;
-import com.achep.activedisplay.view.ForwardingListener;
-import com.achep.activedisplay.widgets.ProgressBar;
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.Device;
+import com.achep.acdisplay.Timeout;
+import com.achep.acdisplay.acdisplay.components.NotificationUI;
+import com.achep.acdisplay.acdisplay.components.Widget;
+import com.achep.acdisplay.activities.KeyguardActivity;
+import com.achep.acdisplay.compat.SceneCompat;
+import com.achep.acdisplay.notifications.NotificationPresenter;
+import com.achep.acdisplay.notifications.NotificationUtils;
+import com.achep.acdisplay.notifications.OpenStatusBarNotification;
+import com.achep.acdisplay.utils.MathUtils;
+import com.achep.acdisplay.utils.ViewUtils;
+import com.achep.acdisplay.view.ElasticValue;
+import com.achep.acdisplay.view.ForwardingLayout;
+import com.achep.acdisplay.view.ForwardingListener;
+import com.achep.acdisplay.widgets.ProgressBar;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -87,9 +85,8 @@ public class AcDisplayFragment extends Fragment implements
     private ForwardingLayout mSceneContainer;
     private LinearLayout mCollapsedViewsContainer;
     private HashMap<View, Widget> mWidgetsMap = new HashMap<>();
-    private HashMap<Integer, SceneCompat> mScenesMap = new HashMap<>();
+    private HashMap<String, SceneCompat> mScenesMap = new HashMap<>();
     private boolean mCollapsedViewsNeedsUpdate;
-    private ImageView mCollapsedUnlockFake;
 
     private Widget mSelectedWidget;
 
@@ -99,13 +96,13 @@ public class AcDisplayFragment extends Fragment implements
 
     private boolean mTouched;
 
-    private Handler mHandler = new Handler();
-    private SelectWidgetRunnable mSelectWidgetRunnable = new SelectWidgetRunnable();
-
     private Timeout mTimeout;
     private Timeout.Gui mTimeoutGui;
     private ForwardingListener mForwardingListener;
 
+    private int mMaxFlingVelocity;
+    private int mMinFlingVelocity;
+
     public void unlock(Runnable runnable, boolean finish) {
         Activity activity = getActivity();
         if (activity instanceof KeyguardActivity) {
@@ -118,11 +115,11 @@ public class AcDisplayFragment extends Fragment implements
         }
     }
 
-    public void dispatchSetBackground(Bitmap bitmap) {
+    public void dispatchSetBackground(Bitmap bitmap, int mask) {
         Activity activity = getActivity();
         if (activity instanceof AcDisplayActivity) {
-            AcDisplayActivity acDisplayActivity = (AcDisplayActivity) activity;
-            acDisplayActivity.dispatchSetBackground(bitmap);
+            AcDisplayActivity a = (AcDisplayActivity) activity;
+            a.dispatchSetBackground(a.isBackground(mask) ? bitmap : null);
         }
     }
 
@@ -130,23 +127,31 @@ public class AcDisplayFragment extends Fragment implements
         return mConfig;
     }
 
-    private SceneCompat findSceneByFragment(Widget fragment) {
-        return fragment.hasExpandedView() ? mScenesMap.get(fragment.getType()) : null;
+    private SceneCompat findSceneByWidget(Widget fragment) {
+        return fragment.hasExpandedView() ? mScenesMap.get(fragment.getClass().getName()) : null;
     }
 
-    private Widget findFragmentByIcon(View view) {
+    private Widget findWidgetByCollapsedView(View view) {
         return mWidgetsMap.get(view);
     }
 
-    @TargetApi(Build.VERSION_CODES.KITKAT)
+    @Override
+    public void onAttach(Activity activity) {
+        super.onAttach(activity);
+
+        ViewConfiguration vc = ViewConfiguration.get(activity);
+        mMaxFlingVelocity = vc.getScaledMaximumFlingVelocity();
+        mMinFlingVelocity = vc.getScaledMinimumFlingVelocity();
+    }
+
+    @TargetApi(android.os.Build.VERSION_CODES.KITKAT)
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View root = inflater.inflate(R.layout.acdisplay, container, false);
+        View root = inflater.inflate(R.layout.acdisplay_fragment, container, false);
         assert root != null;
 
         mSceneContainer = (ForwardingLayout) root.findViewById(R.id.container);
         mSceneContainer.setVibrateOnForwardedEventEnabled(true);
-        mCollapsedUnlockFake = (ImageView) root.findViewById(R.id.unlock_icon);
         mCollapsedViewsContainer = (LinearLayout) root.findViewById(R.id.list);
         mCollapsedViewsContainer.setOnTouchListener(this);
 
@@ -156,6 +161,15 @@ public class AcDisplayFragment extends Fragment implements
                 return mSceneContainer;
             }
         };
+        mWidgetTranslatorX = new ElasticValue.TranslationX(mSceneContainer, 500);
+        mWidgetTranslatorX.setListener(new ElasticValue.Listener() {
+            @Override
+            public void onValueChanged(View view, float value) {
+                final int width = view.getWidth();
+                final float alh = 1f - Math.min(width, Math.abs(value)) / width;
+                view.setAlpha(alh);
+            }
+        });
 
         ViewGroup sceneMain = (ViewGroup) inflater.inflate(R.layout.acdisplay_scene_clock, mSceneContainer, false);
         if (Device.hasKitKatApi()) {
@@ -227,7 +241,7 @@ public class AcDisplayFragment extends Fragment implements
         assert context != null;
 
         mConfig = Config.getInstance();
-        mPresenter = NotificationPresenter.getInstance(context);
+        mPresenter = NotificationPresenter.getInstance();
         mPresenter.addOnNotificationListChangedListener(mNotificationListener);
         updateNotificationList();
 
@@ -248,25 +262,46 @@ public class AcDisplayFragment extends Fragment implements
         }
     }
 
+    private float[] mStdTouchGen = new float[2];
+    private float[] mStdTouchPrev = new float[2];
+
+    private VelocityTracker mVelocityTracker;
+    private ElasticValue mWidgetTranslatorX;
+    private Handler mTouchHandler = new Handler();
+
     @Override
     public boolean onTouch(View v, MotionEvent event) {
-        final float rawX = event.getRawX();
-        final float rawY = event.getRawY();
-
         if (v == mCollapsedViewsContainer) {
             mForwardingListener.onTouch(mCollapsedViewsContainer, event);
 
-            boolean touchDown = false;
-            switch (event.getAction()) {
+            final int action = event.getAction();
+            switch (action) {
                 case MotionEvent.ACTION_DOWN:
-                    touchDown = true;
+                    mTouched = true;
+
+                    // Restart timeout and immediately pause it to
+                    // get full line of timeout.
                     mTimeout.setTimeoutDelayed(mConfig.getTimeoutShort(), true);
                     mTimeout.pause();
+
+                    // Track the velocity of movement, so we
+                    // can do swipe-to-dismiss.
+                    mVelocityTracker = VelocityTracker.obtain();
+                    mStdTouchGen[0] = 0;
+                    mStdTouchGen[1] = 0;
+
+                    // ///////////////
+                    // ~~ FALL DOWN ~~
+                    // ///////////////
                 case MotionEvent.ACTION_MOVE:
-                    mTouched = true;
 
-                    boolean iconPressed = false;
-                    int length = mCollapsedViewsContainer.getChildCount();
+                    // Probably best solution would be to use
+                    // motion forwarding... But it's more complex.
+                    final float rawX = event.getRawX();
+                    final float rawY = event.getRawY();
+
+                    boolean anythingPressed = false;
+                    final int length = mCollapsedViewsContainer.getChildCount();
                     for (int i = 0; i < length; i++) {
                         final View child = mCollapsedViewsContainer.getChildAt(i);
                         assert child != null;
@@ -278,45 +313,93 @@ public class AcDisplayFragment extends Fragment implements
                         final boolean pressed = ViewUtils.isTouchPointInView(child, rawX, rawY);
                         child.setPressed(pressed);
 
-                        if (pressed) iconPressed = true;
+                        if (pressed) anythingPressed = true;
                         if (pressed != pressedOld && !child.isSelected()) {
                             child.refreshDrawableState();
                             if (pressed) {
-                                Widget widget = findFragmentByIcon(child);
-                                selectWidgetDelayed(widget, touchDown);
+                                mTouchHandler.removeCallbacksAndMessages(null);
+                                mTouchHandler.postDelayed(new Runnable() {
+                                    @Override
+                                    public void run() {
+                                        showWidget(findWidgetByCollapsedView(child));
+                                    }
+                                }, action == MotionEvent.ACTION_DOWN ? 0 : 120);
                             }
                         }
                     }
-                    if (!iconPressed) {
-                        // Don't show latest pressed notification cause this
-                        // gesture is probably an accident.
-                        removeSelectWidgetCallbacks();
+                    if (!anythingPressed) {
+                        mTouchHandler.removeCallbacksAndMessages(null);
                     }
 
+                    addSwipeMovement(event, action == MotionEvent.ACTION_DOWN);
+
                     break;
                 case MotionEvent.ACTION_UP:
 
+                    if (mSelectedWidget != null && mSelectedWidget.isDismissible()) {
+                        addSwipeMovement(event, false);
+                        mVelocityTracker.computeCurrentVelocity(1000);
+                        float velocityX = mVelocityTracker.getXVelocity();
+                        velocityX = velocityX >= 0
+                                ? Math.max(0, velocityX - mWidgetTranslatorX.getStrength())
+                                : Math.min(0, velocityX + mWidgetTranslatorX.getStrength());
+
+                        boolean dismiss = false;
+                        final boolean dismissRight;
+
+                        int width = mWidgetTranslatorX.getView().getWidth();
+                        float absVelocityX = Math.abs(velocityX);
+                        float absVelocityY = Math.abs(mVelocityTracker.getYVelocity());
+                        float deltaX = mWidgetTranslatorX.getValue();
+                        float absDeltaX = Math.abs(deltaX);
+                        if (absDeltaX > width / 4) {
+                            dismiss = true;
+                            dismissRight = deltaX > 0;
+                        } else if (mMinFlingVelocity <= absVelocityX
+                                && absVelocityX <= mMaxFlingVelocity
+                                && absVelocityY * 2 < absVelocityX
+                                && absDeltaX > width / 6) {
+                            // dismiss only if flinging in the same direction as dragging
+                            dismiss = (velocityX < 0) == (deltaX < 0);
+                            dismissRight = mVelocityTracker.getXVelocity() > 0;
+                        } else {
+                            dismissRight = false;
+                        }
+
+                        if (dismiss) {
+                            mTouched = false;
+                            mTouchHandler.removeCallbacksAndMessages(null);
+
+                            int duration = Math.round(absDeltaX * 1000f / Math.max(absVelocityX, 500f));
+
+                            mWidgetTranslatorX.stop();
+                            mWidgetTranslatorX.getView().animate()
+                                    .alpha(0)
+                                    .translationX(deltaX + width * MathUtils.charge(deltaX))
+                                    .setDuration(duration)
+                                    .setListener(new AnimatorListenerAdapter() {
+                                        @Override
+                                        public void onAnimationEnd(Animator animation) {
+                                            onAnimationCancel(animation);
+                                            endTouch();
+                                        }
+
+                                        @Override
+                                        public void onAnimationCancel(Animator animation) {
+                                            mSelectedWidget.onDismissed(!dismissRight);
+                                            mWidgetTranslatorX.setValue(0f);
+                                        }
+                                    });
+                            break;
+                        }
+                    }
+
                     // ///////////////
                     // ~~ FALL DOWN ~~
                     // ///////////////
                 case MotionEvent.ACTION_CANCEL:
-                    length = mCollapsedViewsContainer.getChildCount();
-                    for (int i = 0; i < length; i++) {
-                        View child = mCollapsedViewsContainer.getChildAt(i);
-                        assert child != null;
-                        child.setPressed(false);
-                        child.refreshDrawableState();
-                    }
-
-                    showMainWidget();
-
-                    if (mCollapsedViewsNeedsUpdate) updateNotificationList();
-                    if (mTimeout != null) {
-                        mTimeout.resume();
-                    }
-
-                    mTouched = false;
-                    mCollapsedViewsNeedsUpdate = false;
+                    mTouchHandler.removeCallbacksAndMessages(null);
+                    endTouch();
                     break;
             }
             return true;
@@ -324,52 +407,84 @@ public class AcDisplayFragment extends Fragment implements
         return false;
     }
 
-    private class SelectWidgetRunnable implements Runnable {
+    private void addSwipeMovement(MotionEvent srcEvent, boolean ignoreMovement) {
+        final float x = srcEvent.getX();
+        final float y = srcEvent.getY();
 
-        private Widget newWidget;
+        if (y > 0 || ignoreMovement) {
+            MotionEvent dstEvent = MotionEvent.obtainNoHistory(srcEvent);
+            assert dstEvent != null;
 
-        @Override
-        public void run() {
-            selectWidget(newWidget);
-        }
+            final float deltaX = x - mStdTouchPrev[0];
+            final float deltaY = y - mStdTouchPrev[1];
+            dstEvent.offsetLocation(
+                    (mStdTouchGen[0] += deltaX) - x,
+                    (mStdTouchGen[1] += deltaY) - y);
+            mVelocityTracker.addMovement(dstEvent);
+
+            if (mSelectedWidget != null  && mSelectedWidget.isDismissible()) {
+                mWidgetTranslatorX.move(deltaX);
+            }
 
-        public void setWidget(Widget widget) {
-            this.newWidget = widget;
+            dstEvent.recycle();
         }
+
+        writeCoordinate(mStdTouchPrev, srcEvent);
     }
 
-    private void removeSelectWidgetCallbacks() {
-        mHandler.removeCallbacks(mSelectWidgetRunnable);
+    private void writeCoordinate(float[] array, MotionEvent event) {
+        array[0] = event.getX();
+        array[1] = event.getY();
     }
 
-    private void selectWidgetDelayed(Widget fragment, boolean immediately) {
-        removeSelectWidgetCallbacks();
+    private void endTouch() {
+        int length = mCollapsedViewsContainer.getChildCount();
+        for (int i = 0; i < length; i++) {
+            View child = mCollapsedViewsContainer.getChildAt(i);
+            assert child != null;
+            child.setPressed(false);
+            child.refreshDrawableState();
+        }
+
+        showMainWidget();
+
+        if (mCollapsedViewsNeedsUpdate) updateNotificationList();
+        if (mTimeout != null) {
+            mTimeout.resume();
+        }
 
-        mSelectWidgetRunnable.setWidget(fragment);
-        mHandler.postDelayed(mSelectWidgetRunnable, immediately ? 0 : 120);
+        mTouched = false;
+        mCollapsedViewsNeedsUpdate = false;
     }
 
-    private void selectWidget(Widget widget) {
-        removeSelectWidgetCallbacks();
+    private void showWidget(Widget widget) {
         if (mSelectedWidget != null) {
             mSelectedWidget.getCollapsedView().setSelected(false);
             mSelectedWidget.onExpandedViewDetached();
         }
 
-        dispatchSetBackground(null);
-
         mSelectedWidget = widget;
 
+        mVelocityTracker.clear();
+        mWidgetTranslatorX.reset();
+
+        dispatchSetBackground(null, 0);
+
         if (mSelectedWidget == null) {
             goScene(mSceneMain);
         } else {
-            SceneCompat scene = findSceneByFragment(mSelectedWidget);
+            SceneCompat scene = findSceneByWidget(mSelectedWidget);
             if (scene == null) {
+
+                // Widget doesn't have a large view, so
+                // display clock.
                 goScene(mSceneMain);
             } else if (mCurrentScene != scene) {
                 goScene(scene);
-            } else if (Device.hasKitKatApi()) {
-                TransitionManager.beginDelayedTransition(mSceneContainer, mTransition);
+            } else if (Device.hasKitKatApi() && mSelectedWidget.hasExpandedView()) {
+                TransitionManager.beginDelayedTransition(
+                        mSelectedWidget.getExpandedView(),
+                        mTransition);
             }
 
             mSelectedWidget.onExpandedViewAttached();
@@ -379,7 +494,7 @@ public class AcDisplayFragment extends Fragment implements
     }
 
     public void showMainWidget() {
-        selectWidget(null);
+        showWidget(null);
     }
 
     /**
@@ -424,8 +539,8 @@ public class AcDisplayFragment extends Fragment implements
         int fragmentsExtraCount = 0;
         for (int i = 0; i < childCount; i++) {
             View child = container.getChildAt(i);
-            Widget fragment = findFragmentByIcon(child);
-            if (!(fragment instanceof NotificationFragment)) {
+            Widget fragment = findWidgetByCollapsedView(child);
+            if (!(fragment instanceof NotificationUI)) {
                 fragmentsExtraCount++;
             } else {
                 // Those fragments are placed at the begin of layout
@@ -447,8 +562,8 @@ public class AcDisplayFragment extends Fragment implements
         // Does not need an update
         for (int i = fragmentsExtraCount; i < childCount; i++) {
             View child = container.getChildAt(i);
-            NotificationFragment fragment = (NotificationFragment) findFragmentByIcon(child);
-            OpenStatusBarNotification target = fragment.getNotification();
+            NotificationUI widget = (NotificationUI) findWidgetByCollapsedView(child);
+            OpenStatusBarNotification target = widget.getNotification();
 
             // Try to find the notification with the same
             // id, tag and package name as in present.
@@ -460,7 +575,7 @@ public class AcDisplayFragment extends Fragment implements
                     childUsed[i] = true;
 
                     if (target != n) {
-                        fragment.setNotification(n);
+                        widget.setNotification(n);
                     }
                     break;
                 }
@@ -483,7 +598,7 @@ public class AcDisplayFragment extends Fragment implements
                         assert child != null;
                         notifyUsed[j] = true;
 
-                        NotificationFragment fragment = (NotificationFragment) findFragmentByIcon(child);
+                        NotificationUI fragment = (NotificationUI) findWidgetByCollapsedView(child);
                         fragment.setNotification(list.get(j));
                         break removing_all_next_views;
                     }
@@ -501,7 +616,7 @@ public class AcDisplayFragment extends Fragment implements
         for (int i = 0; i < notifyCount; i++) {
             if (notifyUsed[i]) continue;
 
-            NotificationFragment fragment = new NotificationFragment(this);
+            NotificationUI fragment = new NotificationUI(this);
             View view = fragment.createCollapsedView(inflater, container);
             container.addView(view);
 
@@ -512,7 +627,7 @@ public class AcDisplayFragment extends Fragment implements
         // ////////////
         // ~~ EXTRAS ~~
         // ////////////
-
+/*
         int[] extras = new int[]{
                 SCENE_MUSIC_CONTROLS,
         };
@@ -530,11 +645,10 @@ public class AcDisplayFragment extends Fragment implements
                 break;
             }
 
-        ViewUtils.setVisible(mCollapsedUnlockFake, empty);
 
         for (int i = fragmentsExtraCount - 1; i >= 0; i--) {
             View child = container.getChildAt(i);
-            Widget fragment = findFragmentByIcon(child);
+            Widget fragment = findWidgetByCollapsedView(child);
 
             boolean found = false;
             for (int j = 0; j < extras.length; j++) {
@@ -567,17 +681,17 @@ public class AcDisplayFragment extends Fragment implements
                 container.addView(view, j++);
                 mWidgetsMap.put(view, fragment);
             }
-        }
+        }*/
 
         // /////////////////////
         // ~~ UPDATE HASH MAP ~~
         // /////////////////////
 
-        HashMap<Integer, SceneCompat> map = (HashMap<Integer, SceneCompat>) mScenesMap.clone();
+        HashMap<String, SceneCompat> map = (HashMap<String, SceneCompat>) mScenesMap.clone();
 
         mScenesMap.clear();
         for (Widget fragment : mWidgetsMap.values()) {
-            int type = fragment.getType();
+            String type = fragment.getClass().getName();
             SceneCompat scene = map.get(type);
             if (scene != null) {
                 fragment.createExpandedView(null, null, scene.getView());
@@ -593,7 +707,9 @@ public class AcDisplayFragment extends Fragment implements
             }
         }
 
-        if (Project.DEBUG) {
+        //ViewUtils.setVisible(mCollapsedUnlockFake, empty);
+
+        if (Build.DEBUG) {
             long delta = SystemClock.elapsedRealtime() - now;
             Log.d(TAG, "Fragment list updated in " + delta + "ms.");
         }
@@ -632,129 +748,4 @@ public class AcDisplayFragment extends Fragment implements
         }
     }
 
-    /**
-     * Base class of {@link AcDisplayFragment} widgets.
-     */
-    public static abstract class Widget {
-
-        private AcDisplayFragment mAcDisplayFragment;
-
-        private ViewGroup mExpandedViewGroup;
-        private View mCollapsedView;
-
-        private boolean mShown;
-
-        public Widget(AcDisplayFragment fragment) {
-            mAcDisplayFragment = fragment;
-        }
-
-        /**
-         * @return an instance of {@link AcDisplayFragment}.
-         */
-        public AcDisplayFragment getHostFragment() {
-            return mAcDisplayFragment;
-        }
-
-        /**
-         * @return true is this fragment is currently shown, false otherwise.
-         */
-        public boolean isShown() {
-            return mShown;
-        }
-
-        public boolean hasExpandedView() {
-            return getExpandedView() != null;
-        }
-
-        /**
-         * A type of widget must be constant!
-         */
-        public abstract int getType();
-
-        public View getCollapsedView() {
-            return mCollapsedView;
-        }
-
-        public ViewGroup getExpandedView() {
-            return mExpandedViewGroup;
-        }
-
-        protected View createCollapsedView(LayoutInflater inflater, ViewGroup container) {
-            mCollapsedView = onCreateCollapsedView(inflater, container);
-            return mCollapsedView;
-        }
-
-        protected ViewGroup createExpandedView(LayoutInflater inflater, ViewGroup container, ViewGroup sceneView) {
-            mExpandedViewGroup = onCreateExpandedView(inflater, container, sceneView);
-            return mExpandedViewGroup;
-        }
-
-        public abstract View onCreateCollapsedView(LayoutInflater inflater, ViewGroup container);
-
-        public abstract ViewGroup onCreateExpandedView(LayoutInflater inflater, ViewGroup container, ViewGroup sceneView);
-
-        public void onExpandedViewAttached() {
-            mShown = true;
-        }
-
-        public void onExpandedViewDetached() {
-            mShown = false;
-        }
-    }
-
-    /**
-     * Factory to prepare your background for
-     * {@link com.achep.activedisplay.fragments.AcDisplayFragment#dispatchSetBackground(android.graphics.Bitmap)}.
-     */
-    public static class BackgroundFactoryThread extends AsyncTask<Void, Void, Bitmap> {
-
-        private static final String TAG = "DynamicBackgroundFactory";
-
-        public interface Callback {
-            void onBackgroundCreated(Bitmap bitmap);
-        }
-
-        private final int mForegroundColor;
-        private final Bitmap mBitmapOriginal;
-        private final Callback mCallback;
-
-        public BackgroundFactoryThread(Context context, Bitmap original, Callback callback) {
-            mForegroundColor = context.getResources().getColor(R.color.keyguard_background_semi);
-            mBitmapOriginal = original;
-            mCallback = callback;
-
-            if (original == null) throw new IllegalArgumentException("Bitmap may not be null!");
-            if (callback == null) throw new IllegalArgumentException("Callback may not be null!");
-        }
-
-        @Override
-        protected Bitmap doInBackground(Void... params) {
-            final long start = SystemClock.elapsedRealtime();
-
-            Bitmap origin = mBitmapOriginal;
-            Bitmap bitmap = BitmapUtils.doBlur(origin, 3, false);
-
-            if (!running) {
-                return null;
-            }
-
-            Canvas canvas = new Canvas(bitmap);
-            canvas.drawColor(mForegroundColor);
-
-            if (Project.DEBUG) {
-                long delta = SystemClock.elapsedRealtime() - start;
-                Log.d(TAG, "Dynamic background created in " + delta + " millis:"
-                        + " width=" + bitmap.getWidth()
-                        + " height=" + bitmap.getHeight());
-            }
-
-            return bitmap;
-        }
-
-        @Override
-        protected void onPostExecute(Bitmap bitmap) {
-            super.onPostExecute(bitmap);
-            mCallback.onBackgroundCreated(bitmap);
-        }
-    }
 }
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/BackgroundFactoryThread.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/BackgroundFactoryThread.java
new file mode 100644
index 00000000..289dbfaa
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/BackgroundFactoryThread.java
@@ -0,0 +1,86 @@
+/*
+ * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ */
+
+package com.achep.acdisplay.acdisplay;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.Canvas;
+import android.os.SystemClock;
+import android.util.Log;
+
+import com.achep.acdisplay.AsyncTask;
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.utils.BitmapUtils;
+
+/**
+ * Factory to prepare your background for
+ * {@link com.achep.acdisplay.acdisplay.AcDisplayFragment#dispatchSetBackground(android.graphics.Bitmap)}.
+ */
+public class BackgroundFactoryThread extends AsyncTask<Void, Void, Bitmap> {
+
+    private static final String TAG = "DynamicBackgroundFactory";
+
+    public interface Callback {
+        void onBackgroundCreated(Bitmap bitmap);
+    }
+
+    private final int mForegroundColor;
+    private final Bitmap mBitmapOriginal;
+    private final Callback mCallback;
+
+    public BackgroundFactoryThread(Context context, Bitmap original, Callback callback) {
+        mForegroundColor = context.getResources().getColor(R.color.keyguard_background_semi);
+        mBitmapOriginal = original;
+        mCallback = callback;
+
+        if (original == null) throw new IllegalArgumentException("Bitmap may not be null!");
+        if (callback == null) throw new IllegalArgumentException("Callback may not be null!");
+    }
+
+    @Override
+    protected Bitmap doInBackground(Void... params) {
+        final long start = SystemClock.elapsedRealtime();
+
+        Bitmap origin = mBitmapOriginal;
+        Bitmap bitmap = BitmapUtils.doBlur(origin, 3, false);
+
+        if (!running) {
+            return null;
+        }
+
+        Canvas canvas = new Canvas(bitmap);
+        canvas.drawColor(mForegroundColor);
+
+        if (Build.DEBUG) {
+            long delta = SystemClock.elapsedRealtime() - start;
+            Log.d(TAG, "Dynamic background created in " + delta + " millis:"
+                    + " width=" + bitmap.getWidth()
+                    + " height=" + bitmap.getHeight());
+        }
+
+        return bitmap;
+    }
+
+    @Override
+    protected void onPostExecute(Bitmap bitmap) {
+        super.onPostExecute(bitmap);
+        mCallback.onBackgroundCreated(bitmap);
+    }
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/Helper.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/Helper.java
new file mode 100644
index 00000000..62b35b97
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/Helper.java
@@ -0,0 +1,115 @@
+/*
+ * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ */
+
+package com.achep.acdisplay.acdisplay;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.LinearLayout;
+
+import com.achep.acdisplay.notifications.NotificationUtils;
+import com.achep.acdisplay.notifications.OpenStatusBarNotification;
+import com.achep.acdisplay.widgets.NotificationView;
+
+import java.util.ArrayList;
+
+/**
+ * Created by achep on 14.05.14 for AcDisplay.
+ *
+ * @author Artem Chepurnoy
+ */
+public class Helper {
+
+    private void updateNotificationList(Context context, LinearLayout container, int itemLayoutRes) {
+        final ArrayList<OpenStatusBarNotification> list = null;//mPresenter.getList();
+        final int notifyCount = list.size();
+
+        final int childCount = container.getChildCount();
+        final boolean[] notifyUsed = new boolean[notifyCount];
+        final boolean[] childUsed = new boolean[childCount];
+
+        // ///////////////////
+        // ~~ NOTIFICATIONS ~~
+        // ///////////////////
+
+        // Does not need an update
+        for (int i = 0; i < childCount; i++) {
+            NotificationView item = (NotificationView) container.getChildAt(i);
+            assert item != null;
+            OpenStatusBarNotification target = item.getNotification();
+
+            // Try to find the notification with the same
+            // id, tag and package name as in present.
+            for (int j = 0; j < notifyCount; j++) {
+                OpenStatusBarNotification n = list.get(j);
+                if (NotificationUtils.equals(target, n)) {
+
+                    notifyUsed[j] = true;
+                    childUsed[i] = true;
+
+                    if (target != n) {
+                        item.setNotification(n);
+                    }
+                    break;
+                }
+            }
+        }
+
+        // Re-use free views and remove redundant views.
+        boolean removeAllAfter = false;
+        for (int a = 0, j = 0, offset = 0; a < childCount; a++) {
+            if (childUsed[a]) continue;
+            final int i = a + offset;
+
+            removing_all_next_views:
+            {
+                if (!removeAllAfter) {
+                    for (; j < notifyCount; j++) {
+                        if (notifyUsed[j]) continue;
+
+                        notifyUsed[j] = true;
+
+                        NotificationView item = (NotificationView) container.getChildAt(i);
+                        assert item != null;
+                        item.setNotification(list.get(j));
+
+                        break removing_all_next_views;
+                    }
+                }
+                removeAllAfter = true;
+                container.removeViewAt(i);
+                offset--;
+            }
+        }
+
+        LayoutInflater inflater = null;//context.getLayoutInflater();
+
+        for (int i = 0; i < notifyCount; i++) {
+            if (notifyUsed[i]) continue;
+
+            View view = inflater.inflate(itemLayoutRes, container, false);
+            assert view != null;
+            container.addView(view);
+
+            NotificationView item = (NotificationView) view;
+            item.setNotification(list.get(i));
+        }
+    }
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/components/NotificationUI.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/components/NotificationUI.java
new file mode 100644
index 00000000..cf6a50b3
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/components/NotificationUI.java
@@ -0,0 +1,177 @@
+/*
+ * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ */
+
+package com.achep.acdisplay.acdisplay.components;
+
+import android.app.PendingIntent;
+import android.graphics.Bitmap;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.achep.acdisplay.acdisplay.AcDisplayFragment;
+import com.achep.acdisplay.notifications.OpenStatusBarNotification;
+import com.achep.acdisplay.utils.BitmapUtils;
+import com.achep.acdisplay.utils.PendingIntentUtils;
+import com.achep.acdisplay.widgets.NotificationIconWidget;
+import com.achep.acdisplay.widgets.NotificationView;
+import com.achep.acdisplay.widgets.NotificationWidget;
+
+import org.apache.commons.lang.builder.EqualsBuilder;
+import org.apache.commons.lang.builder.HashCodeBuilder;
+
+/**
+ * Created by Artem on 02.04.2014.
+ */
+public class NotificationUI extends Widget implements NotificationView {
+
+    private NotificationIconWidget mIconView;
+    private OpenStatusBarNotification mNotification;
+    private NotificationWidget mNotifyWidget;
+
+    public NotificationUI(AcDisplayFragment fragment) {
+        super(fragment);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public int hashCode() {
+        return new HashCodeBuilder(65, 810)
+                .append(mIconView)
+                .append(mNotification)
+                .append(mNotifyWidget)
+                .append(super.hashCode())
+                .toHashCode();
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public boolean equals(Object o) {
+        if (o == this)
+            return true;
+        if (!(o instanceof NotificationUI))
+            return false;
+
+        NotificationUI widget = (NotificationUI) o;
+        return new EqualsBuilder()
+                .append(mIconView, widget.mIconView)
+                .append(mNotification, widget.mNotification)
+                .append(mNotifyWidget, widget.mNotifyWidget)
+                .isEquals();
+    }
+
+    @Override
+    public boolean isDismissible() {
+        return true;
+    }
+
+    @Override
+    public void onDismissed(boolean right) {
+        mNotifyWidget.getNotification().dismiss();
+    }
+
+    @Override
+    public Bitmap getBackground() {
+        Bitmap bitmap = mNotification.getNotificationData().getBackground();
+        return bitmap != null && !BitmapUtils.hasTransparentCorners(bitmap) ? bitmap : null;
+    }
+
+    @Override
+    protected View onCreateCollapsedView(LayoutInflater inflater, ViewGroup container) {
+        View view = inflater.inflate(R.layout.widget_notification_icon, container, false);
+        assert view != null;
+
+        mIconView = (NotificationIconWidget) view;
+        mIconView.setNotification(mNotification);
+        return view;
+    }
+
+    @Override
+    protected ViewGroup onCreateExpandedView(LayoutInflater inflater, ViewGroup container, ViewGroup sceneView) {
+        boolean initialize = sceneView == null;
+        if (initialize) {
+            sceneView = (ViewGroup) inflater.inflate(R.layout.acdisplay_scene_notification, container, false);
+            assert sceneView != null;
+        }
+
+        mNotifyWidget = (NotificationWidget) sceneView.findViewById(R.id.notification);
+
+        if (!initialize) {
+            return sceneView;
+        }
+
+        mNotifyWidget.setOnClickListener(new NotificationWidget.OnClickListener() {
+
+            @Override
+            public void onClick(View v) {
+                final OpenStatusBarNotification osbn = mNotifyWidget.getNotification();
+                if (osbn != null) {
+                    getHostFragment().showMainWidget();
+                    getHostFragment().unlock(new Runnable() {
+                        @Override
+                        public void run() {
+                            osbn.click();
+                        }
+                    }, false);
+                }
+            }
+
+            @Override
+            public void onActionButtonClick(View v, final PendingIntent pendingIntent) {
+                getHostFragment().showMainWidget();
+                getHostFragment().unlock(new Runnable() {
+                    @Override
+                    public void run() {
+                        PendingIntentUtils.sendPendingIntent(pendingIntent);
+                    }
+                }, false);
+            }
+
+        });
+
+        return sceneView;
+    }
+
+    @Override
+    public void onExpandedViewAttached() {
+        mNotification.getNotificationData().markAsRead(true);
+        mNotifyWidget.setNotification(mNotification);
+    }
+
+    @Override
+    public void setNotification(OpenStatusBarNotification notification) {
+        mNotification = notification;
+        mIconView.setNotification(notification);
+
+        // Don't update the content of notification widget, because
+        // it may be used by any of its relatives.
+        if (isExpandedViewAttached()) {
+            mNotifyWidget.setNotification(notification);
+        }
+    }
+
+    @Override
+    public OpenStatusBarNotification getNotification() {
+        return mNotification;
+    }
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/components/Widget.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/components/Widget.java
new file mode 100644
index 00000000..acd73317
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/acdisplay/components/Widget.java
@@ -0,0 +1,150 @@
+/*
+ * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ */
+
+package com.achep.acdisplay.acdisplay.components;
+
+import android.graphics.Bitmap;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.achep.acdisplay.acdisplay.AcDisplayFragment;
+
+import org.apache.commons.lang.builder.EqualsBuilder;
+import org.apache.commons.lang.builder.HashCodeBuilder;
+
+/**
+ * Created by achep on 14.05.14 for AcDisplay.
+ *
+ * @author Artem Chepurnoy
+ */
+public abstract class Widget {
+
+    private AcDisplayFragment mAcDisplayFragment;
+
+    private ViewGroup mExpandedViewGroup;
+    private View mCollapsedView;
+
+    private boolean mShown;
+
+    public Widget(AcDisplayFragment fragment) {
+        mAcDisplayFragment = fragment;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public int hashCode() {
+        return new HashCodeBuilder(23, 651)
+                .append(mAcDisplayFragment)
+                .append(mExpandedViewGroup)
+                .append(mCollapsedView)
+                .append(mShown)
+                .toHashCode();
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public boolean equals(Object o) {
+        if (o == this)
+            return true;
+        if (!(o instanceof Widget))
+            return false;
+
+        Widget widget = (Widget) o;
+        return new EqualsBuilder()
+                .append(mShown, widget.mShown)
+                .append(mAcDisplayFragment, widget.mAcDisplayFragment)
+                .append(mExpandedViewGroup, widget.mExpandedViewGroup)
+                .append(mCollapsedView, widget.mCollapsedView)
+                .isEquals();
+    }
+
+    public AcDisplayFragment getHostFragment() {
+        return mAcDisplayFragment;
+    }
+
+    /**
+     * @return {@code true} if the widget can be dismissed, {@code false} otherwise
+     * @see #onDismissed(boolean)
+     */
+    public boolean isDismissible() {
+        return false;
+    }
+
+    /**
+     * Called when widget (may be not widget, but its content) has been dismissed.
+     *
+     * @param right {@code true} if dismissed by swipe to right, {@code false} otherwise.
+     * @see #isDismissible()
+     */
+    public void onDismissed(boolean right) { /* reserved for children */ }
+
+    /**
+     * @return The bitmap to be used as background, {@code null} if no background.
+     */
+    public Bitmap getBackground() {
+        return null;
+    }
+
+    public boolean isExpandedViewAttached() {
+        return mShown;
+    }
+
+    public void onExpandedViewAttached() {
+        mShown = true;
+    }
+
+    public void onExpandedViewDetached() {
+        mShown = false;
+    }
+
+    /**
+     * @return {@code true} if the widget contains large view, {@code false} otherwise
+     */
+    public boolean hasExpandedView() {
+        return getExpandedView() != null;
+    }
+
+    public View getCollapsedView() {
+        return mCollapsedView;
+    }
+
+    public ViewGroup getExpandedView() {
+        return mExpandedViewGroup;
+    }
+
+    public View createCollapsedView(LayoutInflater inflater, ViewGroup container) {
+        return (mCollapsedView = onCreateCollapsedView(inflater, container));
+    }
+
+    public ViewGroup createExpandedView(LayoutInflater inflater, ViewGroup container,
+                                        ViewGroup sceneView) {
+        return (mExpandedViewGroup = onCreateExpandedView(inflater, container, sceneView));
+    }
+
+    protected abstract View onCreateCollapsedView(LayoutInflater inflater, ViewGroup container);
+
+    protected abstract ViewGroup onCreateExpandedView(LayoutInflater inflater, ViewGroup container,
+                                                      ViewGroup view);
+
+}
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/ActiveModeHandler.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/ActiveModeHandler.java
similarity index 93%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/ActiveModeHandler.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/ActiveModeHandler.java
index 2686245f..d7a5c78d 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/ActiveModeHandler.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/ActiveModeHandler.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.activemode;
+package com.achep.acdisplay.activemode;
 
 import android.content.Context;
 
@@ -86,8 +86,8 @@ public abstract class ActiveModeHandler {
 
     /**
      * @return Callback to control {@link ActiveModeService service}.
-     * @see com.achep.activedisplay.activemode.ActiveModeHandler.Callback#requestActive()
-     * @see com.achep.activedisplay.activemode.ActiveModeHandler.Callback#requestInactive()
+     * @see com.achep.acdisplay.activemode.ActiveModeHandler.Callback#requestActive()
+     * @see com.achep.acdisplay.activemode.ActiveModeHandler.Callback#requestInactive()
      */
     public Callback getCallback() {
         return mCallback;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/ActiveModeSensor.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/ActiveModeSensor.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/ActiveModeSensor.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/ActiveModeSensor.java
index 0f96a9c8..68f97492 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/ActiveModeSensor.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/ActiveModeSensor.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.activemode;
+package com.achep.acdisplay.activemode;
 
 import android.content.Context;
 import android.hardware.SensorManager;
@@ -26,7 +26,7 @@ import android.os.SystemClock;
 import java.util.ArrayList;
 
 /**
- * Provides a callback when {@link com.achep.activedisplay.activities.AcDisplayActivity}
+ * Provides a callback when {@link com.achep.acdisplay.acdisplay.AcDisplayActivity}
  * should be started and stopped.
  *
  * @author Artem Chepurnoy
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/ActiveModeService.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/ActiveModeService.java
similarity index 85%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/ActiveModeService.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/ActiveModeService.java
index 60aed35a..c824e29d 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/ActiveModeService.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/ActiveModeService.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.activemode;
+package com.achep.acdisplay.activemode;
 
 import android.app.Notification;
 import android.app.PendingIntent;
@@ -27,25 +27,24 @@ import android.hardware.SensorManager;
 import android.os.IBinder;
 import android.util.Log;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.NotificationIds;
-import com.achep.activedisplay.Presenter;
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.activemode.handlers.InactiveTimeHandler;
-import com.achep.activedisplay.activemode.handlers.ScreenHandler;
-import com.achep.activedisplay.activemode.handlers.WithoutNotifiesHandler;
-import com.achep.activedisplay.activemode.sensors.AccelerometerSensor;
-import com.achep.activedisplay.activemode.sensors.ProximitySensor;
-import com.achep.activedisplay.settings.Settings;
-import com.achep.activedisplay.utils.PowerUtils;
+import com.achep.acdisplay.App;
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.Presenter;
+import com.achep.acdisplay.activemode.handlers.InactiveTimeHandler;
+import com.achep.acdisplay.activemode.handlers.ScreenHandler;
+import com.achep.acdisplay.activemode.handlers.WithoutNotifiesHandler;
+import com.achep.acdisplay.activemode.sensors.AccelerometerSensor;
+import com.achep.acdisplay.activemode.sensors.ProximitySensor;
+import com.achep.acdisplay.settings.Settings;
+import com.achep.acdisplay.utils.PowerUtils;
 
 /**
  * Service that turns on AcDisplay exactly when it's needed.
  *
  * @author Artem Chepurnoy
- * @see com.achep.activedisplay.activemode.ActiveModeHandler
- * @see com.achep.activedisplay.activemode.ActiveModeSensor
+ * @see com.achep.acdisplay.activemode.ActiveModeHandler
+ * @see com.achep.acdisplay.activemode.ActiveModeSensor
  */
 public class ActiveModeService extends Service implements
         ActiveModeSensor.Callback, ActiveModeHandler.Callback {
@@ -84,7 +83,7 @@ public class ActiveModeService extends Service implements
      */
     public static ActiveModeSensor[] buildAvailableSensorsList(Context context) {
         SensorManager sensorManager = (SensorManager) context.getSystemService(SENSOR_SERVICE);
-        ActiveModeSensor[] sensors = new ActiveModeSensor[] { // all available sensors
+        ActiveModeSensor[] sensors = new ActiveModeSensor[]{ // all available sensors
                 AccelerometerSensor.getInstance(),
                 ProximitySensor.getInstance()
         };
@@ -144,7 +143,7 @@ public class ActiveModeService extends Service implements
         // Show foreground notification to prove that
         // this service will not be killed when system
         // needs some RAM or whatever.
-        int notificationId = NotificationIds.ACTIVE_MODE_NOTIFICATION;
+        int notificationId = App.ID_NOTIFY_ACTIVE_MODE;
         PendingIntent pendingIntent = PendingIntent.getActivity(this,
                 notificationId, new Intent(this, Settings.ActiveModeSettingsActivity.class),
                 PendingIntent.FLAG_UPDATE_CURRENT);
@@ -192,7 +191,7 @@ public class ActiveModeService extends Service implements
      */
     private void stopListening() {
         if (!mListening & !(mListening = false)) return;
-        if (Project.DEBUG) Log.d(TAG, "Stopping listening to sensors.");
+        if (Build.DEBUG) Log.d(TAG, "Stopping listening to sensors.");
 
         SensorManager sensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
         for (ActiveModeSensor sensor : mSensors) {
@@ -209,7 +208,7 @@ public class ActiveModeService extends Service implements
      */
     private void startListening() {
         if (mListening & (mListening = true)) return;
-        if (Project.DEBUG) Log.d(TAG, "Starting listening to sensors.");
+        if (Build.DEBUG) Log.d(TAG, "Starting listening to sensors.");
 
         SensorManager sensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
         for (ActiveModeSensor sensor : mSensors) {
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/handlers/InactiveTimeHandler.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/handlers/InactiveTimeHandler.java
similarity index 89%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/handlers/InactiveTimeHandler.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/handlers/InactiveTimeHandler.java
index d97f99ed..59beee9a 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/handlers/InactiveTimeHandler.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/handlers/InactiveTimeHandler.java
@@ -17,26 +17,26 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.activemode.handlers;
+package com.achep.acdisplay.activemode.handlers;
 
 import android.content.Context;
 import android.os.SystemClock;
 import android.util.Log;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.InactiveHoursHelper;
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.activemode.ActiveModeHandler;
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.InactiveHoursHelper;
+import com.achep.acdisplay.activemode.ActiveModeHandler;
 
 import java.util.Timer;
 import java.util.TimerTask;
 
 /**
- * Prevents {@link com.achep.activedisplay.activemode.ActiveModeService} from listening to
+ * Prevents {@link com.achep.acdisplay.activemode.ActiveModeService} from listening to
  * sensors on inactive time (if corresponding option is enabled.)
  *
  * @author Artem Chepurnoy
- * @see com.achep.activedisplay.settings.MoreFragment
+ * @see com.achep.acdisplay.settings.MoreFragment
  */
 // TODO: Implement event based inactive time handling.
 public final class InactiveTimeHandler extends ActiveModeHandler implements
@@ -61,7 +61,7 @@ public final class InactiveTimeHandler extends ActiveModeHandler implements
     @Override
     public void onDestroy() {
         mConfig.removeOnConfigChangedListener(this);
-        
+
         if (mTimer != null) {
             mTimer.cancel();
             mTimer = null;
@@ -95,14 +95,14 @@ public final class InactiveTimeHandler extends ActiveModeHandler implements
 
                     firstTick = false;
 
-                    if (Project.DEBUG)
+                    if (Build.DEBUG)
                         Log.d(TAG, "On timer tick: elapsed_real_time="
                                 + SystemClock.elapsedRealtime());
 
                     if (changed) {
                         inactivePrev = inactive;
 
-                        if (Project.DEBUG)
+                        if (Build.DEBUG)
                             Log.d(TAG, "is_inactive_time=" + inactive);
 
                         if (inactive) {
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/handlers/ScreenHandler.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/handlers/ScreenHandler.java
similarity index 89%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/handlers/ScreenHandler.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/handlers/ScreenHandler.java
index 0677d637..46cd5119 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/handlers/ScreenHandler.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/handlers/ScreenHandler.java
@@ -17,18 +17,18 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.activemode.handlers;
+package com.achep.acdisplay.activemode.handlers;
 
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
 
-import com.achep.activedisplay.activemode.ActiveModeHandler;
-import com.achep.activedisplay.utils.PowerUtils;
+import com.achep.acdisplay.activemode.ActiveModeHandler;
+import com.achep.acdisplay.utils.PowerUtils;
 
 /**
- * Prevents {@link com.achep.activedisplay.activemode.ActiveModeService} from listening to
+ * Prevents {@link com.achep.acdisplay.activemode.ActiveModeService} from listening to
  * sensors while screen is turned on.
  *
  * @author Artem Chepurnoy
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/handlers/WithoutNotifiesHandler.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/handlers/WithoutNotifiesHandler.java
similarity index 87%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/handlers/WithoutNotifiesHandler.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/handlers/WithoutNotifiesHandler.java
index 1e887ba9..46c49ea2 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/handlers/WithoutNotifiesHandler.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/handlers/WithoutNotifiesHandler.java
@@ -17,21 +17,21 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.activemode.handlers;
+package com.achep.acdisplay.activemode.handlers;
 
 import android.content.Context;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.activemode.ActiveModeHandler;
-import com.achep.activedisplay.notifications.NotificationPresenter;
-import com.achep.activedisplay.notifications.OpenStatusBarNotification;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.activemode.ActiveModeHandler;
+import com.achep.acdisplay.notifications.NotificationPresenter;
+import com.achep.acdisplay.notifications.OpenStatusBarNotification;
 
 /**
- * Prevents {@link com.achep.activedisplay.activemode.ActiveModeService} from listening to
+ * Prevents {@link com.achep.acdisplay.activemode.ActiveModeService} from listening to
  * sensors while notification list is empty (if corresponding option is enabled.)
  *
  * @author Artem Chepurnoy
- * @see com.achep.activedisplay.settings.ActiveFragment
+ * @see com.achep.acdisplay.settings.ActiveFragment
  */
 public final class WithoutNotifiesHandler extends ActiveModeHandler implements
         NotificationPresenter.OnNotificationListChangedListener,
@@ -49,7 +49,7 @@ public final class WithoutNotifiesHandler extends ActiveModeHandler implements
         mConfig = Config.getInstance();
         mConfig.addOnConfigChangedListener(this);
 
-        mNotificationPresenter = NotificationPresenter.getInstance(getContext());
+        mNotificationPresenter = NotificationPresenter.getInstance();
         mNotificationPresenter.addOnNotificationListChangedListener(this);
         updateState();
     }
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/sensors/AccelerometerSensor.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/sensors/AccelerometerSensor.java
similarity index 93%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/sensors/AccelerometerSensor.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/sensors/AccelerometerSensor.java
index a3c6902b..90c4ac0d 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/sensors/AccelerometerSensor.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/sensors/AccelerometerSensor.java
@@ -16,22 +16,21 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.activemode.sensors;
+package com.achep.acdisplay.activemode.sensors;
 
 import android.content.Context;
 import android.hardware.Sensor;
 import android.hardware.SensorEvent;
 import android.hardware.SensorEventListener;
 import android.hardware.SensorManager;
-import android.util.Log;
 
-import com.achep.activedisplay.activemode.ActiveModeSensor;
+import com.achep.acdisplay.activemode.ActiveModeSensor;
 
 import java.lang.ref.WeakReference;
 
 /**
  * Basing on results of accelerometer sensor it notifies when
- * {@link com.achep.activedisplay.activities.AcDisplayActivity AcDisplay}
+ * {@link com.achep.acdisplay.acdisplay.AcDisplayActivity AcDisplay}
  * should be shown or hidden.
  *
  * @author Artem Chepurnoy
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/sensors/ProximitySensor.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/sensors/ProximitySensor.java
similarity index 92%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/sensors/ProximitySensor.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/sensors/ProximitySensor.java
index e6b8a821..0737f023 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activemode/sensors/ProximitySensor.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/activemode/sensors/ProximitySensor.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.activemode.sensors;
+package com.achep.acdisplay.activemode.sensors;
 
 import android.content.Context;
 import android.hardware.Sensor;
@@ -27,14 +27,14 @@ import android.os.Handler;
 import android.os.PowerManager;
 import android.util.Log;
 
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.activemode.ActiveModeSensor;
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.activemode.ActiveModeSensor;
 
 import java.lang.ref.WeakReference;
 
 /**
  * Basing on results of proximity sensor it notifies when
- * {@link com.achep.activedisplay.activities.AcDisplayActivity AcDisplay}
+ * {@link com.achep.acdisplay.acdisplay.AcDisplayActivity AcDisplay}
  * should be shown or hidden.
  *
  * @author Artem Chepurnoy
@@ -49,15 +49,15 @@ public class ProximitySensor extends ActiveModeSensor implements
 
     /**
      * The delay in millis between sensor's change and hiding
-     * {@link com.achep.activedisplay.activities.AcDisplayActivity AcDisplay}
+     * {@link com.achep.acdisplay.acdisplay.AcDisplayActivity AcDisplay}
      */
     private static final long REQUEST_HIDE_ACDISPLAY_DELAY = 1400; // ms.
 
     /**
      * The delay in millis between sensor's change and showing
-     * {@link com.achep.activedisplay.activities.AcDisplayActivity AcDisplay}
+     * {@link com.achep.acdisplay.acdisplay.AcDisplayActivity AcDisplay}
      */
-    private static final long REQUEST_SHOW_ACDISPLAY_DELAY = 200; // ms.
+    private static final long REQUEST_SHOW_ACDISPLAY_DELAY = 0; // ms.
 
     private static WeakReference<ProximitySensor> sProximitySensorWeak;
     private static long sLastEventTime;
@@ -150,7 +150,7 @@ public class ProximitySensor extends ActiveModeSensor implements
         final boolean isNear = distance < mMaximumRange || distance < 1.0f;
         final boolean changed = sNear != (sNear = isNear) || mFirstChange;
 
-        if (Project.DEBUG) {
+        if (Build.DEBUG) {
             Log.d(TAG, "distance=" + distance
                     + " is_near=" + isNear
                     + " changed=" + changed);
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activities/KeyguardActivity.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/activities/KeyguardActivity.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/activities/KeyguardActivity.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/activities/KeyguardActivity.java
index 2f70e0c6..a9722f57 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activities/KeyguardActivity.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/activities/KeyguardActivity.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.activities;
+package com.achep.acdisplay.activities;
 
 import android.app.Activity;
 import android.app.KeyguardManager;
@@ -30,7 +30,7 @@ import android.os.Handler;
 import android.util.Log;
 import android.view.WindowManager;
 
-import com.achep.activedisplay.Project;
+import com.achep.acdisplay.Build;
 
 /**
  * Created by Artem on 23.02.14.
@@ -137,7 +137,7 @@ public abstract class KeyguardActivity extends Activity {
      * @param runnable may be null
      */
     public void unlock(final Runnable runnable, final boolean finish) {
-        if (Project.DEBUG) Log.d(TAG, "Unlocking with params: finish=" + finish);
+        if (Build.DEBUG) Log.d(TAG, "Unlocking with params: finish=" + finish);
 
         getWindow().addFlags(WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activities/MainActivity.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/activities/MainActivity.java
similarity index 64%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/activities/MainActivity.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/activities/MainActivity.java
index 6c902b27..85d91ddc 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/activities/MainActivity.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/activities/MainActivity.java
@@ -16,11 +16,13 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.activities;
+package com.achep.acdisplay.activities;
 
 import android.app.Activity;
+import android.app.Fragment;
+import android.app.FragmentManager;
 import android.app.Notification;
-import android.app.PendingIntent;
+import android.app.NotificationManager;
 import android.app.admin.DevicePolicyManager;
 import android.content.ComponentName;
 import android.content.Context;
@@ -28,9 +30,11 @@ import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
+import android.graphics.BitmapFactory;
 import android.media.RingtoneManager;
-import android.os.Build;
 import android.os.Bundle;
+import android.os.Handler;
+import android.os.PowerManager;
 import android.preference.PreferenceManager;
 import android.text.Html;
 import android.util.Log;
@@ -42,17 +46,17 @@ import android.view.ViewStub;
 import android.widget.CompoundButton;
 import android.widget.Switch;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.DialogHelper;
-import com.achep.activedisplay.NotificationIds;
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.admin.AdminReceiver;
-import com.achep.activedisplay.blacklist.activities.BlacklistActivity;
-import com.achep.activedisplay.services.SendNotificationService;
-import com.achep.activedisplay.settings.Settings;
-import com.achep.activedisplay.utils.AccessUtils;
-import com.achep.activedisplay.utils.ViewUtils;
+import com.achep.acdisplay.App;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.DialogHelper;
+import com.achep.acdisplay.admin.AdminReceiver;
+import com.achep.acdisplay.blacklist.activities.BlacklistActivity;
+import com.achep.acdisplay.fragments.AboutDialog;
+import com.achep.acdisplay.iab.DonationFragment;
+import com.achep.acdisplay.settings.Settings;
+import com.achep.acdisplay.utils.AccessUtils;
+import com.achep.acdisplay.utils.PackageUtils;
+import com.achep.acdisplay.utils.ViewUtils;
 
 /**
  * Created by Artem on 21.01.14.
@@ -108,9 +112,8 @@ public class MainActivity extends Activity implements Config.OnConfigChangedList
             }
         });
 
-
         try {
-            PackageInfo pi = getPackageManager().getPackageInfo(Project.getPackageName(this), 0);
+            PackageInfo pi = getPackageManager().getPackageInfo(PackageUtils.getName(this), 0);
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
 
             int oldVersionCode = prefs.getInt("previous_version_code", 0);
@@ -118,30 +121,16 @@ public class MainActivity extends Activity implements Config.OnConfigChangedList
                 prefs.edit().putInt("previous_version_code", pi.versionCode).apply();
 
                 // Show the warning message for Paranoid Android users.
-                if (Build.DISPLAY.startsWith("pa_") && oldVersionCode == 0) {
-                    CharSequence messageText = Html.fromHtml(getString(R.string.pa_message));
-                    new DialogHelper.Builder(this)
-                            .setTitle(R.string.pa_title)
-                            .setMessage(messageText)
-                            .wrap()
-                            .setPositiveButton(android.R.string.ok, null)
-                            .create()
-                            .show();
+                if (android.os.Build.DISPLAY.startsWith("pa_") && oldVersionCode == 0) {
+                    showAlertParanoidAndroidBug();
                 }
 
                 if (oldVersionCode < 15 /* v2.0- */) {
-                    CharSequence messageText = Html.fromHtml(getString(R.string.speech_message));
-                    new DialogHelper.Builder(this)
-                            .setTitle(R.string.speech_title)
-                            .setMessage(messageText)
-                            .wrap()
-                            .setPositiveButton(android.R.string.ok, null)
-                            .create()
-                            .show();
+                    showAlertSpeech();
                 }
 
                 if (oldVersionCode < 20 /* v2.2.1- */) {
-                    DialogHelper.showNewsDialog(this);
+                    showAlertWelcome();
                 }
             }
         } catch (PackageManager.NameNotFoundException e) {
@@ -149,6 +138,41 @@ public class MainActivity extends Activity implements Config.OnConfigChangedList
         }
     }
 
+    private void showAlertParanoidAndroidBug() {
+        CharSequence messageText = Html.fromHtml(getString(R.string.pa_message));
+        new DialogHelper.Builder(this)
+                .setIcon(R.drawable.ic_dialog_bug)
+                .setTitle(R.string.pa_title)
+                .setMessage(messageText)
+                .wrap()
+                .setPositiveButton(android.R.string.ok, null)
+                .create()
+                .show();
+    }
+
+    private void showAlertSpeech() {
+        CharSequence messageText = Html.fromHtml(getString(R.string.speech_message));
+        new DialogHelper.Builder(this)
+                .setIcon(R.drawable.ic_dialog_me)
+                .setTitle(R.string.speech_title)
+                .setMessage(messageText)
+                .wrap()
+                .setPositiveButton(android.R.string.ok, null)
+                .create()
+                .show();
+    }
+
+    private void showAlertWelcome() {
+        new DialogHelper.Builder(this)
+                .setIcon(R.mipmap.ic_launcher)
+                .setTitle(AboutDialog.getVersionName(this))
+                .setMessage(Html.fromHtml(getString(R.string.news_message)))
+                .wrap()
+                .setPositiveButton(R.string.close, null)
+                .create()
+                .show();
+    }
+
     @Override
     protected void onResume() {
         super.onResume();
@@ -227,6 +251,23 @@ public class MainActivity extends Activity implements Config.OnConfigChangedList
         return true;
     }
 
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+
+        // Transfer in-app-billing service's events to
+        // its fragment.
+        if (requestCode == DonationFragment.RC_REQUEST) {
+            FragmentManager fm = getFragmentManager();
+            Fragment fragment = fm.findFragmentByTag(DialogHelper.TAG_FRAGMENT_DONATION);
+            if (fragment instanceof DonationFragment) {
+                fragment.onActivityResult(requestCode, resultCode, data);
+                return;
+            }
+        }
+
+        super.onActivityResult(requestCode, resultCode, data);
+    }
+
     @Override
     public boolean onMenuItemSelected(int featureId, MenuItem item) {
         switch (item.getItemId()) {
@@ -237,29 +278,36 @@ public class MainActivity extends Activity implements Config.OnConfigChangedList
                 startActivity(new Intent(this, BlacklistActivity.class));
                 break;
             case R.id.action_test:
-                // startActivity(new Intent(this, AcDisplayActivity.class));
-                Intent contentIntent = new Intent(this, MainActivity.class);
-                Intent notificationIntent = SendNotificationService
-                        .createNotificationIntent(this, getString(R.string.app_name),
-                                getString(R.string.test_notification_message),
-                                NotificationIds.TEST_NOTIFICATION,
-                                R.drawable.stat_test,
-                                R.mipmap.ic_launcher,
-                                Notification.PRIORITY_DEFAULT,
-                                RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION),
-                                PendingIntent.getService(this, 0, contentIntent,
-                                        PendingIntent.FLAG_UPDATE_CURRENT)
-                        );
-                PendingIntent pi = SendNotificationService.notify(this,
-                        notificationIntent, SLEEP_SEND_NOTIFICATION_DELAY);
+                PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);
+                PowerManager.WakeLock wakeLock = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, "Test notification.");
+                wakeLock.acquire(SLEEP_SEND_NOTIFICATION_DELAY);
 
                 try {
                     // Go sleep
                     DevicePolicyManager dpm = (DevicePolicyManager) getSystemService(Context.DEVICE_POLICY_SERVICE);
                     dpm.lockNow();
+
+                    new Handler().postDelayed(new Runnable() {
+                        @Override
+                        public void run() {
+                            Notification.Builder builder = new Notification.Builder(MainActivity.this)
+                                    .setContentTitle(getString(R.string.app_name))
+                                    .setContentText(getString(R.string.test_notification_message))
+                                    .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher))
+                                    .setSmallIcon(R.drawable.stat_test)
+                                    .setAutoCancel(true)
+                                    .setSound(RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION));
+                            Notification.BigTextStyle builderBigText = new Notification.BigTextStyle(builder)
+                                    .bigText(getString(R.string.test_notification_message_large));
+
+                            NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
+                            nm.notify(App.ID_NOTIFY_TEST, builderBigText.build());
+                        }
+                    }, SLEEP_SEND_NOTIFICATION_DELAY);
                 } catch (SecurityException e) {
-                    SendNotificationService.cancel(this, pi);
-                    Log.e(TAG, "Failed to turn screen off");
+                    Log.wtf(TAG, "Failed to turn screen off");
+
+                    wakeLock.release();
                 }
                 break;
             case R.id.action_donate:
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/admin/AdminReceiver.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/admin/AdminReceiver.java
similarity index 94%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/admin/AdminReceiver.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/admin/AdminReceiver.java
index 18a0aeb7..83a05733 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/admin/AdminReceiver.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/admin/AdminReceiver.java
@@ -16,15 +16,14 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.admin;
+package com.achep.acdisplay.admin;
 
 import android.content.Context;
 import android.content.Intent;
 import android.support.v4.content.LocalBroadcastManager;
 import android.widget.Toast;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.R;
+import com.achep.acdisplay.Config;
 
 /**
  * Created by Artem on 03.01.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/animations/AnimationListenerAdapter.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/animations/AnimationListenerAdapter.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/animations/AnimationListenerAdapter.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/animations/AnimationListenerAdapter.java
index a9c5cc5e..ec23c166 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/animations/AnimationListenerAdapter.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/animations/AnimationListenerAdapter.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.animations;
+package com.achep.acdisplay.animations;
 
 import android.view.animation.Animation;
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/animations/CircleViewAnimation.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/animations/CircleViewAnimation.java
similarity index 89%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/animations/CircleViewAnimation.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/animations/CircleViewAnimation.java
index a73c7c08..225c6c6e 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/animations/CircleViewAnimation.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/animations/CircleViewAnimation.java
@@ -1,9 +1,9 @@
-package com.achep.activedisplay.animations;
+package com.achep.acdisplay.animations;
 
 import android.view.animation.Animation;
 import android.view.animation.Transformation;
 
-import com.achep.activedisplay.widgets.CircleView;
+import com.achep.acdisplay.widgets.CircleView;
 
 /**
  * Created by achep on 19.04.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/animations/ProgressBarAnimation.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/animations/ProgressBarAnimation.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/animations/ProgressBarAnimation.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/animations/ProgressBarAnimation.java
index 8b9b0642..91c24abd 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/animations/ProgressBarAnimation.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/animations/ProgressBarAnimation.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.animations;
+package com.achep.acdisplay.animations;
 
 import android.view.animation.Animation;
 import android.view.animation.Transformation;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/AppConfig.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/AppConfig.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/AppConfig.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/AppConfig.java
index 4a966796..3cc36a88 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/AppConfig.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/AppConfig.java
@@ -16,13 +16,11 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.blacklist;
+package com.achep.acdisplay.blacklist;
 
 import android.content.SharedPreferences;
 import android.util.Log;
 
-import com.achep.activedisplay.utils.MathUtils;
-
 import org.apache.commons.lang.builder.EqualsBuilder;
 import org.apache.commons.lang.builder.HashCodeBuilder;
 
@@ -106,7 +104,7 @@ public class AppConfig {
     }
 
     /**
-     * Compares given {@link com.achep.activedisplay.blacklist.AppConfig} with
+     * Compares given {@link com.achep.acdisplay.blacklist.AppConfig} with
      * this one. <b>Warning: </b> the only criterion of equality is the package name!
      */
     @Override
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/Blacklist.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/Blacklist.java
similarity index 91%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/Blacklist.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/Blacklist.java
index facdced0..b16a82bc 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/Blacklist.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/Blacklist.java
@@ -16,13 +16,11 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.blacklist;
+package com.achep.acdisplay.blacklist;
 
 import android.content.Context;
 import android.util.Log;
 
-import java.lang.ref.SoftReference;
-
 /**
  * The blacklist (also known as per-app-features.)
  *
@@ -74,15 +72,22 @@ public final class Blacklist extends SharedList<AppConfig, AppConfig.AppConfigSa
         }
     }
 
-    public static synchronized Blacklist getInstance(Context context) {
+    public static synchronized Blacklist getInstance() {
         if (sBlacklist == null) {
-            sBlacklist = new Blacklist(context);
+            sBlacklist = new Blacklist();
         }
         return sBlacklist;
     }
 
-    private Blacklist(Context context) {
-        super(context);
+    private Blacklist() {
+        super();
+    }
+
+    /**
+     * This is called on {@link com.achep.acdisplay.App#onCreate() App create}.
+     */
+    public void init(Context context) {
+        super.init(context);
     }
 
     @Override
@@ -144,7 +149,7 @@ public final class Blacklist extends SharedList<AppConfig, AppConfig.AppConfigSa
     }
 
     /**
-     * <b>Creates</b> new instance of {@link com.achep.activedisplay.blacklist.AppConfig} and
+     * <b>Creates</b> new instance of {@link com.achep.acdisplay.blacklist.AppConfig} and
      * fills it with present data.
      *
      * @param packageName The package name of need application.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/BlacklistEnabler.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/BlacklistEnabler.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/BlacklistEnabler.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/BlacklistEnabler.java
index fd29ddb0..4f88926d 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/BlacklistEnabler.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/BlacklistEnabler.java
@@ -16,12 +16,12 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.blacklist;
+package com.achep.acdisplay.blacklist;
 
 import android.content.Context;
 import android.widget.CompoundButton;
 
-import com.achep.activedisplay.Operator;
+import com.achep.acdisplay.Operator;
 
 import java.util.ArrayList;
 
@@ -54,7 +54,7 @@ public class BlacklistEnabler extends Blacklist.OnBlacklistChangedListener
     public BlacklistEnabler(Context context, CompoundButton cb, String packageName) {
         mContext = context;
         mCompoundButton = cb;
-        mBlacklist = Blacklist.getInstance(mContext);
+        mBlacklist = Blacklist.getInstance();
         mAppConfig = new AppConfig(packageName);
 
         mListeners = new ArrayList<>(6);
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/SharedList.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/SharedList.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/SharedList.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/SharedList.java
index 31764e59..ee03d4a4 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/SharedList.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/SharedList.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.blacklist;
+package com.achep.acdisplay.blacklist;
 
 import android.content.Context;
 import android.content.SharedPreferences;
@@ -43,10 +43,10 @@ public abstract class SharedList<V, T extends SharedList.Saver<V>> {
     public static final String KEY_NUMBER = KEY_PREFIX + "n";
     public static final String KEY_USED_ITEM = KEY_PREFIX + "used_";
 
-    private final HashMap<V, Integer> mList;
-    private final ArrayList<Integer> mPlaceholder;
-    private final Comparator<V> mComparator;
-    private final T mSaver;
+    private HashMap<V, Integer> mList;
+    private ArrayList<Integer> mPlaceholder;
+    private Comparator<V> mComparator;
+    private T mSaver;
 
     private ArrayList<OnSharedListChangedListener<V>> mListeners;
 
@@ -66,7 +66,7 @@ public abstract class SharedList<V, T extends SharedList.Saver<V>> {
          *
          * @param objectNew current object
          * @param objectOld old object from the list
-         * @param diff      the difference between old and new objects (provided by {@link com.achep.activedisplay.blacklist.SharedList.Comparator})
+         * @param diff      the difference between old and new objects (provided by {@link com.achep.acdisplay.blacklist.SharedList.Comparator})
          */
         public void onPut(V objectNew, V objectOld, int diff);
 
@@ -143,7 +143,13 @@ public abstract class SharedList<V, T extends SharedList.Saver<V>> {
         mListeners.remove(listener);
     }
 
+    protected SharedList() { /* You must call #init(Context) later! */ }
+
     protected SharedList(Context context) {
+        init(context);
+    }
+
+    protected void init(Context context) {
         mList = new HashMap<>();
         mPlaceholder = new ArrayList<>(3);
         mListeners = new ArrayList<>(6);
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/activities/BlacklistActivity.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/activities/BlacklistActivity.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/activities/BlacklistActivity.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/activities/BlacklistActivity.java
index 543fc75b..0fdf041d 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/activities/BlacklistActivity.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/activities/BlacklistActivity.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.blacklist.activities;
+package com.achep.acdisplay.blacklist.activities;
 
 import android.app.Activity;
 import android.content.ComponentName;
@@ -49,13 +49,11 @@ import android.widget.ListAdapter;
 import android.widget.Switch;
 import android.widget.TextView;
 
-import com.achep.activedisplay.Operator;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.blacklist.AppConfig;
-import com.achep.activedisplay.blacklist.Blacklist;
-import com.achep.activedisplay.blacklist.BlacklistEnabler;
-import com.achep.activedisplay.blacklist.fragments.BlacklistAppFragment;
-import com.achep.activedisplay.utils.MathUtils;
+import com.achep.acdisplay.blacklist.AppConfig;
+import com.achep.acdisplay.blacklist.Blacklist;
+import com.achep.acdisplay.blacklist.BlacklistEnabler;
+import com.achep.acdisplay.blacklist.fragments.BlacklistAppFragment;
+import com.achep.acdisplay.utils.MathUtils;
 
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
@@ -76,19 +74,19 @@ public class BlacklistActivity extends PreferenceActivity {
 
     // meta data
     private static final String META_DATA_KEY_HEADER_ID =
-            "com.achep.activedisplay.blacklist.TOP_LEVEL_HEADER_ID";
+            "com.achep.acdisplay.blacklist.TOP_LEVEL_HEADER_ID";
     private static final String META_DATA_KEY_FRAGMENT_CLASS =
-            "com.achep.activedisplay.blacklist.FRAGMENT_CLASS";
+            "com.achep.acdisplay.blacklist.FRAGMENT_CLASS";
     private static final String META_DATA_KEY_PARENT_TITLE =
-            "com.achep.activedisplay.blacklist.PARENT_FRAGMENT_TITLE";
+            "com.achep.acdisplay.blacklist.PARENT_FRAGMENT_TITLE";
     private static final String META_DATA_KEY_PARENT_FRAGMENT_CLASS =
-            "com.achep.activedisplay.blacklist.PARENT_FRAGMENT_CLASS";
+            "com.achep.acdisplay.blacklist.PARENT_FRAGMENT_CLASS";
 
     // save state
     private static final String SAVE_KEY_CURRENT_HEADER =
-            "com.achep.activedisplay.blacklist.CURRENT_HEADER";
+            "com.achep.acdisplay.blacklist.CURRENT_HEADER";
     private static final String SAVE_KEY_PARENT_HEADER =
-            "com.achep.activedisplay.blacklist.PARENT_HEADER";
+            "com.achep.acdisplay.blacklist.PARENT_HEADER";
 
     // preferences
     private static final String PREF_KEY_SHOW_SYSTEM_APPS = "show_system_apps";
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/activities/SubBlacklistActivity.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/activities/SubBlacklistActivity.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/activities/SubBlacklistActivity.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/activities/SubBlacklistActivity.java
index 6caa5bd3..a61411f2 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/activities/SubBlacklistActivity.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/activities/SubBlacklistActivity.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.blacklist.activities;
+package com.achep.acdisplay.blacklist.activities;
 
 import android.app.FragmentManager;
 import android.util.Log;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/fragments/BlacklistAppFragment.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/fragments/BlacklistAppFragment.java
similarity index 95%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/fragments/BlacklistAppFragment.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/fragments/BlacklistAppFragment.java
index 0dd4e7ca..b830dc5d 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/fragments/BlacklistAppFragment.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/fragments/BlacklistAppFragment.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.blacklist.fragments;
+package com.achep.acdisplay.blacklist.fragments;
 
 import android.app.ActionBar;
 import android.app.Activity;
@@ -34,11 +34,10 @@ import android.widget.ScrollView;
 import android.widget.Switch;
 import android.widget.TextView;
 
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.blacklist.BlacklistEnabler;
-import com.achep.activedisplay.blacklist.options.HideOption;
-import com.achep.activedisplay.blacklist.options.Option;
-import com.achep.activedisplay.blacklist.options.RestrictOption;
+import com.achep.acdisplay.blacklist.BlacklistEnabler;
+import com.achep.acdisplay.blacklist.options.HideOption;
+import com.achep.acdisplay.blacklist.options.Option;
+import com.achep.acdisplay.blacklist.options.RestrictOption;
 
 /**
  * Created by Artem on 09.02.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/options/HideOption.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/options/HideOption.java
similarity index 86%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/options/HideOption.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/options/HideOption.java
index c7cad88d..999b5ca9 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/options/HideOption.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/options/HideOption.java
@@ -16,15 +16,14 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.blacklist.options;
+package com.achep.acdisplay.blacklist.options;
 
 import android.content.Context;
 import android.widget.CompoundButton;
 
-import com.achep.activedisplay.Operator;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.blacklist.AppConfig;
-import com.achep.activedisplay.blacklist.BlacklistEnabler;
+import com.achep.acdisplay.Operator;
+import com.achep.acdisplay.blacklist.AppConfig;
+import com.achep.acdisplay.blacklist.BlacklistEnabler;
 
 /**
  * Created by Artem on 28.02.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/options/Option.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/options/Option.java
similarity index 93%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/options/Option.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/options/Option.java
index 8afcfb0f..24147bab 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/options/Option.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/options/Option.java
@@ -16,15 +16,15 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.blacklist.options;
+package com.achep.acdisplay.blacklist.options;
 
 import android.content.Context;
 import android.graphics.drawable.Drawable;
 import android.widget.CompoundButton;
 
-import com.achep.activedisplay.blacklist.AppConfig;
-import com.achep.activedisplay.blacklist.Blacklist;
-import com.achep.activedisplay.blacklist.BlacklistEnabler;
+import com.achep.acdisplay.blacklist.AppConfig;
+import com.achep.acdisplay.blacklist.Blacklist;
+import com.achep.acdisplay.blacklist.BlacklistEnabler;
 
 /**
  * Created by Artem on 27.02.14.
@@ -55,7 +55,7 @@ public abstract class Option extends Blacklist.OnBlacklistChangedListener implem
 
         mContext = context;
         mCompoundButton = cb;
-        mBlacklist = Blacklist.getInstance(context);
+        mBlacklist = Blacklist.getInstance();
         mBlacklistEnabler = enabler;
     }
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/options/RestrictOption.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/options/RestrictOption.java
similarity index 87%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/options/RestrictOption.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/options/RestrictOption.java
index f8d4f263..b3bc5cdd 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/blacklist/options/RestrictOption.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/blacklist/options/RestrictOption.java
@@ -16,15 +16,14 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.blacklist.options;
+package com.achep.acdisplay.blacklist.options;
 
 import android.content.Context;
 import android.widget.CompoundButton;
 
-import com.achep.activedisplay.Operator;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.blacklist.AppConfig;
-import com.achep.activedisplay.blacklist.BlacklistEnabler;
+import com.achep.acdisplay.Operator;
+import com.achep.acdisplay.blacklist.AppConfig;
+import com.achep.acdisplay.blacklist.BlacklistEnabler;
 
 /**
  * Created by Artem on 28.02.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/compat/SceneCompat.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/compat/SceneCompat.java
similarity index 95%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/compat/SceneCompat.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/compat/SceneCompat.java
index f97f4618..dde61e9a 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/compat/SceneCompat.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/compat/SceneCompat.java
@@ -17,14 +17,14 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.compat;
+package com.achep.acdisplay.compat;
 
 import android.annotation.TargetApi;
 import android.os.Build;
 import android.transition.Scene;
 import android.view.ViewGroup;
 
-import com.achep.activedisplay.Device;
+import com.achep.acdisplay.Device;
 
 /**
  * This is a restricted {@link android.transition.Scene} compatibility
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/cryptocoin/Bitcoin.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/cryptocoin/Bitcoin.java
similarity index 95%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/cryptocoin/Bitcoin.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/cryptocoin/Bitcoin.java
index 0f9fb38e..34f0ee32 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/cryptocoin/Bitcoin.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/cryptocoin/Bitcoin.java
@@ -16,12 +16,10 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.cryptocoin;
+package com.achep.acdisplay.cryptocoin;
 
 import android.net.Uri;
 
-import com.achep.activedisplay.R;
-
 /**
  * An implementation of Bitcoin.
  * <p></p>
@@ -48,7 +46,7 @@ public class Bitcoin extends Coin {
 
     @Override
     public int getIconResource() {
-        return R.drawable.ic_large_bitcoin;
+        return 0;
     }
 
     @Override
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/cryptocoin/Coin.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/cryptocoin/Coin.java
similarity index 98%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/cryptocoin/Coin.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/cryptocoin/Coin.java
index 01c7807e..f6bbffaf 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/cryptocoin/Coin.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/cryptocoin/Coin.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.cryptocoin;
+package com.achep.acdisplay.cryptocoin;
 
 import android.content.Intent;
 import android.net.Uri;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/AboutDialog.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/fragments/AboutDialog.java
similarity index 52%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/AboutDialog.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/fragments/AboutDialog.java
index 1be8539e..e5712638 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/AboutDialog.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/fragments/AboutDialog.java
@@ -16,8 +16,9 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.fragments;
+package com.achep.acdisplay.fragments;
 
+import android.app.AlertDialog;
 import android.app.Dialog;
 import android.app.DialogFragment;
 import android.content.Context;
@@ -26,31 +27,44 @@ import android.content.pm.PackageManager;
 import android.content.res.Resources;
 import android.os.Bundle;
 import android.text.Html;
+import android.view.View;
+import android.widget.Toast;
 
-import com.achep.activedisplay.DialogHelper;
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.R;
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.DialogHelper;
+import com.achep.acdisplay.utils.ToastUtils;
 
 /**
- * Created by Artem on 30.01.14.
+ * Dialog fragment that shows some info about this application.
+ *
+ * @author Artem Chepurnoy
  */
 public class AboutDialog extends DialogFragment {
 
     private static final String VERSION_UNAVAILABLE = "N/A";
 
-    static CharSequence getVersionTitle(Context context) {
+    private int mEasterEggClicks;
+    private Toast mTimeStampToast;
+
+    /**
+     * Merges app name and version name into one.
+     */
+    public static CharSequence getVersionName(Context context) {
         PackageManager pm = context.getPackageManager();
         String packageName = context.getPackageName();
         String versionName;
         try {
             PackageInfo info = pm.getPackageInfo(packageName, 0);
             versionName = info.versionName;
+
+            // Make the info part of version name a bit smaller.
+            if (versionName.indexOf('-') >= 0) {
+                versionName = versionName.replaceFirst("\\-", "<small>-") + "</small>";
+            }
         } catch (PackageManager.NameNotFoundException e) {
             versionName = VERSION_UNAVAILABLE;
         }
 
-        if (Project.DEBUG) versionName += "-dev";
-
         Resources res = context.getResources();
         return Html.fromHtml(
                 res.getString(R.string.about_title,
@@ -58,15 +72,38 @@ public class AboutDialog extends DialogFragment {
         );
     }
 
-    @SuppressWarnings("ConstantConditions")
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
-        return new DialogHelper.Builder(getActivity())
+        final Context context = getActivity();
+        assert context != null;
+
+        View view = new DialogHelper.Builder(context)
                 .setIcon(R.mipmap.ic_launcher)
-                .setTitle(getVersionTitle(getActivity()))
+                .setTitle(getVersionName(context))
                 .setMessage(Html.fromHtml(getString(R.string.about_message)))
-                .wrap()
-                .setPositiveButton(R.string.close, null)
+                .createCommonView();
+        view.findViewById(R.id.title).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (mTimeStampToast != null) {
+                    mTimeStampToast.cancel();
+                }
+
+                if (++mEasterEggClicks == 5) {
+                    if (Build.DEBUG) ToastUtils.showShort(getActivity(), "There will be an Easter Egg.");
+
+                    mEasterEggClicks = 0;
+                    // TODO: Put an Easter egg here.
+                } else {
+                    mTimeStampToast = Toast.makeText(context, Build.TIME_STAMP, Toast.LENGTH_LONG);
+                    mTimeStampToast.show();
+                }
+            }
+        });
+
+        return new AlertDialog.Builder(context)
+                .setView(view)
+                .setNeutralButton(R.string.close, null)
                 .create();
     }
 }
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/FeedbackDialog.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/fragments/FeedbackDialog.java
similarity index 92%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/FeedbackDialog.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/fragments/FeedbackDialog.java
index db1471e1..6a82cda2 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/FeedbackDialog.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/fragments/FeedbackDialog.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.fragments;
+package com.achep.acdisplay.fragments;
 
 import android.app.Activity;
 import android.app.AlertDialog;
@@ -32,7 +32,6 @@ import android.content.pm.PackageManager;
 import android.database.Cursor;
 import android.database.MatrixCursor;
 import android.net.Uri;
-import android.os.Build;
 import android.os.Bundle;
 import android.os.ParcelFileDescriptor;
 import android.provider.OpenableColumns;
@@ -46,14 +45,14 @@ import android.widget.CompoundButton;
 import android.widget.EditText;
 import android.widget.Spinner;
 
-import com.achep.activedisplay.Device;
-import com.achep.activedisplay.DialogHelper;
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.utils.FileUtils;
-import com.achep.activedisplay.utils.IntentUtils;
-import com.achep.activedisplay.utils.ToastUtils;
-import com.achep.activedisplay.utils.ViewUtils;
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.Device;
+import com.achep.acdisplay.DialogHelper;
+import com.achep.acdisplay.utils.FileUtils;
+import com.achep.acdisplay.utils.IntentUtils;
+import com.achep.acdisplay.utils.PackageUtils;
+import com.achep.acdisplay.utils.ToastUtils;
+import com.achep.acdisplay.utils.ViewUtils;
 
 import java.io.BufferedReader;
 import java.io.BufferedWriter;
@@ -136,7 +135,7 @@ public class FeedbackDialog extends DialogFragment {
         });
 
         final AlertDialog alertDialog = new DialogHelper.Builder(getActivity())
-                .setIcon(getResources().getDrawable(R.drawable.ic_large_mail))
+                .setIcon(getResources().getDrawable(R.drawable.ic_dialog_mail))
                 .setTitle(getString(R.string.feedback))
                 .setView(root)
                 .wrap()
@@ -169,7 +168,7 @@ public class FeedbackDialog extends DialogFragment {
         // Check for message's length
         int messageMinLength = getResources().getInteger(
                 R.integer.config_feedback_minMessageLength);
-        if (message == null || (message.length() < messageMinLength && !Project.DEBUG)) {
+        if (message == null || (message.length() < messageMinLength && !Build.DEBUG)) {
             String toastText = getString(R.string.feedback_error_msg_too_short, messageMinLength);
             ToastUtils.showShort(activity, toastText);
             mTriedToSendShortMessage = true;
@@ -180,7 +179,7 @@ public class FeedbackDialog extends DialogFragment {
         try {
             pi = activity
                     .getPackageManager()
-                    .getPackageInfo(Project.getPackageName(activity), 0);
+                    .getPackageInfo(PackageUtils.getName(activity), 0);
         } catch (PackageManager.NameNotFoundException e) {
             Log.wtf(TAG, "Failed to find my PackageInfo.");
             return;
@@ -189,7 +188,7 @@ public class FeedbackDialog extends DialogFragment {
         CharSequence title = createTitleMessage(activity, mSpinner.getSelectedItemPosition());
         CharSequence body = createBodyMessage(pi, message);
         Intent intent = new Intent()
-                .putExtra(Intent.EXTRA_EMAIL, new String[]{Project.EMAIL})
+                .putExtra(Intent.EXTRA_EMAIL, new String[]{Build.SUPPORT_EMAIL})
                 .putExtra(Intent.EXTRA_SUBJECT, title)
                 .putExtra(Intent.EXTRA_TEXT, body);
 
@@ -214,7 +213,7 @@ public class FeedbackDialog extends DialogFragment {
     private CharSequence createTitleMessage(Context context, int type) {
         CharSequence osVersion = Device.hasKitKatApi() ? "KK" : Device.hasJellyBeanMR2Api() ? "JB" : "XX";
         CharSequence[] typeNames = new CharSequence[]{"bug", "suggestion", "other"};
-        return AboutDialog.getVersionTitle(context) + ": " + osVersion + ", " + typeNames[type];
+        return AboutDialog.getVersionName(context) + ": " + osVersion + ", " + typeNames[type];
     }
 
     private CharSequence createBodyMessage(PackageInfo pi, CharSequence msg) {
@@ -223,10 +222,10 @@ public class FeedbackDialog extends DialogFragment {
                 '\n' +
                 "- - - - - - - - - - device details - - - - - - - - -" + '\n' +
                 "app_version:" + pi.versionName + '(' + pi.versionCode + ")\n" +
-                "android_version:" + Build.VERSION.RELEASE + '(' + Build.VERSION.SDK_INT + ")\n" +
-                "build_display:" + Build.DISPLAY + '\n' +
-                "build_brand:" + Build.BRAND + '\n' +
-                "build_model:" + Build.MODEL + '\n' +
+                "android_version:" + android.os.Build.VERSION.RELEASE + '(' + android.os.Build.VERSION.SDK_INT + ")\n" +
+                "build_display:" + android.os.Build.DISPLAY + '\n' +
+                "build_brand:" + android.os.Build.BRAND + '\n' +
+                "build_model:" + android.os.Build.MODEL + '\n' +
                 "had_short_message:" + mTriedToSendShortMessage + '\n' +
                 "language:" + Locale.getDefault().getLanguage();
     }
@@ -278,7 +277,7 @@ public class FeedbackDialog extends DialogFragment {
 
         private static final String TAG = "LogAttachmentProvider";
 
-        static final String AUTHORITY = "com.achep.activedisplay.logs";
+        static final String AUTHORITY = "com.achep.acdisplay.logs";
         static final String DIRECTORY = "logs";
 
         private static final String COLUMN_DATA = "_data";
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/HelpDialog.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/fragments/HelpDialog.java
similarity index 92%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/HelpDialog.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/fragments/HelpDialog.java
index b60cf4a1..85becbcd 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/HelpDialog.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/fragments/HelpDialog.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.fragments;
+package com.achep.acdisplay.fragments;
 
 import android.app.Dialog;
 import android.app.DialogFragment;
@@ -27,9 +27,8 @@ import android.net.Uri;
 import android.os.Bundle;
 import android.text.Html;
 
-import com.achep.activedisplay.DialogHelper;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.utils.IntentUtils;
+import com.achep.acdisplay.DialogHelper;
+import com.achep.acdisplay.utils.IntentUtils;
 
 /**
  * Dialog fragment that shows FAQ.
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/Donation.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/Donation.java
new file mode 100644
index 00000000..7dd9e9ee
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/Donation.java
@@ -0,0 +1,77 @@
+/*
+ * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ */
+
+package com.achep.acdisplay.iab;
+
+import org.apache.commons.lang.builder.EqualsBuilder;
+import org.apache.commons.lang.builder.HashCodeBuilder;
+
+/**
+ * The helper class of donation item.
+ *
+ * @author Artem Chepurnoy
+ */
+public class Donation {
+
+    public int amount;
+    public String sku;
+    public String text;
+
+    public Donation(int amount, String text) {
+        this.amount = amount;
+        this.text = text;
+
+        // Notice that all of them are defined in
+        // my Play Store's account!
+        this.sku = "donation_" + amount;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public int hashCode() {
+        return new HashCodeBuilder(2, 51)
+                .append(amount)
+                .append(text)
+                .append(sku)
+                .toHashCode();
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public boolean equals(Object o) {
+        if (o == null)
+            return false;
+        if (o == this)
+            return true;
+        if (!(o instanceof Donation))
+            return false;
+
+        Donation donation = (Donation) o;
+        return new EqualsBuilder()
+                .append(amount, donation.amount)
+                .append(text, donation.text)
+                .append(sku, donation.sku)
+                .isEquals();
+    }
+
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/DonationAdapter.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/DonationAdapter.java
new file mode 100644
index 00000000..c950d11f
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/DonationAdapter.java
@@ -0,0 +1,96 @@
+/*
+ * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ */
+
+package com.achep.acdisplay.iab;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.graphics.Paint;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.TextView;
+
+import java.util.HashSet;
+
+/**
+ * Created by achep on 06.05.14 for AcDisplay.
+ *
+ * @author Artem Chepurnoy
+ */
+public class DonationAdapter extends ArrayAdapter<Donation> {
+
+    private final HashSet<String> mInventorySet;
+    private final LayoutInflater mInflater;
+    private final String mDonationAmountLabel;
+
+    private final int mColorNormal;
+    private final int mColorPurchased;
+
+    public DonationAdapter(Context context, Donation[] items, HashSet<String> inventory) {
+        super(context, 0, items);
+
+        mInventorySet = inventory;
+        mInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+
+        Resources res = context.getResources();
+        mDonationAmountLabel = res.getString(R.string.donation_item_label);
+        mColorNormal = res.getColor(R.color.donation_normal);
+        mColorPurchased = res.getColor(R.color.donation_purchased);
+    }
+
+    private static class Holder {
+        TextView title;
+        TextView summary;
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        final Donation donation = getItem(position);
+        final Holder holder;
+        final View view;
+
+        if (convertView == null) {
+            holder = new Holder();
+            view = mInflater.inflate(R.layout.donation_iab_item, parent, false);
+            assert view != null;
+
+            holder.title = (TextView) view.findViewById(android.R.id.title);
+            holder.summary = (TextView) view.findViewById(android.R.id.summary);
+
+            view.setTag(holder);
+        } else {
+            view = convertView;
+            holder = (Holder) view.getTag();
+        }
+
+        boolean bought = mInventorySet.contains(donation.sku);
+
+        String amount = Integer.toString(donation.amount);
+        holder.title.setText(String.format(mDonationAmountLabel, amount));
+        holder.title.setTextColor(bought ? mColorNormal : mColorPurchased);
+        holder.summary.setText(donation.text);
+        holder.summary.setPaintFlags(bought
+                ? holder.summary.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG
+                : holder.summary.getPaintFlags() & (~Paint.STRIKE_THRU_TEXT_FLAG));
+
+        return view;
+    }
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/DonationFragment.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/DonationFragment.java
new file mode 100644
index 00000000..f9435c55
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/DonationFragment.java
@@ -0,0 +1,356 @@
+/*
+ * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ */
+
+package com.achep.acdisplay.iab;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.app.Dialog;
+import android.app.DialogFragment;
+import android.content.ActivityNotFoundException;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.graphics.drawable.Drawable;
+import android.net.Uri;
+import android.os.Bundle;
+import android.text.Html;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.Button;
+import android.widget.GridView;
+import android.widget.LinearLayout;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.DialogHelper;
+import com.achep.acdisplay.cryptocoin.Bitcoin;
+import com.achep.acdisplay.cryptocoin.Coin;
+import com.achep.acdisplay.iab.utils.IabHelper;
+import com.achep.acdisplay.iab.utils.IabResult;
+import com.achep.acdisplay.iab.utils.Inventory;
+import com.achep.acdisplay.iab.utils.Purchase;
+import com.achep.acdisplay.utils.IntentUtils;
+import com.achep.acdisplay.utils.ToastUtils;
+import com.achep.acdisplay.utils.ViewUtils;
+
+import java.util.HashSet;
+
+/**
+ * Fragment that represents an ability to donate to me. Be sure to redirect
+ * {@link android.app.Activity#onActivityResult(int, int, android.content.Intent)}
+ * to this fragment!
+ *
+ * @author Artem Chepurnoy
+ */
+public class DonationFragment extends DialogFragment {
+
+    private static final String TAG = "DonationFragment";
+
+    private static final Uri PAY_PAL_DONATION_URI = Uri.parse("http://goo.gl/UrecGo");
+    public static final int RC_REQUEST = 10001;
+
+    private GridView mGridView;
+    private ProgressBar mProgressBar;
+    private TextView mInformation;
+    private TextView mError;
+
+    private IabHelper mHelper;
+    private Donation[] mDonationList;
+    private HashSet<String> mInventorySet = new HashSet<>();
+
+    @Override
+    public void onAttach(Activity activity) {
+        super.onAttach(activity);
+        mDonationList = DonationItems.get(getResources());
+    }
+
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        Activity activity = getActivity();
+        assert activity != null;
+
+        View view = new DialogHelper.Builder(activity)
+                .setIcon(R.drawable.ic_dialog_donation)
+                .setTitle(R.string.donation_title)
+                .setView(R.layout.donation_dialog)
+                .createSkeletonView();
+        AlertDialog.Builder builder = new AlertDialog.Builder(activity)
+                .setView(view)
+                .setNegativeButton(R.string.close, null);
+
+        mError = (TextView) view.findViewById(R.id.error);
+        mInformation = (TextView) view.findViewById(R.id.info);
+        mInformation.setText(Html.fromHtml(getString(R.string.donation_info)));
+        mProgressBar = (ProgressBar) view.findViewById(android.R.id.progress);
+        mGridView = (GridView) view.findViewById(R.id.grid);
+        mGridView.setAdapter(new DonationAdapter(getActivity(), mDonationList, mInventorySet));
+        mGridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                DonationAdapter adapter = (DonationAdapter) parent.getAdapter();
+                Donation donation = adapter.getItem(position);
+
+                if (!mInventorySet.contains(donation.sku)) {
+                    /**
+                     * See {@link DonationFragment#verifyDeveloperPayload(Purchase)}.
+                     */
+                    String payload = "";
+                    try {
+                        mHelper.launchPurchaseFlow(
+                                getActivity(), donation.sku, RC_REQUEST,
+                                mPurchaseFinishedListener, payload);
+                    } catch (Exception e) {
+                        ToastUtils.showShort(getActivity(), "Failed to launch a purchase flow.");
+                    }
+                } else {
+                    ToastUtils.showShort(getActivity(), getString(R.string.donation_item_bought));
+                }
+            }
+        });
+
+        // Alternative payment methods
+        Coin bitcoin = new Bitcoin();
+        final Intent bitcoinIntent = Coin.getPaymentIntent(bitcoin);
+        final Intent paypalIntent = new Intent(Intent.ACTION_VIEW, PAY_PAL_DONATION_URI);
+
+        if (Config.getInstance().isAlternativePaymentsEnabled()) {
+            if (IntentUtils.hasActivityForThat(activity, bitcoinIntent)) {
+                builder.setPositiveButton(bitcoin.getNameResource(), null);
+            }
+
+            builder.setNeutralButton(R.string.paypal, null);
+        }
+
+        final AlertDialog alertDialog = builder.create();
+        alertDialog.setOnShowListener(new DialogInterface.OnShowListener() {
+
+            class Data {
+
+                private final Button button;
+                private final Intent intent;
+                private final int iconResource;
+
+                private Data(Button button, Intent intent, int iconResource) {
+                    this.button = button;
+                    this.intent = intent;
+                    this.iconResource = iconResource;
+                }
+            }
+
+            @Override
+            public void onShow(DialogInterface dialog) {
+                Data[] datas = new Data[] {
+                        new Data(
+                                alertDialog.getButton(DialogInterface.BUTTON_NEUTRAL),
+                                paypalIntent, R.drawable.ic_action_paypal),
+                        new Data(
+                                alertDialog.getButton(DialogInterface.BUTTON_POSITIVE),
+                                paypalIntent, R.drawable.ic_action_bitcoin),
+                };
+
+                for (final Data data : datas) {
+                    final Button btn = data.button;
+                    if (btn != null) {
+                        final Drawable icon = getResources().getDrawable(data.iconResource);
+
+                        btn.setText(null);
+                        btn.setCompoundDrawablesRelativeWithIntrinsicBounds(icon, null, null, null);
+                        btn.setLayoutParams(new LinearLayout.LayoutParams(
+                                ViewGroup.LayoutParams.WRAP_CONTENT,
+                                ViewGroup.LayoutParams.WRAP_CONTENT));
+                        btn.setOnClickListener(new View.OnClickListener() {
+                            @Override
+                            public void onClick(View v) {
+                                startPaymentIntentWithAlertDialog(data.intent);
+                            }
+                        });
+                    }
+                }
+            }
+        });
+
+        initBilling();
+
+        return alertDialog;
+    }
+
+    private void startPaymentIntentWithAlertDialog(final Intent intent) {
+        CharSequence messageText = getString(R.string.donation_no_responsibility);
+        new DialogHelper.Builder(getActivity())
+                .setMessage(messageText)
+                .wrap()
+                .setNegativeButton(android.R.string.cancel, null)
+                .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        try {
+                            startActivity(intent);
+                            dismiss();
+                        } catch (ActivityNotFoundException e) { /* hell no */ }
+                    }
+                })
+                .create()
+                .show();
+    }
+
+    private void setWaitScreen(boolean loading) {
+        ViewUtils.setVisible(mProgressBar, loading);
+        ViewUtils.setVisible(mGridView, !loading);
+        ViewUtils.setVisible(mError, false);
+    }
+
+    private void setErrorScreen(String errorMessage, final Runnable runnable) {
+        mProgressBar.setVisibility(View.GONE);
+        mGridView.setVisibility(View.GONE);
+        mError.setVisibility(View.VISIBLE);
+        mError.setText(errorMessage);
+        mError.setOnClickListener(runnable != null ? new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                runnable.run();
+            }
+        } : null);
+    }
+
+    private void updateUi() {
+        DonationAdapter adapter = (DonationAdapter) mGridView.getAdapter();
+        adapter.notifyDataSetChanged();
+    }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
+        disposeBilling();
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        if (mHelper.handleActivityResult(requestCode, resultCode, data)) {
+            return;
+        }
+
+        super.onActivityResult(requestCode, resultCode, data);
+    }
+
+    private IabHelper.OnIabPurchaseFinishedListener mPurchaseFinishedListener =
+            new IabHelper.OnIabPurchaseFinishedListener() {
+                public void onIabPurchaseFinished(IabResult result, Purchase purchase) {
+                    if (mHelper == null) return;
+                    if (result.isFailure()) {
+                        complain("Error purchasing: " + result);
+                        setWaitScreen(false);
+                        return;
+                    }
+
+                    if (!verifyDeveloperPayload(purchase)) {
+                        complain("Error purchasing. Authenticity verification failed.");
+                        setWaitScreen(false);
+                        return;
+                    }
+
+                    String sku = purchase.getSku();
+                    mInventorySet.add(sku);
+                }
+            };
+
+    private IabHelper.QueryInventoryFinishedListener mGotInventoryListener =
+            new IabHelper.QueryInventoryFinishedListener() {
+                public void onQueryInventoryFinished(IabResult result, Inventory inventory) {
+                    if (mHelper == null) return;
+                    if (result.isFailure()) {
+                        complain("Failed to query inventory: " + result);
+                        return;
+                    }
+
+                    mInventorySet.clear();
+                    for (Donation donation : mDonationList) {
+                        Purchase purchase = inventory.getPurchase(donation.sku);
+                        boolean isBought = (purchase != null && verifyDeveloperPayload(purchase));
+
+                        if (isBought) {
+                            mInventorySet.add(donation.sku);
+                        }
+                    }
+
+                    /*
+                    // Fake items to debug user interface.
+                    mInventorySet.add(mDonationList[0].sku);
+                    mInventorySet.add(mDonationList[1].sku);
+                    mInventorySet.add(mDonationList[2].sku);
+                    */
+
+                    updateUi();
+                    setWaitScreen(false);
+                }
+            };
+
+    private void disposeBilling() {
+        if (mHelper != null) {
+            mHelper.dispose();
+            mHelper = null;
+        }
+    }
+
+    private void initBilling() {
+        setWaitScreen(true);
+        disposeBilling();
+
+        String base64EncodedPublicKey = Build.GOOGLE_PLAY_PUBLIC_KEY;
+        mHelper = new IabHelper(getActivity(), base64EncodedPublicKey);
+        mHelper.enableDebugLogging(Build.DEBUG);
+        mHelper.startSetup(new IabHelper.OnIabSetupFinishedListener() {
+            public void onIabSetupFinished(IabResult result) {
+                if (mHelper == null) return;
+                if (!result.isSuccess()) {
+                    setErrorScreen(getString(R.string.donation_error_iab_setup), new Runnable() {
+                        @Override
+                        public void run() {
+                            // Try to initialize billings again.
+                            initBilling();
+                        }
+                    });
+                    return;
+                }
+
+                setWaitScreen(false);
+                mHelper.queryInventoryAsync(mGotInventoryListener);
+            }
+        });
+    }
+
+    private boolean verifyDeveloperPayload(Purchase purchase) {
+        // TODO: This method itself is a big question.
+        // Personally, I think that this whole ‘best practices’ part
+        // is confusing and is trying to make you do work that the API
+        // should really be doing. Since the purchase is tied to a Google account,
+        // and the Play Store obviously saves this information, they should
+        // just give you this in the purchase details. Getting a proper user ID
+        // requires additional permissions that you shouldn’t need to add just
+        // to cover for the deficiencies of the IAB API.
+        return true;
+    }
+
+    private void complain(String message) {
+        ToastUtils.showShort(getActivity(), message);
+    }
+
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/DonationItems.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/DonationItems.java
new file mode 100644
index 00000000..9bbf9b09
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/DonationItems.java
@@ -0,0 +1,51 @@
+/*
+ * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ */
+
+package com.achep.acdisplay.iab;
+
+import android.content.res.Resources;
+
+/**
+ * Created by achep on 07.05.14 for AcDisplay.
+ *
+ * @author Artem Chepurnoy
+ */
+public class DonationItems {
+
+    public static Donation[] get(Resources res) {
+        int[] data = new int[] {
+                1, R.string.donation_1,
+                4, R.string.donation_4,
+                10, R.string.donation_10,
+                20, R.string.donation_20,
+                50, R.string.donation_50,
+                99, R.string.donation_99,
+        };
+
+        Donation[] donation = new Donation[data.length / 2];
+
+        int length = donation.length;
+        for (int i = 0; i < length; i++) {
+            donation[i] = new Donation(data[i * 2],
+                    res.getString(data[i * 2 + 1]));
+        }
+        return donation;
+    }
+
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Base64.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Base64.java
new file mode 100644
index 00000000..c815d545
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Base64.java
@@ -0,0 +1,570 @@
+// Portions copyright 2002, Google, Inc.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package com.achep.acdisplay.iab.utils;
+
+// This code was converted from code at http://iharder.sourceforge.net/base64/
+// Lots of extraneous features were removed.
+/* The original code said:
+ * <p>
+ * I am placing this code in the Public Domain. Do with it as you will.
+ * This software comes with no guarantees or warranties but with
+ * plenty of well-wishing instead!
+ * Please visit
+ * <a href="http://iharder.net/xmlizable">http://iharder.net/xmlizable</a>
+ * periodically to check for updates or to contribute improvements.
+ * </p>
+ *
+ * @author Robert Harder
+ * @author rharder@usa.net
+ * @version 1.3
+ */
+
+/**
+ * Base64 converter class. This code is not a complete MIME encoder;
+ * it simply converts binary data to base64 data and back.
+ *
+ * <p>Note {@link CharBase64} is a GWT-compatible implementation of this
+ * class.
+ */
+public class Base64 {
+    /** Specify encoding (value is {@code true}). */
+    public final static boolean ENCODE = true;
+
+    /** Specify decoding (value is {@code false}). */
+    public final static boolean DECODE = false;
+
+    /** The equals sign (=) as a byte. */
+    private final static byte EQUALS_SIGN = (byte) '=';
+
+    /** The new line character (\n) as a byte. */
+    private final static byte NEW_LINE = (byte) '\n';
+
+    /**
+     * The 64 valid Base64 values.
+     */
+    private final static byte[] ALPHABET =
+        {(byte) 'A', (byte) 'B', (byte) 'C', (byte) 'D', (byte) 'E', (byte) 'F',
+        (byte) 'G', (byte) 'H', (byte) 'I', (byte) 'J', (byte) 'K',
+        (byte) 'L', (byte) 'M', (byte) 'N', (byte) 'O', (byte) 'P',
+        (byte) 'Q', (byte) 'R', (byte) 'S', (byte) 'T', (byte) 'U',
+        (byte) 'V', (byte) 'W', (byte) 'X', (byte) 'Y', (byte) 'Z',
+        (byte) 'a', (byte) 'b', (byte) 'c', (byte) 'd', (byte) 'e',
+        (byte) 'f', (byte) 'g', (byte) 'h', (byte) 'i', (byte) 'j',
+        (byte) 'k', (byte) 'l', (byte) 'm', (byte) 'n', (byte) 'o',
+        (byte) 'p', (byte) 'q', (byte) 'r', (byte) 's', (byte) 't',
+        (byte) 'u', (byte) 'v', (byte) 'w', (byte) 'x', (byte) 'y',
+        (byte) 'z', (byte) '0', (byte) '1', (byte) '2', (byte) '3',
+        (byte) '4', (byte) '5', (byte) '6', (byte) '7', (byte) '8',
+        (byte) '9', (byte) '+', (byte) '/'};
+
+    /**
+     * The 64 valid web safe Base64 values.
+     */
+    private final static byte[] WEBSAFE_ALPHABET =
+        {(byte) 'A', (byte) 'B', (byte) 'C', (byte) 'D', (byte) 'E', (byte) 'F',
+        (byte) 'G', (byte) 'H', (byte) 'I', (byte) 'J', (byte) 'K',
+        (byte) 'L', (byte) 'M', (byte) 'N', (byte) 'O', (byte) 'P',
+        (byte) 'Q', (byte) 'R', (byte) 'S', (byte) 'T', (byte) 'U',
+        (byte) 'V', (byte) 'W', (byte) 'X', (byte) 'Y', (byte) 'Z',
+        (byte) 'a', (byte) 'b', (byte) 'c', (byte) 'd', (byte) 'e',
+        (byte) 'f', (byte) 'g', (byte) 'h', (byte) 'i', (byte) 'j',
+        (byte) 'k', (byte) 'l', (byte) 'm', (byte) 'n', (byte) 'o',
+        (byte) 'p', (byte) 'q', (byte) 'r', (byte) 's', (byte) 't',
+        (byte) 'u', (byte) 'v', (byte) 'w', (byte) 'x', (byte) 'y',
+        (byte) 'z', (byte) '0', (byte) '1', (byte) '2', (byte) '3',
+        (byte) '4', (byte) '5', (byte) '6', (byte) '7', (byte) '8',
+        (byte) '9', (byte) '-', (byte) '_'};
+
+    /**
+     * Translates a Base64 value to either its 6-bit reconstruction value
+     * or a negative number indicating some other meaning.
+     **/
+    private final static byte[] DECODABET = {-9, -9, -9, -9, -9, -9, -9, -9, -9, // Decimal  0 -  8
+        -5, -5, // Whitespace: Tab and Linefeed
+        -9, -9, // Decimal 11 - 12
+        -5, // Whitespace: Carriage Return
+        -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, // Decimal 14 - 26
+        -9, -9, -9, -9, -9, // Decimal 27 - 31
+        -5, // Whitespace: Space
+        -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, // Decimal 33 - 42
+        62, // Plus sign at decimal 43
+        -9, -9, -9, // Decimal 44 - 46
+        63, // Slash at decimal 47
+        52, 53, 54, 55, 56, 57, 58, 59, 60, 61, // Numbers zero through nine
+        -9, -9, -9, // Decimal 58 - 60
+        -1, // Equals sign at decimal 61
+        -9, -9, -9, // Decimal 62 - 64
+        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, // Letters 'A' through 'N'
+        14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, // Letters 'O' through 'Z'
+        -9, -9, -9, -9, -9, -9, // Decimal 91 - 96
+        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, // Letters 'a' through 'm'
+        39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, // Letters 'n' through 'z'
+        -9, -9, -9, -9, -9 // Decimal 123 - 127
+        /*  ,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 128 - 139
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 140 - 152
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 153 - 165
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 166 - 178
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 179 - 191
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 192 - 204
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 205 - 217
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 218 - 230
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 231 - 243
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9         // Decimal 244 - 255 */
+    };
+
+    /** The web safe decodabet */
+    private final static byte[] WEBSAFE_DECODABET =
+        {-9, -9, -9, -9, -9, -9, -9, -9, -9, // Decimal  0 -  8
+        -5, -5, // Whitespace: Tab and Linefeed
+        -9, -9, // Decimal 11 - 12
+        -5, // Whitespace: Carriage Return
+        -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, // Decimal 14 - 26
+        -9, -9, -9, -9, -9, // Decimal 27 - 31
+        -5, // Whitespace: Space
+        -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, // Decimal 33 - 44
+        62, // Dash '-' sign at decimal 45
+        -9, -9, // Decimal 46-47
+        52, 53, 54, 55, 56, 57, 58, 59, 60, 61, // Numbers zero through nine
+        -9, -9, -9, // Decimal 58 - 60
+        -1, // Equals sign at decimal 61
+        -9, -9, -9, // Decimal 62 - 64
+        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, // Letters 'A' through 'N'
+        14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, // Letters 'O' through 'Z'
+        -9, -9, -9, -9, // Decimal 91-94
+        63, // Underscore '_' at decimal 95
+        -9, // Decimal 96
+        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, // Letters 'a' through 'm'
+        39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, // Letters 'n' through 'z'
+        -9, -9, -9, -9, -9 // Decimal 123 - 127
+        /*  ,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 128 - 139
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 140 - 152
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 153 - 165
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 166 - 178
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 179 - 191
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 192 - 204
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 205 - 217
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 218 - 230
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,     // Decimal 231 - 243
+        -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9         // Decimal 244 - 255 */
+        };
+
+    // Indicates white space in encoding
+    private final static byte WHITE_SPACE_ENC = -5;
+    // Indicates equals sign in encoding
+    private final static byte EQUALS_SIGN_ENC = -1;
+
+    /** Defeats instantiation. */
+    private Base64() {
+    }
+
+    /* ********  E N C O D I N G   M E T H O D S  ******** */
+
+    /**
+     * Encodes up to three bytes of the array <var>source</var>
+     * and writes the resulting four Base64 bytes to <var>destination</var>.
+     * The source and destination arrays can be manipulated
+     * anywhere along their length by specifying
+     * <var>srcOffset</var> and <var>destOffset</var>.
+     * This method does not check to make sure your arrays
+     * are large enough to accommodate <var>srcOffset</var> + 3 for
+     * the <var>source</var> array or <var>destOffset</var> + 4 for
+     * the <var>destination</var> array.
+     * The actual number of significant bytes in your array is
+     * given by <var>numSigBytes</var>.
+     *
+     * @param source the array to convert
+     * @param srcOffset the index where conversion begins
+     * @param numSigBytes the number of significant bytes in your array
+     * @param destination the array to hold the conversion
+     * @param destOffset the index where output will be put
+     * @param alphabet is the encoding alphabet
+     * @return the <var>destination</var> array
+     * @since 1.3
+     */
+    private static byte[] encode3to4(byte[] source, int srcOffset,
+            int numSigBytes, byte[] destination, int destOffset, byte[] alphabet) {
+        //           1         2         3
+        // 01234567890123456789012345678901 Bit position
+        // --------000000001111111122222222 Array position from threeBytes
+        // --------|    ||    ||    ||    | Six bit groups to index alphabet
+        //          >>18  >>12  >> 6  >> 0  Right shift necessary
+        //                0x3f  0x3f  0x3f  Additional AND
+
+        // Create buffer with zero-padding if there are only one or two
+        // significant bytes passed in the array.
+        // We have to shift left 24 in order to flush out the 1's that appear
+        // when Java treats a value as negative that is cast from a byte to an int.
+        int inBuff =
+                (numSigBytes > 0 ? ((source[srcOffset] << 24) >>> 8) : 0)
+                | (numSigBytes > 1 ? ((source[srcOffset + 1] << 24) >>> 16) : 0)
+                | (numSigBytes > 2 ? ((source[srcOffset + 2] << 24) >>> 24) : 0);
+
+        switch (numSigBytes) {
+            case 3:
+                destination[destOffset] = alphabet[(inBuff >>> 18)];
+                destination[destOffset + 1] = alphabet[(inBuff >>> 12) & 0x3f];
+                destination[destOffset + 2] = alphabet[(inBuff >>> 6) & 0x3f];
+                destination[destOffset + 3] = alphabet[(inBuff) & 0x3f];
+                return destination;
+            case 2:
+                destination[destOffset] = alphabet[(inBuff >>> 18)];
+                destination[destOffset + 1] = alphabet[(inBuff >>> 12) & 0x3f];
+                destination[destOffset + 2] = alphabet[(inBuff >>> 6) & 0x3f];
+                destination[destOffset + 3] = EQUALS_SIGN;
+                return destination;
+            case 1:
+                destination[destOffset] = alphabet[(inBuff >>> 18)];
+                destination[destOffset + 1] = alphabet[(inBuff >>> 12) & 0x3f];
+                destination[destOffset + 2] = EQUALS_SIGN;
+                destination[destOffset + 3] = EQUALS_SIGN;
+                return destination;
+            default:
+                return destination;
+        } // end switch
+    } // end encode3to4
+
+    /**
+     * Encodes a byte array into Base64 notation.
+     * Equivalent to calling
+     * {@code encodeBytes(source, 0, source.length)}
+     *
+     * @param source The data to convert
+     * @since 1.4
+     */
+    public static String encode(byte[] source) {
+        return encode(source, 0, source.length, ALPHABET, true);
+    }
+
+    /**
+     * Encodes a byte array into web safe Base64 notation.
+     *
+     * @param source The data to convert
+     * @param doPadding is {@code true} to pad result with '=' chars
+     *        if it does not fall on 3 byte boundaries
+     */
+    public static String encodeWebSafe(byte[] source, boolean doPadding) {
+        return encode(source, 0, source.length, WEBSAFE_ALPHABET, doPadding);
+    }
+
+    /**
+     * Encodes a byte array into Base64 notation.
+     *
+     * @param source the data to convert
+     * @param off offset in array where conversion should begin
+     * @param len length of data to convert
+     * @param alphabet the encoding alphabet
+     * @param doPadding is {@code true} to pad result with '=' chars
+     * if it does not fall on 3 byte boundaries
+     * @since 1.4
+     */
+    public static String encode(byte[] source, int off, int len, byte[] alphabet,
+            boolean doPadding) {
+        byte[] outBuff = encode(source, off, len, alphabet, Integer.MAX_VALUE);
+        int outLen = outBuff.length;
+
+        // If doPadding is false, set length to truncate '='
+        // padding characters
+        while (doPadding == false && outLen > 0) {
+            if (outBuff[outLen - 1] != '=') {
+                break;
+            }
+            outLen -= 1;
+        }
+
+        return new String(outBuff, 0, outLen);
+    }
+
+    /**
+     * Encodes a byte array into Base64 notation.
+     *
+     * @param source the data to convert
+     * @param off offset in array where conversion should begin
+     * @param len length of data to convert
+     * @param alphabet is the encoding alphabet
+     * @param maxLineLength maximum length of one line.
+     * @return the BASE64-encoded byte array
+     */
+    public static byte[] encode(byte[] source, int off, int len, byte[] alphabet,
+            int maxLineLength) {
+        int lenDiv3 = (len + 2) / 3; // ceil(len / 3)
+        int len43 = lenDiv3 * 4;
+        byte[] outBuff = new byte[len43 // Main 4:3
+                                  + (len43 / maxLineLength)]; // New lines
+
+        int d = 0;
+        int e = 0;
+        int len2 = len - 2;
+        int lineLength = 0;
+        for (; d < len2; d += 3, e += 4) {
+
+            // The following block of code is the same as
+            // encode3to4( source, d + off, 3, outBuff, e, alphabet );
+            // but inlined for faster encoding (~20% improvement)
+            int inBuff =
+                    ((source[d + off] << 24) >>> 8)
+                    | ((source[d + 1 + off] << 24) >>> 16)
+                    | ((source[d + 2 + off] << 24) >>> 24);
+            outBuff[e] = alphabet[(inBuff >>> 18)];
+            outBuff[e + 1] = alphabet[(inBuff >>> 12) & 0x3f];
+            outBuff[e + 2] = alphabet[(inBuff >>> 6) & 0x3f];
+            outBuff[e + 3] = alphabet[(inBuff) & 0x3f];
+
+            lineLength += 4;
+            if (lineLength == maxLineLength) {
+                outBuff[e + 4] = NEW_LINE;
+                e++;
+                lineLength = 0;
+            } // end if: end of line
+        } // end for: each piece of array
+
+        if (d < len) {
+            encode3to4(source, d + off, len - d, outBuff, e, alphabet);
+
+            lineLength += 4;
+            if (lineLength == maxLineLength) {
+                // Add a last newline
+                outBuff[e + 4] = NEW_LINE;
+                e++;
+            }
+            e += 4;
+        }
+
+        assert (e == outBuff.length);
+        return outBuff;
+    }
+
+
+    /* ********  D E C O D I N G   M E T H O D S  ******** */
+
+
+    /**
+     * Decodes four bytes from array <var>source</var>
+     * and writes the resulting bytes (up to three of them)
+     * to <var>destination</var>.
+     * The source and destination arrays can be manipulated
+     * anywhere along their length by specifying
+     * <var>srcOffset</var> and <var>destOffset</var>.
+     * This method does not check to make sure your arrays
+     * are large enough to accommodate <var>srcOffset</var> + 4 for
+     * the <var>source</var> array or <var>destOffset</var> + 3 for
+     * the <var>destination</var> array.
+     * This method returns the actual number of bytes that
+     * were converted from the Base64 encoding.
+     *
+     *
+     * @param source the array to convert
+     * @param srcOffset the index where conversion begins
+     * @param destination the array to hold the conversion
+     * @param destOffset the index where output will be put
+     * @param decodabet the decodabet for decoding Base64 content
+     * @return the number of decoded bytes converted
+     * @since 1.3
+     */
+    private static int decode4to3(byte[] source, int srcOffset,
+            byte[] destination, int destOffset, byte[] decodabet) {
+        // Example: Dk==
+        if (source[srcOffset + 2] == EQUALS_SIGN) {
+            int outBuff =
+                    ((decodabet[source[srcOffset]] << 24) >>> 6)
+                    | ((decodabet[source[srcOffset + 1]] << 24) >>> 12);
+
+            destination[destOffset] = (byte) (outBuff >>> 16);
+            return 1;
+        } else if (source[srcOffset + 3] == EQUALS_SIGN) {
+            // Example: DkL=
+            int outBuff =
+                    ((decodabet[source[srcOffset]] << 24) >>> 6)
+                    | ((decodabet[source[srcOffset + 1]] << 24) >>> 12)
+                    | ((decodabet[source[srcOffset + 2]] << 24) >>> 18);
+
+            destination[destOffset] = (byte) (outBuff >>> 16);
+            destination[destOffset + 1] = (byte) (outBuff >>> 8);
+            return 2;
+        } else {
+            // Example: DkLE
+            int outBuff =
+                    ((decodabet[source[srcOffset]] << 24) >>> 6)
+                    | ((decodabet[source[srcOffset + 1]] << 24) >>> 12)
+                    | ((decodabet[source[srcOffset + 2]] << 24) >>> 18)
+                    | ((decodabet[source[srcOffset + 3]] << 24) >>> 24);
+
+            destination[destOffset] = (byte) (outBuff >> 16);
+            destination[destOffset + 1] = (byte) (outBuff >> 8);
+            destination[destOffset + 2] = (byte) (outBuff);
+            return 3;
+        }
+    } // end decodeToBytes
+
+
+    /**
+     * Decodes data from Base64 notation.
+     *
+     * @param s the string to decode (decoded in default encoding)
+     * @return the decoded data
+     * @since 1.4
+     */
+    public static byte[] decode(String s) throws Base64DecoderException {
+        byte[] bytes = s.getBytes();
+        return decode(bytes, 0, bytes.length);
+    }
+
+    /**
+     * Decodes data from web safe Base64 notation.
+     * Web safe encoding uses '-' instead of '+', '_' instead of '/'
+     *
+     * @param s the string to decode (decoded in default encoding)
+     * @return the decoded data
+     */
+    public static byte[] decodeWebSafe(String s) throws Base64DecoderException {
+        byte[] bytes = s.getBytes();
+        return decodeWebSafe(bytes, 0, bytes.length);
+    }
+
+    /**
+     * Decodes Base64 content in byte array format and returns
+     * the decoded byte array.
+     *
+     * @param source The Base64 encoded data
+     * @return decoded data
+     * @since 1.3
+     * @throws Base64DecoderException
+     */
+    public static byte[] decode(byte[] source) throws Base64DecoderException {
+        return decode(source, 0, source.length);
+    }
+
+    /**
+     * Decodes web safe Base64 content in byte array format and returns
+     * the decoded data.
+     * Web safe encoding uses '-' instead of '+', '_' instead of '/'
+     *
+     * @param source the string to decode (decoded in default encoding)
+     * @return the decoded data
+     */
+    public static byte[] decodeWebSafe(byte[] source)
+            throws Base64DecoderException {
+        return decodeWebSafe(source, 0, source.length);
+    }
+
+    /**
+     * Decodes Base64 content in byte array format and returns
+     * the decoded byte array.
+     *
+     * @param source the Base64 encoded data
+     * @param off    the offset of where to begin decoding
+     * @param len    the length of characters to decode
+     * @return decoded data
+     * @since 1.3
+     * @throws Base64DecoderException
+     */
+    public static byte[] decode(byte[] source, int off, int len)
+            throws Base64DecoderException {
+        return decode(source, off, len, DECODABET);
+    }
+
+    /**
+     * Decodes web safe Base64 content in byte array format and returns
+     * the decoded byte array.
+     * Web safe encoding uses '-' instead of '+', '_' instead of '/'
+     *
+     * @param source the Base64 encoded data
+     * @param off    the offset of where to begin decoding
+     * @param len    the length of characters to decode
+     * @return decoded data
+     */
+    public static byte[] decodeWebSafe(byte[] source, int off, int len)
+            throws Base64DecoderException {
+        return decode(source, off, len, WEBSAFE_DECODABET);
+    }
+
+    /**
+     * Decodes Base64 content using the supplied decodabet and returns
+     * the decoded byte array.
+     *
+     * @param source the Base64 encoded data
+     * @param off the offset of where to begin decoding
+     * @param len the length of characters to decode
+     * @param decodabet the decodabet for decoding Base64 content
+     * @return decoded data
+     */
+    public static byte[] decode(byte[] source, int off, int len, byte[] decodabet)
+            throws Base64DecoderException {
+        int len34 = len * 3 / 4;
+        byte[] outBuff = new byte[2 + len34]; // Upper limit on size of output
+        int outBuffPosn = 0;
+
+        byte[] b4 = new byte[4];
+        int b4Posn = 0;
+        int i = 0;
+        byte sbiCrop = 0;
+        byte sbiDecode = 0;
+        for (i = 0; i < len; i++) {
+            sbiCrop = (byte) (source[i + off] & 0x7f); // Only the low seven bits
+            sbiDecode = decodabet[sbiCrop];
+
+            if (sbiDecode >= WHITE_SPACE_ENC) { // White space Equals sign or better
+                if (sbiDecode >= EQUALS_SIGN_ENC) {
+                    // An equals sign (for padding) must not occur at position 0 or 1
+                    // and must be the last byte[s] in the encoded value
+                    if (sbiCrop == EQUALS_SIGN) {
+                        int bytesLeft = len - i;
+                        byte lastByte = (byte) (source[len - 1 + off] & 0x7f);
+                        if (b4Posn == 0 || b4Posn == 1) {
+                            throw new Base64DecoderException(
+                                    "invalid padding byte '=' at byte offset " + i);
+                        } else if ((b4Posn == 3 && bytesLeft > 2)
+                                || (b4Posn == 4 && bytesLeft > 1)) {
+                            throw new Base64DecoderException(
+                                    "padding byte '=' falsely signals end of encoded value "
+                                            + "at offset " + i);
+                        } else if (lastByte != EQUALS_SIGN && lastByte != NEW_LINE) {
+                            throw new Base64DecoderException(
+                                    "encoded value has invalid trailing byte");
+                        }
+                        break;
+                    }
+
+                    b4[b4Posn++] = sbiCrop;
+                    if (b4Posn == 4) {
+                        outBuffPosn += decode4to3(b4, 0, outBuff, outBuffPosn, decodabet);
+                        b4Posn = 0;
+                    }
+                }
+            } else {
+                throw new Base64DecoderException("Bad Base64 input character at " + i
+                        + ": " + source[i + off] + "(decimal)");
+            }
+        }
+
+        // Because web safe encoding allows non padding base64 encodes, we
+        // need to pad the rest of the b4 buffer with equal signs when
+        // b4Posn != 0.  There can be at most 2 equal signs at the end of
+        // four characters, so the b4 buffer must have two or three
+        // characters.  This also catches the case where the input is
+        // padded with EQUALS_SIGN
+        if (b4Posn != 0) {
+            if (b4Posn == 1) {
+                throw new Base64DecoderException("single trailing character at offset "
+                        + (len - 1));
+            }
+            b4[b4Posn++] = EQUALS_SIGN;
+            outBuffPosn += decode4to3(b4, 0, outBuff, outBuffPosn, decodabet);
+        }
+
+        byte[] out = new byte[outBuffPosn];
+        System.arraycopy(outBuff, 0, out, 0, outBuffPosn);
+        return out;
+    }
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Base64DecoderException.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Base64DecoderException.java
new file mode 100644
index 00000000..2310746e
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Base64DecoderException.java
@@ -0,0 +1,32 @@
+// Copyright 2002, Google, Inc.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package com.achep.acdisplay.iab.utils;
+
+/**
+ * Exception thrown when encountering an invalid Base64 input character.
+ *
+ * @author nelson
+ */
+public class Base64DecoderException extends Exception {
+    public Base64DecoderException() {
+        super();
+    }
+
+    public Base64DecoderException(String s) {
+        super(s);
+    }
+
+    private static final long serialVersionUID = 1L;
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/IabException.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/IabException.java
new file mode 100644
index 00000000..42f73295
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/IabException.java
@@ -0,0 +1,43 @@
+/* Copyright (c) 2012 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.achep.acdisplay.iab.utils;
+
+/**
+ * Exception thrown when something went wrong with in-app billing.
+ * An IabException has an associated IabResult (an error).
+ * To get the IAB result that caused this exception to be thrown,
+ * call {@link #getResult()}.
+ */
+public class IabException extends Exception {
+    IabResult mResult;
+
+    public IabException(IabResult r) {
+        this(r, null);
+    }
+    public IabException(int response, String message) {
+        this(new IabResult(response, message));
+    }
+    public IabException(IabResult r, Exception cause) {
+        super(r.getMessage(), cause);
+        mResult = r;
+    }
+    public IabException(int response, String message, Exception cause) {
+        this(new IabResult(response, message), cause);
+    }
+
+    /** Returns the IAB result (error) that this exception signals. */
+    public IabResult getResult() { return mResult; }
+}
\ No newline at end of file
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/IabHelper.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/IabHelper.java
new file mode 100644
index 00000000..59ce2686
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/IabHelper.java
@@ -0,0 +1,995 @@
+/* Copyright (c) 2012 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.achep.acdisplay.iab.utils;
+
+import android.app.Activity;
+import android.app.PendingIntent;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentSender.SendIntentException;
+import android.content.ServiceConnection;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.IBinder;
+import android.os.RemoteException;
+import android.text.TextUtils;
+import android.util.Log;
+import android.content.pm.ResolveInfo;
+
+import org.json.JSONException;
+
+import java.util.ArrayList;
+import java.util.List;
+
+
+/**
+ * Provides convenience methods for in-app billing. You can create one instance of this
+ * class for your application and use it to process in-app billing operations.
+ * It provides synchronous (blocking) and asynchronous (non-blocking) methods for
+ * many common in-app billing operations, as well as automatic signature
+ * verification.
+ *
+ * After instantiating, you must perform setup in order to start using the object.
+ * To perform setup, call the {@link #startSetup} method and provide a listener;
+ * that listener will be notified when setup is complete, after which (and not before)
+ * you may call other methods.
+ *
+ * After setup is complete, you will typically want to request an inventory of owned
+ * items and subscriptions. See {@link #queryInventory}, {@link #queryInventoryAsync}
+ * and related methods.
+ *
+ * When you are done with this object, don't forget to call {@link #dispose}
+ * to ensure proper cleanup. This object holds a binding to the in-app billing
+ * service, which will leak unless you dispose of it correctly. If you created
+ * the object on an Activity's onCreate method, then the recommended
+ * place to dispose of it is the Activity's onDestroy method.
+ *
+ * A note about threading: When using this object from a background thread, you may
+ * call the blocking versions of methods; when using from a UI thread, call
+ * only the asynchronous versions and handle the results via callbacks.
+ * Also, notice that you can only call one asynchronous operation at a time;
+ * attempting to start a second asynchronous operation while the first one
+ * has not yet completed will result in an exception being thrown.
+ *
+ * @author Bruno Oliveira (Google)
+ *
+ */
+public class IabHelper {
+    // Is debug logging enabled?
+    boolean mDebugLog = false;
+    String mDebugTag = "IabHelper";
+
+    // Is setup done?
+    boolean mSetupDone = false;
+
+    // Has this object been disposed of? (If so, we should ignore callbacks, etc)
+    boolean mDisposed = false;
+
+    boolean mIsBound = false;
+
+    // Are subscriptions supported?
+    boolean mSubscriptionsSupported = false;
+
+    // Is an asynchronous operation in progress?
+    // (only one at a time can be in progress)
+    boolean mAsyncInProgress = false;
+
+    // (for logging/debugging)
+    // if mAsyncInProgress == true, what asynchronous operation is in progress?
+    String mAsyncOperation = "";
+
+    // Context we were passed during initialization
+    Context mContext;
+
+    // Connection to the service
+    IInAppBillingService mService;
+    ServiceConnection mServiceConn;
+
+    // The request code used to launch purchase flow
+    int mRequestCode;
+
+    // The item type of the current purchase flow
+    String mPurchasingItemType;
+
+    // Public key for verifying signature, in base64 encoding
+    String mSignatureBase64 = null;
+
+    // Billing response codes
+    public static final int BILLING_RESPONSE_RESULT_OK = 0;
+    public static final int BILLING_RESPONSE_RESULT_USER_CANCELED = 1;
+    public static final int BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE = 3;
+    public static final int BILLING_RESPONSE_RESULT_ITEM_UNAVAILABLE = 4;
+    public static final int BILLING_RESPONSE_RESULT_DEVELOPER_ERROR = 5;
+    public static final int BILLING_RESPONSE_RESULT_ERROR = 6;
+    public static final int BILLING_RESPONSE_RESULT_ITEM_ALREADY_OWNED = 7;
+    public static final int BILLING_RESPONSE_RESULT_ITEM_NOT_OWNED = 8;
+
+    // IAB Helper error codes
+    public static final int IABHELPER_ERROR_BASE = -1000;
+    public static final int IABHELPER_REMOTE_EXCEPTION = -1001;
+    public static final int IABHELPER_BAD_RESPONSE = -1002;
+    public static final int IABHELPER_VERIFICATION_FAILED = -1003;
+    public static final int IABHELPER_SEND_INTENT_FAILED = -1004;
+    public static final int IABHELPER_USER_CANCELLED = -1005;
+    public static final int IABHELPER_UNKNOWN_PURCHASE_RESPONSE = -1006;
+    public static final int IABHELPER_MISSING_TOKEN = -1007;
+    public static final int IABHELPER_UNKNOWN_ERROR = -1008;
+    public static final int IABHELPER_SUBSCRIPTIONS_NOT_AVAILABLE = -1009;
+    public static final int IABHELPER_INVALID_CONSUMPTION = -1010;
+
+    // Keys for the responses from InAppBillingService
+    public static final String RESPONSE_CODE = "RESPONSE_CODE";
+    public static final String RESPONSE_GET_SKU_DETAILS_LIST = "DETAILS_LIST";
+    public static final String RESPONSE_BUY_INTENT = "BUY_INTENT";
+    public static final String RESPONSE_INAPP_PURCHASE_DATA = "INAPP_PURCHASE_DATA";
+    public static final String RESPONSE_INAPP_SIGNATURE = "INAPP_DATA_SIGNATURE";
+    public static final String RESPONSE_INAPP_ITEM_LIST = "INAPP_PURCHASE_ITEM_LIST";
+    public static final String RESPONSE_INAPP_PURCHASE_DATA_LIST = "INAPP_PURCHASE_DATA_LIST";
+    public static final String RESPONSE_INAPP_SIGNATURE_LIST = "INAPP_DATA_SIGNATURE_LIST";
+    public static final String INAPP_CONTINUATION_TOKEN = "INAPP_CONTINUATION_TOKEN";
+
+    // Item types
+    public static final String ITEM_TYPE_INAPP = "inapp";
+    public static final String ITEM_TYPE_SUBS = "subs";
+
+    // some fields on the getSkuDetails response bundle
+    public static final String GET_SKU_DETAILS_ITEM_LIST = "ITEM_ID_LIST";
+    public static final String GET_SKU_DETAILS_ITEM_TYPE_LIST = "ITEM_TYPE_LIST";
+
+    /**
+     * Creates an instance. After creation, it will not yet be ready to use. You must perform
+     * setup by calling {@link #startSetup} and wait for setup to complete. This constructor does not
+     * block and is safe to call from a UI thread.
+     *
+     * @param ctx Your application or Activity context. Needed to bind to the in-app billing service.
+     * @param base64PublicKey Your application's public key, encoded in base64.
+     *     This is used for verification of purchase signatures. You can find your app's base64-encoded
+     *     public key in your application's page on Google Play Developer Console. Note that this
+     *     is NOT your "developer public key".
+     */
+    public IabHelper(Context ctx, String base64PublicKey) {
+        mContext = ctx.getApplicationContext();
+        mSignatureBase64 = base64PublicKey;
+        logDebug("IAB helper created.");
+    }
+
+    /**
+     * Enables or disable debug logging through LogCat.
+     */
+    public void enableDebugLogging(boolean enable, String tag) {
+        checkNotDisposed();
+        mDebugLog = enable;
+        mDebugTag = tag;
+    }
+
+    public void enableDebugLogging(boolean enable) {
+        checkNotDisposed();
+        mDebugLog = enable;
+    }
+
+    /**
+     * Callback for setup process. This listener's {@link #onIabSetupFinished} method is called
+     * when the setup process is complete.
+     */
+    public interface OnIabSetupFinishedListener {
+        /**
+         * Called to notify that setup is complete.
+         *
+         * @param result The result of the setup process.
+         */
+        public void onIabSetupFinished(IabResult result);
+    }
+
+    /**
+     * Starts the setup process. This will start up the setup process asynchronously.
+     * You will be notified through the listener when the setup process is complete.
+     * This method is safe to call from a UI thread.
+     *
+     * @param listener The listener to notify when the setup process is complete.
+     */
+    public void startSetup(final OnIabSetupFinishedListener listener) {
+        // If already set up, can't do it again.
+        checkNotDisposed();
+        if (mSetupDone) throw new IllegalStateException("IAB helper is already set up.");
+
+        // Connection to IAB service
+        logDebug("Starting in-app billing setup.");
+        mServiceConn = new ServiceConnection() {
+            @Override
+            public void onServiceDisconnected(ComponentName name) {
+                logDebug("Billing service disconnected.");
+                mService = null;
+            }
+
+            @Override
+            public void onServiceConnected(ComponentName name, IBinder service) {
+                if (mDisposed) return;
+                logDebug("Billing service connected.");
+                mService = IInAppBillingService.Stub.asInterface(service);
+                String packageName = mContext.getPackageName();
+                try {
+                    logDebug("Checking for in-app billing 3 support.");
+
+                    // check for in-app billing v3 support
+                    int response = mService.isBillingSupported(3, packageName, ITEM_TYPE_INAPP);
+                    if (response != BILLING_RESPONSE_RESULT_OK) {
+                        if (listener != null) listener.onIabSetupFinished(new IabResult(response,
+                                "Error checking for billing v3 support."));
+
+                        // if in-app purchases aren't supported, neither are subscriptions.
+                        mSubscriptionsSupported = false;
+                        return;
+                    }
+                    logDebug("In-app billing version 3 supported for " + packageName);
+
+                    // check for v3 subscriptions support
+                    response = mService.isBillingSupported(3, packageName, ITEM_TYPE_SUBS);
+                    if (response == BILLING_RESPONSE_RESULT_OK) {
+                        logDebug("Subscriptions AVAILABLE.");
+                        mSubscriptionsSupported = true;
+                    }
+                    else {
+                        logDebug("Subscriptions NOT AVAILABLE. Response: " + response);
+                    }
+
+                    mSetupDone = true;
+                }
+                catch (RemoteException e) {
+                    if (listener != null) {
+                        listener.onIabSetupFinished(new IabResult(IABHELPER_REMOTE_EXCEPTION,
+                                                    "RemoteException while setting up in-app billing."));
+                    }
+                    e.printStackTrace();
+                    return;
+                }
+
+                if (listener != null) {
+                    listener.onIabSetupFinished(new IabResult(BILLING_RESPONSE_RESULT_OK, "Setup successful."));
+                }
+            }
+        };
+
+        Intent serviceIntent = new Intent("com.android.vending.billing.InAppBillingService.BIND");
+        serviceIntent.setPackage("com.android.vending");
+        List<ResolveInfo> ri = mContext.getPackageManager().queryIntentServices(serviceIntent, 0);
+        if (ri != null && !ri.isEmpty()) {
+            // service available to handle that Intent
+            mIsBound = mContext.bindService(serviceIntent, mServiceConn, Context.BIND_AUTO_CREATE);
+        }
+        else {
+            // no service available to handle that Intent
+            if (listener != null) {
+                listener.onIabSetupFinished(
+                        new IabResult(BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE,
+                        "Billing service unavailable on device."));
+            }
+        }
+    }
+
+    /**
+     * Dispose of object, releasing resources. It's very important to call this
+     * method when you are done with this object. It will release any resources
+     * used by it such as service connections. Naturally, once the object is
+     * disposed of, it can't be used again.
+     */
+    public void dispose() {
+        logDebug("Disposing.");
+        mSetupDone = false;
+        if (mServiceConn != null) {
+            logDebug("Unbinding from service.");
+            if (mContext != null && mIsBound) {
+                mContext.unbindService(mServiceConn);
+            }
+        }
+        mDisposed = true;
+        mContext = null;
+        mServiceConn = null;
+        mService = null;
+        mPurchaseListener = null;
+    }
+
+    private void checkNotDisposed() {
+        if (mDisposed) throw new IllegalStateException("IabHelper was disposed of, so it cannot be used.");
+    }
+
+    /** Returns whether subscriptions are supported. */
+    public boolean subscriptionsSupported() {
+        checkNotDisposed();
+        return mSubscriptionsSupported;
+    }
+
+
+    /**
+     * Callback that notifies when a purchase is finished.
+     */
+    public interface OnIabPurchaseFinishedListener {
+        /**
+         * Called to notify that an in-app purchase finished. If the purchase was successful,
+         * then the sku parameter specifies which item was purchased. If the purchase failed,
+         * the sku and extraData parameters may or may not be null, depending on how far the purchase
+         * process went.
+         *
+         * @param result The result of the purchase.
+         * @param info The purchase information (null if purchase failed)
+         */
+        public void onIabPurchaseFinished(IabResult result, Purchase info);
+    }
+
+    // The listener registered on launchPurchaseFlow, which we have to call back when
+    // the purchase finishes
+    OnIabPurchaseFinishedListener mPurchaseListener;
+
+    public void launchPurchaseFlow(Activity act, String sku, int requestCode, OnIabPurchaseFinishedListener listener) {
+        launchPurchaseFlow(act, sku, requestCode, listener, "");
+    }
+
+    public void launchPurchaseFlow(Activity act, String sku, int requestCode,
+            OnIabPurchaseFinishedListener listener, String extraData) {
+        launchPurchaseFlow(act, sku, ITEM_TYPE_INAPP, requestCode, listener, extraData);
+    }
+
+    public void launchSubscriptionPurchaseFlow(Activity act, String sku, int requestCode,
+            OnIabPurchaseFinishedListener listener) {
+        launchSubscriptionPurchaseFlow(act, sku, requestCode, listener, "");
+    }
+
+    public void launchSubscriptionPurchaseFlow(Activity act, String sku, int requestCode,
+            OnIabPurchaseFinishedListener listener, String extraData) {
+        launchPurchaseFlow(act, sku, ITEM_TYPE_SUBS, requestCode, listener, extraData);
+    }
+
+    /**
+     * Initiate the UI flow for an in-app purchase. Call this method to initiate an in-app purchase,
+     * which will involve bringing up the Google Play screen. The calling activity will be paused while
+     * the user interacts with Google Play, and the result will be delivered via the activity's
+     * {@link android.app.Activity#onActivityResult} method, at which point you must call
+     * this object's {@link #handleActivityResult} method to continue the purchase flow. This method
+     * MUST be called from the UI thread of the Activity.
+     *
+     * @param act The calling activity.
+     * @param sku The sku of the item to purchase.
+     * @param itemType indicates if it's a product or a subscription (ITEM_TYPE_INAPP or ITEM_TYPE_SUBS)
+     * @param requestCode A request code (to differentiate from other responses --
+     *     as in {@link android.app.Activity#startActivityForResult}).
+     * @param listener The listener to notify when the purchase process finishes
+     * @param extraData Extra data (developer payload), which will be returned with the purchase data
+     *     when the purchase completes. This extra data will be permanently bound to that purchase
+     *     and will always be returned when the purchase is queried.
+     */
+    public void launchPurchaseFlow(Activity act, String sku, String itemType, int requestCode,
+                        OnIabPurchaseFinishedListener listener, String extraData) {
+        checkNotDisposed();
+        checkSetupDone("launchPurchaseFlow");
+        flagStartAsync("launchPurchaseFlow");
+        IabResult result;
+
+        if (itemType.equals(ITEM_TYPE_SUBS) && !mSubscriptionsSupported) {
+            IabResult r = new IabResult(IABHELPER_SUBSCRIPTIONS_NOT_AVAILABLE,
+                    "Subscriptions are not available.");
+            flagEndAsync();
+            if (listener != null) listener.onIabPurchaseFinished(r, null);
+            return;
+        }
+
+        try {
+            logDebug("Constructing buy intent for " + sku + ", item type: " + itemType);
+            Bundle buyIntentBundle = mService.getBuyIntent(3, mContext.getPackageName(), sku, itemType, extraData);
+            int response = getResponseCodeFromBundle(buyIntentBundle);
+            if (response != BILLING_RESPONSE_RESULT_OK) {
+                logError("Unable to buy item, Error response: " + getResponseDesc(response));
+                flagEndAsync();
+                result = new IabResult(response, "Unable to buy item");
+                if (listener != null) listener.onIabPurchaseFinished(result, null);
+                return;
+            }
+
+            PendingIntent pendingIntent = buyIntentBundle.getParcelable(RESPONSE_BUY_INTENT);
+            logDebug("Launching buy intent for " + sku + ". Request code: " + requestCode);
+            mRequestCode = requestCode;
+            mPurchaseListener = listener;
+            mPurchasingItemType = itemType;
+            act.startIntentSenderForResult(pendingIntent.getIntentSender(),
+                                           requestCode, new Intent(),
+                    0, 0,
+                    0);
+        }
+        catch (SendIntentException e) {
+            logError("SendIntentException while launching purchase flow for sku " + sku);
+            e.printStackTrace();
+            flagEndAsync();
+
+            result = new IabResult(IABHELPER_SEND_INTENT_FAILED, "Failed to send intent.");
+            if (listener != null) listener.onIabPurchaseFinished(result, null);
+        }
+        catch (RemoteException e) {
+            logError("RemoteException while launching purchase flow for sku " + sku);
+            e.printStackTrace();
+            flagEndAsync();
+
+            result = new IabResult(IABHELPER_REMOTE_EXCEPTION, "Remote exception while starting purchase flow");
+            if (listener != null) listener.onIabPurchaseFinished(result, null);
+        }
+    }
+
+    /**
+     * Handles an activity result that's part of the purchase flow in in-app billing. If you
+     * are calling {@link #launchPurchaseFlow}, then you must call this method from your
+     * Activity's {@link android.app.Activity@onActivityResult} method. This method
+     * MUST be called from the UI thread of the Activity.
+     *
+     * @param requestCode The requestCode as you received it.
+     * @param resultCode The resultCode as you received it.
+     * @param data The data (Intent) as you received it.
+     * @return Returns true if the result was related to a purchase flow and was handled;
+     *     false if the result was not related to a purchase, in which case you should
+     *     handle it normally.
+     */
+    public boolean handleActivityResult(int requestCode, int resultCode, Intent data) {
+        IabResult result;
+        if (requestCode != mRequestCode) return false;
+
+        checkNotDisposed();
+        checkSetupDone("handleActivityResult");
+
+        // end of async purchase operation that started on launchPurchaseFlow
+        flagEndAsync();
+
+        if (data == null) {
+            logError("Null data in IAB activity result.");
+            result = new IabResult(IABHELPER_BAD_RESPONSE, "Null data in IAB result");
+            if (mPurchaseListener != null) mPurchaseListener.onIabPurchaseFinished(result, null);
+            return true;
+        }
+
+        int responseCode = getResponseCodeFromIntent(data);
+        String purchaseData = data.getStringExtra(RESPONSE_INAPP_PURCHASE_DATA);
+        String dataSignature = data.getStringExtra(RESPONSE_INAPP_SIGNATURE);
+
+        if (resultCode == Activity.RESULT_OK && responseCode == BILLING_RESPONSE_RESULT_OK) {
+            logDebug("Successful resultcode from purchase activity.");
+            logDebug("Purchase data: " + purchaseData);
+            logDebug("Data signature: " + dataSignature);
+            logDebug("Extras: " + data.getExtras());
+            logDebug("Expected item type: " + mPurchasingItemType);
+
+            if (purchaseData == null || dataSignature == null) {
+                logError("BUG: either purchaseData or dataSignature is null.");
+                logDebug("Extras: " + data.getExtras().toString());
+                result = new IabResult(IABHELPER_UNKNOWN_ERROR, "IAB returned null purchaseData or dataSignature");
+                if (mPurchaseListener != null) mPurchaseListener.onIabPurchaseFinished(result, null);
+                return true;
+            }
+
+            Purchase purchase = null;
+            try {
+                purchase = new Purchase(mPurchasingItemType, purchaseData, dataSignature);
+                String sku = purchase.getSku();
+
+                // Verify signature
+                if (!Security.verifyPurchase(mSignatureBase64, purchaseData, dataSignature)) {
+                    logError("Purchase signature verification FAILED for sku " + sku);
+                    result = new IabResult(IABHELPER_VERIFICATION_FAILED, "Signature verification failed for sku " + sku);
+                    if (mPurchaseListener != null) mPurchaseListener.onIabPurchaseFinished(result, purchase);
+                    return true;
+                }
+                logDebug("Purchase signature successfully verified.");
+            }
+            catch (JSONException e) {
+                logError("Failed to parse purchase data.");
+                e.printStackTrace();
+                result = new IabResult(IABHELPER_BAD_RESPONSE, "Failed to parse purchase data.");
+                if (mPurchaseListener != null) mPurchaseListener.onIabPurchaseFinished(result, null);
+                return true;
+            }
+
+            if (mPurchaseListener != null) {
+                mPurchaseListener.onIabPurchaseFinished(new IabResult(BILLING_RESPONSE_RESULT_OK, "Success"), purchase);
+            }
+        }
+        else if (resultCode == Activity.RESULT_OK) {
+            // result code was OK, but in-app billing response was not OK.
+            logDebug("Result code was OK but in-app billing response was not OK: " + getResponseDesc(responseCode));
+            if (mPurchaseListener != null) {
+                result = new IabResult(responseCode, "Problem purchashing item.");
+                mPurchaseListener.onIabPurchaseFinished(result, null);
+            }
+        }
+        else if (resultCode == Activity.RESULT_CANCELED) {
+            logDebug("Purchase canceled - Response: " + getResponseDesc(responseCode));
+            result = new IabResult(IABHELPER_USER_CANCELLED, "User canceled.");
+            if (mPurchaseListener != null) mPurchaseListener.onIabPurchaseFinished(result, null);
+        }
+        else {
+            logError("Purchase failed. Result code: " + Integer.toString(resultCode)
+                    + ". Response: " + getResponseDesc(responseCode));
+            result = new IabResult(IABHELPER_UNKNOWN_PURCHASE_RESPONSE, "Unknown purchase response.");
+            if (mPurchaseListener != null) mPurchaseListener.onIabPurchaseFinished(result, null);
+        }
+        return true;
+    }
+
+    public Inventory queryInventory(boolean querySkuDetails, List<String> moreSkus) throws IabException {
+        return queryInventory(querySkuDetails, moreSkus, null);
+    }
+
+    /**
+     * Queries the inventory. This will query all owned items from the server, as well as
+     * information on additional skus, if specified. This method may block or take long to execute.
+     * Do not call from a UI thread. For that, use the non-blocking version {@link #refreshInventoryAsync}.
+     *
+     * @param querySkuDetails if true, SKU details (price, description, etc) will be queried as well
+     *     as purchase information.
+     * @param moreItemSkus additional PRODUCT skus to query information on, regardless of ownership.
+     *     Ignored if null or if querySkuDetails is false.
+     * @param moreSubsSkus additional SUBSCRIPTIONS skus to query information on, regardless of ownership.
+     *     Ignored if null or if querySkuDetails is false.
+     * @throws IabException if a problem occurs while refreshing the inventory.
+     */
+    public Inventory queryInventory(boolean querySkuDetails, List<String> moreItemSkus,
+                                        List<String> moreSubsSkus) throws IabException {
+        checkNotDisposed();
+        checkSetupDone("queryInventory");
+        try {
+            Inventory inv = new Inventory();
+            int r = queryPurchases(inv, ITEM_TYPE_INAPP);
+            if (r != BILLING_RESPONSE_RESULT_OK) {
+                throw new IabException(r, "Error refreshing inventory (querying owned items).");
+            }
+
+            if (querySkuDetails) {
+                r = querySkuDetails(ITEM_TYPE_INAPP, inv, moreItemSkus);
+                if (r != BILLING_RESPONSE_RESULT_OK) {
+                    throw new IabException(r, "Error refreshing inventory (querying prices of items).");
+                }
+            }
+
+            // if subscriptions are supported, then also query for subscriptions
+            if (mSubscriptionsSupported) {
+                r = queryPurchases(inv, ITEM_TYPE_SUBS);
+                if (r != BILLING_RESPONSE_RESULT_OK) {
+                    throw new IabException(r, "Error refreshing inventory (querying owned subscriptions).");
+                }
+
+                if (querySkuDetails) {
+                    r = querySkuDetails(ITEM_TYPE_SUBS, inv, moreItemSkus);
+                    if (r != BILLING_RESPONSE_RESULT_OK) {
+                        throw new IabException(r, "Error refreshing inventory (querying prices of subscriptions).");
+                    }
+                }
+            }
+
+            return inv;
+        }
+        catch (RemoteException e) {
+            throw new IabException(IABHELPER_REMOTE_EXCEPTION, "Remote exception while refreshing inventory.", e);
+        }
+        catch (JSONException e) {
+            throw new IabException(IABHELPER_BAD_RESPONSE, "Error parsing JSON response while refreshing inventory.", e);
+        }
+    }
+
+    /**
+     * Listener that notifies when an inventory query operation completes.
+     */
+    public interface QueryInventoryFinishedListener {
+        /**
+         * Called to notify that an inventory query operation completed.
+         *
+         * @param result The result of the operation.
+         * @param inv The inventory.
+         */
+        public void onQueryInventoryFinished(IabResult result, Inventory inv);
+    }
+
+
+    /**
+     * Asynchronous wrapper for inventory query. This will perform an inventory
+     * query as described in {@link #queryInventory}, but will do so asynchronously
+     * and call back the specified listener upon completion. This method is safe to
+     * call from a UI thread.
+     *
+     * @param querySkuDetails as in {@link #queryInventory}
+     * @param moreSkus as in {@link #queryInventory}
+     * @param listener The listener to notify when the refresh operation completes.
+     */
+    public void queryInventoryAsync(final boolean querySkuDetails,
+                               final List<String> moreSkus,
+                               final QueryInventoryFinishedListener listener) {
+        final Handler handler = new Handler();
+        checkNotDisposed();
+        checkSetupDone("queryInventory");
+        flagStartAsync("refresh inventory");
+        (new Thread(new Runnable() {
+            public void run() {
+                IabResult result = new IabResult(BILLING_RESPONSE_RESULT_OK, "Inventory refresh successful.");
+                Inventory inv = null;
+                try {
+                    inv = queryInventory(querySkuDetails, moreSkus);
+                }
+                catch (IabException ex) {
+                    result = ex.getResult();
+                }
+
+                flagEndAsync();
+
+                final IabResult result_f = result;
+                final Inventory inv_f = inv;
+                if (!mDisposed && listener != null) {
+                    handler.post(new Runnable() {
+                        public void run() {
+                            listener.onQueryInventoryFinished(result_f, inv_f);
+                        }
+                    });
+                }
+            }
+        })).start();
+    }
+
+    public void queryInventoryAsync(QueryInventoryFinishedListener listener) {
+        queryInventoryAsync(true, null, listener);
+    }
+
+    public void queryInventoryAsync(boolean querySkuDetails, QueryInventoryFinishedListener listener) {
+        queryInventoryAsync(querySkuDetails, null, listener);
+    }
+
+
+    /**
+     * Consumes a given in-app product. Consuming can only be done on an item
+     * that's owned, and as a result of consumption, the user will no longer own it.
+     * This method may block or take long to return. Do not call from the UI thread.
+     * For that, see {@link #consumeAsync}.
+     *
+     * @param itemInfo The PurchaseInfo that represents the item to consume.
+     * @throws IabException if there is a problem during consumption.
+     */
+    void consume(Purchase itemInfo) throws IabException {
+        checkNotDisposed();
+        checkSetupDone("consume");
+
+        if (!itemInfo.mItemType.equals(ITEM_TYPE_INAPP)) {
+            throw new IabException(IABHELPER_INVALID_CONSUMPTION,
+                    "Items of type '" + itemInfo.mItemType + "' can't be consumed.");
+        }
+
+        try {
+            String token = itemInfo.getToken();
+            String sku = itemInfo.getSku();
+            if (token == null || token.equals("")) {
+               logError("Can't consume "+ sku + ". No token.");
+               throw new IabException(IABHELPER_MISSING_TOKEN, "PurchaseInfo is missing token for sku: "
+                   + sku + " " + itemInfo);
+            }
+
+            logDebug("Consuming sku: " + sku + ", token: " + token);
+            int response = mService.consumePurchase(3, mContext.getPackageName(), token);
+            if (response == BILLING_RESPONSE_RESULT_OK) {
+               logDebug("Successfully consumed sku: " + sku);
+            }
+            else {
+               logDebug("Error consuming consuming sku " + sku + ". " + getResponseDesc(response));
+               throw new IabException(response, "Error consuming sku " + sku);
+            }
+        }
+        catch (RemoteException e) {
+            throw new IabException(IABHELPER_REMOTE_EXCEPTION, "Remote exception while consuming. PurchaseInfo: " + itemInfo, e);
+        }
+    }
+
+    /**
+     * Callback that notifies when a consumption operation finishes.
+     */
+    public interface OnConsumeFinishedListener {
+        /**
+         * Called to notify that a consumption has finished.
+         *
+         * @param purchase The purchase that was (or was to be) consumed.
+         * @param result The result of the consumption operation.
+         */
+        public void onConsumeFinished(Purchase purchase, IabResult result);
+    }
+
+    /**
+     * Callback that notifies when a multi-item consumption operation finishes.
+     */
+    public interface OnConsumeMultiFinishedListener {
+        /**
+         * Called to notify that a consumption of multiple items has finished.
+         *
+         * @param purchases The purchases that were (or were to be) consumed.
+         * @param results The results of each consumption operation, corresponding to each
+         *     sku.
+         */
+        public void onConsumeMultiFinished(List<Purchase> purchases, List<IabResult> results);
+    }
+
+    /**
+     * Asynchronous wrapper to item consumption. Works like {@link #consume}, but
+     * performs the consumption in the background and notifies completion through
+     * the provided listener. This method is safe to call from a UI thread.
+     *
+     * @param purchase The purchase to be consumed.
+     * @param listener The listener to notify when the consumption operation finishes.
+     */
+    public void consumeAsync(Purchase purchase, OnConsumeFinishedListener listener) {
+        checkNotDisposed();
+        checkSetupDone("consume");
+        List<Purchase> purchases = new ArrayList<>();
+        purchases.add(purchase);
+        consumeAsyncInternal(purchases, listener, null);
+    }
+
+    /**
+     * Same as {@link consumeAsync}, but for multiple items at once.
+     * @param purchases The list of PurchaseInfo objects representing the purchases to consume.
+     * @param listener The listener to notify when the consumption operation finishes.
+     */
+    public void consumeAsync(List<Purchase> purchases, OnConsumeMultiFinishedListener listener) {
+        checkNotDisposed();
+        checkSetupDone("consume");
+        consumeAsyncInternal(purchases, null, listener);
+    }
+
+    /**
+     * Returns a human-readable description for the given response code.
+     *
+     * @param code The response code
+     * @return A human-readable string explaining the result code.
+     *     It also includes the result code numerically.
+     */
+    public static String getResponseDesc(int code) {
+        String[] iab_msgs = ("0:OK/1:User Canceled/2:Unknown/" +
+                "3:Billing Unavailable/4:Item unavailable/" +
+                "5:Developer Error/6:Error/7:Item Already Owned/" +
+                "8:Item not owned").split("/");
+        String[] iabhelper_msgs = ("0:OK/-1001:Remote exception during initialization/" +
+                                   "-1002:Bad response received/" +
+                                   "-1003:Purchase signature verification failed/" +
+                                   "-1004:Send intent failed/" +
+                                   "-1005:User cancelled/" +
+                                   "-1006:Unknown purchase response/" +
+                                   "-1007:Missing token/" +
+                                   "-1008:Unknown error/" +
+                                   "-1009:Subscriptions not available/" +
+                                   "-1010:Invalid consumption attempt").split("/");
+
+        if (code <= IABHELPER_ERROR_BASE) {
+            int index = IABHELPER_ERROR_BASE - code;
+            if (index >= 0 && index < iabhelper_msgs.length) return iabhelper_msgs[index];
+            else return String.valueOf(code) + ":Unknown IAB Helper Error";
+        }
+        else if (code < 0 || code >= iab_msgs.length)
+            return String.valueOf(code) + ":Unknown";
+        else
+            return iab_msgs[code];
+    }
+
+
+    // Checks that setup was done; if not, throws an exception.
+    void checkSetupDone(String operation) {
+        if (!mSetupDone) {
+            logError("Illegal state for operation (" + operation + "): IAB helper is not set up.");
+            throw new IllegalStateException("IAB helper is not set up. Can't perform operation: " + operation);
+        }
+    }
+
+    // Workaround to bug where sometimes response codes come as Long instead of Integer
+    int getResponseCodeFromBundle(Bundle b) {
+        Object o = b.get(RESPONSE_CODE);
+        if (o == null) {
+            logDebug("Bundle with null response code, assuming OK (known issue)");
+            return BILLING_RESPONSE_RESULT_OK;
+        }
+        else if (o instanceof Integer) return (Integer) o;
+        else if (o instanceof Long) return (int)((Long)o).longValue();
+        else {
+            logError("Unexpected type for bundle response code.");
+            logError(o.getClass().getName());
+            throw new RuntimeException("Unexpected type for bundle response code: " + o.getClass().getName());
+        }
+    }
+
+    // Workaround to bug where sometimes response codes come as Long instead of Integer
+    int getResponseCodeFromIntent(Intent i) {
+        Object o = i.getExtras().get(RESPONSE_CODE);
+        if (o == null) {
+            logError("Intent with no response code, assuming OK (known issue)");
+            return BILLING_RESPONSE_RESULT_OK;
+        }
+        else if (o instanceof Integer) return (Integer) o;
+        else if (o instanceof Long) return (int)((Long)o).longValue();
+        else {
+            logError("Unexpected type for intent response code.");
+            logError(o.getClass().getName());
+            throw new RuntimeException("Unexpected type for intent response code: " + o.getClass().getName());
+        }
+    }
+
+    void flagStartAsync(String operation) {
+        if (mAsyncInProgress) throw new IllegalStateException("Can't start async operation (" +
+                operation + ") because another async operation(" + mAsyncOperation + ") is in progress.");
+        mAsyncOperation = operation;
+        mAsyncInProgress = true;
+        logDebug("Starting async operation: " + operation);
+    }
+
+    void flagEndAsync() {
+        logDebug("Ending async operation: " + mAsyncOperation);
+        mAsyncOperation = "";
+        mAsyncInProgress = false;
+    }
+
+
+    int queryPurchases(Inventory inv, String itemType) throws JSONException, RemoteException {
+        // Query purchases
+        logDebug("Querying owned items, item type: " + itemType);
+        logDebug("Package name: " + mContext.getPackageName());
+        boolean verificationFailed = false;
+        String continueToken = null;
+
+        do {
+            logDebug("Calling getPurchases with continuation token: " + continueToken);
+            Bundle ownedItems = mService.getPurchases(3, mContext.getPackageName(),
+                    itemType, continueToken);
+
+            int response = getResponseCodeFromBundle(ownedItems);
+            logDebug("Owned items response: " + String.valueOf(response));
+            if (response != BILLING_RESPONSE_RESULT_OK) {
+                logDebug("getPurchases() failed: " + getResponseDesc(response));
+                return response;
+            }
+            if (!ownedItems.containsKey(RESPONSE_INAPP_ITEM_LIST)
+                    || !ownedItems.containsKey(RESPONSE_INAPP_PURCHASE_DATA_LIST)
+                    || !ownedItems.containsKey(RESPONSE_INAPP_SIGNATURE_LIST)) {
+                logError("Bundle returned from getPurchases() doesn't contain required fields.");
+                return IABHELPER_BAD_RESPONSE;
+            }
+
+            ArrayList<String> ownedSkus = ownedItems.getStringArrayList(
+                        RESPONSE_INAPP_ITEM_LIST);
+            ArrayList<String> purchaseDataList = ownedItems.getStringArrayList(
+                        RESPONSE_INAPP_PURCHASE_DATA_LIST);
+            ArrayList<String> signatureList = ownedItems.getStringArrayList(
+                        RESPONSE_INAPP_SIGNATURE_LIST);
+
+            for (int i = 0; i < purchaseDataList.size(); ++i) {
+                String purchaseData = purchaseDataList.get(i);
+                String signature = signatureList.get(i);
+                String sku = ownedSkus.get(i);
+                if (Security.verifyPurchase(mSignatureBase64, purchaseData, signature)) {
+                    logDebug("Sku is owned: " + sku);
+                    Purchase purchase = new Purchase(itemType, purchaseData, signature);
+
+                    if (TextUtils.isEmpty(purchase.getToken())) {
+                        logWarn("BUG: empty/null token!");
+                        logDebug("Purchase data: " + purchaseData);
+                    }
+
+                    // Record ownership and token
+                    inv.addPurchase(purchase);
+                }
+                else {
+                    logWarn("Purchase signature verification **FAILED**. Not adding item.");
+                    logDebug("   Purchase data: " + purchaseData);
+                    logDebug("   Signature: " + signature);
+                    verificationFailed = true;
+                }
+            }
+
+            continueToken = ownedItems.getString(INAPP_CONTINUATION_TOKEN);
+            logDebug("Continuation token: " + continueToken);
+        } while (!TextUtils.isEmpty(continueToken));
+
+        return verificationFailed ? IABHELPER_VERIFICATION_FAILED : BILLING_RESPONSE_RESULT_OK;
+    }
+
+    int querySkuDetails(String itemType, Inventory inv, List<String> moreSkus)
+                                throws RemoteException, JSONException {
+        logDebug("Querying SKU details.");
+        ArrayList<String> skuList = new ArrayList<>();
+        skuList.addAll(inv.getAllOwnedSkus(itemType));
+        if (moreSkus != null) {
+            for (String sku : moreSkus) {
+                if (!skuList.contains(sku)) {
+                    skuList.add(sku);
+                }
+            }
+        }
+
+        if (skuList.size() == 0) {
+            logDebug("queryPrices: nothing to do because there are no SKUs.");
+            return BILLING_RESPONSE_RESULT_OK;
+        }
+
+        Bundle querySkus = new Bundle();
+        querySkus.putStringArrayList(GET_SKU_DETAILS_ITEM_LIST, skuList);
+        Bundle skuDetails = mService.getSkuDetails(3, mContext.getPackageName(),
+                itemType, querySkus);
+
+        if (!skuDetails.containsKey(RESPONSE_GET_SKU_DETAILS_LIST)) {
+            int response = getResponseCodeFromBundle(skuDetails);
+            if (response != BILLING_RESPONSE_RESULT_OK) {
+                logDebug("getSkuDetails() failed: " + getResponseDesc(response));
+                return response;
+            }
+            else {
+                logError("getSkuDetails() returned a bundle with neither an error nor a detail list.");
+                return IABHELPER_BAD_RESPONSE;
+            }
+        }
+
+        ArrayList<String> responseList = skuDetails.getStringArrayList(
+                RESPONSE_GET_SKU_DETAILS_LIST);
+
+        for (String thisResponse : responseList) {
+            SkuDetails d = new SkuDetails(itemType, thisResponse);
+            logDebug("Got sku details: " + d);
+            inv.addSkuDetails(d);
+        }
+        return BILLING_RESPONSE_RESULT_OK;
+    }
+
+
+    void consumeAsyncInternal(final List<Purchase> purchases,
+                              final OnConsumeFinishedListener singleListener,
+                              final OnConsumeMultiFinishedListener multiListener) {
+        final Handler handler = new Handler();
+        flagStartAsync("consume");
+        (new Thread(new Runnable() {
+            public void run() {
+                final List<IabResult> results = new ArrayList<>();
+                for (Purchase purchase : purchases) {
+                    try {
+                        consume(purchase);
+                        results.add(new IabResult(BILLING_RESPONSE_RESULT_OK, "Successful consume of sku " + purchase.getSku()));
+                    }
+                    catch (IabException ex) {
+                        results.add(ex.getResult());
+                    }
+                }
+
+                flagEndAsync();
+                if (!mDisposed && singleListener != null) {
+                    handler.post(new Runnable() {
+                        public void run() {
+                            singleListener.onConsumeFinished(purchases.get(0), results.get(0));
+                        }
+                    });
+                }
+                if (!mDisposed && multiListener != null) {
+                    handler.post(new Runnable() {
+                        public void run() {
+                            multiListener.onConsumeMultiFinished(purchases, results);
+                        }
+                    });
+                }
+            }
+        })).start();
+    }
+
+    void logDebug(String msg) {
+        if (mDebugLog) Log.d(mDebugTag, msg);
+    }
+
+    void logError(String msg) {
+        Log.e(mDebugTag, "In-app billing error: " + msg);
+    }
+
+    void logWarn(String msg) {
+        Log.w(mDebugTag, "In-app billing warning: " + msg);
+    }
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/IabResult.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/IabResult.java
new file mode 100644
index 00000000..f646f4b6
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/IabResult.java
@@ -0,0 +1,45 @@
+/* Copyright (c) 2012 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.achep.acdisplay.iab.utils;
+
+/**
+ * Represents the result of an in-app billing operation.
+ * A result is composed of a response code (an integer) and possibly a
+ * message (String). You can get those by calling
+ * {@link #getResponse} and {@link #getMessage()}, respectively. You
+ * can also inquire whether a result is a success or a failure by
+ * calling {@link #isSuccess()} and {@link #isFailure()}.
+ */
+public class IabResult {
+    int mResponse;
+    String mMessage;
+
+    public IabResult(int response, String message) {
+        mResponse = response;
+        if (message == null || message.trim().length() == 0) {
+            mMessage = IabHelper.getResponseDesc(response);
+        }
+        else {
+            mMessage = message + " (response: " + IabHelper.getResponseDesc(response) + ")";
+        }
+    }
+    public int getResponse() { return mResponse; }
+    public String getMessage() { return mMessage; }
+    public boolean isSuccess() { return mResponse == IabHelper.BILLING_RESPONSE_RESULT_OK; }
+    public boolean isFailure() { return !isSuccess(); }
+    public String toString() { return "IabResult: " + getMessage(); }
+}
+
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Inventory.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Inventory.java
new file mode 100644
index 00000000..54d7915e
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Inventory.java
@@ -0,0 +1,91 @@
+/* Copyright (c) 2012 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.achep.acdisplay.iab.utils;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Represents a block of information about in-app items.
+ * An Inventory is returned by such methods as {@link IabHelper#queryInventory}.
+ */
+public class Inventory {
+    Map<String,SkuDetails> mSkuMap = new HashMap<>();
+    Map<String,Purchase> mPurchaseMap = new HashMap<>();
+
+    Inventory() { }
+
+    /** Returns the listing details for an in-app product. */
+    public SkuDetails getSkuDetails(String sku) {
+        return mSkuMap.get(sku);
+    }
+
+    /** Returns purchase information for a given product, or null if there is no purchase. */
+    public Purchase getPurchase(String sku) {
+        return mPurchaseMap.get(sku);
+    }
+
+    /** Returns whether or not there exists a purchase of the given product. */
+    public boolean hasPurchase(String sku) {
+        return mPurchaseMap.containsKey(sku);
+    }
+
+    /** Return whether or not details about the given product are available. */
+    public boolean hasDetails(String sku) {
+        return mSkuMap.containsKey(sku);
+    }
+
+    /**
+     * Erase a purchase (locally) from the inventory, given its product ID. This just
+     * modifies the Inventory object locally and has no effect on the server! This is
+     * useful when you have an existing Inventory object which you know to be up to date,
+     * and you have just consumed an item successfully, which means that erasing its
+     * purchase data from the Inventory you already have is quicker than querying for
+     * a new Inventory.
+     */
+    public void erasePurchase(String sku) {
+        if (mPurchaseMap.containsKey(sku)) mPurchaseMap.remove(sku);
+    }
+
+    /** Returns a list of all owned product IDs. */
+    List<String> getAllOwnedSkus() {
+        return new ArrayList<>(mPurchaseMap.keySet());
+    }
+
+    /** Returns a list of all owned product IDs of a given type */
+    List<String> getAllOwnedSkus(String itemType) {
+        List<String> result = new ArrayList<>();
+        for (Purchase p : mPurchaseMap.values()) {
+            if (p.getItemType().equals(itemType)) result.add(p.getSku());
+        }
+        return result;
+    }
+
+    /** Returns a list of all purchases. */
+    List<Purchase> getAllPurchases() {
+        return new ArrayList<>(mPurchaseMap.values());
+    }
+
+    void addSkuDetails(SkuDetails d) {
+        mSkuMap.put(d.getSku(), d);
+    }
+
+    void addPurchase(Purchase p) {
+        mPurchaseMap.put(p.getSku(), p);
+    }
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Purchase.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Purchase.java
new file mode 100644
index 00000000..8c85989e
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Purchase.java
@@ -0,0 +1,63 @@
+/* Copyright (c) 2012 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.achep.acdisplay.iab.utils;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+/**
+ * Represents an in-app billing purchase.
+ */
+public class Purchase {
+    String mItemType;  // ITEM_TYPE_INAPP or ITEM_TYPE_SUBS
+    String mOrderId;
+    String mPackageName;
+    String mSku;
+    long mPurchaseTime;
+    int mPurchaseState;
+    String mDeveloperPayload;
+    String mToken;
+    String mOriginalJson;
+    String mSignature;
+
+    public Purchase(String itemType, String jsonPurchaseInfo, String signature) throws JSONException {
+        mItemType = itemType;
+        mOriginalJson = jsonPurchaseInfo;
+        JSONObject o = new JSONObject(mOriginalJson);
+        mOrderId = o.optString("orderId");
+        mPackageName = o.optString("packageName");
+        mSku = o.optString("productId");
+        mPurchaseTime = o.optLong("purchaseTime");
+        mPurchaseState = o.optInt("purchaseState");
+        mDeveloperPayload = o.optString("developerPayload");
+        mToken = o.optString("token", o.optString("purchaseToken"));
+        mSignature = signature;
+    }
+
+    public String getItemType() { return mItemType; }
+    public String getOrderId() { return mOrderId; }
+    public String getPackageName() { return mPackageName; }
+    public String getSku() { return mSku; }
+    public long getPurchaseTime() { return mPurchaseTime; }
+    public int getPurchaseState() { return mPurchaseState; }
+    public String getDeveloperPayload() { return mDeveloperPayload; }
+    public String getToken() { return mToken; }
+    public String getOriginalJson() { return mOriginalJson; }
+    public String getSignature() { return mSignature; }
+
+    @Override
+    public String toString() { return "PurchaseInfo(type:" + mItemType + "):" + mOriginalJson; }
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Security.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Security.java
new file mode 100644
index 00000000..5f7d31c1
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/Security.java
@@ -0,0 +1,119 @@
+/* Copyright (c) 2012 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.achep.acdisplay.iab.utils;
+
+import android.text.TextUtils;
+import android.util.Log;
+
+import java.security.InvalidKeyException;
+import java.security.KeyFactory;
+import java.security.NoSuchAlgorithmException;
+import java.security.PublicKey;
+import java.security.Signature;
+import java.security.SignatureException;
+import java.security.spec.InvalidKeySpecException;
+import java.security.spec.X509EncodedKeySpec;
+
+/**
+ * Security-related methods. For a secure implementation, all of this code
+ * should be implemented on a server that communicates with the
+ * application on the device. For the sake of simplicity and clarity of this
+ * example, this code is included here and is executed on the device. If you
+ * must verify the purchases on the phone, you should obfuscate this code to
+ * make it harder for an attacker to replace the code with stubs that treat all
+ * purchases as verified.
+ */
+public class Security {
+    private static final String TAG = "IABUtil/Security";
+
+    private static final String KEY_FACTORY_ALGORITHM = "RSA";
+    private static final String SIGNATURE_ALGORITHM = "SHA1withRSA";
+
+    /**
+     * Verifies that the data was signed with the given signature, and returns
+     * the verified purchase. The data is in JSON format and signed
+     * with a private key. The data also contains the {@link PurchaseState}
+     * and product ID of the purchase.
+     * @param base64PublicKey the base64-encoded public key to use for verifying.
+     * @param signedData the signed JSON string (signed, not encrypted)
+     * @param signature the signature for the data, signed with the private key
+     */
+    public static boolean verifyPurchase(String base64PublicKey, String signedData, String signature) {
+        if (TextUtils.isEmpty(signedData) || TextUtils.isEmpty(base64PublicKey) ||
+                TextUtils.isEmpty(signature)) {
+            Log.e(TAG, "Purchase verification failed: missing data.");
+            return false;
+        }
+
+        PublicKey key = Security.generatePublicKey(base64PublicKey);
+        return Security.verify(key, signedData, signature);
+    }
+
+    /**
+     * Generates a PublicKey instance from a string containing the
+     * Base64-encoded public key.
+     *
+     * @param encodedPublicKey Base64-encoded public key
+     * @throws IllegalArgumentException if encodedPublicKey is invalid
+     */
+    public static PublicKey generatePublicKey(String encodedPublicKey) {
+        try {
+            byte[] decodedKey = Base64.decode(encodedPublicKey);
+            KeyFactory keyFactory = KeyFactory.getInstance(KEY_FACTORY_ALGORITHM);
+            return keyFactory.generatePublic(new X509EncodedKeySpec(decodedKey));
+        } catch (NoSuchAlgorithmException e) {
+            throw new RuntimeException(e);
+        } catch (InvalidKeySpecException e) {
+            Log.e(TAG, "Invalid key specification.");
+            throw new IllegalArgumentException(e);
+        } catch (Base64DecoderException e) {
+            Log.e(TAG, "Base64 decoding failed.");
+            throw new IllegalArgumentException(e);
+        }
+    }
+
+    /**
+     * Verifies that the signature from the server matches the computed
+     * signature on the data.  Returns true if the data is correctly signed.
+     *
+     * @param publicKey public key associated with the developer account
+     * @param signedData signed data from server
+     * @param signature server signature
+     * @return true if the data and signature match
+     */
+    public static boolean verify(PublicKey publicKey, String signedData, String signature) {
+        Signature sig;
+        try {
+            sig = Signature.getInstance(SIGNATURE_ALGORITHM);
+            sig.initVerify(publicKey);
+            sig.update(signedData.getBytes());
+            if (!sig.verify(Base64.decode(signature))) {
+                Log.e(TAG, "Signature verification failed.");
+                return false;
+            }
+            return true;
+        } catch (NoSuchAlgorithmException e) {
+            Log.e(TAG, "NoSuchAlgorithmException.");
+        } catch (InvalidKeyException e) {
+            Log.e(TAG, "Invalid key specification.");
+        } catch (SignatureException e) {
+            Log.e(TAG, "Signature exception.");
+        } catch (Base64DecoderException e) {
+            Log.e(TAG, "Base64 decoding failed.");
+        }
+        return false;
+    }
+}
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/SkuDetails.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/SkuDetails.java
new file mode 100644
index 00000000..48c35461
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/iab/utils/SkuDetails.java
@@ -0,0 +1,58 @@
+/* Copyright (c) 2012 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.achep.acdisplay.iab.utils;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+/**
+ * Represents an in-app product's listing details.
+ */
+public class SkuDetails {
+    String mItemType;
+    String mSku;
+    String mType;
+    String mPrice;
+    String mTitle;
+    String mDescription;
+    String mJson;
+
+    public SkuDetails(String jsonSkuDetails) throws JSONException {
+        this(IabHelper.ITEM_TYPE_INAPP, jsonSkuDetails);
+    }
+
+    public SkuDetails(String itemType, String jsonSkuDetails) throws JSONException {
+        mItemType = itemType;
+        mJson = jsonSkuDetails;
+        JSONObject o = new JSONObject(mJson);
+        mSku = o.optString("productId");
+        mType = o.optString("type");
+        mPrice = o.optString("price");
+        mTitle = o.optString("title");
+        mDescription = o.optString("description");
+    }
+
+    public String getSku() { return mSku; }
+    public String getType() { return mType; }
+    public String getPrice() { return mPrice; }
+    public String getTitle() { return mTitle; }
+    public String getDescription() { return mDescription; }
+
+    @Override
+    public String toString() {
+        return "SkuDetails:" + mJson;
+    }
+}
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationData.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationData.java
similarity index 92%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationData.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationData.java
index 8e9297d2..725c3da7 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationData.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationData.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.notifications;
+package com.achep.acdisplay.notifications;
 
 import android.content.Context;
 import android.content.res.Resources;
@@ -28,15 +28,14 @@ import android.service.notification.StatusBarNotification;
 import android.text.TextUtils;
 import android.util.Log;
 
-import com.achep.activedisplay.AsyncTask;
-import com.achep.activedisplay.Device;
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.fragments.AcDisplayFragment;
-import com.achep.activedisplay.notifications.parser.Extractor;
-import com.achep.activedisplay.notifications.parser.NativeExtractor;
-import com.achep.activedisplay.notifications.parser.ViewExtractor;
-import com.achep.activedisplay.utils.BitmapUtils;
+import com.achep.acdisplay.AsyncTask;
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.Device;
+import com.achep.acdisplay.acdisplay.BackgroundFactoryThread;
+import com.achep.acdisplay.notifications.parser.Extractor;
+import com.achep.acdisplay.notifications.parser.NativeExtractor;
+import com.achep.acdisplay.notifications.parser.ViewExtractor;
+import com.achep.acdisplay.utils.BitmapUtils;
 
 import java.lang.ref.SoftReference;
 import java.lang.ref.WeakReference;
@@ -143,9 +142,9 @@ public class NotificationData {
     private static SoftReference<Extractor> sNativeExtractor = new SoftReference<>(null);
     private static SoftReference<Extractor> sViewExtractor = new SoftReference<>(null);
     private IconLoaderThread mIconLoader;
-    private AcDisplayFragment.BackgroundFactoryThread mBackgroundLoader;
-    private AcDisplayFragment.BackgroundFactoryThread.Callback mBackgroundLoaderCallback =
-            new AcDisplayFragment.BackgroundFactoryThread.Callback() {
+    private BackgroundFactoryThread mBackgroundLoader;
+    private BackgroundFactoryThread.Callback mBackgroundLoaderCallback =
+            new BackgroundFactoryThread.Callback() {
         @Override
         public void onBackgroundCreated(Bitmap bitmap) {
             setBackground(bitmap);
@@ -180,7 +179,7 @@ public class NotificationData {
 
         Bitmap bitmapIcon = sbn.getNotification().largeIcon;
         if (bitmapIcon != null && !BitmapUtils.hasTransparentCorners(bitmapIcon)) {
-            mBackgroundLoader = new AcDisplayFragment.BackgroundFactoryThread(
+            mBackgroundLoader = new BackgroundFactoryThread(
                     context, bitmapIcon, mBackgroundLoaderCallback);
             mBackgroundLoader.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
         }
@@ -306,7 +305,7 @@ public class NotificationData {
             Canvas canvas = new Canvas(icon);
             drawable.draw(canvas);
 
-            if (Project.DEBUG) {
+            if (Build.DEBUG) {
                 long delta = SystemClock.elapsedRealtime() - start;
                 Log.d(TAG, "Notification icon loaded in " + delta + " millis:"
                         + " width=" + icon.getWidth()
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationHandleService.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationHandleService.java
similarity index 84%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationHandleService.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationHandleService.java
index dbc528d7..4226d5df 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationHandleService.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationHandleService.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.notifications;
+package com.achep.acdisplay.notifications;
 
 import android.app.ActivityManager;
 import android.content.Context;
@@ -48,7 +48,7 @@ public class NotificationHandleService extends NotificationListenerService {
         // what seems to be not possible without dirty and buggy
         // workarounds.
         NotificationPresenter
-                .getInstance(this)
+                .getInstance()
                 .tryStartInitProcess();
 
         return super.onBind(intent);
@@ -75,24 +75,28 @@ public class NotificationHandleService extends NotificationListenerService {
 
     @Override
     public void onNotificationPosted(final StatusBarNotification statusBarNotification) {
-        handleOnNotificationChanged(statusBarNotification, getActiveNotifications(), true);
+        perform(statusBarNotification, true);
     }
 
     @Override
     public void onNotificationRemoved(final StatusBarNotification statusBarNotification) {
-        handleOnNotificationChanged(statusBarNotification, getActiveNotifications(), false);
+        perform(statusBarNotification, false);
     }
 
-    private void handleOnNotificationChanged(final StatusBarNotification statusBarNotification,
-                                             final StatusBarNotification[] activeNotifications,
-                                             final boolean post) {
+    private void perform(final StatusBarNotification statusBarNotification,
+                         final boolean post) {
+        final StatusBarNotification[] activeNotifications = getActiveNotifications();
         new Handler(Looper.getMainLooper()).post(new Runnable() {
+
             @Override
             public void run() {
-                NotificationPresenter np = NotificationPresenter.getInstance(sService);
+                NotificationPresenter np = NotificationPresenter.getInstance();
 
                 try {
-                    np.tryInit(sService, statusBarNotification, activeNotifications);
+                    if (!np.isInitialized()) {
+                        np.tryInit(sService, statusBarNotification, activeNotifications);
+
+                    }
                     if (post) {
                         np.postNotification(sService, statusBarNotification);
                     } else {
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationHelper.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationHelper.java
similarity index 83%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationHelper.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationHelper.java
index 3263a80e..d0ef2ee4 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationHelper.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationHelper.java
@@ -16,15 +16,15 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.notifications;
+package com.achep.acdisplay.notifications;
 
 import android.app.Notification;
 import android.app.PendingIntent;
 import android.service.notification.StatusBarNotification;
 import android.util.Log;
 
-import com.achep.activedisplay.Operator;
-import com.achep.activedisplay.utils.PendingIntentUtils;
+import com.achep.acdisplay.Operator;
+import com.achep.acdisplay.utils.PendingIntentUtils;
 
 /**
  * Created by Artem on 19.01.14.
@@ -33,10 +33,6 @@ public class NotificationHelper {
 
     private static final String TAG = "NotificationHelper";
 
-    public static boolean startContentIntent(OpenStatusBarNotification notification) {
-        return startContentIntent(notification.getStatusBarNotification());
-    }
-
     public static boolean startContentIntent(StatusBarNotification notification) {
         if (notification != null) {
             PendingIntent pi = notification.getNotification().contentIntent;
@@ -58,7 +54,7 @@ public class NotificationHelper {
                     notification.getPackageName(),
                     notification.getTag(),
                     notification.getId());
-            NotificationPresenter.getInstance(service).removeNotification(service, notification);
+            NotificationPresenter.getInstance().removeNotification(service, notification);
         } else {
             Log.e(TAG, "Failed to dismiss notification because notification service is offline.");
         }
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationList.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationList.java
similarity index 88%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationList.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationList.java
index 99eea004..4f278ab2 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationList.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationList.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.notifications;
+package com.achep.acdisplay.notifications;
 
 import java.util.ArrayList;
 
@@ -55,8 +55,8 @@ final class NotificationList {
     /**
      * Replace or add notification to the list.
      *
-     * @return {@link com.achep.activedisplay.notifications.NotificationList.Callback#onNotificationAdded(com.achep.activedisplay.notifications.OpenStatusBarNotification n)} or
-     * {@link com.achep.activedisplay.notifications.NotificationList.Callback#onNotificationChanged(com.achep.activedisplay.notifications.OpenStatusBarNotification n)}
+     * @return {@link com.achep.acdisplay.notifications.NotificationList.Callback#onNotificationAdded(com.achep.acdisplay.notifications.OpenStatusBarNotification n)} or
+     * {@link com.achep.acdisplay.notifications.NotificationList.Callback#onNotificationChanged(com.achep.acdisplay.notifications.OpenStatusBarNotification n)}
      */
     public int push(OpenStatusBarNotification n) {
         int index = indexOf(n);
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationPresenter.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationPresenter.java
similarity index 89%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationPresenter.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationPresenter.java
index 8812afbd..0f02e740 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationPresenter.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationPresenter.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.notifications;
+package com.achep.acdisplay.notifications;
 
 import android.app.Notification;
 import android.app.NotificationManager;
@@ -27,17 +27,17 @@ import android.os.Handler;
 import android.service.notification.StatusBarNotification;
 import android.util.Log;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.InactiveHoursHelper;
-import com.achep.activedisplay.NotificationIds;
-import com.achep.activedisplay.Operator;
-import com.achep.activedisplay.Presenter;
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.activemode.sensors.ProximitySensor;
-import com.achep.activedisplay.blacklist.AppConfig;
-import com.achep.activedisplay.blacklist.Blacklist;
-import com.achep.activedisplay.utils.PowerUtils;
+import com.achep.acdisplay.App;
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.InactiveHoursHelper;
+import com.achep.acdisplay.Operator;
+import com.achep.acdisplay.Presenter;
+import com.achep.acdisplay.activemode.sensors.ProximitySensor;
+import com.achep.acdisplay.blacklist.AppConfig;
+import com.achep.acdisplay.blacklist.Blacklist;
+import com.achep.acdisplay.utils.PackageUtils;
+import com.achep.acdisplay.utils.PowerUtils;
 
 import java.util.ArrayList;
 
@@ -77,7 +77,7 @@ public class NotificationPresenter implements NotificationList.Callback {
         public void onConfigChanged(Config config, String key, Object value) {
             boolean enabled;
             switch (key) {
-                case Config.KEY_LOW_PRIORITY_NOTIFICATIONS:
+                case Config.KEY_NOTIFY_LOW_PRIORITY:
                     handleLowPriorityNotificationsPreferenceChanged();
                     break;
                 case Config.KEY_UI_DYNAMIC_BACKGROUND_MODE:
@@ -180,7 +180,7 @@ public class NotificationPresenter implements NotificationList.Callback {
         mListeners.remove(listener);
     }
 
-    private NotificationPresenter(Context context) {
+    private NotificationPresenter() {
         mListeners = new ArrayList<>();
         mGList = new NotificationList(null);
         mLList = new NotificationList(this);
@@ -188,13 +188,13 @@ public class NotificationPresenter implements NotificationList.Callback {
         mConfig = Config.getInstance();
         mConfig.addOnConfigChangedListener(new ConfigListener());
 
-        mBlacklist = Blacklist.getInstance(context);
+        mBlacklist = Blacklist.getInstance();
         mBlacklist.registerListener(new BlacklistListener());
     }
 
-    public synchronized static NotificationPresenter getInstance(Context context) {
+    public synchronized static NotificationPresenter getInstance() {
         if (sNotificationPresenter == null) {
-            sNotificationPresenter = new NotificationPresenter(context);
+            sNotificationPresenter = new NotificationPresenter();
         }
         return sNotificationPresenter;
     }
@@ -208,7 +208,7 @@ public class NotificationPresenter implements NotificationList.Callback {
 
     public void postNotification(Context context, StatusBarNotification n, boolean silently) {
         logNotification(n, "posted");
-        OpenStatusBarNotification osbn = OpenStatusBarNotification.wrap(n);
+        OpenStatusBarNotification osbn = new OpenStatusBarNotification(n);
 
         boolean globalValid = isValidForGlobal(n);
         boolean localValid = globalValid && isValidForLocal(n);
@@ -245,13 +245,13 @@ public class NotificationPresenter implements NotificationList.Callback {
      */
     public void removeNotification(Context context, StatusBarNotification n) {
         logNotification(n, "removed");
-        OpenStatusBarNotification osbn = OpenStatusBarNotification.wrap(n);
+        OpenStatusBarNotification osbn = new OpenStatusBarNotification(n);
         mGList.remove(osbn);
         mLList.remove(osbn);
     }
 
     private void rebuildLocalList() {
-        if (Project.DEBUG) Log.d(TAG, "Rebuilding local list of notifications.");
+        if (Build.DEBUG) Log.d(TAG, "Rebuilding local list of notifications.");
 
         ArrayList<OpenStatusBarNotification> list = mLList.list();
         list.clear();
@@ -333,13 +333,14 @@ public class NotificationPresenter implements NotificationList.Callback {
     // //////////////////////////////////////////
 
     /**
-     * Starts {@link com.achep.activedisplay.activities.AcDisplayActivity activity} if active display
+     * Starts {@link com.achep.acdisplay.acdisplay.AcDisplayActivity activity} if active display
      * is enabled and screen is turned off and...
      */
     private boolean tryStartGui(Context context, OpenStatusBarNotification notification) {
         String packageName = notification.getStatusBarNotification().getPackageName();
         if (ProximitySensor.isNear()
                 || mConfig.isEnabled() == false
+                || mConfig.isNotifyWakingUp() == false
                 || mConfig.isEnabledOnlyWhileCharging() /* show only      */
                 && !PowerUtils.isPlugged(context)       /* while charging */
                 || mBlacklist.getAppConfig(packageName).isRestrictedReal())
@@ -391,17 +392,17 @@ public class NotificationPresenter implements NotificationList.Callback {
 
                 NotificationManager nm = (NotificationManager)
                         service.getSystemService(Context.NOTIFICATION_SERVICE);
-                nm.notify(NotificationIds.INIT_NOTIFICATION, builder.build());
+                nm.notify(App.ID_NOTIFY_INIT, builder.build());
             }
         }, 2500);
     }
 
     @SuppressWarnings("PointlessBooleanExpression")
-    void tryInit(NotificationHandleService service, StatusBarNotification n, StatusBarNotification[] activeNotifications) {
+    void tryInit(NotificationHandleService service, final StatusBarNotification n, StatusBarNotification[] activeNotifications) {
         if (mInitProcess != INITIALIZING_PROCESS_STARTED
                 // Is posted notification equals to init notification?
-                || n.getId() != NotificationIds.INIT_NOTIFICATION
-                || n.getPackageName().equals(Project.getPackageName(service)) == false) {
+                || n.getId() != App.ID_NOTIFY_INIT
+                || n.getPackageName().equals(PackageUtils.getName(service)) == false) {
             return;
         } else {
             mInitProcess = INITIALIZING_PROCESS_DONE;
@@ -414,7 +415,16 @@ public class NotificationPresenter implements NotificationList.Callback {
             notifyListeners(null, EVENT_BATH);
         }
 
-        NotificationHelper.dismissNotification(n);
+        new Handler().postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                NotificationHelper.dismissNotification(n);
+            }
+        }, 1000);
+    }
+
+    boolean isInitialized() {
+        return mInitProcess == INITIALIZING_PROCESS_DONE;
     }
 
 }
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationUtils.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationUtils.java
similarity index 98%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationUtils.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationUtils.java
index 627f3c47..4fda0832 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/NotificationUtils.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/NotificationUtils.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.notifications;
+package com.achep.acdisplay.notifications;
 
 import android.content.Context;
 import android.content.pm.PackageManager;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/OpenStatusBarNotification.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/OpenStatusBarNotification.java
similarity index 68%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/OpenStatusBarNotification.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/OpenStatusBarNotification.java
index 668aed9a..4d5c8fca 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/OpenStatusBarNotification.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/OpenStatusBarNotification.java
@@ -16,23 +16,20 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.notifications;
+package com.achep.acdisplay.notifications;
 
 import android.content.Context;
 import android.service.notification.StatusBarNotification;
 
-import com.achep.activedisplay.blacklist.AppConfig;
-import com.achep.activedisplay.blacklist.Blacklist;
-
 /**
  * Created by Artem on 23.01.14.
  */
 public class OpenStatusBarNotification {
 
-    private final StatusBarNotification mStatusBarNotification;
+    private StatusBarNotification mStatusBarNotification;
     private NotificationData mNotificationData;
 
-    private OpenStatusBarNotification(StatusBarNotification notification) {
+    public OpenStatusBarNotification(StatusBarNotification notification) {
         mStatusBarNotification = notification;
     }
 
@@ -41,27 +38,48 @@ public class OpenStatusBarNotification {
         mNotificationData.loadNotification(context, mStatusBarNotification, false);
     }
 
-    public static OpenStatusBarNotification wrap(StatusBarNotification notification) {
-        return new OpenStatusBarNotification(notification);
+    public StatusBarNotification getStatusBarNotification() {
+        return mStatusBarNotification;
     }
 
+    public NotificationData getNotificationData() {
+        return mNotificationData;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
     @Override
     public int hashCode() {
         return mStatusBarNotification.hashCode();
     }
 
+    /**
+     * {@inheritDoc}
+     */
     @SuppressWarnings("EqualsWhichDoesntCheckParameterClass")
     @Override
     public boolean equals(Object o) {
         return mStatusBarNotification.equals(o);
     }
 
-    public StatusBarNotification getStatusBarNotification() {
-        return mStatusBarNotification;
+    /**
+     * Dismisses this notification from system.
+     *
+     * @see NotificationHelper#dismissNotification(StatusBarNotification)
+     */
+    public void dismiss() {
+        NotificationHelper.dismissNotification(mStatusBarNotification);
     }
 
-    public NotificationData getNotificationData() {
-        return mNotificationData;
+    /**
+     * Performs a click on notification.<br/>
+     * To be clear it is not a a click but launching its content intent.
+     *
+     * @see NotificationHelper#startContentIntent(StatusBarNotification)
+     */
+    public void click() {
+        NotificationHelper.startContentIntent(mStatusBarNotification);
     }
 
 }
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/parser/Extractor.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/parser/Extractor.java
similarity index 90%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/parser/Extractor.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/parser/Extractor.java
index 163dfe9b..d2fddf48 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/parser/Extractor.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/parser/Extractor.java
@@ -17,12 +17,12 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.notifications.parser;
+package com.achep.acdisplay.notifications.parser;
 
 import android.content.Context;
 import android.service.notification.StatusBarNotification;
 
-import com.achep.activedisplay.notifications.NotificationData;
+import com.achep.acdisplay.notifications.NotificationData;
 
 /**
  * Created by Artem on 29.03.2014.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/parser/NativeExtractor.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/parser/NativeExtractor.java
similarity index 88%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/parser/NativeExtractor.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/parser/NativeExtractor.java
index d46ae3e1..948165db 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/parser/NativeExtractor.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/parser/NativeExtractor.java
@@ -16,19 +16,18 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.notifications.parser;
+package com.achep.acdisplay.notifications.parser;
 
 import android.annotation.TargetApi;
 import android.app.Notification;
 import android.content.Context;
-import android.os.Build;
 import android.os.Bundle;
 import android.service.notification.StatusBarNotification;
 import android.util.Log;
 
-import com.achep.activedisplay.Device;
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.notifications.NotificationData;
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.Device;
+import com.achep.acdisplay.notifications.NotificationData;
 
 /**
  * Created by Artem on 04.03.14.
@@ -37,10 +36,10 @@ public final class NativeExtractor implements Extractor {
 
     private static final String TAG = "NativeExtractor";
 
-    @TargetApi(Build.VERSION_CODES.KITKAT)
+    @TargetApi(android.os.Build.VERSION_CODES.KITKAT)
     @Override
     public NotificationData loadTexts(Context context, StatusBarNotification statusBarNotification, NotificationData data) {
-        if (Project.DEBUG) Log.d(TAG, "Extracting notification data via native API.");
+        if (Build.DEBUG) Log.d(TAG, "Extracting notification data via native API.");
         if (!Device.hasKitKatApi())
             throw new RuntimeException("You must run KitKat to be able to access to native things.");
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/parser/Utils.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/parser/Utils.java
similarity index 98%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/parser/Utils.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/parser/Utils.java
index 0fe7b160..b16bfa20 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/parser/Utils.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/parser/Utils.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.notifications.parser;
+package com.achep.acdisplay.notifications.parser;
 
 import android.text.Spannable;
 import android.text.SpannableString;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/parser/ViewExtractor.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/parser/ViewExtractor.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/parser/ViewExtractor.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/parser/ViewExtractor.java
index ca1276c1..f5ecabb4 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/notifications/parser/ViewExtractor.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/notifications/parser/ViewExtractor.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.notifications.parser;
+package com.achep.acdisplay.notifications.parser;
 
 import android.annotation.TargetApi;
 import android.app.Notification;
@@ -30,10 +30,9 @@ import android.view.ViewGroup;
 import android.widget.RemoteViews;
 import android.widget.TextView;
 
-import com.achep.activedisplay.Device;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.notifications.NotificationData;
-import com.achep.activedisplay.notifications.NotificationUtils;
+import com.achep.acdisplay.Device;
+import com.achep.acdisplay.notifications.NotificationData;
+import com.achep.acdisplay.notifications.NotificationUtils;
 
 import java.util.ArrayList;
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/providers/ToggleWidgetProvider.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/providers/ToggleWidgetProvider.java
similarity index 92%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/providers/ToggleWidgetProvider.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/providers/ToggleWidgetProvider.java
index 83768b15..2cc1f4b8 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/providers/ToggleWidgetProvider.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/providers/ToggleWidgetProvider.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.providers;
+package com.achep.acdisplay.providers;
 
 import android.app.PendingIntent;
 import android.appwidget.AppWidgetManager;
@@ -30,10 +30,10 @@ import android.net.Uri;
 import android.util.Log;
 import android.widget.RemoteViews;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.receiver.ReceiverActivity;
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.R;
+import com.achep.acdisplay.receiver.ReceiverActivity;
 
 /**
  * Toggle widget provider.
@@ -84,7 +84,7 @@ public class ToggleWidgetProvider extends AppWidgetProvider
         mConfig = Config.getInstance();
         mConfig.addOnConfigChangedListener(this);
 
-        if (Project.DEBUG) Log.d(TAG, "Toggle widget enabled");
+        if (Build.DEBUG) Log.d(TAG, "Toggle widget enabled");
     }
 
     private void onDisabledInternal(Context context) {
@@ -94,7 +94,7 @@ public class ToggleWidgetProvider extends AppWidgetProvider
 
         mConfig.removeOnConfigChangedListener(this);
 
-        if (Project.DEBUG) Log.d(TAG, "Toggle widget disabled");
+        if (Build.DEBUG) Log.d(TAG, "Toggle widget disabled");
     }
 
     private void updateWidgets(Context context) {
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/receiver/LocalReceiverActivity.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/receiver/LocalReceiverActivity.java
similarity index 91%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/receiver/LocalReceiverActivity.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/receiver/LocalReceiverActivity.java
index 1ce3c92b..247f0001 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/receiver/LocalReceiverActivity.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/receiver/LocalReceiverActivity.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.receiver;
+package com.achep.acdisplay.receiver;
 
 import android.app.Activity;
 import android.content.ComponentName;
@@ -26,10 +26,9 @@ import android.os.Bundle;
 import android.support.v4.content.LocalBroadcastManager;
 import android.util.Log;
 
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.utils.IntentUtils;
-import com.achep.activedisplay.utils.ToastUtils;
+import com.achep.acdisplay.utils.IntentUtils;
+import com.achep.acdisplay.utils.PackageUtils;
+import com.achep.acdisplay.utils.ToastUtils;
 
 /**
  * Created by Artem on 12.03.14.
@@ -80,7 +79,7 @@ public class LocalReceiverActivity extends Activity {
                 }
                 break;
             case HOST_UNINSTALL:
-                Uri packageUri = Uri.parse("package:" + Project.getPackageName(this));
+                Uri packageUri = Uri.parse("package:" + PackageUtils.getName(this));
                 launchIntent = new Intent(Intent.ACTION_UNINSTALL_PACKAGE, packageUri);
                 if (IntentUtils.hasActivityForThat(this, launchIntent)) {
                     startActivity(launchIntent);
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/receiver/Receiver.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/receiver/Receiver.java
similarity index 90%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/receiver/Receiver.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/receiver/Receiver.java
index e379ef04..3e181123 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/receiver/Receiver.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/receiver/Receiver.java
@@ -16,15 +16,15 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.receiver;
+package com.achep.acdisplay.receiver;
 
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
 import android.util.Log;
 
-import com.achep.activedisplay.activemode.ActiveModeService;
-import com.achep.activedisplay.services.KeyguardService;
+import com.achep.acdisplay.activemode.ActiveModeService;
+import com.achep.acdisplay.services.KeyguardService;
 
 /**
  * Created by Artem on 11.03.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/receiver/ReceiverActivity.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/receiver/ReceiverActivity.java
similarity index 94%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/receiver/ReceiverActivity.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/receiver/ReceiverActivity.java
index 15b8673d..d25e5f1f 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/receiver/ReceiverActivity.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/receiver/ReceiverActivity.java
@@ -17,16 +17,15 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.receiver;
+package com.achep.acdisplay.receiver;
 
 import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
 import android.util.Log;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.utils.ToastUtils;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.utils.ToastUtils;
 
 /**
  * Created by Artem on 26.03.2014.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/services/KeyguardService.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/services/KeyguardService.java
similarity index 91%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/services/KeyguardService.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/services/KeyguardService.java
index e59b26c3..5b11d585 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/services/KeyguardService.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/services/KeyguardService.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.services;
+package com.achep.acdisplay.services;
 
 import android.app.ActivityManager;
 import android.app.Notification;
@@ -31,14 +31,14 @@ import android.os.SystemClock;
 import android.telephony.TelephonyManager;
 import android.util.Log;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.NotificationIds;
-import com.achep.activedisplay.Presenter;
-import com.achep.activedisplay.Project;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.activities.AcDisplayActivity;
-import com.achep.activedisplay.settings.Settings;
-import com.achep.activedisplay.utils.PowerUtils;
+import com.achep.acdisplay.App;
+import com.achep.acdisplay.Build;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.Presenter;
+import com.achep.acdisplay.acdisplay.AcDisplayActivity;
+import com.achep.acdisplay.settings.Settings;
+import com.achep.acdisplay.utils.PackageUtils;
+import com.achep.acdisplay.utils.PowerUtils;
 
 /**
  * Created by Artem on 16.02.14.
@@ -106,7 +106,7 @@ public class KeyguardService extends Service {
                     boolean becauseOfActivityLaunch =
                             now - activityChangeTime < ACTIVITY_LAUNCH_MAX_TIME
                                     && activityName != null && !activityName.startsWith(
-                                    Project.getPackageName(KeyguardService.this));
+                                    PackageUtils.getName(KeyguardService.this));
 
                     if (isCall || becauseOfIgnoringPolicy) {
                         sIgnoreTillTime = 0;
@@ -120,7 +120,7 @@ public class KeyguardService extends Service {
                         Presenter.getInstance().kill();
                     } else startGui();
 
-                    if (Project.DEBUG)
+                    if (Build.DEBUG)
                         Log.d(TAG, "Screen is on: is_call=" + isCall +
                                 " activity_flag=" + becauseOfActivityLaunch);
                     break;
@@ -143,7 +143,7 @@ public class KeyguardService extends Service {
 
     private void startMonitoringActivities() {
         stopMonitoringActivities();
-        if (Project.DEBUG) Log.d(TAG, "Starting to monitor activities.");
+        if (Build.DEBUG) Log.d(TAG, "Starting to monitor activities.");
 
         ActivityManager am = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
         mActivityMonitorThread = new ActivityMonitorThread(am);
@@ -152,7 +152,7 @@ public class KeyguardService extends Service {
 
     private void stopMonitoringActivities() {
         if (mActivityMonitorThread != null) {
-            if (Project.DEBUG) Log.d(TAG, "Stopping to monitor activities.");
+            if (Build.DEBUG) Log.d(TAG, "Stopping to monitor activities.");
 
             mActivityMonitorThread.running = false;
             mActivityMonitorThread.interrupt();
@@ -168,7 +168,7 @@ public class KeyguardService extends Service {
         intentFilter.setPriority(IntentFilter.SYSTEM_HIGH_PRIORITY - 1); // highest priority
         registerReceiver(mReceiver, intentFilter);
 
-        int notificationId = NotificationIds.LOCKSCREEN_NOTIFICATION;
+        int notificationId = App.ID_NOTIFY_KEYGUARD;
         Intent intent = new Intent(this, Settings.LockscreenSettingsActivity.class);
         PendingIntent pendingIntent = PendingIntent.getActivity(this,
                 notificationId, intent, PendingIntent.FLAG_UPDATE_CURRENT);
@@ -252,7 +252,7 @@ public class KeyguardService extends Service {
 
                 activityName = latestActivityName;
 
-                if (Project.DEBUG) Log.d(TAG, "Current latest activity is " + activityName);
+                if (Build.DEBUG) Log.d(TAG, "Current latest activity is " + activityName);
             }
         }
     }
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/ActiveFragment.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/ActiveFragment.java
similarity index 95%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/ActiveFragment.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/settings/ActiveFragment.java
index 2deb077b..c16ab46e 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/ActiveFragment.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/ActiveFragment.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.settings;
+package com.achep.acdisplay.settings;
 
 import android.app.ActionBar;
 import android.app.Activity;
@@ -26,9 +26,8 @@ import android.preference.Preference;
 import android.preference.PreferenceFragment;
 import android.widget.Switch;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.settings.enablers.ActiveModeEnabler;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.settings.enablers.ActiveModeEnabler;
 
 /**
  * Created by Artem on 09.02.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/InterfaceFragment.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/InterfaceFragment.java
similarity index 90%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/InterfaceFragment.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/settings/InterfaceFragment.java
index 30dbe635..a5b9e4bd 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/InterfaceFragment.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/InterfaceFragment.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.settings;
+package com.achep.acdisplay.settings;
 
 import android.content.Context;
 import android.os.Bundle;
@@ -25,9 +25,8 @@ import android.preference.MultiSelectListPreference;
 import android.preference.Preference;
 import android.preference.PreferenceFragment;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.Operator;
-import com.achep.activedisplay.R;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.Operator;
 
 import java.util.Collections;
 import java.util.HashSet;
@@ -47,6 +46,7 @@ public class InterfaceFragment extends PreferenceFragment implements
     private CheckBoxPreference mShadowToggle;
     private CheckBoxPreference mMirroredTimeoutToggle;
     private CheckBoxPreference mCircledIconToggle;
+    private CheckBoxPreference mBatteryAlwaysVisibleToggle;
     private MultiSelectListPreference mDynamicBackground;
 
     private boolean mBroadcasting;
@@ -66,12 +66,15 @@ public class InterfaceFragment extends PreferenceFragment implements
                 Config.KEY_UI_MIRRORED_TIMEOUT_BAR);
         mCircledIconToggle = (CheckBoxPreference) findPreference(
                 Config.KEY_UI_NOTIFY_CIRCLED_ICON);
+        mBatteryAlwaysVisibleToggle = (CheckBoxPreference) findPreference(
+                Config.KEY_UI_STATUS_BATTERY_ALWAYS_VISIBLE);
 
         mShowWallpaper.setOnPreferenceChangeListener(this);
         mShadowToggle.setOnPreferenceChangeListener(this);
         mDynamicBackground.setOnPreferenceChangeListener(this);
         mMirroredTimeoutToggle.setOnPreferenceChangeListener(this);
         mCircledIconToggle.setOnPreferenceChangeListener(this);
+        mBatteryAlwaysVisibleToggle.setOnPreferenceChangeListener(this);
     }
 
     @Override
@@ -84,6 +87,7 @@ public class InterfaceFragment extends PreferenceFragment implements
         updateShowShadowPreference(config);
         updateMirroredTimeoutPreference(config);
         updateCircledIconPreference(config);
+        updateBatteryAlwaysVisiblePreference(config);
         updateDynamicBackgroundPreference(config);
     }
 
@@ -110,6 +114,8 @@ public class InterfaceFragment extends PreferenceFragment implements
             config.setMirroredTimeoutProgressBarEnabled(context, (Boolean) newValue, this);
         } else if (preference == mCircledIconToggle) {
             config.setCircledLargeIconEnabled(context, (Boolean) newValue, this);
+        } else if (preference == mBatteryAlwaysVisibleToggle) {
+            config.setBatteryAlwaysVisible(context, (Boolean) newValue, this);
         } else if (preference == mDynamicBackground) {
             int mode = 0;
 
@@ -140,6 +146,9 @@ public class InterfaceFragment extends PreferenceFragment implements
             case Config.KEY_UI_NOTIFY_CIRCLED_ICON:
                 updateCircledIconPreference(config);
                 break;
+            case Config.KEY_UI_STATUS_BATTERY_ALWAYS_VISIBLE:
+                updateBatteryAlwaysVisiblePreference(config);
+                break;
             case Config.KEY_UI_DYNAMIC_BACKGROUND_MODE:
                 updateDynamicBackgroundPreference(config);
                 break;
@@ -162,6 +171,10 @@ public class InterfaceFragment extends PreferenceFragment implements
         updatePreference(mCircledIconToggle, config.isCircledLargeIconEnabled());
     }
 
+    private void updateBatteryAlwaysVisiblePreference(Config config) {
+        updatePreference(mBatteryAlwaysVisibleToggle, config.isBatteryAlwaysVisible());
+    }
+
     private void updatePreference(CheckBoxPreference preference, boolean checked) {
         mBroadcasting = true;
         preference.setChecked(checked);
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/LockscreenFragment.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/LockscreenFragment.java
similarity index 92%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/LockscreenFragment.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/settings/LockscreenFragment.java
index dfda8826..bc566a5a 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/LockscreenFragment.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/LockscreenFragment.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.settings;
+package com.achep.acdisplay.settings;
 
 import android.app.ActionBar;
 import android.app.Activity;
@@ -24,8 +24,7 @@ import android.os.Bundle;
 import android.preference.PreferenceFragment;
 import android.widget.Switch;
 
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.settings.enablers.LockscreenEnabler;
+import com.achep.acdisplay.settings.enablers.LockscreenEnabler;
 
 /**
  * Created by Artem on 09.02.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/MoreFragment.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/MoreFragment.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/MoreFragment.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/settings/MoreFragment.java
index 0833ba1d..00d6b81e 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/MoreFragment.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/MoreFragment.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.settings;
+package com.achep.acdisplay.settings;
 
 import android.os.Bundle;
 import android.preference.CheckBoxPreference;
@@ -24,10 +24,9 @@ import android.preference.ListPreference;
 import android.preference.Preference;
 import android.preference.PreferenceFragment;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.utils.DateUtils;
-import com.achep.activedisplay.utils.MathUtils;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.utils.DateUtils;
+import com.achep.acdisplay.utils.MathUtils;
 
 /**
  * Created by Artem on 09.02.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/NotificationFragment.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/NotificationFragment.java
similarity index 77%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/NotificationFragment.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/settings/NotificationFragment.java
index 961a6752..55fd129c 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/NotificationFragment.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/NotificationFragment.java
@@ -16,15 +16,14 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.settings;
+package com.achep.acdisplay.settings;
 
 import android.os.Bundle;
 import android.preference.CheckBoxPreference;
 import android.preference.Preference;
 import android.preference.PreferenceFragment;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.R;
+import com.achep.acdisplay.Config;
 
 /**
  * Created by Artem on 09.02.14.
@@ -34,6 +33,7 @@ public class NotificationFragment extends PreferenceFragment implements
         Config.OnConfigChangedListener {
 
     private CheckBoxPreference mLowPriorityPreference;
+    private CheckBoxPreference mWakeUpOnPreference;
 
     private boolean mBroadcasting;
 
@@ -43,9 +43,12 @@ public class NotificationFragment extends PreferenceFragment implements
         addPreferencesFromResource(R.xml.notification_settings);
 
         mLowPriorityPreference = (CheckBoxPreference) findPreference(
-                Config.KEY_LOW_PRIORITY_NOTIFICATIONS);
+                Config.KEY_NOTIFY_LOW_PRIORITY);
+        mWakeUpOnPreference = (CheckBoxPreference) findPreference(
+                Config.KEY_NOTIFY_WAKE_UP_ON);
 
         mLowPriorityPreference.setOnPreferenceChangeListener(this);
+        mWakeUpOnPreference.setOnPreferenceChangeListener(this);
     }
 
     @Override
@@ -55,6 +58,7 @@ public class NotificationFragment extends PreferenceFragment implements
         config.addOnConfigChangedListener(this);
 
         updateLowPriorityPreference(config);
+        updateWakeUpOnPreference(config);
     }
 
     @Override
@@ -73,6 +77,8 @@ public class NotificationFragment extends PreferenceFragment implements
         Config config = Config.getInstance();
         if (preference == mLowPriorityPreference) {
             config.setLowPriorityNotificationsAllowed(getActivity(), (Boolean) newValue, this);
+        } else if (preference == mWakeUpOnPreference) {
+            config.setWakeUpOnNotifyEnabled(getActivity(), (Boolean) newValue, this);
         } else
             return false;
         return true;
@@ -81,7 +87,10 @@ public class NotificationFragment extends PreferenceFragment implements
     @Override
     public void onConfigChanged(Config config, String key, Object value) {
         switch (key) {
-            case Config.KEY_LOW_PRIORITY_NOTIFICATIONS:
+            case Config.KEY_NOTIFY_LOW_PRIORITY:
+                updateLowPriorityPreference(config);
+                break;
+            case Config.KEY_NOTIFY_WAKE_UP_ON:
                 updateLowPriorityPreference(config);
                 break;
         }
@@ -91,6 +100,10 @@ public class NotificationFragment extends PreferenceFragment implements
         updatePreference(mLowPriorityPreference, config.isLowPriorityNotificationsAllowed());
     }
 
+    private void updateWakeUpOnPreference(Config config) {
+        updatePreference(mWakeUpOnPreference, config.isNotifyWakingUp());
+    }
+
     private void updatePreference(CheckBoxPreference preference, boolean checked) {
         mBroadcasting = true;
         preference.setChecked(checked);
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/Settings.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/Settings.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/Settings.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/settings/Settings.java
index 480e0b79..aaeb2bbf 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/Settings.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/Settings.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.settings;
+package com.achep.acdisplay.settings;
 
 import android.content.ComponentName;
 import android.content.Context;
@@ -41,10 +41,9 @@ import android.widget.ListAdapter;
 import android.widget.Switch;
 import android.widget.TextView;
 
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.settings.enablers.ActiveModeEnabler;
-import com.achep.activedisplay.settings.enablers.Enabler;
-import com.achep.activedisplay.settings.enablers.LockscreenEnabler;
+import com.achep.acdisplay.settings.enablers.ActiveModeEnabler;
+import com.achep.acdisplay.settings.enablers.Enabler;
+import com.achep.acdisplay.settings.enablers.LockscreenEnabler;
 
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
@@ -62,19 +61,19 @@ public class Settings extends PreferenceActivity {
     private static final String LOG_TAG = "Settings";
 
     private static final String META_DATA_KEY_HEADER_ID =
-            "com.achep.activedisplay.TOP_LEVEL_HEADER_ID";
+            "com.achep.acdisplay.TOP_LEVEL_HEADER_ID";
     private static final String META_DATA_KEY_FRAGMENT_CLASS =
-            "com.achep.activedisplay.FRAGMENT_CLASS";
+            "com.achep.acdisplay.FRAGMENT_CLASS";
     private static final String META_DATA_KEY_PARENT_TITLE =
-            "com.achep.activedisplay.PARENT_FRAGMENT_TITLE";
+            "com.achep.acdisplay.PARENT_FRAGMENT_TITLE";
     private static final String META_DATA_KEY_PARENT_FRAGMENT_CLASS =
-            "com.achep.activedisplay.PARENT_FRAGMENT_CLASS";
+            "com.achep.acdisplay.PARENT_FRAGMENT_CLASS";
 
     private static final String EXTRA_UI_OPTIONS = "settings:ui_options";
     private static final String EXTRA_CLEAR_UI_OPTIONS = "settings:remove_ui_options";
 
-    private static final String SAVE_KEY_CURRENT_HEADER = "com.achep.activedisplay.CURRENT_HEADER";
-    private static final String SAVE_KEY_PARENT_HEADER = "com.achep.activedisplay.PARENT_HEADER";
+    private static final String SAVE_KEY_CURRENT_HEADER = "com.achep.acdisplay.CURRENT_HEADER";
+    private static final String SAVE_KEY_PARENT_HEADER = "com.achep.acdisplay.PARENT_HEADER";
 
     private String mFragmentClass;
     private int mTopLevelHeaderId;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/SubSettings.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/SubSettings.java
similarity index 89%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/SubSettings.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/settings/SubSettings.java
index 8bbf9911..7a275c0a 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/SubSettings.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/SubSettings.java
@@ -16,12 +16,12 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.settings;
+package com.achep.acdisplay.settings;
 
 import android.app.FragmentManager;
 import android.util.Log;
 
-import com.achep.activedisplay.Project;
+import com.achep.acdisplay.Build;
 
 /**
  * Stub class for showing sub-settings; we can't use the main Settings class
@@ -39,7 +39,7 @@ public class SubSettings extends Settings {
 
     @Override
     protected boolean isValidFragment(String fragmentName) {
-        if (Project.DEBUG) Log.d("SubSettings", "Launching fragment " + fragmentName);
+        if (Build.DEBUG) Log.d("SubSettings", "Launching fragment " + fragmentName);
         return true;
     }
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/enablers/ActiveModeEnabler.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/enablers/ActiveModeEnabler.java
similarity index 95%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/enablers/ActiveModeEnabler.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/settings/enablers/ActiveModeEnabler.java
index 07cbf8c8..01aa1f41 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/enablers/ActiveModeEnabler.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/enablers/ActiveModeEnabler.java
@@ -16,13 +16,13 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.settings.enablers;
+package com.achep.acdisplay.settings.enablers;
 
 import android.content.Context;
 import android.widget.CompoundButton;
 import android.widget.Switch;
 
-import com.achep.activedisplay.Config;
+import com.achep.acdisplay.Config;
 
 /**
  * Created by Artem on 21.02.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/enablers/Enabler.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/enablers/Enabler.java
similarity index 95%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/enablers/Enabler.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/settings/enablers/Enabler.java
index 4faf2ed6..1a52132e 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/enablers/Enabler.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/enablers/Enabler.java
@@ -16,13 +16,13 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.settings.enablers;
+package com.achep.acdisplay.settings.enablers;
 
 import android.content.Context;
 import android.widget.CompoundButton;
 import android.widget.Switch;
 
-import com.achep.activedisplay.Config;
+import com.achep.acdisplay.Config;
 
 /**
  * Created by Artem on 21.02.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/enablers/LockscreenEnabler.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/enablers/LockscreenEnabler.java
similarity index 95%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/enablers/LockscreenEnabler.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/settings/enablers/LockscreenEnabler.java
index fd268f8e..bf187ebb 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/enablers/LockscreenEnabler.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/enablers/LockscreenEnabler.java
@@ -16,13 +16,13 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.settings.enablers;
+package com.achep.acdisplay.settings.enablers;
 
 import android.content.Context;
 import android.widget.CompoundButton;
 import android.widget.Switch;
 
-import com.achep.activedisplay.Config;
+import com.achep.acdisplay.Config;
 
 /**
  * Created by Artem on 21.02.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/preferences/InactiveHoursPreference.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/preferences/InactiveHoursPreference.java
similarity index 94%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/preferences/InactiveHoursPreference.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/settings/preferences/InactiveHoursPreference.java
index e97889d1..9dcb096d 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/preferences/InactiveHoursPreference.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/preferences/InactiveHoursPreference.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.settings.preferences;
+package com.achep.acdisplay.settings.preferences;
 
 import android.app.TimePickerDialog;
 import android.content.Context;
@@ -31,11 +31,10 @@ import android.widget.CheckBox;
 import android.widget.TextView;
 import android.widget.TimePicker;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.DialogHelper;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.utils.DateUtils;
-import com.achep.activedisplay.utils.MathUtils;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.DialogHelper;
+import com.achep.acdisplay.utils.DateUtils;
+import com.achep.acdisplay.utils.MathUtils;
 
 /**
  * Preference to configure timeouts.
@@ -140,4 +139,4 @@ public class InactiveHoursPreference extends DialogPreference implements View.On
         }, data.hours, data.minutes, true);
         timePickerDialog.show();
     }
-}
\ No newline at end of file
+}
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/preferences/TimeoutPreference.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/preferences/TimeoutPreference.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/preferences/TimeoutPreference.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/settings/preferences/TimeoutPreference.java
index 4aafe272..798ef096 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/settings/preferences/TimeoutPreference.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/settings/preferences/TimeoutPreference.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.settings.preferences;
+package com.achep.acdisplay.settings.preferences;
 
 import android.content.Context;
 import android.content.res.Resources;
@@ -30,9 +30,8 @@ import android.widget.CompoundButton;
 import android.widget.SeekBar;
 import android.widget.TextView;
 
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.DialogHelper;
-import com.achep.activedisplay.R;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.DialogHelper;
 
 import java.lang.ref.SoftReference;
 import java.lang.reflect.InvocationTargetException;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/AccessUtils.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/AccessUtils.java
similarity index 91%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/AccessUtils.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/utils/AccessUtils.java
index 7f3f184b..06b6b411 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/AccessUtils.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/AccessUtils.java
@@ -16,14 +16,14 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.utils;
+package com.achep.acdisplay.utils;
 
 import android.app.admin.DevicePolicyManager;
 import android.content.ComponentName;
 import android.content.Context;
 
-import com.achep.activedisplay.admin.AdminReceiver;
-import com.achep.activedisplay.notifications.NotificationHandleService;
+import com.achep.acdisplay.admin.AdminReceiver;
+import com.achep.acdisplay.notifications.NotificationHandleService;
 
 import java.lang.ref.WeakReference;
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/BitmapUtils.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/BitmapUtils.java
similarity index 99%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/BitmapUtils.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/utils/BitmapUtils.java
index 53676a30..67c24da2 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/BitmapUtils.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/BitmapUtils.java
@@ -17,16 +17,14 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.utils;
+package com.achep.acdisplay.utils;
 
 import android.graphics.Bitmap;
 import android.graphics.BitmapShader;
 import android.graphics.Canvas;
 import android.graphics.Color;
-import android.graphics.Matrix;
 import android.graphics.Paint;
 import android.graphics.Shader;
-import android.util.Log;
 
 /**
  * Created by Artem on 24.03.2014.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/DateUtils.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/DateUtils.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/DateUtils.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/utils/DateUtils.java
index ad9b26a3..bd388fad 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/DateUtils.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/DateUtils.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.utils;
+package com.achep.acdisplay.utils;
 
 import android.content.Context;
 import android.text.format.DateFormat;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/FileUtils.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/FileUtils.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/FileUtils.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/utils/FileUtils.java
index 611e26af..8b0ac3ed 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/FileUtils.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/FileUtils.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.utils;
+package com.achep.acdisplay.utils;
 
 import java.io.File;
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/IntentUtils.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/IntentUtils.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/IntentUtils.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/utils/IntentUtils.java
index 20d794d4..153125f4 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/IntentUtils.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/IntentUtils.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.utils;
+package com.achep.acdisplay.utils;
 
 import android.content.Context;
 import android.content.Intent;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/MathUtils.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/MathUtils.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/MathUtils.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/utils/MathUtils.java
index 1f22ea79..cac8eb1d 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/MathUtils.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/MathUtils.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.utils;
+package com.achep.acdisplay.utils;
 
 /**
  * Created by Artem on 03.01.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/NotificationIds.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/PackageUtils.java
similarity index 70%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/NotificationIds.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/utils/PackageUtils.java
index a04e50ec..4635df91 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/NotificationIds.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/PackageUtils.java
@@ -16,16 +16,20 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay;
+
+package com.achep.acdisplay.utils;
+
+import android.content.Context;
 
 /**
- * Created by Artem on 31.01.14.
+ * Created by achep on 12.05.14 for AcDisplay.
+ *
+ * @author Artem Chepurnoy
  */
-public class NotificationIds {
+public class PackageUtils {
 
-    public static final int LOCKSCREEN_NOTIFICATION = 1;
-    public static final int ACTIVE_MODE_NOTIFICATION = 2;
+    public static String getName(Context context) {
+        return context.getApplicationInfo().packageName;
+    }
 
-    public static final int INIT_NOTIFICATION = Integer.MAX_VALUE;
-    public static final int TEST_NOTIFICATION = 11;
 }
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/PendingIntentUtils.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/PendingIntentUtils.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/PendingIntentUtils.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/utils/PendingIntentUtils.java
index cf11a668..e78607af 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/PendingIntentUtils.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/PendingIntentUtils.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.utils;
+package com.achep.acdisplay.utils;
 
 import android.app.PendingIntent;
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/PowerUtils.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/PowerUtils.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/PowerUtils.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/utils/PowerUtils.java
index 728ef4c5..70b75053 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/PowerUtils.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/PowerUtils.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.utils;
+package com.achep.acdisplay.utils;
 
 import android.content.Context;
 import android.content.Intent;
@@ -24,8 +24,6 @@ import android.content.IntentFilter;
 import android.os.BatteryManager;
 import android.os.PowerManager;
 
-import com.achep.activedisplay.Device;
-
 /**
  * Helper class with utils related to power.
  *
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/ToastUtils.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/ToastUtils.java
similarity index 97%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/ToastUtils.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/utils/ToastUtils.java
index 42fec4de..b5bb4ba3 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/ToastUtils.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/ToastUtils.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.utils;
+package com.achep.acdisplay.utils;
 
 import android.content.Context;
 import android.widget.Toast;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/ViewUtils.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/ViewUtils.java
similarity index 99%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/ViewUtils.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/utils/ViewUtils.java
index aae67e5b..36ea9e58 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/utils/ViewUtils.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/utils/ViewUtils.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.utils;
+package com.achep.acdisplay.utils;
 
 import android.annotation.TargetApi;
 import android.graphics.Matrix;
@@ -27,7 +27,7 @@ import android.view.View;
 import android.view.ViewParent;
 import android.widget.TextView;
 
-import com.achep.activedisplay.Device;
+import com.achep.acdisplay.Device;
 
 import java.lang.reflect.Field;
 import java.lang.reflect.InvocationTargetException;
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/view/ElasticValue.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/view/ElasticValue.java
new file mode 100644
index 00000000..d7cb5219
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/view/ElasticValue.java
@@ -0,0 +1,205 @@
+/*
+ * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ */
+
+package com.achep.acdisplay.view;
+
+import android.os.Handler;
+import android.os.Message;
+import android.os.SystemClock;
+import android.view.View;
+
+import com.achep.acdisplay.utils.MathUtils;
+
+/**
+ * Created by achep on 14.05.14 for AcDisplay.
+ *
+ * @author Artem Chepurnoy
+ */
+public abstract class ElasticValue {
+
+    private static final int PERIOD = 16; // ~60 fps.
+
+    private float mMove;
+    private float mStrength;
+    private float mCenter;
+
+    private long mCurTime;
+
+    private boolean mBroadcasting;
+    private Listener mListener;
+
+    private final View mView;
+    private final float mDensity;
+    private final Handler mHandler = new Handler() {
+
+        @Override
+        public void handleMessage(Message msg) {
+            super.handleMessage(msg);
+
+            float force = mStrength;
+            float value = getValue() - mCenter + mMove + (mMove = 0);
+            if (value != 0f) {
+                if (Math.abs(value) < force) {
+                    setValue(0f);
+                    return;
+                }
+
+                int charge = MathUtils.charge(value);
+                setValue((Math.abs(value) - force) * charge);
+                sendEmptyMessageAtTime(0, (mCurTime += PERIOD));
+            }
+        }
+
+        private void setValue(float value) {
+            ElasticValue.this.setValue(value + mCenter);
+        }
+
+        private float getValue() {
+            return ElasticValue.this.getValue() - mCenter;
+        }
+
+    };
+
+    private void start() {
+        if (!mHandler.hasMessages(0)) {
+            mCurTime = SystemClock.uptimeMillis();
+            mHandler.sendEmptyMessage(0);
+        }
+    }
+
+    public void stop() {
+        mHandler.removeMessages(0);
+    }
+
+    /**
+     * Interface definition for a callback to be invoked
+     * when a view's param is changed.
+     */
+    public interface Listener {
+
+        /**
+         * Called on {@link #setValue(float) setting value}.
+         *
+         * @param view Changed view
+         */
+        public void onValueChanged(View view, float value);
+    }
+
+    public ElasticValue(View view, float strengthDpi) {
+        mDensity = view.getResources().getDisplayMetrics().density;
+        mView = view;
+
+        setStrength(strengthDpi);
+    }
+
+    /**
+     * Sets a callback to be invoked when a view's param is changed.
+     *
+     * @see Listener#onValueChanged(android.view.View, float)
+     */
+    public void setListener(Listener listener) {
+        mListener = listener;
+    }
+
+    /**
+     * @return the view set on creating instance.
+     */
+    public View getView() {
+        return mView;
+    }
+
+    /**
+     * Returns how powerful is the desire to reach {@link #setCenter(float) center}.
+     *
+     * @return dpi-per-second in normal mode.
+     * @see #setStrength(float)
+     */
+    public float getStrength() {
+        return mStrength / mDensity / PERIOD * 1000f;
+    }
+
+    public void reset() {
+        stop();
+        setValue(mCenter);
+    }
+
+    public void move(float value) {
+        mMove += value;
+        start();
+    }
+
+    /**
+     * Defines the neutral value.
+     *
+     * @see #setStrength(float)
+     */
+    public void setCenter(float center) {
+        mCenter = center;
+    }
+
+    /**
+     * Defines how powerful is the desire to reach {@link #setCenter(float) center}.
+     *
+     * @param strengthDpi dpi-per-second in normal mode.
+     * @see #getStrength()
+     * @see #setCenter(float)
+     */
+    public void setStrength(float strengthDpi) {
+        mStrength = strengthDpi * mDensity / 1000f * PERIOD;
+    }
+
+    public void setValue(float value) {
+
+        // Notify listeners about the change.
+        // Broadcasting check is here to prevent looping
+        // if setValue() is calling in listener.
+        if (!mBroadcasting && mListener != null) {
+            mBroadcasting = true;
+            mListener.onValueChanged(mView, value);
+            mBroadcasting = false;
+        }
+    }
+
+    public abstract float getValue();
+
+    /**
+     * Elastic setter of view's translation.
+     *
+     * @author Artem Chepurnoy
+     */
+    public static class TranslationX extends ElasticValue {
+
+        public TranslationX(View view, float strengthDpi) {
+            super(view, strengthDpi);
+        }
+
+        @Override
+        public void setValue(float value) {
+            getView().setTranslationX(value);
+            super.setValue(value);
+        }
+
+        @Override
+        public float getValue() {
+            return getView().getTranslationX();
+        }
+
+    }
+
+}
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/view/ForwardingLayout.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/view/ForwardingLayout.java
similarity index 98%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/view/ForwardingLayout.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/view/ForwardingLayout.java
index 2a48c62c..09e4cecc 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/view/ForwardingLayout.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/view/ForwardingLayout.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.view;
+package com.achep.acdisplay.view;
 
 import android.content.Context;
 import android.util.AttributeSet;
@@ -27,7 +27,7 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.widget.LinearLayout;
 
-import com.achep.activedisplay.utils.ViewUtils;
+import com.achep.acdisplay.utils.ViewUtils;
 
 /**
  * Created by achep on 26.04.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/view/ForwardingListener.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/view/ForwardingListener.java
similarity index 98%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/view/ForwardingListener.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/view/ForwardingListener.java
index 6ef30825..7f0c50e6 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/view/ForwardingListener.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/view/ForwardingListener.java
@@ -17,14 +17,14 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.view;
+package com.achep.acdisplay.view;
 
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewConfiguration;
 import android.view.ViewParent;
 
-import com.achep.activedisplay.utils.ViewUtils;
+import com.achep.acdisplay.utils.ViewUtils;
 
 /**
  * Abstract class that forwards touch events to a {@link ForwardingLayout}.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/view/NotifyingLayout.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/view/NotifyingLayout.java
similarity index 98%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/view/NotifyingLayout.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/view/NotifyingLayout.java
index dcea7ba8..58151a3a 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/view/NotifyingLayout.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/view/NotifyingLayout.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.view;
+package com.achep.acdisplay.view;
 
 import android.content.Context;
 import android.util.AttributeSet;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/CircleView.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/CircleView.java
similarity index 98%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/CircleView.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/CircleView.java
index 24296796..e18488dc 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/CircleView.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/CircleView.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.widgets;
+package com.achep.acdisplay.widgets;
 
 import android.content.Context;
 import android.content.res.Resources;
@@ -31,8 +31,7 @@ import android.view.MotionEvent;
 import android.view.View;
 import android.view.animation.AccelerateDecelerateInterpolator;
 
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.animations.CircleViewAnimation;
+import com.achep.acdisplay.animations.CircleViewAnimation;
 
 /**
  * Created by achep on 19.04.14.
@@ -175,6 +174,7 @@ public class CircleView extends View {
                 mPoint[1] = y;
                 mCanceled = false;
 
+                mHandler.removeCallbacks(mDelayedCancel);
                 mHandler.postDelayed(mDelayedCancel, 1000);
                 mCallback.onCircleEvent(mRadius, calculateRatio(), ACTION_START);
             case MotionEvent.ACTION_MOVE:
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/MediaWidget.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/MediaWidget.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/MediaWidget.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/MediaWidget.java
index 110c2765..f227ef7b 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/MediaWidget.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/MediaWidget.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.widgets;
+package com.achep.acdisplay.widgets;
 
 import android.content.Context;
 import android.util.AttributeSet;
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/NotificationIcon.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationIcon.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/NotificationIcon.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationIcon.java
index 9d8af571..9d3dde29 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/NotificationIcon.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationIcon.java
@@ -17,15 +17,15 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.widgets;
+package com.achep.acdisplay.widgets;
 
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.util.AttributeSet;
 import android.widget.ImageView;
 
-import com.achep.activedisplay.notifications.NotificationData;
-import com.achep.activedisplay.notifications.OpenStatusBarNotification;
+import com.achep.acdisplay.notifications.NotificationData;
+import com.achep.acdisplay.notifications.OpenStatusBarNotification;
 
 /**
  * Created by Artem on 25.03.2014.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/NotificationIconWidget.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationIconWidget.java
similarity index 88%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/NotificationIconWidget.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationIconWidget.java
index 3766eb14..8137af7a 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/NotificationIconWidget.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationIconWidget.java
@@ -16,17 +16,16 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.widgets;
+package com.achep.acdisplay.widgets;
 
 import android.content.Context;
 import android.util.AttributeSet;
 import android.widget.FrameLayout;
 import android.widget.TextView;
 
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.notifications.NotificationData;
-import com.achep.activedisplay.notifications.OpenStatusBarNotification;
-import com.achep.activedisplay.utils.ViewUtils;
+import com.achep.acdisplay.notifications.NotificationData;
+import com.achep.acdisplay.notifications.OpenStatusBarNotification;
+import com.achep.acdisplay.utils.ViewUtils;
 
 /**
  * Created by Artem on 12.01.14.
diff --git a/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationPreview.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationPreview.java
new file mode 100644
index 00000000..b91ad6c3
--- /dev/null
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationPreview.java
@@ -0,0 +1,114 @@
+/*
+ * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ */
+
+package com.achep.acdisplay.widgets;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.service.notification.StatusBarNotification;
+import android.text.TextUtils;
+import android.util.AttributeSet;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+
+import com.achep.acdisplay.notifications.NotificationData;
+import com.achep.acdisplay.notifications.OpenStatusBarNotification;
+
+/**
+ * Simple notification widget that shows the title of notification and
+ * its message.
+ *
+ * @see com.achep.acdisplay.widgets.NotificationWidget
+ * @author Artem Chepurnoy
+ */
+public class NotificationPreview extends RelativeLayout implements NotificationView {
+
+    private NotificationIcon mIcon;
+    private TextView mTitleTextView;
+    private TextView mMessageTextView;
+
+    private OpenStatusBarNotification mNotification;
+
+    public NotificationPreview(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    public NotificationPreview(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+    }
+
+    @Override
+    protected void onFinishInflate() {
+        super.onFinishInflate();
+
+        mIcon = (NotificationIcon) findViewById(R.id.icon);
+        mTitleTextView = (TextView) findViewById(R.id.title);
+        mMessageTextView = (TextView) findViewById(R.id.message);
+
+        mIcon.setNotificationIndicateReadStateEnabled(true);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public OpenStatusBarNotification getNotification() {
+        return mNotification;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public void setNotification(OpenStatusBarNotification osbn) {
+        mNotification = osbn;
+        if (osbn == null) {
+            // TODO: Hide everything or show a notice to user.
+            return;
+        }
+
+        StatusBarNotification sbn = osbn.getStatusBarNotification();
+        NotificationData data = osbn.getNotificationData();
+
+        CharSequence message = data.getLargeMessage();
+
+        // If message is empty hide the view to free space
+        // taken by margins.
+        if (!TextUtils.isEmpty(message)) {
+            mMessageTextView.setText(message);
+            mMessageTextView.setVisibility(VISIBLE);
+        } else {
+            mMessageTextView.setVisibility(GONE);
+        }
+
+        mTitleTextView.setText(data.titleText);
+
+        Bitmap bitmap = data.getCircleIcon();
+        if (bitmap == null) bitmap = sbn.getNotification().largeIcon;
+        if (bitmap != null) {
+
+            // Disable tracking notification's icon
+            // and set large icon.
+            mIcon.setNotification(null);
+            mIcon.setImageBitmap(bitmap);
+        } else {
+            mIcon.setNotification(osbn);
+        }
+    }
+}
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/NotificationView.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationView.java
similarity index 89%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/NotificationView.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationView.java
index 9f18e14a..0c3344ca 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/NotificationView.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationView.java
@@ -16,9 +16,9 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.widgets;
+package com.achep.acdisplay.widgets;
 
-import com.achep.activedisplay.notifications.OpenStatusBarNotification;
+import com.achep.acdisplay.notifications.OpenStatusBarNotification;
 
 /**
  * Created by Artem on 02.02.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/NotificationWidget.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationWidget.java
similarity index 82%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/NotificationWidget.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationWidget.java
index 935c596c..940d24cf 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/NotificationWidget.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/NotificationWidget.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.widgets;
+package com.achep.acdisplay.widgets;
 
 import android.annotation.TargetApi;
 import android.app.Notification;
@@ -37,13 +37,11 @@ import android.widget.LinearLayout;
 import android.widget.RelativeLayout;
 import android.widget.TextView;
 
-import com.achep.activedisplay.Device;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.notifications.NotificationData;
-import com.achep.activedisplay.notifications.NotificationUtils;
-import com.achep.activedisplay.notifications.OpenStatusBarNotification;
-import com.achep.activedisplay.utils.ViewUtils;
-import com.achep.activedisplay.view.NotifyingLayout;
+import com.achep.acdisplay.Device;
+import com.achep.acdisplay.notifications.NotificationData;
+import com.achep.acdisplay.notifications.NotificationUtils;
+import com.achep.acdisplay.notifications.OpenStatusBarNotification;
+import com.achep.acdisplay.utils.ViewUtils;
 
 /**
  * Simple notification widget that shows the title of notification,
@@ -86,14 +84,6 @@ public class NotificationWidget extends RelativeLayout implements NotificationVi
          * @param intent action's intent
          */
         void onActionButtonClick(View v, PendingIntent intent);
-
-        /**
-         * Called on dismiss notification button click.
-         *
-         * @param v clicked view
-         * @param osbn notification to dismiss
-         */
-        void onDismissButtonClick(View v, OpenStatusBarNotification osbn);
     }
 
     public NotificationWidget(Context context, AttributeSet attrs) {
@@ -126,30 +116,6 @@ public class NotificationWidget extends RelativeLayout implements NotificationVi
         mActionsContainer = (LinearLayout) findViewById(R.id.actions);
 
         mIcon.setNotificationIndicateReadStateEnabled(false);
-
-        NotifyingLayout dismissBtnContainer = (NotifyingLayout) findViewById(R.id.dismiss);
-        dismissBtnContainer.setAlpha(isPressed() ? 1f : 0f); // don't change to setting visibility.
-        dismissBtnContainer.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                if (mOnClickListener != null) {
-                    mOnClickListener.onDismissButtonClick(v, getNotification());
-                }
-            }
-        });
-        dismissBtnContainer.setOnPressStateChangedListener(
-                new NotifyingLayout.OnPressStateChangedListener() {
-                    @Override
-                    public void onPressStateChanged(NotifyingLayout view, boolean pressed) {
-                        // Toggle view's visibility on state change.
-                        if (pressed) {
-                            view.animate().alpha(1f);
-                        } else {
-                            view.animate().alpha(0f);
-                        }
-                    }
-                }
-        );
     }
 
     /**
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/ProgressBar.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/ProgressBar.java
similarity index 95%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/ProgressBar.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/ProgressBar.java
index f4bf379c..213872b1 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/ProgressBar.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/ProgressBar.java
@@ -17,15 +17,13 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.widgets;
+package com.achep.acdisplay.widgets;
 
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.graphics.Canvas;
 import android.util.AttributeSet;
 
-import com.achep.activedisplay.R;
-
 /**
  * {@inheritDoc}
  */
@@ -40,7 +38,7 @@ public class ProgressBar extends android.widget.ProgressBar {
          * Notification that the progress level has changed.
          *
          * @param progressBar The ProgressBar whose progress has changed
-         * @param progress    The current progress level. This will be in the range 0..{@link com.achep.activedisplay.widgets.ProgressBar#getMax()}}
+         * @param progress    The current progress level. This will be in the range 0..{@link com.achep.acdisplay.widgets.ProgressBar#getMax()}}
          */
         public void onProgressChanged(ProgressBar progressBar, int progress);
 
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/StatusTextView.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/StatusTextView.java
similarity index 66%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/StatusTextView.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/StatusTextView.java
index 529573fe..edc3768c 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/StatusTextView.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/StatusTextView.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.widgets;
+package com.achep.acdisplay.widgets;
 
 import android.content.BroadcastReceiver;
 import android.content.Context;
@@ -28,17 +28,18 @@ import android.text.format.DateFormat;
 import android.util.AttributeSet;
 import android.widget.TextView;
 
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.utils.PowerUtils;
+import com.achep.acdisplay.Config;
+import com.achep.acdisplay.utils.PowerUtils;
 
 import java.util.Calendar;
 
 /**
  * Created by Artem on 19.03.14.
  */
-public class StatusTextView extends TextView {
+public class StatusTextView extends TextView implements Config.OnConfigChangedListener {
 
-    private boolean mShowBattery;
+    private boolean mBatteryVisible;
+    private boolean mBatteryVisibleAlways;
     private int mBatteryLevel;
 
     private BroadcastReceiver mIntentReceiver = new BroadcastReceiver() {
@@ -58,7 +59,7 @@ public class StatusTextView extends TextView {
         }
     };
 
-    private String mFormat;
+    private String mDateFormat;
     private String mBatteryDateFormat;
 
     public StatusTextView(Context context) {
@@ -77,7 +78,7 @@ public class StatusTextView extends TextView {
     }
 
     private void init() {
-        mFormat = getResources().getString(R.string.status_format_date);
+        mDateFormat = getResources().getString(R.string.status_format_date);
         mBatteryDateFormat = getResources().getString(R.string.status_format_battery_plus_date);
     }
 
@@ -85,14 +86,21 @@ public class StatusTextView extends TextView {
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
 
+        Context context = getContext();
+        assert context != null;
+
         IntentFilter filter = new IntentFilter();
         filter.addAction(Intent.ACTION_DATE_CHANGED);
         filter.addAction(Intent.ACTION_TIMEZONE_CHANGED);
         filter.addAction(Intent.ACTION_BATTERY_CHANGED);
-        getContext().registerReceiver(mIntentReceiver, filter, null, null);
+        context.registerReceiver(mIntentReceiver, filter, null, null);
+
+        Config config = Config.getInstance();
+        config.addOnConfigChangedListener(this);
+        setBatteryAlwaysVisible(config.isBatteryAlwaysVisible());
 
-        Intent batteryStats = getContext().registerReceiver(
-                null, new IntentFilter(Intent.ACTION_BATTERY_CHANGED));
+        IntentFilter intentFilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);
+        Intent batteryStats = context.registerReceiver(null, intentFilter);
 
         updateBatteryLevel(batteryStats);
         updateText();
@@ -102,6 +110,27 @@ public class StatusTextView extends TextView {
     protected void onDetachedFromWindow() {
         super.onDetachedFromWindow();
         getContext().unregisterReceiver(mIntentReceiver);
+        Config.getInstance().removeOnConfigChangedListener(this);
+    }
+
+    @Override
+    public void onConfigChanged(Config config, String key, Object value) {
+        switch (key) {
+            case Config.KEY_UI_STATUS_BATTERY_ALWAYS_VISIBLE:
+                setBatteryAlwaysVisible((boolean) value);
+                break;
+        }
+    }
+
+    /**
+     * By default battery status is visible when charge level is lower than 15% or
+     * device is plugged. This adds an ability to show battery constantly.
+     *
+     * @param visible {@code true} to show battery, {@code false} to make it eventual
+     */
+    private void setBatteryAlwaysVisible(boolean visible) {
+        mBatteryVisibleAlways = visible;
+        updateText();
     }
 
     private void updateBatteryLevel(Intent intent) {
@@ -113,17 +142,17 @@ public class StatusTextView extends TextView {
         int scale = intent.getIntExtra(BatteryManager.EXTRA_SCALE, -1);
 
         mBatteryLevel = Math.round(level / (float) scale * 100);
-        mShowBattery = mBatteryLevel < 15 || PowerUtils.isPlugged(intent);
+        mBatteryVisible = mBatteryLevel < 15 || PowerUtils.isPlugged(intent);
     }
 
     private void updateText() {
         final Calendar calendar = Calendar.getInstance();
         final CharSequence format;
 
-        if (mShowBattery) {
+        if (mBatteryVisible || mBatteryVisibleAlways) {
             format = String.format(mBatteryDateFormat, mBatteryLevel);
         } else {
-            format = mFormat;
+            format = mDateFormat;
         }
 
         setText(DateFormat.format(format, calendar));
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/TimeView.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/TimeView.java
similarity index 96%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/TimeView.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/TimeView.java
index e21142a2..e75b11cf 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/widgets/TimeView.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/widgets/TimeView.java
@@ -16,7 +16,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  * MA  02110-1301, USA.
  */
-package com.achep.activedisplay.widgets;
+package com.achep.acdisplay.widgets;
 
 import android.content.BroadcastReceiver;
 import android.content.Context;
@@ -26,7 +26,7 @@ import android.text.format.Time;
 import android.util.AttributeSet;
 import android.widget.TextView;
 
-import com.achep.activedisplay.utils.DateUtils;
+import com.achep.acdisplay.utils.DateUtils;
 
 /**
  * Created by Artem on 29.01.14.
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/xposed/ImmersiveModeDontPanic.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/xposed/ImmersiveModeDontPanic.java
similarity index 95%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/xposed/ImmersiveModeDontPanic.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/xposed/ImmersiveModeDontPanic.java
index 48272fcf..85e1a9c8 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/xposed/ImmersiveModeDontPanic.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/xposed/ImmersiveModeDontPanic.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.xposed;
+package com.achep.acdisplay.xposed;
 
 import android.util.Log;
 
@@ -48,7 +48,7 @@ public class ImmersiveModeDontPanic implements IXposedHookZygoteInit {
             @Override
             protected void beforeHookedMethod(XC_MethodHook.MethodHookParam param) throws Throwable {
                 String pkg = (String) param.args[0];
-                if (pkg != null && pkg.startsWith("com.achep.activedisplay")) {
+                if (pkg != null && pkg.startsWith("com.achep.acdisplay")) {
                     param.setResult(null);
 
                     Log.i(TAG, "An unconfirmation of AcDisplay\'s immersive mode passed to hell.");
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/xposed/OverrideHomeButton.java b/project/AcDisplay/src/main/java/com/achep/acdisplay/xposed/OverrideHomeButton.java
similarity index 98%
rename from project/ActiveDisplay/src/main/java/com/achep/activedisplay/xposed/OverrideHomeButton.java
rename to project/AcDisplay/src/main/java/com/achep/acdisplay/xposed/OverrideHomeButton.java
index d801b9bd..857a760d 100644
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/xposed/OverrideHomeButton.java
+++ b/project/AcDisplay/src/main/java/com/achep/acdisplay/xposed/OverrideHomeButton.java
@@ -17,7 +17,7 @@
  * MA  02110-1301, USA.
  */
 
-package com.achep.activedisplay.xposed;
+package com.achep.acdisplay.xposed;
 
 import android.content.BroadcastReceiver;
 import android.content.Context;
diff --git a/project/ActiveDisplay/src/main/java/org/apache/commons/lang/builder/EqualsBuilder.java b/project/AcDisplay/src/main/java/org/apache/commons/lang/builder/EqualsBuilder.java
similarity index 100%
rename from project/ActiveDisplay/src/main/java/org/apache/commons/lang/builder/EqualsBuilder.java
rename to project/AcDisplay/src/main/java/org/apache/commons/lang/builder/EqualsBuilder.java
diff --git a/project/ActiveDisplay/src/main/java/org/apache/commons/lang/builder/HashCodeBuilder.java b/project/AcDisplay/src/main/java/org/apache/commons/lang/builder/HashCodeBuilder.java
similarity index 100%
rename from project/ActiveDisplay/src/main/java/org/apache/commons/lang/builder/HashCodeBuilder.java
rename to project/AcDisplay/src/main/java/org/apache/commons/lang/builder/HashCodeBuilder.java
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/DonateDialog.java b/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/DonateDialog.java
deleted file mode 100644
index c1ac0826..00000000
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/DonateDialog.java
+++ /dev/null
@@ -1,117 +0,0 @@
-/*
- * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA  02110-1301, USA.
- */
-package com.achep.activedisplay.fragments;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.DialogFragment;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.net.Uri;
-import android.os.Bundle;
-import android.text.Html;
-
-import com.achep.activedisplay.DialogHelper;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.cryptocoin.Bitcoin;
-import com.achep.activedisplay.cryptocoin.Coin;
-import com.achep.activedisplay.utils.IntentUtils;
-
-/**
- * Donation dialog fragment.
- * <p/>
- * Provides an description of cryptocoin and ability
- * to donate via any cryptocoin or PayPal.
- */
-public class DonateDialog extends DialogFragment {
-
-    private static final String PAYPAL_DONATION_URL =
-            "http://goo.gl/UrecGo"; // shortened link to be able to get some stats
-
-    private static class OnClickIntentLauncher implements DialogInterface.OnClickListener {
-
-        private final Context mContext;
-        private final Intent mIntent;
-
-        public OnClickIntentLauncher(Context context, Intent intent) {
-            mContext = context;
-            mIntent = intent;
-        }
-
-        @Override
-        public void onClick(DialogInterface dialogInterface, int i) {
-            if (IntentUtils.hasActivityForThat(mContext, mIntent)) {
-                mContext.startActivity(mIntent);
-            } else {
-                // TODO: Show toast message
-            }
-        }
-    }
-
-    @SuppressWarnings("ConstantConditions")
-    @Override
-    public Dialog onCreateDialog(Bundle savedInstanceState) {
-        Coin coin = new Bitcoin();
-        Activity activity = getActivity();
-
-        CharSequence messageText = Html.fromHtml(getString(R.string.donate_message,
-                getString(R.string.app_name),
-                coin.getUriBrowseWallet().toString(),
-                coin.getUriWiki().toString(),
-                getString(coin.getNameResource())));
-        OnClickIntentLauncher payPalClick = createBrowserClicker(Uri.parse(PAYPAL_DONATION_URL));
-
-        AlertDialog.Builder builder = new DialogHelper.Builder(getActivity())
-                .setIcon(coin.getIconResource())
-                .setTitle(R.string.donate_title)
-                .setMessage(messageText)
-                .wrap()
-                .setNegativeButton(R.string.close, null)
-                .setNeutralButton(R.string.donate_use_paypal, payPalClick);
-
-        final Intent paymentIntent = Coin.getPaymentIntent(coin);
-        if (IntentUtils.hasActivityForThat(activity, paymentIntent)) {
-
-            // There's a wallet installed so show donation button
-            // to make the process faster.
-            builder.setPositiveButton(R.string.donate, createClicker(paymentIntent));
-        } else {
-
-            // Show tutorial button if link is present because user
-            // probably doesn't know about cryptocoins.
-            Uri howToUri = coin.getUriTutorial();
-            if (howToUri != null) {
-                builder.setPositiveButton(R.string.donate_how_to, createBrowserClicker(howToUri));
-            }
-        }
-
-        return builder.create();
-    }
-
-    private OnClickIntentLauncher createClicker(Intent intent) {
-        return new OnClickIntentLauncher(getActivity(), intent);
-    }
-
-    private OnClickIntentLauncher createBrowserClicker(Uri uri) {
-        return createClicker(new Intent(Intent.ACTION_VIEW, uri));
-    }
-
-}
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/NewsDialog.java b/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/NewsDialog.java
deleted file mode 100644
index 16247444..00000000
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/NewsDialog.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA  02110-1301, USA.
- */
-
-package com.achep.activedisplay.fragments;
-
-import android.app.Dialog;
-import android.app.DialogFragment;
-import android.os.Bundle;
-import android.text.Html;
-
-import com.achep.activedisplay.DialogHelper;
-import com.achep.activedisplay.R;
-
-public class NewsDialog extends DialogFragment {
-
-    @Override
-    public Dialog onCreateDialog(Bundle savedInstanceState) {
-        return new DialogHelper.Builder(getActivity())
-                .setIcon(R.mipmap.ic_launcher)
-                .setTitle(AboutDialog.getVersionTitle(getActivity()))
-                .setMessage(Html.fromHtml(getString(R.string.news_message)))
-                .wrap()
-                .setPositiveButton(R.string.close, null)
-                .create();
-    }
-
-}
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/components/MusicFragment.java b/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/components/MusicFragment.java
deleted file mode 100644
index 2c7dd560..00000000
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/components/MusicFragment.java
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA  02110-1301, USA.
- */
-
-package com.achep.activedisplay.fragments.components;
-
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageView;
-
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.fragments.AcDisplayFragment;
-
-/**
- * Created by Artem on 02.04.2014.
- */
-public class MusicFragment extends AcDisplayFragment.Widget {
-
-    public MusicFragment(AcDisplayFragment fragment) {
-        super(fragment);
-    }
-
-    @Override
-    public int getType() {
-        return AcDisplayFragment.SCENE_MUSIC_CONTROLS;
-    }
-
-    @Override
-    public View onCreateCollapsedView(LayoutInflater inflater, ViewGroup container) {
-        View view = inflater.inflate(R.layout.widget_notification_icon_fake, container, false);
-        assert view != null;
-
-        ImageView icon = (ImageView) view.findViewById(R.id.icon);
-        icon.setImageResource(R.drawable.stat_music);
-
-        return view;
-    }
-
-    @Override
-    public ViewGroup onCreateExpandedView(LayoutInflater inflater, ViewGroup container, ViewGroup sceneView) {
-        boolean initialize = sceneView == null;
-        if (initialize) {
-            sceneView = (ViewGroup) inflater.inflate(R.layout.acdisplay_scene_music, container, false);
-            assert sceneView != null;
-        }
-
-        if (initialize) {
-            // I do keep in mind that those settings are
-            // shared over all who uses this scene too.
-
-        }
-
-        return sceneView;
-    }
-
-    @Override
-    public void onExpandedViewAttached() {
-
-    }
-
-    @Override
-    public void onExpandedViewDetached() {
-
-    }
-}
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/components/NotificationFragment.java b/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/components/NotificationFragment.java
deleted file mode 100644
index 2ccae54a..00000000
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/components/NotificationFragment.java
+++ /dev/null
@@ -1,169 +0,0 @@
-/*
- * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA  02110-1301, USA.
- */
-
-package com.achep.activedisplay.fragments.components;
-
-import android.app.PendingIntent;
-import android.graphics.Bitmap;
-import android.service.notification.StatusBarNotification;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.achep.activedisplay.Config;
-import com.achep.activedisplay.Operator;
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.fragments.AcDisplayFragment;
-import com.achep.activedisplay.notifications.NotificationHelper;
-import com.achep.activedisplay.notifications.OpenStatusBarNotification;
-import com.achep.activedisplay.utils.BitmapUtils;
-import com.achep.activedisplay.utils.PendingIntentUtils;
-import com.achep.activedisplay.widgets.NotificationIconWidget;
-import com.achep.activedisplay.widgets.NotificationView;
-import com.achep.activedisplay.widgets.NotificationWidget;
-
-/**
- * Created by Artem on 02.04.2014.
- */
-public class NotificationFragment extends AcDisplayFragment.Widget implements NotificationView {
-
-    private static final String TAG = "NotificationFragment";
-
-    private NotificationIconWidget mIconView;
-    private OpenStatusBarNotification mNotification;
-    private NotificationWidget mNotifyWidget;
-
-    public NotificationFragment(AcDisplayFragment fragment) {
-        super(fragment);
-    }
-
-    @Override
-    public int getType() {
-        return AcDisplayFragment.SCENE_NOTIFICATION;
-    }
-
-    @Override
-    public View onCreateCollapsedView(LayoutInflater inflater, ViewGroup container) {
-        View view = inflater.inflate(R.layout.widget_notification_icon, container, false);
-        assert view != null;
-
-        mIconView = (NotificationIconWidget) view;
-        mIconView.setNotification(mNotification);
-        return view;
-    }
-
-    @Override
-    public ViewGroup onCreateExpandedView(LayoutInflater inflater, ViewGroup container, ViewGroup sceneView) {
-        boolean initialize = sceneView == null;
-        if (initialize) {
-            sceneView = (ViewGroup) inflater.inflate(R.layout.acdisplay_scene_notification, container, false);
-            assert sceneView != null;
-        }
-
-        mNotifyWidget = (NotificationWidget) sceneView.findViewById(R.id.notification);
-
-        if (initialize) {
-            // I do keep in mind that those settings are
-            // shared over all who uses this scene too.
-            mNotifyWidget.setOnClickListener(new NotificationWidget.OnClickListener() {
-
-                @Override
-                public void onClick(View v) {
-                    final OpenStatusBarNotification osbn = mNotifyWidget.getNotification();
-                    if (osbn != null) {
-                        getHostFragment().showMainWidget();
-                        getHostFragment().unlock(new Runnable() {
-                            @Override
-                            public void run() {
-                                NotificationHelper.startContentIntent(osbn);
-                            }
-                        }, false);
-                    }
-                }
-
-                @Override
-                public void onActionButtonClick(View v, final PendingIntent pendingIntent) {
-                    getHostFragment().showMainWidget();
-                    getHostFragment().unlock(new Runnable() {
-                        @Override
-                        public void run() {
-                            PendingIntentUtils.sendPendingIntent(pendingIntent);
-                        }
-                    }, false);
-                }
-
-                @Override
-                public void onDismissButtonClick(View v, OpenStatusBarNotification osbn) {
-                    if (osbn != null) {
-                        StatusBarNotification sbn = osbn.getStatusBarNotification();
-                        NotificationHelper.dismissNotification(sbn);
-                    }
-                }
-
-            });
-        }
-
-        return sceneView;
-    }
-
-    @Override
-    public void onExpandedViewAttached() {
-        mNotification.getNotificationData().markAsRead(true);
-        mNotifyWidget.setNotification(mNotification);
-        dispatchSetBackground();
-    }
-
-    /**
-     * Sets dynamic background
-     */
-    private void dispatchSetBackground() {
-        AcDisplayFragment fragment = getHostFragment();
-        Bitmap bitmap = mNotification.getNotificationData().getBackground();
-
-        boolean enabled = Operator.bitAnd(
-                fragment.getConfig().getDynamicBackgroundMode(),
-                Config.DYNAMIC_BG_NOTIFICATION_MASK);
-
-        if (bitmap == null || BitmapUtils.hasTransparentCorners(bitmap) || !enabled) {
-            fragment.dispatchSetBackground(null);
-            return;
-        }
-
-        fragment.dispatchSetBackground(bitmap);
-    }
-
-    @Override
-    public void setNotification(OpenStatusBarNotification notification) {
-        if (notification == null) {
-            throw new IllegalArgumentException("Notification may not be null!");
-        }
-
-        mNotification = notification;
-        mIconView.setNotification(notification);
-
-        if (isShown()) {
-            mNotifyWidget.setNotification(notification);
-        }
-    }
-
-    @Override
-    public OpenStatusBarNotification getNotification() {
-        return mNotification;
-    }
-}
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/components/UnlockFragment.java b/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/components/UnlockFragment.java
deleted file mode 100644
index e4423d02..00000000
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/fragments/components/UnlockFragment.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA  02110-1301, USA.
- */
-
-package com.achep.activedisplay.fragments.components;
-
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageView;
-
-import com.achep.activedisplay.R;
-import com.achep.activedisplay.fragments.AcDisplayFragment;
-
-/**
- * Created by Artem on 02.04.2014.
- */
-public class UnlockFragment extends AcDisplayFragment.Widget {
-
-    public UnlockFragment(AcDisplayFragment fragment) {
-        super(fragment);
-    }
-
-    @Override
-    public int getType() {
-        return AcDisplayFragment.SCENE_UNLOCK;
-    }
-
-    @Override
-    public View onCreateCollapsedView(LayoutInflater inflater, ViewGroup container) {
-        View view = inflater.inflate(R.layout.widget_notification_icon_fake, container, false);
-        assert view != null;
-
-        ImageView icon = (ImageView) view.findViewById(R.id.icon);
-        icon.setImageResource(R.drawable.stat_unlock);
-
-        return view;
-    }
-
-    @Override
-    public ViewGroup onCreateExpandedView(LayoutInflater inflater, ViewGroup container, ViewGroup sceneView) {
-        return null;
-    }
-}
diff --git a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/services/SendNotificationService.java b/project/ActiveDisplay/src/main/java/com/achep/activedisplay/services/SendNotificationService.java
deleted file mode 100644
index 0644779f..00000000
--- a/project/ActiveDisplay/src/main/java/com/achep/activedisplay/services/SendNotificationService.java
+++ /dev/null
@@ -1,127 +0,0 @@
-/*
- * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA  02110-1301, USA.
- */
-package com.achep.activedisplay.services;
-
-import android.app.AlarmManager;
-import android.app.Notification;
-import android.app.NotificationManager;
-import android.app.PendingIntent;
-import android.app.Service;
-import android.content.Context;
-import android.content.Intent;
-import android.graphics.BitmapFactory;
-import android.net.Uri;
-import android.os.IBinder;
-
-import com.achep.activedisplay.Device;
-
-/**
- * Created by Artem on 15.02.14.
- */
-public class SendNotificationService extends Service {
-
-    public static final String EXTRA_TITLE = "title";
-    public static final String EXTRA_TEXT = "text";
-    public static final String EXTRA_ID = "id";
-    public static final String EXTRA_ICON_RESOURCE = "icon";
-    public static final String EXTRA_LARGE_ICON_RESOURCE = "large_icon";
-    public static final String EXTRA_PRIORITY = "priority";
-    public static final String EXTRA_SOUND_URI = "sound_uri";
-    public static final String EXTRA_CONTENT_INTENT = "content_intent";
-
-    @Override
-    public int onStartCommand(Intent intent, int flags, int startId) {
-        handleIntent(intent);
-        return Service.START_STICKY;
-    }
-
-    private void handleIntent(Intent intent) {
-        CharSequence title = intent.getCharSequenceExtra(EXTRA_TITLE);
-        CharSequence text = intent.getCharSequenceExtra(EXTRA_TEXT);
-        Uri soundUri = intent.getParcelableExtra(EXTRA_SOUND_URI);
-        PendingIntent pi = intent.getParcelableExtra(EXTRA_CONTENT_INTENT);
-        int id = intent.getIntExtra(EXTRA_ID, 0);
-        int iconRes = intent.getIntExtra(EXTRA_ICON_RESOURCE, 0);
-        int largeIconRes = intent.getIntExtra(EXTRA_LARGE_ICON_RESOURCE, 0);
-        int priority = intent.getIntExtra(EXTRA_PRIORITY, Notification.PRIORITY_DEFAULT);
-
-        Notification.Builder builder = new Notification.Builder(this)
-                .setContentTitle(title)
-                .setContentText(text)
-                .setSmallIcon(iconRes)
-                .setPriority(priority)
-                .setAutoCancel(true)
-                .setSound(soundUri);
-
-        if (largeIconRes != 0) {
-            builder.setLargeIcon(BitmapFactory.decodeResource(getResources(), largeIconRes));
-        }
-        if (pi != null) {
-            builder.setContentIntent(pi);
-        }
-
-        NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
-        nm.notify(id, builder.build());
-
-        stopSelf();
-    }
-
-    @Override
-    public IBinder onBind(Intent intent) {
-        return null;
-    }
-
-    public static PendingIntent notify(Context context, Intent intent, int delayMillis) {
-        AlarmManager am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
-        PendingIntent pendingIntent = PendingIntent.getService(context,
-                intent.getIntExtra(EXTRA_ID, 0), intent,
-                PendingIntent.FLAG_UPDATE_CURRENT);
-        if (Device.hasKitKatApi()) {
-            am.setExact(AlarmManager.RTC_WAKEUP, System.currentTimeMillis() + delayMillis, pendingIntent);
-        } else {
-            am.set(AlarmManager.RTC_WAKEUP, System.currentTimeMillis() + delayMillis, pendingIntent);
-        }
-        return pendingIntent;
-    }
-
-    public static void cancel(Context context, PendingIntent pendingIntent) {
-        AlarmManager am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
-        am.cancel(pendingIntent);
-    }
-
-    /**
-     * Simple notification builder with all possible args.
-     *
-     * @see #notify(android.content.Context, android.content.Intent, int)
-     * @see #cancel(android.content.Context, android.app.PendingIntent)
-     */
-    public static Intent createNotificationIntent(Context context, String title, String text,
-                                                  int id, int iconRes, int largeIconRes, int priority,
-                                                  Uri soundUri, PendingIntent pi) {
-        return new Intent(context, SendNotificationService.class)
-                .putExtra(SendNotificationService.EXTRA_TITLE, title)
-                .putExtra(SendNotificationService.EXTRA_TEXT, text)
-                .putExtra(SendNotificationService.EXTRA_ID, id)
-                .putExtra(SendNotificationService.EXTRA_ICON_RESOURCE, iconRes)
-                .putExtra(SendNotificationService.EXTRA_LARGE_ICON_RESOURCE, largeIconRes)
-                .putExtra(SendNotificationService.EXTRA_PRIORITY, priority)
-                .putExtra(SendNotificationService.EXTRA_SOUND_URI, soundUri)
-                .putExtra(SendNotificationService.EXTRA_CONTENT_INTENT, pi);
-    }
-}
