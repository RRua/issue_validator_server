diff --git a/app/src/main/java/com/akansh/fileserversuit/Constants.java b/app/src/main/java/com/akansh/fileserversuit/Constants.java
index 3e00ce9..2dae6e5 100644
--- a/app/src/main/java/com/akansh/fileserversuit/Constants.java
+++ b/app/src/main/java/com/akansh/fileserversuit/Constants.java
@@ -28,14 +28,11 @@ public class Constants {
     public static final String ACTION_AUTH = "auth";
     public static final String ACTION_UPDATE_UI_STOP = "update_ui_stop";
 
-    public static final String FEEDBACK_MAIL = "akanshjaat@gmail.com";
+    public static final String FEEDBACK_MAIL = "akanshsirohi18@gmail.com";
     public static final String PRIVACY_POLICY_URL = "http://akanshsirohi.github.io/sharexpro_privacy_policy.html";
 
     // WEB INTERFACE VERSION CONTROL
     public static final String OLD_DIR = "sharex_v1_6";
     public static final String NEW_DIR = "sharex_v1_7";
-    public static final String ZIP_FILE = "sharex.zip";
-
-    // CHANGE THIS URL TO HOST YOUR OWN WEB INTERFACE
-    public static final String ZIP_DOWNLOAD_URL = "https://firebasestorage.googleapis.com/v0/b/mythoughts-4ed29.appspot.com/o/sharex_web_v1_7.zip?alt=media&token=608776d4-eb4c-4158-9244-fefa1ed64ec1";
+    public static final String ZIP_FILE_ASSETS = "sharex_web_v1_7.zip";
 }
diff --git a/app/src/main/java/com/akansh/fileserversuit/MainActivity.java b/app/src/main/java/com/akansh/fileserversuit/MainActivity.java
index 904feff..8face2a 100644
--- a/app/src/main/java/com/akansh/fileserversuit/MainActivity.java
+++ b/app/src/main/java/com/akansh/fileserversuit/MainActivity.java
@@ -421,15 +421,15 @@ public class MainActivity extends AppCompatActivity {
         });
         File f=new File("/data/data/"+getPackageName()+"/"+Constants.NEW_DIR+"/index.html");
         if(!f.exists()) {
-            ContentFetcher contentFetcher=new ContentFetcher(getPackageName());
-            contentFetcher.downloadListeners=new ContentFetcher.DownloadListeners() {
+            WebInterfaceSetup webInterfaceSetup=new WebInterfaceSetup(getPackageName(), this);
+            webInterfaceSetup.setupListeners=new WebInterfaceSetup.SetupListeners() {
                 @Override
-                public void onDownloadCompeted(boolean status) {
+                public void onSetupCompeted(boolean status) {
                     progress.cancel();
                     if(!status) {
                         AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);
                         builder.setTitle(utils.getSpannableFont("Error"));
-                        builder.setMessage(utils.getSpannableFont("Something went wrong!\nCheck your internet connectivity and try again later!"));
+                        builder.setMessage(utils.getSpannableFont("Something went wrong!"));
                         builder.setPositiveButton("OK", (dialog, id) -> {
                             dialog.dismiss();
                             finishAffinity();
@@ -451,7 +451,7 @@ public class MainActivity extends AppCompatActivity {
                 }
 
                 @Override
-                public void onDownloadStarted(boolean updating) {
+                public void onSetupStarted(boolean updating) {
                     progress=new ProgressDialog( MainActivity.this);
                     try {
                         progress.setTitle(utils.getSpannableFont(getResources().getString(R.string.app_name)));
@@ -471,7 +471,7 @@ public class MainActivity extends AppCompatActivity {
                     }
                 }
             };
-            contentFetcher.execute();
+            webInterfaceSetup.execute();
         }else{
             askIgnoreBatteryOptimizations();
         }
@@ -634,9 +634,7 @@ public class MainActivity extends AppCompatActivity {
             }
 
             @Override
-            public void onAnimationRepeat(Animation animation) {
-
-            }
+            public void onAnimationRepeat(Animation animation) {}
         });
         logger_wrapper.startAnimation(animation);
         utils.saveSetting(Constants.IS_LOGGER_VISIBLE,!utils.loadSetting(Constants.IS_LOGGER_VISIBLE));
diff --git a/app/src/main/java/com/akansh/fileserversuit/ContentFetcher.java b/app/src/main/java/com/akansh/fileserversuit/WebInterfaceSetup.java
similarity index 77%
rename from app/src/main/java/com/akansh/fileserversuit/ContentFetcher.java
rename to app/src/main/java/com/akansh/fileserversuit/WebInterfaceSetup.java
index d19dae9..2cf7ce4 100644
--- a/app/src/main/java/com/akansh/fileserversuit/ContentFetcher.java
+++ b/app/src/main/java/com/akansh/fileserversuit/WebInterfaceSetup.java
@@ -1,6 +1,7 @@
 package com.akansh.fileserversuit;
 
 import android.annotation.SuppressLint;
+import android.content.Context;
 import android.os.AsyncTask;
 import android.util.Log;
 
@@ -9,21 +10,21 @@ import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
 import java.io.InputStream;
-import java.net.URL;
+import java.io.OutputStream;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipInputStream;
 
-import javax.net.ssl.HttpsURLConnection;
-
-public class ContentFetcher extends AsyncTask<Void, Void, Void> {
+public class WebInterfaceSetup extends AsyncTask<Void, Void, Void> {
 
     String packageName;
+    Context ctx;
 
-    public ContentFetcher(String packageName) {
+    public WebInterfaceSetup(String packageName, Context ctx) {
         this.packageName = packageName;
+        this.ctx = ctx;
     }
 
-    DownloadListeners downloadListeners;
+    SetupListeners setupListeners;
     boolean status=false;
 
     @Override
@@ -31,9 +32,9 @@ public class ContentFetcher extends AsyncTask<Void, Void, Void> {
     protected void onPreExecute() {
         File pV=new File(String.format("/data/data/%s/%s/index.html",packageName,Constants.OLD_DIR));
         if(pV.exists()) {
-            downloadListeners.onDownloadStarted(true);
+            setupListeners.onSetupStarted(true);
         }else{
-            downloadListeners.onDownloadStarted(false);
+            setupListeners.onSetupStarted(false);
         }
     }
 
@@ -41,25 +42,24 @@ public class ContentFetcher extends AsyncTask<Void, Void, Void> {
     @SuppressLint("SdCardPath")
     protected Void doInBackground(Void... voids) {
         try {
-            URL file = new URL(Constants.ZIP_DOWNLOAD_URL);
-            HttpsURLConnection urlConnection = (HttpsURLConnection) file.openConnection();
-            urlConnection.connect();
-            InputStream inputStream = urlConnection.getInputStream();
-            File f=new File("/data/data/"+packageName,Constants.ZIP_FILE);
-            FileOutputStream stream = new FileOutputStream(f);
-            int bytesRead;
+            InputStream myInput =  ctx.getAssets().open(Constants.ZIP_FILE_ASSETS);
+            File outFile=new File("/data/data/"+packageName, Constants.ZIP_FILE_ASSETS);
+            OutputStream myOutput = new FileOutputStream(outFile);
             byte[] buffer = new byte[2048];
-            while ((bytesRead = inputStream.read(buffer)) != -1) {
-                stream.write(buffer, 0, bytesRead);
-
+            int length;
+            while ((length = myInput.read(buffer)) > 0) {
+                myOutput.write(buffer, 0, length);
             }
-            stream.close();
-            inputStream.close();
-            File zipFile = new File(String.format("/data/data/%s/%s",packageName,Constants.ZIP_FILE));
+            // Close the streams
+            myOutput.flush();
+            myOutput.close();
+            myInput.close();
+
+            File zipFile = new File(String.format("/data/data/%s/%s",packageName,Constants.ZIP_FILE_ASSETS));
             File destDir = new File(String.format("/data/data/%s/%s",packageName,Constants.NEW_DIR));
             status=unzip(zipFile, destDir);
             if(!status) {
-                f.delete();
+                outFile.delete();
                 Log.d(Constants.LOG_TAG,"Failed To Unzip File!");
             }
 
@@ -70,7 +70,7 @@ public class ContentFetcher extends AsyncTask<Void, Void, Void> {
                 deleteDirectory(pV);
             }
         }catch (Exception e) {
-            Log.d(Constants.LOG_TAG,e.getMessage());
+            Log.d(Constants.LOG_TAG,e.toString());
             status=false;
             Log.d(Constants.LOG_TAG,"Failed To Download File!");
         }
@@ -79,13 +79,13 @@ public class ContentFetcher extends AsyncTask<Void, Void, Void> {
 
     @Override
     protected void onPostExecute(Void aVoid) {
-        downloadListeners.onDownloadCompeted(status);
+        setupListeners.onSetupCompeted(status);
     }
 
 
-    public interface DownloadListeners {
-        void onDownloadCompeted(boolean status);
-        void onDownloadStarted(boolean updating);
+    public interface SetupListeners {
+        void onSetupCompeted(boolean status);
+        void onSetupStarted(boolean updating);
     }
 
     public boolean unzip(File zipFile, File targetDirectory) {
