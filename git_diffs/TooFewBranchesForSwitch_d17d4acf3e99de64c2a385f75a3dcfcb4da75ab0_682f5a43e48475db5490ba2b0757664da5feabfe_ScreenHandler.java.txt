diff --git a/project/app/src/main/java/com/achep/acdisplay/compat/SceneCompat.java b/project/app/src/main/java/com/achep/acdisplay/compat/SceneCompat.java
index 0381a167..5ecf354d 100644
--- a/project/app/src/main/java/com/achep/acdisplay/compat/SceneCompat.java
+++ b/project/app/src/main/java/com/achep/acdisplay/compat/SceneCompat.java
@@ -19,7 +19,6 @@
 package com.achep.acdisplay.compat;
 
 import android.transition.Scene;
-import android.view.View;
 import android.view.ViewGroup;
 
 import com.achep.base.Device;
diff --git a/project/app/src/main/java/com/achep/acdisplay/services/KeyguardService.java b/project/app/src/main/java/com/achep/acdisplay/services/KeyguardService.java
index d40f5551..bfb6b77a 100644
--- a/project/app/src/main/java/com/achep/acdisplay/services/KeyguardService.java
+++ b/project/app/src/main/java/com/achep/acdisplay/services/KeyguardService.java
@@ -239,7 +239,7 @@ public class KeyguardService extends SwitchService {
          * Checks what activity is the latest.
          */
         public void monitor() {
-            synchronized(this) {
+            synchronized (this) {
                 String topActivity = RunningTasks.getInstance().getRunningTasksTop(mContext);
                 if (topActivity != null && !topActivity.equals(topActivityName)) {
 
diff --git a/project/app/src/main/java/com/achep/acdisplay/services/activemode/handlers/InactiveTimeHandler.java b/project/app/src/main/java/com/achep/acdisplay/services/activemode/handlers/InactiveTimeHandler.java
deleted file mode 100644
index df466ddb..00000000
--- a/project/app/src/main/java/com/achep/acdisplay/services/activemode/handlers/InactiveTimeHandler.java
+++ /dev/null
@@ -1,141 +0,0 @@
-/*
- * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA  02110-1301, USA.
- */
-package com.achep.acdisplay.services.activemode.handlers;
-
-import android.content.Context;
-import android.os.SystemClock;
-import android.support.annotation.NonNull;
-import android.util.Log;
-
-import com.achep.acdisplay.Config;
-import com.achep.acdisplay.InactiveTimeHelper;
-import com.achep.acdisplay.services.activemode.ActiveModeHandler;
-import com.achep.base.Build;
-import com.achep.base.content.ConfigBase;
-
-import java.util.Timer;
-import java.util.TimerTask;
-
-/**
- * Prevents {@link com.achep.acdisplay.services.activemode.ActiveModeService} from listening to
- * sensors on inactive time (if corresponding option is enabled.)
- *
- * @author Artem Chepurnoy
- * @see com.achep.acdisplay.ui.fragments.settings.MoreSettings
- */
-// TODO: Implement event based inactive time handling.
-public final class InactiveTimeHandler extends ActiveModeHandler implements
-        ConfigBase.OnConfigChangedListener {
-
-    private static final int INACTIVE_HOURS_CHECK_PERIOD = 1000 * 60 * 5; // ms.
-
-    private Config mConfig;
-    private Timer mTimer;
-
-    public InactiveTimeHandler(@NonNull Context context, @NonNull Callback callback) {
-        super(context, callback);
-    }
-
-    @Override
-    public void onCreate() {
-        mConfig = Config.getInstance();
-        mConfig.registerListener(this);
-        updateState();
-    }
-
-    @Override
-    public void onDestroy() {
-        mConfig.unregisterListener(this);
-
-        if (mTimer != null) {
-            mTimer.cancel();
-            mTimer = null;
-        }
-    }
-
-    @Override
-    public boolean isActive() {
-        boolean enabled = mConfig.isInactiveTimeEnabled();
-        return !enabled || !InactiveTimeHelper.isInactiveTime(mConfig);
-    }
-
-    private void updateState() {
-        if (mTimer != null) mTimer.cancel();
-        if (mConfig.isInactiveTimeEnabled()) {
-
-            // Start a timer to monitor when inactive time
-            // will end or start. This is awful.
-            mTimer = new Timer();
-            mTimer.schedule(new TimerTask() {
-
-                private static final String TAG = "InactiveTimeTicker";
-
-                private boolean firstTick = true;
-                private boolean inactivePrev = false;
-
-                @Override
-                public void run() {
-                    boolean inactive = InactiveTimeHelper.isInactiveTime(mConfig);
-                    boolean changed = inactive != inactivePrev || firstTick;
-
-                    firstTick = false;
-
-                    if (Build.DEBUG)
-                        Log.d(TAG, "On timer tick: elapsed_real_time="
-                                + SystemClock.elapsedRealtime());
-
-                    if (changed) {
-                        inactivePrev = inactive;
-
-                        if (Build.DEBUG)
-                            Log.d(TAG, "is_inactive_time=" + inactive);
-
-                        if (inactive) {
-                            requestInactive();
-                        } else {
-                            requestActive();
-                        }
-                    }
-                }
-            }, 0, INACTIVE_HOURS_CHECK_PERIOD);
-        } else {
-            requestActive();
-        }
-    }
-
-    @Override
-    public void onConfigChanged(@NonNull ConfigBase configBase,
-                                @NonNull String key,
-                                @NonNull Object value) {
-        Config config = (Config) configBase;
-        boolean enabled = config.isInactiveTimeEnabled();
-        switch (key) {
-            case Config.KEY_INACTIVE_TIME_FROM:
-            case Config.KEY_INACTIVE_TIME_TO:
-                if (!enabled) {
-                    break;
-                }
-
-                // Immediately update sensors' blocker.
-            case Config.KEY_INACTIVE_TIME_ENABLED:
-                updateState();
-                break;
-        }
-    }
-}
diff --git a/project/app/src/main/java/com/achep/acdisplay/services/activemode/handlers/ScreenHandler.java b/project/app/src/main/java/com/achep/acdisplay/services/activemode/handlers/ScreenHandler.java
deleted file mode 100644
index c6c2ad04..00000000
--- a/project/app/src/main/java/com/achep/acdisplay/services/activemode/handlers/ScreenHandler.java
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA  02110-1301, USA.
- */
-package com.achep.acdisplay.services.activemode.handlers;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.support.annotation.NonNull;
-
-import com.achep.acdisplay.services.activemode.ActiveModeHandler;
-import com.achep.base.utils.power.PowerUtils;
-
-/**
- * Prevents {@link com.achep.acdisplay.services.activemode.ActiveModeService} from listening to
- * sensors while screen is turned on.
- *
- * @author Artem Chepurnoy
- */
-public final class ScreenHandler extends ActiveModeHandler {
-
-    private final Receiver mReceiver = new Receiver();
-
-    private class Receiver extends BroadcastReceiver {
-
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            switch (intent.getAction()) {
-                case Intent.ACTION_SCREEN_ON:
-                    requestInactive();
-                    break;
-                case Intent.ACTION_SCREEN_OFF:
-                    requestActive();
-                    break;
-            }
-        }
-
-    }
-
-    public ScreenHandler(@NonNull Context context, @NonNull Callback callback) {
-        super(context, callback);
-    }
-
-    @Override
-    public void onCreate() {
-        IntentFilter intentFilter = new IntentFilter();
-        intentFilter.addAction(Intent.ACTION_SCREEN_ON);
-        intentFilter.addAction(Intent.ACTION_SCREEN_OFF);
-        intentFilter.setPriority(IntentFilter.SYSTEM_HIGH_PRIORITY - 1);
-        getContext().registerReceiver(mReceiver, intentFilter);
-    }
-
-    @Override
-    public void onDestroy() {
-        getContext().unregisterReceiver(mReceiver);
-    }
-
-    @Override
-    public boolean isActive() {
-        return !PowerUtils.isScreenOn(getContext());
-    }
-
-}
diff --git a/project/app/src/main/java/com/achep/acdisplay/services/activemode/handlers/WithoutNotifiesHandler.java b/project/app/src/main/java/com/achep/acdisplay/services/activemode/handlers/WithoutNotifiesHandler.java
deleted file mode 100644
index f0fc730b..00000000
--- a/project/app/src/main/java/com/achep/acdisplay/services/activemode/handlers/WithoutNotifiesHandler.java
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Copyright (C) 2014 AChep@xda <artemchep@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA  02110-1301, USA.
- */
-package com.achep.acdisplay.services.activemode.handlers;
-
-import android.content.Context;
-import android.support.annotation.NonNull;
-
-import com.achep.acdisplay.Config;
-import com.achep.acdisplay.notifications.NotificationPresenter;
-import com.achep.acdisplay.notifications.OpenNotification;
-import com.achep.acdisplay.services.activemode.ActiveModeHandler;
-import com.achep.base.content.ConfigBase;
-
-/**
- * Prevents {@link com.achep.acdisplay.services.activemode.ActiveModeService} from listening to
- * sensors while notification list is empty (if corresponding option is enabled.)
- *
- * @author Artem Chepurnoy
- * @see com.achep.acdisplay.ui.fragments.settings.ActiveModeSettings
- */
-public final class WithoutNotifiesHandler extends ActiveModeHandler implements
-        NotificationPresenter.OnNotificationListChangedListener,
-        ConfigBase.OnConfigChangedListener {
-
-    private Config mConfig;
-    private NotificationPresenter mNotificationPresenter;
-
-    public WithoutNotifiesHandler(@NonNull Context context, @NonNull Callback callback) {
-        super(context, callback);
-    }
-
-    @Override
-    public void onCreate() {
-        mConfig = Config.getInstance();
-        mConfig.registerListener(this);
-
-        mNotificationPresenter = NotificationPresenter.getInstance();
-        mNotificationPresenter.registerListener(this);
-    }
-
-    @Override
-    public void onDestroy() {
-        mConfig.unregisterListener(this);
-        mNotificationPresenter.unregisterListener(this);
-    }
-
-    @Override
-    public boolean isActive() {
-        boolean enabled = mConfig.isActiveModeWithoutNotifiesEnabled();
-        return enabled || mNotificationPresenter.size() > 0;
-    }
-
-    @Override
-    public void onConfigChanged(@NonNull ConfigBase configBase,
-                                @NonNull String key,
-                                @NonNull Object value) {
-        switch (key) {
-            case Config.KEY_ACTIVE_MODE_WITHOUT_NOTIFICATIONS:
-                if ((boolean) value) {
-                    requestActive();
-                } else {
-                    // If you've disabled the active mode, check the
-                    // amount of notifications and probably stop
-                    // listening.
-                    requestActive();
-                }
-                break;
-        }
-    }
-
-    @Override
-    public void onNotificationListChanged(@NonNull NotificationPresenter np,
-                                          OpenNotification osbn,
-                                          int event, boolean isLastEventInSequence) {
-        switch (event) {
-            case NotificationPresenter.EVENT_BATH:
-            case NotificationPresenter.EVENT_POSTED:
-            case NotificationPresenter.EVENT_REMOVED:
-                requestActive();
-                break;
-        }
-    }
-}
diff --git a/project/app/src/main/java/com/achep/acdisplay/ui/activities/MainActivity.java b/project/app/src/main/java/com/achep/acdisplay/ui/activities/MainActivity.java
index 32007fb6..a91596a9 100644
--- a/project/app/src/main/java/com/achep/acdisplay/ui/activities/MainActivity.java
+++ b/project/app/src/main/java/com/achep/acdisplay/ui/activities/MainActivity.java
@@ -28,15 +28,12 @@ import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.content.res.Resources;
 import android.graphics.BitmapFactory;
-import android.graphics.Typeface;
 import android.media.RingtoneManager;
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.PowerManager;
 import android.support.annotation.NonNull;
 import android.support.v7.app.ActionBarActivity;
-import android.text.SpannableStringBuilder;
-import android.text.style.StyleSpan;
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
@@ -48,16 +45,12 @@ import com.achep.acdisplay.Config;
 import com.achep.acdisplay.DialogHelper;
 import com.achep.acdisplay.R;
 import com.achep.acdisplay.utils.AccessUtils;
-import com.achep.base.Device;
 import com.achep.base.content.ConfigBase;
 import com.achep.base.ui.activities.ActivityBase;
 import com.achep.base.ui.widgets.SwitchBar;
 import com.achep.base.utils.PackageUtils;
-import com.achep.base.utils.ToastUtils;
 import com.achep.base.utils.ViewUtils;
 
-import static com.achep.base.Build.DEBUG;
-
 /**
  * Created by Artem on 21.01.14.
  */
diff --git a/project/app/src/main/java/com/achep/acdisplay/utils/tasks/RunningTasksJellyBean.java b/project/app/src/main/java/com/achep/acdisplay/utils/tasks/RunningTasksJellyBean.java
index f4d8ef5d..89178f76 100644
--- a/project/app/src/main/java/com/achep/acdisplay/utils/tasks/RunningTasksJellyBean.java
+++ b/project/app/src/main/java/com/achep/acdisplay/utils/tasks/RunningTasksJellyBean.java
@@ -38,7 +38,7 @@ class RunningTasksJellyBean extends RunningTasks {
      */
     @SuppressWarnings("deprecation")
     @Nullable
-    public String getRunningTasksTop(@NonNull Context context)  {
+    public String getRunningTasksTop(@NonNull Context context) {
         ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
         List<ActivityManager.RunningTaskInfo> tasks = am.getRunningTasks(1);
         return tasks == null || tasks.isEmpty() ? null : tasks.get(0).topActivity.getPackageName();
diff --git a/project/app/src/main/java/com/achep/base/ui/activities/SettingsActivity.java b/project/app/src/main/java/com/achep/base/ui/activities/SettingsActivity.java
index 028a3e5f..46d85e72 100644
--- a/project/app/src/main/java/com/achep/base/ui/activities/SettingsActivity.java
+++ b/project/app/src/main/java/com/achep/base/ui/activities/SettingsActivity.java
@@ -416,7 +416,8 @@ public abstract class SettingsActivity extends ActivityBase implements
         FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
         transaction.replace(R.id.main_content, f);
 
-        if (withTransition && Device.hasKitKatApi()) TransitionManager.beginDelayedTransition(mContent);
+        if (withTransition && Device.hasKitKatApi())
+            TransitionManager.beginDelayedTransition(mContent);
         if (addToBackStack) transaction.addToBackStack(SettingsActivity.BACK_STACK_PREFS);
         if (titleResId > 0) {
             transaction.setBreadCrumbTitle(titleResId);
diff --git a/project/app/src/main/java/com/achep/base/utils/smiley/SmileyParser.java b/project/app/src/main/java/com/achep/base/utils/smiley/SmileyParser.java
index a53fc471..760e4f25 100644
--- a/project/app/src/main/java/com/achep/base/utils/smiley/SmileyParser.java
+++ b/project/app/src/main/java/com/achep/base/utils/smiley/SmileyParser.java
@@ -18,10 +18,6 @@
 
 package com.achep.base.utils.smiley;
 
-import java.util.HashMap;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -31,6 +27,10 @@ import android.text.style.ImageSpan;
 
 import com.achep.acdisplay.R;
 
+import java.util.HashMap;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
 /**
  * A class for annotating a CharSequence with spans to convert textual emoticons
  * to graphical ones.
@@ -38,6 +38,7 @@ import com.achep.acdisplay.R;
 public class SmileyParser {
     // Singleton stuff
     private static SmileyParser sInstance;
+
     public static SmileyParser getInstance() {
         return sInstance;
     }
@@ -189,7 +190,7 @@ public class SmileyParser {
      *
      * @param text A CharSequence possibly containing emoticons
      * @return A CharSequence annotated with ImageSpans covering any
-     *         recognized emoticons.
+     * recognized emoticons.
      */
     public CharSequence addSmileySpans(@Nullable CharSequence text) {
         if (text == null) return null;
