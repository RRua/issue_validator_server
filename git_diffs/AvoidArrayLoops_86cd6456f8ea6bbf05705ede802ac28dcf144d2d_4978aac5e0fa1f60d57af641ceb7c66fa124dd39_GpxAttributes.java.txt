diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java
index 70021ce3..72569182 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsFileContentActivity.java
@@ -64,9 +64,10 @@ public class AbsFileContentActivity extends AbsDispatcher implements OnClickList
 
     protected EditorHelper edit;
 
+    /*
     public static class FileContent {
         
-    }
+    }*/
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -137,15 +138,15 @@ public class AbsFileContentActivity extends AbsDispatcher implements OnClickList
         };
 
         final TrackDescriptionView viewData[] = {
-                new SummaryListView(this, SOLID_KEY, INFO_ID_FILEVIEW, summaryData), 
+                new SummaryListView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_FILEVIEW, summaryData),
                 map,
-                new VerticalView(this, SOLID_KEY, INFO_ID_FILEVIEW, new TrackDescriptionView[] {
+                new VerticalView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_FILEVIEW, new TrackDescriptionView[] {
                         new DistanceAltitudeGraphView(this, SOLID_KEY),
                         new DistanceSpeedGraphView(this, SOLID_KEY)
                 })
         };   
 
-        return new MultiView(this, SOLID_KEY, INFO_ID_ALL, viewData);
+        return new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, viewData);
     }
 
 
@@ -174,12 +175,6 @@ public class AbsFileContentActivity extends AbsDispatcher implements OnClickList
     }
 
 
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-    }
-
-
     @Override
     public void onResumeWithService() {
         super.onResumeWithService();
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
index 72b274b5..f8509c41 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsGpxListActivity.java
@@ -21,6 +21,7 @@ import ch.bailu.aat.dispatcher.ContentSource;
 import ch.bailu.aat.dispatcher.CurrentLocationSource;
 import ch.bailu.aat.dispatcher.IteratorSource;
 import ch.bailu.aat.dispatcher.OverlaySource;
+import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.helpers.AppTheme;
 import ch.bailu.aat.helpers.FileAction;
 import ch.bailu.aat.helpers.file.FileIntent;
@@ -57,19 +58,17 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
     private String                      solid_key;
 
     private Iterator                    iteratorSimple = Iterator.NULL;
-    private IteratorSource              summary;
 
     private SolidDirectory              sdirectory;
 
-    private ImageButton                 selectView[] = new ImageButton[3], fileManager;
-    private OsmInteractiveView          map;
+    private final ImageButton[]         selectView = new ImageButton[3];
+    private ImageButton fileManager;
     private MultiView                   multiView;
 
 
     private GpxListView                 listView;
     private DbSynchronizerBusyIndicator busyControl;
 
-    private LinearLayout                contentView;
 
     public abstract void                   displayFile();
     public abstract File                   getDirectory();
@@ -82,13 +81,12 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-
         sdirectory = new SolidDirectory(this);
         sdirectory.setValue(getDirectory().getAbsolutePath());
         solid_key = AbsGpxListActivity.class.getSimpleName() +  "_" + sdirectory.getValue();
 
 
-        contentView=new ContentView(this);
+        final LinearLayout contentView = new ContentView(this);
         contentView.addView(createControlBar());
         contentView.addView(createMultiView());
         setContentView(contentView);
@@ -113,11 +111,11 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
 
 
     private MultiView createMultiView() {
-        map = new OsmInteractiveView(getServiceContext(), solid_key);
+        final OsmInteractiveView map = new OsmInteractiveView(getServiceContext(), solid_key);
 
         final OsmOverlay overlayList[] = {
                 new GpxOverlayListOverlay(map, getServiceContext()),
-                new GpxDynOverlay(map, getServiceContext(), INFO_ID_LIST_SUMMARY),
+                new GpxDynOverlay(map, getServiceContext(), GpxInformation.ID.INFO_ID_LIST_SUMMARY),
                 new FileControlBar(map, this),
                 new CurrentLocationOverlay(map),
                 new GridDynOverlay(map, getServiceContext()),
@@ -139,21 +137,22 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
         AppTheme.themify(label);
         label.setTextColor(AppTheme.getHighlightColor());
 
-        final TrackDescriptionView summary[] = {
+        final TrackDescriptionView filterLayout[] = {
                 new ViewWrapper(label),
                 new ViewWrapper(new DirectorySelection(map.map)),
-                new SummaryListView(this, solid_key, INFO_ID_LIST_SUMMARY, summaryData),
+                new SummaryListView(
+                        this, solid_key, GpxInformation.ID.INFO_ID_LIST_SUMMARY, summaryData),
         };
 
 
-        final TrackDescriptionView viewData[] = {
+        final TrackDescriptionView multiViewLayout[] = {
                 new ViewWrapper(listView),
                 map,
-                new VerticalLayoutView(this, solid_key, INFO_ID_ALL, summary),
+                new VerticalLayoutView(this, solid_key, GpxInformation.ID.INFO_ID_ALL, filterLayout),
         };
 
 
-        multiView = new MultiView(this, solid_key, INFO_ID_ALL, viewData);
+        multiView = new MultiView(this, solid_key, GpxInformation.ID.INFO_ID_ALL, multiViewLayout);
         return multiView;
     }
 
@@ -167,7 +166,7 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
                 multiView, this
         };
 
-        summary = new IteratorSource.Summary(getServiceContext());
+        final IteratorSource summary = new IteratorSource.Summary(getServiceContext());
 
         ContentSource[] source = new ContentSource[] {
                 new OverlaySource(getServiceContext()),
@@ -184,12 +183,11 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
 
     @Override
     public void onResumeWithService() {
-        super.onResumeWithService();
-
-
         iteratorSimple = new IteratorSimple(getServiceContext());
         listView.setAdapter(getServiceContext(), iteratorSimple);
         listView.setSelection(sdirectory.getPosition().getValue());
+
+        super.onResumeWithService();
     }
 
 
@@ -235,7 +233,7 @@ public abstract class AbsGpxListActivity extends AbsDispatcher implements OnItem
         iteratorSimple.moveToPosition(position);
 
         fileMenu = new FileMenu(new FileAction(this, iteratorSimple));
-        fileMenu.inflate(menu);
+        fileMenu.inflateWithHeader(menu);
         fileMenu.prepare(menu);
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsMenu.java b/app/src/main/java/ch/bailu/aat/activities/AbsMenu.java
index 67306465..0fc858b8 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsMenu.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsMenu.java
@@ -7,7 +7,6 @@ import android.view.MenuItem;
 import ch.bailu.aat.description.DescriptionInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.menus.OptionsMenu;
-import ch.bailu.aat.preferences.PreferenceLoadDefaults;
 
 public abstract class AbsMenu extends AbsServiceLink 
 implements DescriptionInterface{
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
index 8903af3e..67180006 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
@@ -20,6 +20,7 @@ import ch.bailu.aat.description.DescriptionInterface;
 import ch.bailu.aat.dispatcher.ContentDispatcher;
 import ch.bailu.aat.dispatcher.ContentSource;
 import ch.bailu.aat.dispatcher.CustomFileSource;
+import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.helpers.AbsTextBackup;
 import ch.bailu.aat.helpers.AppBroadcaster;
 import ch.bailu.aat.helpers.AppDirectory;
@@ -55,7 +56,8 @@ public abstract class AbsOsmApiActivity extends AbsDispatcher implements OnClick
     private OsmApiHelper       osmApi;
     private ProcessHandle      request=ProcessHandle.NULL;
 
-    private final LayoutParams layout= new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);;
+    private final LayoutParams layout =
+            new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
 
 
     @Override
@@ -135,7 +137,7 @@ public abstract class AbsOsmApiActivity extends AbsDispatcher implements OnClick
         AppTheme.themify(postLabel);
 
         list = new NodeListView(getServiceContext(),SOLID_KEY,
-                INFO_ID_FILEVIEW);
+                GpxInformation.ID.INFO_ID_FILEVIEW);
 
 
         view.addView(list,layout);
@@ -294,7 +296,6 @@ public abstract class AbsOsmApiActivity extends AbsDispatcher implements OnClick
         }
     }
 
-    @Override
-    public void onServicesUp(boolean firstRun) {}
+
 
 }
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsServiceLink.java b/app/src/main/java/ch/bailu/aat/activities/AbsServiceLink.java
index bd55fd6c..8e47c296 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsServiceLink.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsServiceLink.java
@@ -2,11 +2,11 @@ package ch.bailu.aat.activities;
 
 
 import android.os.Bundle;
-import ch.bailu.aat.gpx.GpxInformation;
+
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.ServiceLink;
 
-public abstract class AbsServiceLink extends AbsActivity implements GpxInformation.ID{
+public abstract class AbsServiceLink extends AbsActivity {
 
 
     private ServiceLink serviceLink=null;
@@ -54,9 +54,9 @@ public abstract class AbsServiceLink extends AbsActivity implements GpxInformati
     }
     
     
-    public void onResumeWithService() {};
-    public void onPauseWithService() {};
-    public void onServicesUp(boolean firstRun) {};
+    public void onResumeWithService() {}
+    public void onPauseWithService() {}
+    public void onServicesUp(boolean firstRun) {}
 
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/activities/ActivitySwitcher.java b/app/src/main/java/ch/bailu/aat/activities/ActivitySwitcher.java
index 9998f420..53404c2f 100644
--- a/app/src/main/java/ch/bailu/aat/activities/ActivitySwitcher.java
+++ b/app/src/main/java/ch/bailu/aat/activities/ActivitySwitcher.java
@@ -26,8 +26,8 @@ public class ActivitySwitcher {
     };
 
 
-    private int      activityLabel;
-    private Class<?> activityClass;
+    private final int      activityLabel;
+    private final Class<?> activityClass;
 
     public final static int cycable = 3; 
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java b/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java
index f7d340b6..f0336294 100644
--- a/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java
@@ -76,7 +76,7 @@ public class GpxEditorActivity extends AbsFileContentActivity {
 
         NodeListView wayList = new NodeListView(getServiceContext(),
                 SOLID_KEY,
-                INFO_ID_EDITOR_OVERLAY 
+                GpxInformation.ID.INFO_ID_EDITOR_OVERLAY
                 );
 
         TrackDescriptionView viewData[] = {
@@ -84,12 +84,13 @@ public class GpxEditorActivity extends AbsFileContentActivity {
                 wayList,
                 map,
 
-                new VerticalView(this, SOLID_KEY, INFO_ID_EDITOR_OVERLAY, new TrackDescriptionView[] {
+                new VerticalView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_EDITOR_OVERLAY, new TrackDescriptionView[] {
+                        new SummaryListView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_EDITOR_OVERLAY, summaryData),
                         new DistanceAltitudeGraphView(this, SOLID_KEY),
-                        new SummaryListView(this, SOLID_KEY, INFO_ID_EDITOR_OVERLAY, summaryData)})
+                        })
         };   
 
-        return new MultiView(this, SOLID_KEY, INFO_ID_ALL, viewData);
+        return new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, viewData);
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/GpxViewActivity.java b/app/src/main/java/ch/bailu/aat/activities/GpxViewActivity.java
index 1f870737..20e01b69 100644
--- a/app/src/main/java/ch/bailu/aat/activities/GpxViewActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/GpxViewActivity.java
@@ -31,7 +31,6 @@ import ch.bailu.aat.dispatcher.OverlaySource;
 import ch.bailu.aat.dispatcher.TrackerSource;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.helpers.AppLayout;
-import ch.bailu.aat.helpers.AppLog;
 import ch.bailu.aat.helpers.FileAction;
 import ch.bailu.aat.helpers.ToolTip;
 import ch.bailu.aat.menus.FileMenu;
@@ -59,7 +58,6 @@ public class GpxViewActivity extends AbsDispatcher implements OnClickListener {
     private static final String SOLID_KEY=GpxViewActivity.class.getSimpleName();
 
 
-    private LinearLayout contentView;
 
     private ImageButton        nextView, fileOperation, copyTo;
     private BusyButton         busyButton;
@@ -88,8 +86,7 @@ public class GpxViewActivity extends AbsDispatcher implements OnClickListener {
         if (uri != null) {
             fileID = uri.toString();
 
-            AppLog.d(this, uri.toString());
-            contentView = new ContentView(this);
+            final LinearLayout contentView = new ContentView(this);
             contentView.addView(createButtonBar());
             multiView = createMultiView();
             contentView.addView(multiView);
@@ -152,15 +149,15 @@ public class GpxViewActivity extends AbsDispatcher implements OnClickListener {
         };
 
         final TrackDescriptionView viewData[] = {
-                new SummaryListView(this, SOLID_KEY, INFO_ID_FILEVIEW, summaryData), 
+                new SummaryListView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_FILEVIEW, summaryData),
                 map,
-                new VerticalView(this, SOLID_KEY, INFO_ID_FILEVIEW, new TrackDescriptionView[] {
+                new VerticalView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_FILEVIEW, new TrackDescriptionView[] {
                         new DistanceAltitudeGraphView(this, SOLID_KEY),
                         new DistanceSpeedGraphView(this, SOLID_KEY)
                 })
         };   
 
-        return new MultiView(this, SOLID_KEY, INFO_ID_ALL, viewData);
+        return new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, viewData);
     }
 
 
@@ -184,7 +181,7 @@ public class GpxViewActivity extends AbsDispatcher implements OnClickListener {
 
     @Override
     public void updateGpxContent(GpxInformation info) {
-        if (info.getID()== INFO_ID_FILEVIEW) {
+        if (info.getID()== GpxInformation.ID.INFO_ID_FILEVIEW) {
             map.frameBoundingBox(info.getBoundingBox());
         }
     }
diff --git a/app/src/main/java/ch/bailu/aat/activities/MainActivity.java b/app/src/main/java/ch/bailu/aat/activities/MainActivity.java
index 95d3b5f9..0dfa3da0 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MainActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MainActivity.java
@@ -43,7 +43,6 @@ implements AdapterView.OnItemSelectedListener, OnSharedPreferenceChangeListener
     private LinearLayout    contentView;
     private Spinner         presetSpinner; 
     private ListView        actionList;
-    private MyListAdapter   actionAdapter;
 
     private Storage storage; 
 
@@ -90,9 +89,8 @@ implements AdapterView.OnItemSelectedListener, OnSharedPreferenceChangeListener
 
 
     private ListView createActionList() {
-        actionAdapter = new MyListAdapter(this);
+        final MyListAdapter   actionAdapter = new MyListAdapter(this);
         actionList = new ListView(this);
-
         actionList.setOnItemClickListener(actionAdapter);
         actionList.setAdapter(actionAdapter);
 
@@ -127,8 +125,8 @@ implements AdapterView.OnItemSelectedListener, OnSharedPreferenceChangeListener
 
     private void initializeSpinner(Spinner spinner) {
         SolidPreset spreset = new SolidPreset(this);
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, 
-                android.R.layout.simple_spinner_item, 
+        ArrayAdapter<String> adapter = new ArrayAdapter<>(this,
+                android.R.layout.simple_spinner_item,
                 spreset.getStringArray());
         adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
 
@@ -167,7 +165,7 @@ implements AdapterView.OnItemSelectedListener, OnSharedPreferenceChangeListener
 
     private class MyListAdapter extends BaseAdapter implements OnItemClickListener {
         private static final float MARGIN = 15f;
-        private int margin;
+        private final int margin;
 
         public MyListAdapter(Context context) {
             margin=(int)AppLayout.toPixel(context, MARGIN);
diff --git a/app/src/main/java/ch/bailu/aat/activities/MapActivity.java b/app/src/main/java/ch/bailu/aat/activities/MapActivity.java
index 255c4478..9be929b3 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MapActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MapActivity.java
@@ -76,7 +76,7 @@ public class MapActivity extends AbsDispatcher implements OnClickListener{
         Intent intent = getIntent();
         Uri uri = intent.getData();
         
-        if (intent.getAction()==Intent.ACTION_VIEW && uri != null) {
+        if (intent.getAction().equals(Intent.ACTION_VIEW) && uri != null) {
             AppLog.d(uri, uri.toString());
             setMapCenterFromUri(uri);
             openQueryFromUri(uri);
diff --git a/app/src/main/java/ch/bailu/aat/activities/MapFeatureListActivity.java b/app/src/main/java/ch/bailu/aat/activities/MapFeatureListActivity.java
index 05dff870..433f3b81 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MapFeatureListActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MapFeatureListActivity.java
@@ -9,8 +9,6 @@ import ch.bailu.aat.helpers.file.FileAccess;
 import ch.bailu.aat.views.FeaturesList;
 
 public class MapFeatureListActivity extends AbsDispatcher {
-    private FeaturesList list;
-
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -23,8 +21,8 @@ public class MapFeatureListActivity extends AbsDispatcher {
     public void onServicesUp(boolean firstRun) {
         final Intent intent = getIntent();
         final String file = AppIntent.getFile(intent);
-        
-        list = new FeaturesList(getServiceContext(), new FileAccess(new File(file)));
+
+        FeaturesList list = new FeaturesList(getServiceContext(), new FileAccess(new File(file)));
         setContentView(list);
 
     }
diff --git a/app/src/main/java/ch/bailu/aat/activities/MapFeaturesActivity.java b/app/src/main/java/ch/bailu/aat/activities/MapFeaturesActivity.java
index de4c2a87..b4241605 100644
--- a/app/src/main/java/ch/bailu/aat/activities/MapFeaturesActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/MapFeaturesActivity.java
@@ -25,7 +25,6 @@ public class MapFeaturesActivity extends AbsDispatcher implements OnClickListene
     
     private FeaturesList list;
     
-    private ControlBar bar;
     private BusyButton download;
 
     
@@ -39,8 +38,8 @@ public class MapFeaturesActivity extends AbsDispatcher implements OnClickListene
         download = new BusyButton(this,R.drawable.go_bottom_inverse);
         ToolTip.set(download, R.string.tt_overpass_download_features);
         download.setOnClickListener(this);
-        
-        bar = new MainControlBar(getServiceContext(),6);
+
+        final ControlBar bar = new MainControlBar(getServiceContext(),6);
         
         bar.addView(download);
         bar.addViewIgnoreSize(AppTheme.getTitleTextView(this, R.string.query_features));
@@ -89,7 +88,7 @@ public class MapFeaturesActivity extends AbsDispatcher implements OnClickListene
         }
     }
     
-    private BroadcastReceiver onFileProcessed = new BroadcastReceiver() {
+    private final BroadcastReceiver onFileProcessed = new BroadcastReceiver() {
 
         @Override
         public void onReceive(Context context, Intent intent) {
diff --git a/app/src/main/java/ch/bailu/aat/activities/NodeDetailActivity.java b/app/src/main/java/ch/bailu/aat/activities/NodeDetailActivity.java
index 7349c56b..d313e9fa 100644
--- a/app/src/main/java/ch/bailu/aat/activities/NodeDetailActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/NodeDetailActivity.java
@@ -44,7 +44,6 @@ public class NodeDetailActivity extends AbsDispatcher implements OnClickListener
 
     private ImageButton nextNode, previousNode;
 
-    private LinearLayout contentView;
 
     private VerticalView       verticalView;
     private OsmInteractiveView map;
@@ -64,7 +63,7 @@ public class NodeDetailActivity extends AbsDispatcher implements OnClickListener
 
         fileID = getIntent().getStringExtra("ID");
 
-        contentView = new ContentView(this);
+        final LinearLayout contentView = new ContentView(this);
         contentView.addView(createButtonBar());
         verticalView = createVerticalView();
         contentView.addView(verticalView);
@@ -106,7 +105,7 @@ public class NodeDetailActivity extends AbsDispatcher implements OnClickListener
                 map,
         };   
 
-        return new VerticalView(this, SOLID_KEY, INFO_ID_ALL, viewData);
+        return new VerticalView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, viewData);
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java b/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java
index 9e51a002..631ac4b9 100644
--- a/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/PreferencesActivity.java
@@ -30,8 +30,7 @@ public class PreferencesActivity extends PreferenceActivity {
     
     private PreferenceScreen screen;
     private PreferenceCategory category;
-    private SolidPreset spreset;
-    private ArrayList<Closeable> toClose=new ArrayList<Closeable>();
+    private final ArrayList<Closeable> toClose= new ArrayList<>();
 
     private AppLog logger;
     
@@ -48,8 +47,8 @@ public class PreferencesActivity extends PreferenceActivity {
         
         addPreference(new IndexListPreference(this, new SolidUnit(this)));
         addPreference(new IntegerPreference(this, new SolidWeight(this)));
-        
-        spreset = new SolidPreset(this);
+
+        final SolidPreset spreset= new SolidPreset(this);
         for (int i=0; i<spreset.length(); i++) {
             addCategory(getString(R.string.p_preset) + " " + (i+1));
             addPreference(new IndexListPreference(this, new SolidMET(this,i)));
diff --git a/app/src/main/java/ch/bailu/aat/activities/SplitViewActivity.java b/app/src/main/java/ch/bailu/aat/activities/SplitViewActivity.java
index 6a08ee19..809ff0fc 100644
--- a/app/src/main/java/ch/bailu/aat/activities/SplitViewActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/SplitViewActivity.java
@@ -111,9 +111,9 @@ public class SplitViewActivity extends AbsDispatcher implements OnClickListener{
 
 
         TrackDescriptionView viewData[] = {
-                new CockpitView(this, SOLID_KEY, INFO_ID_TRACKER, cockpitA),
-                new CockpitView(this, SOLID_KEY, INFO_ID_TRACKER, cockpitB),
-                new VerticalView(this, SOLID_KEY, INFO_ID_TRACKER, new TrackDescriptionView[] {
+                new CockpitView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, cockpitA),
+                new CockpitView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, cockpitB),
+                new VerticalView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, new TrackDescriptionView[] {
                         new DistanceAltitudeGraphView(this, SOLID_KEY),
                         new DistanceSpeedGraphView(this, SOLID_KEY)}),   
                         mapViewAlt,
@@ -121,7 +121,7 @@ public class SplitViewActivity extends AbsDispatcher implements OnClickListener{
 
 
 
-        multiView = new MultiView(this, SOLID_KEY, INFO_ID_ALL, viewData);
+        multiView = new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, viewData);
 
 
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/TestActivity.java b/app/src/main/java/ch/bailu/aat/activities/TestActivity.java
index 1561ce4c..64852c85 100644
--- a/app/src/main/java/ch/bailu/aat/activities/TestActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/TestActivity.java
@@ -121,7 +121,7 @@ public class TestActivity extends AbsDispatcher implements OnClickListener {
 
 
     private MultiView createMultiView() {
-        wayList = new NodeListView(getServiceContext(), SOLID_KEY, INFO_ID_OVERLAY);
+        wayList = new NodeListView(getServiceContext(), SOLID_KEY, GpxInformation.ID.INFO_ID_OVERLAY);
 
         map=new OsmInteractiveView(getServiceContext(), SOLID_KEY);
         ViewWrapper list = new ViewWrapper(new TestList(this));
@@ -154,8 +154,8 @@ public class TestActivity extends AbsDispatcher implements OnClickListener {
                 new TrackSizeDescription(this),
         };   
 
-        gpsSummary= new SummaryListView(this, SOLID_KEY, INFO_ID_LOCATION, gpsData);
-        trackSummary = new SummaryListView(this, SOLID_KEY, INFO_ID_TRACKER, trackData);
+        gpsSummary= new SummaryListView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_LOCATION, gpsData);
+        trackSummary = new SummaryListView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, trackData);
 
         TrackDescriptionView viewData[] = {
                 map,
@@ -166,7 +166,7 @@ public class TestActivity extends AbsDispatcher implements OnClickListener {
         };   
 
 
-        return new MultiView(this, SOLID_KEY, INFO_ID_ALL, viewData);
+        return new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, viewData);
     }
 
 
@@ -232,7 +232,7 @@ public class TestActivity extends AbsDispatcher implements OnClickListener {
 
     private class TestList extends ListView 
     implements ListAdapter, android.widget.AdapterView.OnItemClickListener {
-        private final ArrayList<UnitTest>  tests = new ArrayList<UnitTest>();
+        private final ArrayList<UnitTest>  tests = new ArrayList<>();
 
         public TestList(Context context) {
             super(context);
diff --git a/app/src/main/java/ch/bailu/aat/activities/TrackerActivity.java b/app/src/main/java/ch/bailu/aat/activities/TrackerActivity.java
index 8fd65782..5447006b 100644
--- a/app/src/main/java/ch/bailu/aat/activities/TrackerActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/TrackerActivity.java
@@ -5,7 +5,7 @@ import android.view.View;
 import android.view.View.OnClickListener;
 import android.view.ViewGroup;
 import android.widget.ImageButton;
-import android.widget.LinearLayout;
+
 import ch.bailu.aat.R;
 import ch.bailu.aat.description.AltitudeDescription;
 import ch.bailu.aat.description.AverageSpeedDescription;
@@ -81,18 +81,18 @@ public class TrackerActivity extends AbsDispatcher implements OnClickListener{
                 new MaximumSpeedDescription(this),
         };
 
-        CockpitView cockpit = new CockpitView(this, SOLID_KEY, INFO_ID_TRACKER, data);
+        CockpitView cockpit = new CockpitView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, data);
 
         map = new OsmInteractiveView(getServiceContext(), SOLID_KEY);
-        TrackDescriptionView viewData[] = {
-                cockpit, 
+        TrackDescriptionView multiViewLayout[] = {
+                cockpit,
                 map,
-                new VerticalView(this, SOLID_KEY, INFO_ID_TRACKER, new TrackDescriptionView[] {
+                new VerticalView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_TRACKER, new TrackDescriptionView[] {
                         new DistanceAltitudeGraphView(this, SOLID_KEY),
                         new DistanceSpeedGraphView(this, SOLID_KEY)})
         };   
 
-        return new MultiView(this, SOLID_KEY, INFO_ID_ALL, viewData);
+        return new MultiView(this, SOLID_KEY, GpxInformation.ID.INFO_ID_ALL, multiViewLayout);
     }
 
     private ControlBar createButtonBar() {
diff --git a/app/src/main/java/ch/bailu/aat/coordinates/CH1903Coordinates.java b/app/src/main/java/ch/bailu/aat/coordinates/CH1903Coordinates.java
index c6caf867..efa6837c 100644
--- a/app/src/main/java/ch/bailu/aat/coordinates/CH1903Coordinates.java
+++ b/app/src/main/java/ch/bailu/aat/coordinates/CH1903Coordinates.java
@@ -155,7 +155,7 @@ public class CH1903Coordinates extends MeterCoordinates {
     }
 
 
-    private static BoundingBox SWISS_AREA = new BoundingBox(48300000,11200000,45600000,5000000);
+    private static final BoundingBox SWISS_AREA = new BoundingBox(48300000,11200000,45600000,5000000);
     public static boolean inSwitzerland(GeoPoint point) {
         return SWISS_AREA.contains(point);
     }
diff --git a/app/src/main/java/ch/bailu/aat/coordinates/UTMCoordinates.java b/app/src/main/java/ch/bailu/aat/coordinates/UTMCoordinates.java
index 677b7e6b..a973bb9d 100644
--- a/app/src/main/java/ch/bailu/aat/coordinates/UTMCoordinates.java
+++ b/app/src/main/java/ch/bailu/aat/coordinates/UTMCoordinates.java
@@ -50,9 +50,10 @@ public class UTMCoordinates extends MeterCoordinates {
     private final static double UTM_SCALE_FACTOR = 0.9996;
 
     
-    private int nzone, ezone;
+    private int nzone;
+    private final int ezone;
     double easting, northing;
-    private boolean south;
+    private final boolean south;
     
     
     public UTMCoordinates(double la, double lo) {
diff --git a/app/src/main/java/ch/bailu/aat/coordinates/WGS84Sexagesimal.java b/app/src/main/java/ch/bailu/aat/coordinates/WGS84Sexagesimal.java
index bb34a6af..9c91e4a6 100644
--- a/app/src/main/java/ch/bailu/aat/coordinates/WGS84Sexagesimal.java
+++ b/app/src/main/java/ch/bailu/aat/coordinates/WGS84Sexagesimal.java
@@ -40,7 +40,8 @@ public class WGS84Sexagesimal extends Coordinates {
     }
 
     
-    private Sexagesimal longitude,latitude;
+    private final Sexagesimal longitude;
+    private final Sexagesimal latitude;
     
     
     public WGS84Sexagesimal(double la, double lo) {
diff --git a/app/src/main/java/ch/bailu/aat/description/AccelerationDescription.java b/app/src/main/java/ch/bailu/aat/description/AccelerationDescription.java
index 39a29d5b..b06ee163 100644
--- a/app/src/main/java/ch/bailu/aat/description/AccelerationDescription.java
+++ b/app/src/main/java/ch/bailu/aat/description/AccelerationDescription.java
@@ -9,9 +9,9 @@ import ch.bailu.aat.R;
 
 public class AccelerationDescription extends FloatDescription {
 
-    private static String UNIT="m/s\u00B2";
+    private final static String UNIT="m/s\u00B2";
     
-    private Context context;
+    private final Context context;
     public AccelerationDescription(Context c) {
         super(c);
         context=c;
diff --git a/app/src/main/java/ch/bailu/aat/description/BearingDescription.java b/app/src/main/java/ch/bailu/aat/description/BearingDescription.java
index 92258cc9..817aa9a1 100644
--- a/app/src/main/java/ch/bailu/aat/description/BearingDescription.java
+++ b/app/src/main/java/ch/bailu/aat/description/BearingDescription.java
@@ -8,7 +8,7 @@ import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.R;
 
 public class BearingDescription extends DoubleDescription {
-    private Context context;
+    private final Context context;
     public BearingDescription(Context c) {
         super(c);
         context=c;
diff --git a/app/src/main/java/ch/bailu/aat/description/DescriptionInterface.java b/app/src/main/java/ch/bailu/aat/description/DescriptionInterface.java
index fc2723db..ef4c8d47 100644
--- a/app/src/main/java/ch/bailu/aat/description/DescriptionInterface.java
+++ b/app/src/main/java/ch/bailu/aat/description/DescriptionInterface.java
@@ -4,5 +4,5 @@ import ch.bailu.aat.gpx.GpxInformation;
 
 
 public interface DescriptionInterface {
-    public void updateGpxContent(GpxInformation info);
+    void updateGpxContent(GpxInformation info);
 }
diff --git a/app/src/main/java/ch/bailu/aat/description/LongitudeDescription.java b/app/src/main/java/ch/bailu/aat/description/LongitudeDescription.java
index ce1aaa05..46165856 100644
--- a/app/src/main/java/ch/bailu/aat/description/LongitudeDescription.java
+++ b/app/src/main/java/ch/bailu/aat/description/LongitudeDescription.java
@@ -8,7 +8,7 @@ import ch.bailu.aat.gpx.GpxInformation;
 
 import ch.bailu.aat.R;
 public class LongitudeDescription extends DoubleDescription {
-    public static String UNIT="\u00B0";
+    public static final String UNIT="\u00B0";
 
     public LongitudeDescription(Context context) {
         super(context);
diff --git a/app/src/main/java/ch/bailu/aat/description/SpeedDescription.java b/app/src/main/java/ch/bailu/aat/description/SpeedDescription.java
index b3ed8bbb..bacaf6f7 100644
--- a/app/src/main/java/ch/bailu/aat/description/SpeedDescription.java
+++ b/app/src/main/java/ch/bailu/aat/description/SpeedDescription.java
@@ -8,7 +8,7 @@ import ch.bailu.aat.preferences.SolidUnit;
 
 public abstract class SpeedDescription extends FloatDescription{
 
-    private SolidUnit sunit;
+    private final SolidUnit sunit;
     
     public SpeedDescription(Context context) {
         super(context);
diff --git a/app/src/main/java/ch/bailu/aat/description/StateDescription.java b/app/src/main/java/ch/bailu/aat/description/StateDescription.java
index 6239c6d7..a552161e 100644
--- a/app/src/main/java/ch/bailu/aat/description/StateDescription.java
+++ b/app/src/main/java/ch/bailu/aat/description/StateDescription.java
@@ -4,15 +4,14 @@ import android.content.Context;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.R;
 
-public abstract class StateDescription extends ContentDescription 
-implements GpxInformation.ID{
+public abstract class StateDescription extends ContentDescription {
 
     
 	public StateDescription(Context c) {
 		super(c);
 	}
 
-	private int state=STATE_OFF;
+	private int state=GpxInformation.ID.STATE_OFF;
 
     @Override
     public String getLabel() {
@@ -24,12 +23,12 @@ implements GpxInformation.ID{
         String value;
         
         switch (state) {
-        case STATE_NOACCESS: value=getString(R.string.gps_noaccess); break;
-        case STATE_NOSERVICE: value=getString(R.string.gps_nogps); break;
-        case STATE_ON: value=getString(R.string.on); break;
-        case STATE_OFF: value=getString(R.string.off); break;
-        case STATE_PAUSE: value=getString(R.string.status_paused); break;
-        case STATE_AUTOPAUSED: value=getString(R.string.status_autopaused); break;
+        case GpxInformation.ID.STATE_NOACCESS: value=getString(R.string.gps_noaccess); break;
+        case GpxInformation.ID.STATE_NOSERVICE: value=getString(R.string.gps_nogps); break;
+        case GpxInformation.ID.STATE_ON: value=getString(R.string.on); break;
+        case GpxInformation.ID.STATE_OFF: value=getString(R.string.off); break;
+        case GpxInformation.ID.STATE_PAUSE: value=getString(R.string.status_paused); break;
+        case GpxInformation.ID.STATE_AUTOPAUSED: value=getString(R.string.status_autopaused); break;
         default: value=getString(R.string.gps_wait); break;
         }
         return value;
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/ContentDispatcher.java b/app/src/main/java/ch/bailu/aat/dispatcher/ContentDispatcher.java
index f249a7cb..a83ba73d 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/ContentDispatcher.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/ContentDispatcher.java
@@ -10,14 +10,14 @@ public class ContentDispatcher implements DescriptionInterface, Closeable {
     public static final DescriptionInterface NULL_LIST[] = new DescriptionInterface[]{};
     public static final ContentDispatcher NULL=new ContentDispatcher() {
         @Override
-        public void close(){};
+        public void close(){}
     };
 
 
     private final DescriptionInterface TARGET_LIST[];
     
     private DescriptionInterface targetList[];
-    private ContentSource sourceList[];
+    private final ContentSource[] sourceList;
 
 
 
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/CurrentLocationSource.java b/app/src/main/java/ch/bailu/aat/dispatcher/CurrentLocationSource.java
index c2971a48..9493d18d 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/CurrentLocationSource.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/CurrentLocationSource.java
@@ -9,7 +9,7 @@ import ch.bailu.aat.services.ServiceContext;
 public class CurrentLocationSource extends ContentSource {
     private final ServiceContext scontext;
 
-    private BroadcastReceiver onLocationChange = new BroadcastReceiver () {
+    private final BroadcastReceiver onLocationChange = new BroadcastReceiver () {
         @Override
         public void onReceive(Context context, Intent intent) {
             updateGpxContent(scontext.getTrackerService().getLocation());
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/EditorSource.java b/app/src/main/java/ch/bailu/aat/dispatcher/EditorSource.java
index e51290aa..45264ad2 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/EditorSource.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/EditorSource.java
@@ -15,7 +15,7 @@ public class EditorSource extends ContentSource {
     private final EditorHelper edit;
 
 
-    private BroadcastReceiver onFileEdited = new BroadcastReceiver () {
+    private final BroadcastReceiver onFileEdited = new BroadcastReceiver () {
         @Override
         public void onReceive(Context context, Intent intent) {
             update(intent, edit.getInformation());
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/OverlaySource.java b/app/src/main/java/ch/bailu/aat/dispatcher/OverlaySource.java
index 70607089..b49160fb 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/OverlaySource.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/OverlaySource.java
@@ -21,13 +21,13 @@ import ch.bailu.aat.services.cache.GpxObjectStatic;
 import ch.bailu.aat.services.cache.ObjectHandle;
 
 
-public class OverlaySource extends ContentSource implements GpxInformation.ID {
+public class OverlaySource extends ContentSource {
     public static final int MAX_OVERLAYS=SolidOverlayFileList.MAX_OVERLAYS;
 
 
     private final ServiceContext scontext;
 
-    private OverlayInformation[] overlayList = new OverlayInformation[MAX_OVERLAYS];
+    private final OverlayInformation[] overlayList = new OverlayInformation[MAX_OVERLAYS];
 
     public OverlaySource(ServiceContext sc) {
         scontext=sc;
@@ -36,8 +36,7 @@ public class OverlaySource extends ContentSource implements GpxInformation.ID {
 
     @Override
     public void onPause() {
-        for (int i=0; i<overlayList.length; i++) 
-            overlayList[i].close();
+        for (OverlayInformation anOverlayList : overlayList) anOverlayList.close();
     }
 
 
@@ -46,7 +45,7 @@ public class OverlaySource extends ContentSource implements GpxInformation.ID {
     @Override
     public void onResume() {
         for (int i=0; i<MAX_OVERLAYS; i++)
-            overlayList[i]= new OverlayInformation(INFO_ID_OVERLAY+i);
+            overlayList[i]= new OverlayInformation(GpxInformation.ID.INFO_ID_OVERLAY+i);
     }
 
 
@@ -141,7 +140,7 @@ public class OverlaySource extends ContentSource implements GpxInformation.ID {
         }
 
         private void setBounding() {
-            GpxList list = ((GpxObject)handle).getGpxList();
+            GpxList list = handle.getGpxList();
             bounding = list.getDelta().getBoundingBox();
         }
 
diff --git a/app/src/main/java/ch/bailu/aat/dispatcher/TrackerSource.java b/app/src/main/java/ch/bailu/aat/dispatcher/TrackerSource.java
index 7eec357b..13165da7 100644
--- a/app/src/main/java/ch/bailu/aat/dispatcher/TrackerSource.java
+++ b/app/src/main/java/ch/bailu/aat/dispatcher/TrackerSource.java
@@ -8,21 +8,21 @@ import ch.bailu.aat.services.ServiceContext;
 
 public class TrackerSource extends ContentSource {
 
-    private ServiceContext scontext;
+    private final ServiceContext scontext;
 
     public TrackerSource (ServiceContext sc) {
         scontext = sc;
 
     }
 
-    private BroadcastReceiver onStateChanged = new BroadcastReceiver () {
+    private final BroadcastReceiver onStateChanged = new BroadcastReceiver () {
         @Override
         public void onReceive(Context context, Intent intent) {
             updateGpxContent(scontext.getTrackerService().getTrackerInformation());		}
 
     };
 
-    private BroadcastReceiver onTrackChanged = new BroadcastReceiver () {
+    private final BroadcastReceiver onTrackChanged = new BroadcastReceiver () {
         @Override
         public void onReceive(Context context, Intent intent) {
             updateGpxContent(scontext.getTrackerService().getTrackerInformation());
diff --git a/app/src/main/java/ch/bailu/aat/gpx/GpxAttributes.java b/app/src/main/java/ch/bailu/aat/gpx/GpxAttributes.java
index af4e9f7c..43742451 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/GpxAttributes.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/GpxAttributes.java
@@ -70,9 +70,7 @@ public class GpxAttributes {
         if (index == size()) {
             Tag[] newTagList = new Tag[size()+1];
 
-            for (int i=0; i< tagList.length; i++) {
-                newTagList[i]=tagList[i];
-            }
+            System.arraycopy(tagList, 0, newTagList, 0, tagList.length);
             tagList=newTagList;
         }
 
diff --git a/app/src/main/java/ch/bailu/aat/gpx/GpxInformation.java b/app/src/main/java/ch/bailu/aat/gpx/GpxInformation.java
index c962af52..0c5e33ab 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/GpxInformation.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/GpxInformation.java
@@ -7,7 +7,7 @@ public class GpxInformation extends GpxDataWrapper  {
     private final static String NULL_NAME="";
 
     
-    public interface ID {
+    public class ID {
         public final static int INFO_ID_ALL = 0;
         
         public final static int INFO_ID_LOCATION = 1;
diff --git a/app/src/main/java/ch/bailu/aat/gpx/GpxList.java b/app/src/main/java/ch/bailu/aat/gpx/GpxList.java
index bdd55080..e67044a1 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/GpxList.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/GpxList.java
@@ -1,6 +1,7 @@
 package ch.bailu.aat.gpx;
 
 import ch.bailu.aat.gpx.interfaces.GpxBigDeltaInterface;
+import ch.bailu.aat.gpx.interfaces.GpxType;
 import ch.bailu.aat.gpx.linked_list.List;
 import ch.bailu.aat.gpx.linked_list.Node;
 import ch.bailu.aat.gpx.segmented_list.SegmentNode;
@@ -8,8 +9,8 @@ import ch.bailu.aat.gpx.segmented_list.SegmentNodeFactory;
 import ch.bailu.aat.gpx.segmented_list.SegmentedList;
 
 public class GpxList {
-    public static final GpxList NULL_TRACK = new GpxList(GpxBigDeltaInterface.TRK);
-    public static final GpxList NULL_ROUTE = new GpxList(GpxBigDeltaInterface.RTE);
+    public static final GpxList NULL_TRACK = new GpxList(GpxType.TRK);
+    public static final GpxList NULL_ROUTE = new GpxList(GpxType.RTE);
 
     
     public GpxList(int type) {
diff --git a/app/src/main/java/ch/bailu/aat/gpx/GpxListIterator.java b/app/src/main/java/ch/bailu/aat/gpx/GpxListIterator.java
index 8ec6146d..85816141 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/GpxListIterator.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/GpxListIterator.java
@@ -28,7 +28,7 @@ public class GpxListIterator {
         }
     }
     
-    private GpxList track;
+    private final GpxList track;
 
     private Node point = new PointPrimerNode();
     private Node segment = new SegmentPrimerNode();
diff --git a/app/src/main/java/ch/bailu/aat/gpx/GpxNodeFinder.java b/app/src/main/java/ch/bailu/aat/gpx/GpxNodeFinder.java
index 5d0782ef..9782b191 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/GpxNodeFinder.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/GpxNodeFinder.java
@@ -15,10 +15,7 @@ public class GpxNodeFinder extends GpxListWalker {
 
     @Override
     public boolean doList(GpxList s) {
-        if (BoundingBox.doOverlap(s.getDelta().getBoundingBox(), bounding)) {
-            return true;
-        }
-        return false;
+        return BoundingBox.doOverlap(s.getDelta().getBoundingBox(), bounding);
     }
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/gpx/GpxPointNode.java b/app/src/main/java/ch/bailu/aat/gpx/GpxPointNode.java
index 9cd9f8f3..e7a62030 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/GpxPointNode.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/GpxPointNode.java
@@ -55,11 +55,11 @@ public abstract class GpxPointNode extends Node implements GpxDeltaPointInterfac
     
     
     public int getIntValue(String key) {
-        return Integer.valueOf(getValue(key)).intValue();
+        return Integer.valueOf(getValue(key));
     }
     
     public double getDoubleValue(String key) {
-        return Double.valueOf(getValue(key)).doubleValue();
+        return Double.valueOf(getValue(key));
     }
 
 
@@ -150,7 +150,7 @@ public abstract class GpxPointNode extends Node implements GpxDeltaPointInterfac
 
     public StringBuilder toHtml(Context context, final StringBuilder builder) {
         final DistanceDescription distance= new DistanceDescription(context);
-        final SpeedDescription    speed = new CurrentSpeedDescription(context);;
+        final SpeedDescription    speed = new CurrentSpeedDescription(context);
         final AltitudeDescription altitude= new AltitudeDescription(context);
         
         attributes.toHtml(builder);
diff --git a/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxBigDeltaInterface.java b/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxBigDeltaInterface.java
index 037f6bbb..6853a03d 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxBigDeltaInterface.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxBigDeltaInterface.java
@@ -2,13 +2,13 @@ package ch.bailu.aat.gpx.interfaces;
 
 
 
-public interface GpxBigDeltaInterface extends GpxDeltaInterface, GpxType  {
+public interface GpxBigDeltaInterface extends GpxDeltaInterface  {
 
 
-    public float getMaximumSpeed();
-    public long getPause();
-    public long getStartTime();
-    public long getEndTime();
+    float getMaximumSpeed();
+    long getPause();
+    long getStartTime();
+    long getEndTime();
 
-    public int getType();
+    int getType();
 }
diff --git a/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxDeltaInterface.java b/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxDeltaInterface.java
index ad4d2bac..3fd129bf 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxDeltaInterface.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxDeltaInterface.java
@@ -8,5 +8,5 @@ public interface GpxDeltaInterface {
     float getSpeed();
     float getAcceleration();
     long  getTimeDelta();
-    public BoundingBox getBoundingBox();
+    BoundingBox getBoundingBox();
 }
diff --git a/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxPointInterface.java b/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxPointInterface.java
index c6c76750..578c86c7 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxPointInterface.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxPointInterface.java
@@ -5,9 +5,9 @@ import org.osmdroid.api.IGeoPoint;
 import ch.bailu.aat.gpx.GpxAttributes;
 
 public interface GpxPointInterface extends IGeoPoint {
-    public short getAltitude();
-    public double getLongitude();
-    public double getLatitude();
-    public long getTimeStamp();
-    public GpxAttributes getAttributes();
+    short getAltitude();
+    double getLongitude();
+    double getLatitude();
+    long getTimeStamp();
+    GpxAttributes getAttributes();
 }
diff --git a/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxType.java b/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxType.java
index d1d79dc5..84962590 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxType.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxType.java
@@ -1,6 +1,6 @@
 package ch.bailu.aat.gpx.interfaces;
 
-public interface GpxType {
+public class GpxType {
     public final static int WAY=0;
     public final static int RTE=1;
     public final static int TRK=2;
diff --git a/app/src/main/java/ch/bailu/aat/gpx/parser/DateScanner.java b/app/src/main/java/ch/bailu/aat/gpx/parser/DateScanner.java
index 5a4272be..fd5f1bf9 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/parser/DateScanner.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/parser/DateScanner.java
@@ -6,14 +6,15 @@ import java.util.GregorianCalendar;
 
 
 public class DateScanner {
-    private IntegerScanner minute,hour;
-    private DoubleParser seconds;
+    private final IntegerScanner minute;
+    private final IntegerScanner hour;
+    private final DoubleParser seconds;
     
     private long millis;
     private long dateBase;
     private int dateBuffer[] = new int[10];
 
-    private SimpleStream stream;
+    private final SimpleStream stream;
     
     public DateScanner(SimpleStream s, long l) {
         stream=s;
@@ -58,13 +59,13 @@ public class DateScanner {
         
         int list[]=new int[3];
         int x=0;
-        
-        for (int i=0; i<dateBuffer.length; i++) {
-            if (dateBuffer[i]=='-') {
+
+        for (int aDateBuffer : dateBuffer) {
+            if (aDateBuffer == '-') {
                 x++;
             } else {
-                list[x]*=10;
-                list[x]+=dateBuffer[i]-'0';
+                list[x] *= 10;
+                list[x] += aDateBuffer - '0';
             }
         }
         
diff --git a/app/src/main/java/ch/bailu/aat/gpx/parser/DoubleParser.java b/app/src/main/java/ch/bailu/aat/gpx/parser/DoubleParser.java
index ce32e6bf..07e8c5c1 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/parser/DoubleParser.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/parser/DoubleParser.java
@@ -18,11 +18,9 @@ public class DoubleParser  {
     
     private int output=0;
     
-    private int fraction;
-    private int exponent;
-    private int baseExponent;
+    private final int baseExponent;
     
-    SimpleStream stream;
+    final SimpleStream stream;
 
   
     
@@ -46,9 +44,9 @@ public class DoubleParser  {
     public void scan() throws IOException {
         boolean haveDecimal=false;
         boolean negative=false;
-        
-        exponent=baseExponent;
-        fraction=0;
+
+        int exponent=baseExponent;
+        int fraction=0;
         
         stream.read();
         stream.skipWhitespace();
diff --git a/app/src/main/java/ch/bailu/aat/gpx/parser/GpxListReader.java b/app/src/main/java/ch/bailu/aat/gpx/parser/GpxListReader.java
index 5579ac55..aeb94551 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/parser/GpxListReader.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/parser/GpxListReader.java
@@ -2,18 +2,18 @@ package ch.bailu.aat.gpx.parser;
 
 import java.io.IOException;
 
-import ch.bailu.aat.gpx.GpxBigDelta;
 import ch.bailu.aat.gpx.GpxList;
 import ch.bailu.aat.gpx.GpxPoint;
+import ch.bailu.aat.gpx.interfaces.GpxType;
 import ch.bailu.aat.helpers.file.AbsAccess;
 import ch.bailu.aat.services.background.ThreadControl;
 
 public class GpxListReader {
-    private ThreadControl threadControl;
+    private final ThreadControl threadControl;
 
-    private OnParsed way = new OnParsed(GpxBigDelta.WAY), 
-            track = new OnParsed(GpxBigDelta.TRK), 
-            route = new OnParsed(GpxBigDelta.RTE);
+    private final OnParsed way = new OnParsed(GpxType.WAY);
+    private final OnParsed track = new OnParsed(GpxType.TRK);
+    private final OnParsed route = new OnParsed(GpxType.RTE);
 
 
 
@@ -42,7 +42,7 @@ public class GpxListReader {
 
     
     private class OnParsed implements OnParsedInterface {
-        private GpxList gpxList;
+        private final GpxList gpxList;
         private boolean  haveNewSegment=true;
 
         public OnParsed(int type) {
diff --git a/app/src/main/java/ch/bailu/aat/gpx/parser/IntegerScanner.java b/app/src/main/java/ch/bailu/aat/gpx/parser/IntegerScanner.java
index b7de5243..36bdcdee 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/parser/IntegerScanner.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/parser/IntegerScanner.java
@@ -5,7 +5,7 @@ import java.io.IOException;
 
 public class IntegerScanner {
 	private int integer;
-	private SimpleStream stream;
+	private final SimpleStream stream;
 	
 	public IntegerScanner(SimpleStream s) {
 		stream = s;
diff --git a/app/src/main/java/ch/bailu/aat/gpx/parser/StateNominatim.java b/app/src/main/java/ch/bailu/aat/gpx/parser/StateNominatim.java
index 28565d33..1f97167c 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/parser/StateNominatim.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/parser/StateNominatim.java
@@ -6,7 +6,7 @@ import ch.bailu.aat.gpx.parser.XmlParser.ParserIO;
 
 public class StateNominatim extends ParserState {
 
-    private ParserState node = new StatePlaceNode(); 
+    private final ParserState node = new StatePlaceNode();
 
     @Override
     public void parse(ParserIO io) throws IOException {
diff --git a/app/src/main/java/ch/bailu/aat/gpx/parser/StateOsm.java b/app/src/main/java/ch/bailu/aat/gpx/parser/StateOsm.java
index c093c20f..8aae2897 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/parser/StateOsm.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/parser/StateOsm.java
@@ -6,9 +6,9 @@ import ch.bailu.aat.gpx.parser.XmlParser.ParserIO;
 
 public class StateOsm extends ParserState {
 
-    private ParserState node = new StateOsmNode(); 
-    private ParserState meta = new StateOsmMeta();
-    private ParserState relation = new StateOsmRelation();
+    private final ParserState node = new StateOsmNode();
+    private final ParserState meta = new StateOsmMeta();
+    private final ParserState relation = new StateOsmRelation();
 
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/gpx/parser/StateOsmTag.java b/app/src/main/java/ch/bailu/aat/gpx/parser/StateOsmTag.java
index 06d2654e..f9192ad6 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/parser/StateOsmTag.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/parser/StateOsmTag.java
@@ -6,17 +6,15 @@ import ch.bailu.aat.gpx.GpxAttributes.Tag;
 import ch.bailu.aat.gpx.parser.XmlParser.ParserIO;
 
 public class StateOsmTag extends ParserState {
-    private String key,value;
 
-    
     @Override
     public void parse(ParserIO io) throws IOException {
         
         parseString(io, 'k');
-        key=io.builder.toString();
+        final String key=io.builder.toString();
         
         parseString(io, 'v');
-        value=io.builder.toString();
+        final String value=io.builder.toString();
         
         io.tagList.add(new Tag(key, value));
         
diff --git a/app/src/main/java/ch/bailu/aat/gpx/parser/XmlParser.java b/app/src/main/java/ch/bailu/aat/gpx/parser/XmlParser.java
index 0467b3d9..d4fc1428 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/parser/XmlParser.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/parser/XmlParser.java
@@ -16,7 +16,7 @@ public class XmlParser implements Closeable, GpxPointInterface {
 
 
     private ParserIO io;
-    private ParserState state = new StateXml();
+    private final ParserState state = new StateXml();
 
     public class ParserIO {
         public final SimpleStream stream;
@@ -32,8 +32,8 @@ public class XmlParser implements Closeable, GpxPointInterface {
         trackParsed	  = OnParsedInterface.NULL_ONPARSED, 
         parsed        = OnParsedInterface.NULL_ONPARSED;
 
-        public final SparseArray<GeoPoint> nodeMap = new SparseArray<GeoPoint>(50);
-        public final ArrayList<GpxAttributes.Tag> tagList = new ArrayList<GpxAttributes.Tag>();
+        public final SparseArray<GeoPoint> nodeMap = new SparseArray<>(50);
+        public final ArrayList<GpxAttributes.Tag> tagList = new ArrayList<>();
         
         private ParserIO(AbsAccess file) throws IOException {
             stream = new SimpleStream(file);
diff --git a/app/src/main/java/ch/bailu/aat/gpx/segmented_list/SegmentNodeFactory.java b/app/src/main/java/ch/bailu/aat/gpx/segmented_list/SegmentNodeFactory.java
index c2067889..04d159e0 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/segmented_list/SegmentNodeFactory.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/segmented_list/SegmentNodeFactory.java
@@ -3,7 +3,7 @@ package ch.bailu.aat.gpx.segmented_list;
 import ch.bailu.aat.gpx.linked_list.Node;
 
 public abstract class SegmentNodeFactory {
-    public static SegmentNodeFactory DEFAULT_FACTORY = new SegmentNodeFactory() {
+    public static final SegmentNodeFactory DEFAULT_FACTORY = new SegmentNodeFactory() {
 
         @Override
         public SegmentNode createMarker(Node n) {
diff --git a/app/src/main/java/ch/bailu/aat/gpx/writer/GpxConstants.java b/app/src/main/java/ch/bailu/aat/gpx/writer/GpxConstants.java
index b2db46a5..5406e45e 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/writer/GpxConstants.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/writer/GpxConstants.java
@@ -1,6 +1,6 @@
 package ch.bailu.aat.gpx.writer;
 
-public interface GpxConstants {
+public class GpxConstants {
     public static final String QNAME_GPX = "gpx";
     public static final String QNAME_TRACK = "trk";
     public static final String QNAME_TRACK_SEGMENT = "trkseg";
diff --git a/app/src/main/java/ch/bailu/aat/gpx/writer/GpxListWriter.java b/app/src/main/java/ch/bailu/aat/gpx/writer/GpxListWriter.java
index da56455a..143fe71d 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/writer/GpxListWriter.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/writer/GpxListWriter.java
@@ -8,7 +8,7 @@ import ch.bailu.aat.gpx.GpxList;
 import ch.bailu.aat.gpx.GpxListIterator;
 
 
-public class GpxListWriter implements GpxConstants, Closeable {
+public class GpxListWriter implements  Closeable {
 
 
     private GpxListIterator iterator;
diff --git a/app/src/main/java/ch/bailu/aat/gpx/writer/GpxWriter.java b/app/src/main/java/ch/bailu/aat/gpx/writer/GpxWriter.java
index 17d5f320..3cb9e96d 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/writer/GpxWriter.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/writer/GpxWriter.java
@@ -8,11 +8,11 @@ import java.io.IOException;
 import java.io.OutputStreamWriter;
 import java.util.Locale;
 
-import ch.bailu.aat.gpx.GpxBigDelta;
 import ch.bailu.aat.gpx.interfaces.GpxPointInterface;
+import ch.bailu.aat.gpx.interfaces.GpxType;
 import ch.bailu.aat.helpers.AppTheme;
 
-public abstract class GpxWriter implements GpxConstants{
+public abstract class GpxWriter {
     private BufferedWriter output=null;
 
 
@@ -21,9 +21,9 @@ public abstract class GpxWriter implements GpxConstants{
 
     }
     public static GpxWriter factory(File file, int type) throws FileNotFoundException {
-        if (type == GpxBigDelta.TRK) {
+        if (type == GpxType.TRK) {
             return new TrackWriter(file);
-        } else if (type == GpxBigDelta.RTE) {
+        } else if (type == GpxType.RTE) {
             return new RouteWriter(file);
         }
         return new WayWriter(file);
diff --git a/app/src/main/java/ch/bailu/aat/gpx/writer/RouteWriter.java b/app/src/main/java/ch/bailu/aat/gpx/writer/RouteWriter.java
index bb59d37e..c1c590fd 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/writer/RouteWriter.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/writer/RouteWriter.java
@@ -17,13 +17,13 @@ public class RouteWriter extends GpxWriter {
     @Override
     public void writeHeader(long timestamp) throws IOException {
         super.writeHeader(timestamp);
-        writeBeginElement(QNAME_ROUTE);
+        writeBeginElement(GpxConstants.QNAME_ROUTE);
     }
 
     @Override
     public void writeFooter() throws IOException {
-        writeEndElement(QNAME_ROUTE);
-        writeEndElement(QNAME_GPX);
+        writeEndElement(GpxConstants.QNAME_ROUTE);
+        writeEndElement(GpxConstants.QNAME_GPX);
     }
 
     @Override
@@ -35,18 +35,18 @@ public class RouteWriter extends GpxWriter {
     @Override
     public void writeTrackPoint(GpxPointInterface tp) throws IOException {
         writeString("\t");
-        writeBeginElementStart(QNAME_ROUTE_POINT);
-            writeParameter(QNAME_LATITUDE, String.format((Locale)null, "%.6f", tp.getLatitude()));
-            writeParameter(QNAME_LONGITUDE, String.format((Locale)null, "%.6f", tp.getLongitude()));
+        writeBeginElementStart(GpxConstants.QNAME_ROUTE_POINT);
+            writeParameter(GpxConstants.QNAME_LATITUDE, String.format((Locale)null, "%.6f", tp.getLatitude()));
+            writeParameter(GpxConstants.QNAME_LONGITUDE, String.format((Locale)null, "%.6f", tp.getLongitude()));
         writeBeginElementEnd();
         
         if (tp.getAltitude() != ElevationProvider.NULL_ALTITUDE) {
-            writeBeginElement(QNAME_ALTITUDE);
+            writeBeginElement(GpxConstants.QNAME_ALTITUDE);
             writeString(String.format((Locale)null, "%d",(int)tp.getAltitude()));
-            writeEndElement(QNAME_ALTITUDE);
+            writeEndElement(GpxConstants.QNAME_ALTITUDE);
         }
         
-        writeEndElement(QNAME_ROUTE_POINT);
+        writeEndElement(GpxConstants.QNAME_ROUTE_POINT);
         writeString("\n");
     }
 }
diff --git a/app/src/main/java/ch/bailu/aat/gpx/writer/TrackWriter.java b/app/src/main/java/ch/bailu/aat/gpx/writer/TrackWriter.java
index 75bb2f8c..953933ac 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/writer/TrackWriter.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/writer/TrackWriter.java
@@ -16,46 +16,46 @@ public class TrackWriter extends GpxWriter {
     @Override
     public void writeHeader(long timestamp) throws IOException {
         super.writeHeader(timestamp);
-        writeBeginElement(QNAME_TRACK);
+        writeBeginElement(GpxConstants.QNAME_TRACK);
     }
 
     @Override
     public void writeFooter() throws IOException {
-        writeEndElement(QNAME_TRACK_SEGMENT);
-        writeEndElement(QNAME_TRACK);
-        writeEndElement(QNAME_GPX);
+        writeEndElement(GpxConstants.QNAME_TRACK_SEGMENT);
+        writeEndElement(GpxConstants.QNAME_TRACK);
+        writeEndElement(GpxConstants.QNAME_GPX);
     }
 
     @Override
     public void writeTrackPoint(GpxPointInterface tp) throws IOException {
         writeString("\t");
-        writeBeginElementStart(QNAME_TRACK_POINT);
-        writeParameter(QNAME_LATITUDE, String.format((Locale)null, "%.6f", tp.getLatitude()));
-        writeParameter(QNAME_LONGITUDE, String.format((Locale)null, "%.6f", tp.getLongitude()));
+        writeBeginElementStart(GpxConstants.QNAME_TRACK_POINT);
+        writeParameter(GpxConstants.QNAME_LATITUDE, String.format((Locale)null, "%.6f", tp.getLatitude()));
+        writeParameter(GpxConstants.QNAME_LONGITUDE, String.format((Locale)null, "%.6f", tp.getLongitude()));
 
         writeBeginElementEnd();
 
-        writeBeginElement(QNAME_ALTITUDE);
+        writeBeginElement(GpxConstants.QNAME_ALTITUDE);
         writeString(String.format((Locale)null, "%d",(int)tp.getAltitude()));
-        writeEndElement(QNAME_ALTITUDE);
+        writeEndElement(GpxConstants.QNAME_ALTITUDE);
 
         writeTimeStamp(tp.getTimeStamp()); 
 
-        writeEndElement(QNAME_TRACK_POINT);
+        writeEndElement(GpxConstants.QNAME_TRACK_POINT);
         writeString("\n");
     }
 
     @Override
     public void writeFirstSegment(long timestamp) throws IOException {
-        writeBeginElement(QNAME_TRACK_SEGMENT);
+        writeBeginElement(GpxConstants.QNAME_TRACK_SEGMENT);
         writeString("\n");
     }
 
 
     @Override
     public void writeSegment() throws IOException {
-        writeEndElement(QNAME_TRACK_SEGMENT);
-        writeBeginElement(QNAME_TRACK_SEGMENT);
+        writeEndElement(GpxConstants.QNAME_TRACK_SEGMENT);
+        writeBeginElement(GpxConstants.QNAME_TRACK_SEGMENT);
         writeString("\n");
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/gpx/writer/WayWriter.java b/app/src/main/java/ch/bailu/aat/gpx/writer/WayWriter.java
index 35fba7f4..54c4fe78 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/writer/WayWriter.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/writer/WayWriter.java
@@ -16,7 +16,7 @@ public class WayWriter extends GpxWriter {
 
     @Override
     public void writeFooter() throws IOException {
-        writeEndElement(QNAME_GPX);
+        writeEndElement(GpxConstants.QNAME_GPX);
     }
 
     @Override
@@ -30,20 +30,20 @@ public class WayWriter extends GpxWriter {
     @Override
     public void writeTrackPoint(GpxPointInterface tp) throws IOException {
         writeString("\t");
-        writeBeginElementStart(QNAME_WAY_POINT);
-        writeParameter(QNAME_LATITUDE, String.format((Locale)null, "%.6f", tp.getLatitude()));
-        writeParameter(QNAME_LONGITUDE, String.format((Locale)null, "%.6f", tp.getLongitude()));
+        writeBeginElementStart(GpxConstants.QNAME_WAY_POINT);
+        writeParameter(GpxConstants.QNAME_LATITUDE, String.format((Locale)null, "%.6f", tp.getLatitude()));
+        writeParameter(GpxConstants.QNAME_LONGITUDE, String.format((Locale)null, "%.6f", tp.getLongitude()));
 
         writeBeginElementEnd();
 
         if (tp.getAltitude() != ElevationProvider.NULL_ALTITUDE) {
-            writeBeginElement(QNAME_ALTITUDE);
+            writeBeginElement(GpxConstants.QNAME_ALTITUDE);
             writeString(String.format((Locale)null, "%d",(int)tp.getAltitude()));
-            writeEndElement(QNAME_ALTITUDE);
+            writeEndElement(GpxConstants.QNAME_ALTITUDE);
         }
 
         
-        writeEndElement(QNAME_WAY_POINT);
+        writeEndElement(GpxConstants.QNAME_WAY_POINT);
         writeString("\n");
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/helpers/AppDialog.java b/app/src/main/java/ch/bailu/aat/helpers/AppDialog.java
index ef4c2457..f7b8d926 100644
--- a/app/src/main/java/ch/bailu/aat/helpers/AppDialog.java
+++ b/app/src/main/java/ch/bailu/aat/helpers/AppDialog.java
@@ -29,9 +29,9 @@ public abstract class AppDialog {
         }
     }
 
-    protected void onNegativeClick() {};
+    protected void onNegativeClick() {}
     protected abstract void onPositiveClick();
-    public void onNeutralClick() {};
+    public void onNeutralClick() {}
 
     public void displayYesNoDialog(Activity activity, String title, String text) {
         AlertDialog.Builder builder = new AlertDialog.Builder(activity);
diff --git a/app/src/main/java/ch/bailu/aat/helpers/AppDirectory.java b/app/src/main/java/ch/bailu/aat/helpers/AppDirectory.java
index 43e61e59..659030cf 100644
--- a/app/src/main/java/ch/bailu/aat/helpers/AppDirectory.java
+++ b/app/src/main/java/ch/bailu/aat/helpers/AppDirectory.java
@@ -209,8 +209,8 @@ public class AppDirectory  {
             } catch( IOException ex ) {
                 throw new IOException("ERROR while copying " + source.getPath() + " to " + target.getPath());
             } finally {
-                if ( reader != null ) reader.close();
-                if ( writer != null ) writer.close();
+                reader.close();
+                writer.close();
             }
             
         } else {
diff --git a/app/src/main/java/ch/bailu/aat/helpers/AppLayout.java b/app/src/main/java/ch/bailu/aat/helpers/AppLayout.java
index 9c3e7a34..78e504c9 100644
--- a/app/src/main/java/ch/bailu/aat/helpers/AppLayout.java
+++ b/app/src/main/java/ch/bailu/aat/helpers/AppLayout.java
@@ -22,6 +22,7 @@ public class AppLayout {
             case MeasureSpec.AT_MOST:
                 measurement = Math.min(preferred, specSize);
                 break;
+            case MeasureSpec.UNSPECIFIED:
             default:
                 measurement = preferred;
                 break;
@@ -30,7 +31,7 @@ public class AppLayout {
     }
     
 
-    @SuppressWarnings("deprecation")
+
     public static void updateMeasurement(Context context) {
         if (height==0) height = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getHeight();
         if (width==0)  width = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getWidth();
diff --git a/app/src/main/java/ch/bailu/aat/helpers/AppLog.java b/app/src/main/java/ch/bailu/aat/helpers/AppLog.java
index 4893d018..7ff7126c 100644
--- a/app/src/main/java/ch/bailu/aat/helpers/AppLog.java
+++ b/app/src/main/java/ch/bailu/aat/helpers/AppLog.java
@@ -48,7 +48,7 @@ public class AppLog implements Closeable {
     
     private class LogError extends Log {
         public final static String ACTION = NAME_SPACE + "LOG_ERROR";
-        private AlertDialog.Builder alertbox;
+        private final AlertDialog.Builder alertbox;
         
         public LogError(Context c) {
             super(c, ACTION);
@@ -74,7 +74,7 @@ public class AppLog implements Closeable {
     
     private class LogInfo extends Log {
         public final static String ACTION = NAME_SPACE + "LOG_INFO";
-        private Toast toast;
+        private final Toast toast;
         
         public LogInfo(Context c) {
             super(c, ACTION);
diff --git a/app/src/main/java/ch/bailu/aat/helpers/AppSelectDirectoryDialog.java b/app/src/main/java/ch/bailu/aat/helpers/AppSelectDirectoryDialog.java
index 91fa2937..40f1c3ae 100644
--- a/app/src/main/java/ch/bailu/aat/helpers/AppSelectDirectoryDialog.java
+++ b/app/src/main/java/ch/bailu/aat/helpers/AppSelectDirectoryDialog.java
@@ -12,9 +12,7 @@ import ch.bailu.aat.helpers.file.FileUI;
 public class AppSelectDirectoryDialog  implements  DialogInterface.OnClickListener {
     private final File file;
     private final File directories[];
-    private final String names[];
-    
-    private final AlertDialog.Builder dialog;
+
 
     private final Context context;
     public AppSelectDirectoryDialog (Context c, File f) throws IOException {
@@ -30,13 +28,14 @@ public class AppSelectDirectoryDialog  implements  DialogInterface.OnClickListen
                 AppDirectory.getDataDirectory(context, AppDirectory.DIR_IMPORT)
                 };
 
-        
-        names = new String[directories.length];
+
+
+        final String[] names = new String[directories.length];
         
         for (int i=0; i< names.length; i++) names[i]=directories[i].getName();
 
 
-        dialog = new AlertDialog.Builder(context);
+        final AlertDialog.Builder dialog = new AlertDialog.Builder(context);
         dialog.setTitle(file.getName() + ": " + context.getString(R.string.file_copy));
         dialog.setItems(names, this);
         dialog.create();
diff --git a/app/src/main/java/ch/bailu/aat/helpers/Clipboard.java b/app/src/main/java/ch/bailu/aat/helpers/Clipboard.java
new file mode 100644
index 00000000..9e32bd64
--- /dev/null
+++ b/app/src/main/java/ch/bailu/aat/helpers/Clipboard.java
@@ -0,0 +1,75 @@
+package ch.bailu.aat.helpers;
+
+import android.annotation.TargetApi;
+import android.content.ClipData;
+import android.content.ClipboardManager;
+import android.content.Context;
+
+public class Clipboard {
+    private final Context context;
+
+
+    public Clipboard(Context c) {
+        context = c;
+    }
+
+
+    public void setText(CharSequence label, CharSequence text) {
+        if (android.os.Build.VERSION.SDK_INT < 11) {
+            setTextSDK1(text);
+        } else {
+            setTextSDK11(label, text);
+        }
+    }
+
+
+
+    public CharSequence getText() {
+        if (android.os.Build.VERSION.SDK_INT < 11) {
+            return getTextSDK1();
+        } else {
+            return getTextSDK11();
+        }
+    }
+
+
+    @SuppressWarnings("deprecation")
+    private void setTextSDK1(CharSequence text) {
+        android.text.ClipboardManager clipboard = (android.text.ClipboardManager) context
+                .getSystemService(Context.CLIPBOARD_SERVICE);
+        clipboard.setText(text);
+    }
+
+
+    @SuppressWarnings("deprecation")
+    private CharSequence getTextSDK1() {
+        android.text.ClipboardManager clipboard = (android.text.ClipboardManager) context
+                .getSystemService(Context.CLIPBOARD_SERVICE);
+        return clipboard.getText().toString();
+    }
+
+
+    @TargetApi(11)
+    private void setTextSDK11(CharSequence label, CharSequence text) {
+        ClipboardManager clipboard = (ClipboardManager)
+                context.getSystemService(Context.CLIPBOARD_SERVICE);
+
+        ClipData clip = ClipData.newPlainText(label, text);
+        clipboard.setPrimaryClip(clip);
+    }
+
+    @TargetApi(11)
+    private CharSequence getTextSDK11() {
+        ClipboardManager clipboard = (ClipboardManager)
+                context.getSystemService(Context.CLIPBOARD_SERVICE);
+
+        ClipData clip = clipboard.getPrimaryClip();
+        if (clip != null) {
+            ClipData.Item i = clipboard.getPrimaryClip().getItemAt(0);
+            if (i!= null) {
+                return i.getText();
+            }
+        }
+        return null;
+    }
+}
diff --git a/app/src/main/java/ch/bailu/aat/helpers/ContextWrapperInterface.java b/app/src/main/java/ch/bailu/aat/helpers/ContextWrapperInterface.java
index d6ad7ad2..137a8ad4 100644
--- a/app/src/main/java/ch/bailu/aat/helpers/ContextWrapperInterface.java
+++ b/app/src/main/java/ch/bailu/aat/helpers/ContextWrapperInterface.java
@@ -3,5 +3,5 @@ package ch.bailu.aat.helpers;
 import android.content.Context;
 
 public interface ContextWrapperInterface {
-    public Context getContext();
+    Context getContext();
 }
diff --git a/app/src/main/java/ch/bailu/aat/helpers/FileAction.java b/app/src/main/java/ch/bailu/aat/helpers/FileAction.java
index 2bf05367..d26bb9f9 100644
--- a/app/src/main/java/ch/bailu/aat/helpers/FileAction.java
+++ b/app/src/main/java/ch/bailu/aat/helpers/FileAction.java
@@ -120,9 +120,6 @@ public class FileAction   {
 
             if (source.exists()) {
                 if (target.exists()) {
-                    StringBuilder msg = new StringBuilder()
-                                    .append(target.getName())
-                                    .append(scontext.getContext().getString(R.string.file_exists));
                     AppLog.i(activity, FileUI.getExistsMsg(scontext.getContext(), target));
                 } else {
                     source.renameTo(target);
diff --git a/app/src/main/java/ch/bailu/aat/helpers/file/AbsAccess.java b/app/src/main/java/ch/bailu/aat/helpers/file/AbsAccess.java
index f7ccfb1b..616d47a4 100644
--- a/app/src/main/java/ch/bailu/aat/helpers/file/AbsAccess.java
+++ b/app/src/main/java/ch/bailu/aat/helpers/file/AbsAccess.java
@@ -11,8 +11,6 @@ import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
 
-import ch.bailu.aat.helpers.AppLog;
-
 public abstract class AbsAccess {
     public abstract InputStream open_r() throws FileNotFoundException;
     public abstract OutputStream open_w() throws FileNotFoundException;
@@ -30,7 +28,7 @@ public abstract class AbsAccess {
         BufferedInputStream in = new BufferedInputStream(open_r());
         StringBuilder out = new StringBuilder();
 
-        
+
         try {
             int c;
             while ((c = in.read()) > -1) {
diff --git a/app/src/main/java/ch/bailu/aat/helpers/file/FileUI.java b/app/src/main/java/ch/bailu/aat/helpers/file/FileUI.java
index 016a6aa5..7152c36f 100644
--- a/app/src/main/java/ch/bailu/aat/helpers/file/FileUI.java
+++ b/app/src/main/java/ch/bailu/aat/helpers/file/FileUI.java
@@ -39,10 +39,9 @@ public class FileUI {
     
 
     public static String getExistsMsg(Context c, File f) {
-        StringBuilder msg = new StringBuilder()
-                .append(f.getName())
-                .append(c.getString(R.string.file_exists));
-        return msg.toString();
+        String msg = f.getName() +
+                c.getString(R.string.file_exists);
+        return msg;
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/menus/AbsMenu.java b/app/src/main/java/ch/bailu/aat/menus/AbsMenu.java
index e1c7f86c..7c215e5f 100644
--- a/app/src/main/java/ch/bailu/aat/menus/AbsMenu.java
+++ b/app/src/main/java/ch/bailu/aat/menus/AbsMenu.java
@@ -1,19 +1,13 @@
 package ch.bailu.aat.menus;
 
-import android.app.AlertDialog;
+import android.annotation.TargetApi;
 import android.content.Context;
-import android.content.DialogInterface;
 import android.view.ContextMenu;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.PopupMenu;
 
-import java.io.File;
-import java.util.ArrayList;
-
-import ch.bailu.aat.preferences.SolidOverlayFileList;
-
 public abstract class AbsMenu {
     public abstract void inflate(Menu menu);
     public abstract void inflateWithHeader(ContextMenu menu);
@@ -22,6 +16,13 @@ public abstract class AbsMenu {
     public abstract boolean onItemClick(MenuItem item);
 
 
+    public void showAsPopup (Context context, View view) {
+        if (android.os.Build.VERSION.SDK_INT < 11) {
+            showAsDialog(context);
+        } else {
+            showAsPopupSDK11(context, view);
+        }
+    }
 
 
 
@@ -29,13 +30,9 @@ public abstract class AbsMenu {
         new MenuDialog(context, this);
     }
 
-    /* SDK 1 */
-    public void showAsPopup (Context context, View view) {
-        showAsDialog(context);
-    }
 
-    /* SDK 11
-    public void showAsPopup(Context context, View view) {
+    @TargetApi(11)
+    private void showAsPopupSDK11(Context context, View view) {
         final PopupMenu popup = new PopupMenu(context, view);
 
         inflate(popup.getMenu());
@@ -50,6 +47,5 @@ public abstract class AbsMenu {
 
         popup.show();
     }
-    */
 
 }
diff --git a/app/src/main/java/ch/bailu/aat/menus/LocationMenu.java b/app/src/main/java/ch/bailu/aat/menus/LocationMenu.java
index 91895bb5..e38cfbf2 100644
--- a/app/src/main/java/ch/bailu/aat/menus/LocationMenu.java
+++ b/app/src/main/java/ch/bailu/aat/menus/LocationMenu.java
@@ -3,8 +3,6 @@ package ch.bailu.aat.menus;
 import org.osmdroid.util.GeoPoint;
 import org.osmdroid.views.MapView;
 
-import android.content.ClipData;
-import android.content.ClipboardManager;
 import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
@@ -14,11 +12,13 @@ import android.view.MenuItem;
 import ch.bailu.aat.R;
 import ch.bailu.aat.coordinates.Coordinates;
 import ch.bailu.aat.helpers.AppLog;
+import ch.bailu.aat.helpers.Clipboard;
 
 public class LocationMenu extends AbsMenu{
 
     private final MapView map;
     private final Context context;
+    private final Clipboard clipboard;
 
     private MenuItem send, view, copy, paste;
     
@@ -26,6 +26,7 @@ public class LocationMenu extends AbsMenu{
     public LocationMenu(MapView m) {
         map = m;
         context = m.getContext();
+        clipboard = new Clipboard(context);
     }
     
     @Override
@@ -45,27 +46,10 @@ public class LocationMenu extends AbsMenu{
     @Override
     public void prepare(Menu menu) {
         
-        paste.setEnabled(getStringFromClipboard() != null);
+        paste.setEnabled(clipboard.getText() != null);
     }
 
     
-    private String getStringFromClipboard() {
-        ClipboardManager clipboard = (ClipboardManager)
-                context.getSystemService(Context.CLIPBOARD_SERVICE);
-
-        ClipData clip = clipboard.getPrimaryClip();
-        if (clip != null) {
-            ClipData.Item i = clipboard.getPrimaryClip().getItemAt(0);
-            if (i!= null) {
-                CharSequence t = i.getText();
-                if (t != null) return t.toString();
-            }
-        }
-        return null; 
-    }
-        
-    
-    
     @Override
     public boolean onItemClick(MenuItem item) {
         if (item == send) {
@@ -87,21 +71,15 @@ public class LocationMenu extends AbsMenu{
 
     private void paste() {
         GeoPoint geo = new GeoPoint(0,0);
-        
-        String s = getStringFromClipboard();
-        if (s!=null  && Coordinates.stringToGeoPoint(s, geo)) {
+        final CharSequence s = clipboard.getText();
+
+        if (s != null  && Coordinates.stringToGeoPoint(s.toString(), geo)) {
             map.getController().setCenter(geo);
         }
-        
     }
 
     private void copy() {
-        ClipboardManager clipboard = (ClipboardManager)
-                context.getSystemService(Context.CLIPBOARD_SERVICE);
-
-        ClipData clip = ClipData.newPlainText("GEO location", Coordinates.geoPointToGeoUri(getCenter()));
-        clipboard.setPrimaryClip(clip);
-        
+        clipboard.setText("GEO location", Coordinates.geoPointToGeoUri(getCenter()));
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/menus/MenuArray.java b/app/src/main/java/ch/bailu/aat/menus/MenuArray.java
index 307d3897..784d12dd 100644
--- a/app/src/main/java/ch/bailu/aat/menus/MenuArray.java
+++ b/app/src/main/java/ch/bailu/aat/menus/MenuArray.java
@@ -16,7 +16,7 @@ import java.util.ArrayList;
 
 
 public class MenuArray implements Menu {
-    private final ArrayList<Item> item = new ArrayList<Item>();
+    private final ArrayList<Item> item = new ArrayList<>();
     private final Context context;
 
     public MenuArray(Context c) {
diff --git a/app/src/main/java/ch/bailu/aat/menus/MenuDialog.java b/app/src/main/java/ch/bailu/aat/menus/MenuDialog.java
index df54384e..e1ad28b2 100644
--- a/app/src/main/java/ch/bailu/aat/menus/MenuDialog.java
+++ b/app/src/main/java/ch/bailu/aat/menus/MenuDialog.java
@@ -4,13 +4,8 @@ import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
 
-import java.io.File;
-
-import ch.bailu.aat.preferences.SolidOverlayFileList;
-
 
 public class MenuDialog implements  DialogInterface.OnClickListener {
-    private final AlertDialog.Builder dialog;
     private final AbsMenu menu;
     private final MenuArray array;
 
@@ -21,7 +16,7 @@ public class MenuDialog implements  DialogInterface.OnClickListener {
         menu.inflate(array);
         menu.prepare(array);
 
-        dialog = new AlertDialog.Builder(context);
+        final AlertDialog.Builder dialog = new AlertDialog.Builder(context);
         dialog.setItems(array.toStringArray(), this);
         dialog.create();
         dialog.show();
diff --git a/app/src/main/java/ch/bailu/aat/osm_features/MapFeaturesParser.java b/app/src/main/java/ch/bailu/aat/osm_features/MapFeaturesParser.java
index 24f25218..d528d8f8 100644
--- a/app/src/main/java/ch/bailu/aat/osm_features/MapFeaturesParser.java
+++ b/app/src/main/java/ch/bailu/aat/osm_features/MapFeaturesParser.java
@@ -31,11 +31,11 @@ public class MapFeaturesParser {
 
     public MapFeaturesParser(OnHaveFeature hf, File[] files) throws IOException {
         haveFeature = hf;
-     
-       
-        for (int i=0; i< files.length; i++) {
-            if (files[i].exists() && files[i].canRead() && files[i].isFile()) {
-                parseSummary(new FileAccess(files[i]));
+
+
+        for (File file : files) {
+            if (file.exists() && file.canRead() && file.isFile()) {
+                parseSummary(new FileAccess(file));
             }
         }
     }
diff --git a/app/src/main/java/ch/bailu/aat/osm_features/MapFeaturesPreparser.java b/app/src/main/java/ch/bailu/aat/osm_features/MapFeaturesPreparser.java
index 608affb8..e97d4e4e 100644
--- a/app/src/main/java/ch/bailu/aat/osm_features/MapFeaturesPreparser.java
+++ b/app/src/main/java/ch/bailu/aat/osm_features/MapFeaturesPreparser.java
@@ -20,7 +20,7 @@ public class MapFeaturesPreparser {
     private static final String WIKI_URL = "http://wiki.openstreetmap.org/";    
 
     
-    private final ArrayList<DownloadHandle> images = new ArrayList<DownloadHandle>();
+    private final ArrayList<DownloadHandle> images = new ArrayList<>();
     
     
     private final StringBuilder builder = new StringBuilder();
diff --git a/app/src/main/java/ch/bailu/aat/preferences/AddOverlayDialog.java b/app/src/main/java/ch/bailu/aat/preferences/AddOverlayDialog.java
index c3ea0deb..2a335594 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/AddOverlayDialog.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/AddOverlayDialog.java
@@ -10,14 +10,12 @@ public class AddOverlayDialog implements  DialogInterface.OnClickListener {
     private final SolidOverlayFileList slist;
     private final File file;
 
-    private final AlertDialog.Builder dialog;
 
     public AddOverlayDialog (Context context, SolidOverlayFileList l, File f) {
         slist=l;
         file=f;
 
-
-        dialog = new AlertDialog.Builder(context);
+        final AlertDialog.Builder dialog = new AlertDialog.Builder(context);
         dialog.setItems(slist.getStringArray(), this);
         dialog.create();
         dialog.show();
diff --git a/app/src/main/java/ch/bailu/aat/preferences/CheckListDialog.java b/app/src/main/java/ch/bailu/aat/preferences/CheckListDialog.java
index d7d5b539..9a0144b4 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/CheckListDialog.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/CheckListDialog.java
@@ -8,12 +8,11 @@ import android.content.DialogInterface.OnMultiChoiceClickListener;
 public class CheckListDialog implements  OnMultiChoiceClickListener{
     private final SolidCheckList slist;
 
-    private final AlertDialog.Builder dialog;
 
     public CheckListDialog (Context context, SolidCheckList l) {
         slist=l;
 
-        dialog = new AlertDialog.Builder(context);
+        final AlertDialog.Builder dialog = new AlertDialog.Builder(context);
         dialog.setMultiChoiceItems(slist.getStringArray(), slist.getEnabledArray(), this);
         dialog.create();
         dialog.show();
diff --git a/app/src/main/java/ch/bailu/aat/preferences/IndexListDialog.java b/app/src/main/java/ch/bailu/aat/preferences/IndexListDialog.java
index 96a9b625..dcbb9c06 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/IndexListDialog.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/IndexListDialog.java
@@ -5,8 +5,8 @@ import android.content.Context;
 import android.content.DialogInterface;
 
 public class IndexListDialog implements  DialogInterface.OnClickListener {
-    private SolidIndexList slist;
-    AlertDialog.Builder dialog;
+    private final SolidIndexList slist;
+    final AlertDialog.Builder dialog;
     
     public IndexListDialog (Context context, SolidIndexList l) {
         slist=l;
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidAccelerationFilter.java b/app/src/main/java/ch/bailu/aat/preferences/SolidAccelerationFilter.java
index b4634a1c..d3e031dc 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidAccelerationFilter.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidAccelerationFilter.java
@@ -4,7 +4,7 @@ import ch.bailu.aat.R;
 import android.content.Context;
 
 public class SolidAccelerationFilter extends SolidStaticIndexList {
-    private static String KEY="accel_filter";
+    private static final String KEY="accel_filter";
     
     private static final float[] VALUE_LIST = {
     99999f,
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidAccuracyFilter.java b/app/src/main/java/ch/bailu/aat/preferences/SolidAccuracyFilter.java
index 05efa6f7..62a1cff4 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidAccuracyFilter.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidAccuracyFilter.java
@@ -3,8 +3,10 @@ package ch.bailu.aat.preferences;
 import ch.bailu.aat.R;
 import android.content.Context;
 
+import java.util.Locale;
+
 public class SolidAccuracyFilter extends SolidIndexList {
-    private static String KEY="accuracy_filter_";
+    private static final String KEY="accuracy_filter_";
     
     private static final float[] VALUE_LIST = {
     999f,
@@ -24,7 +26,7 @@ public class SolidAccuracyFilter extends SolidIndexList {
     200f,
     };
     
-    private SolidUnit sunit;
+    private final SolidUnit sunit;
     
     public SolidAccuracyFilter(Context c, int i) {
         super(Storage.preset(c), KEY+i);
@@ -47,7 +49,7 @@ public class SolidAccuracyFilter extends SolidIndexList {
 
     private String getString(int i) {
         if (i==0) return getContext().getString(R.string.off);
-        return String.format("%.3f%s", VALUE_LIST[i] * sunit.getAltitudeFactor(), sunit.getAltitudeUnit());
+        return String.format((Locale)null,"%.3f%s", VALUE_LIST[i] * sunit.getAltitudeFactor(), sunit.getAltitudeUnit());
     }
     
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidAutopause.java b/app/src/main/java/ch/bailu/aat/preferences/SolidAutopause.java
index c4d58c82..23594c2c 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidAutopause.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidAutopause.java
@@ -3,6 +3,8 @@ package ch.bailu.aat.preferences;
 import ch.bailu.aat.R;
 import android.content.Context;
 
+import java.util.Locale;
+
 public class SolidAutopause extends SolidIndexList {
     private final static String KEY="autopause";
     private final Context context;
@@ -26,7 +28,7 @@ public class SolidAutopause extends SolidIndexList {
         20,20,20,20,20,20,
     };
     
-    private SolidUnit sunit;
+    private final SolidUnit sunit;
 
     public SolidAutopause(Context c, int i) {
         super(Storage.preset(c), KEY+i);
@@ -60,7 +62,7 @@ public class SolidAutopause extends SolidIndexList {
     private String getString(int i) {
         if (i==0) return getContext().getString(R.string.off);
         
-        return String.format("%.3f%s - %d", SPEED_VALUES[i] * sunit.getSpeedFactor(), sunit.getSpeedUnit(), TRIGGER_VALUES[i]);
+        return String.format((Locale)null,"%.3f%s - %d", SPEED_VALUES[i] * sunit.getSpeedFactor(), sunit.getSpeedUnit(), TRIGGER_VALUES[i]);
     }
     
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidDirectoryList.java b/app/src/main/java/ch/bailu/aat/preferences/SolidDirectoryList.java
index ff440e47..4800a367 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidDirectoryList.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidDirectoryList.java
@@ -9,7 +9,7 @@ import android.os.Environment;
 public abstract class SolidDirectoryList extends SolidIndexList {
 
 
-    private final ArrayList<String> list = new ArrayList<String>(10);
+    private final ArrayList<String> list = new ArrayList<>(10);
 
 
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidDistanceFilter.java b/app/src/main/java/ch/bailu/aat/preferences/SolidDistanceFilter.java
index bec7d42d..206309fa 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidDistanceFilter.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidDistanceFilter.java
@@ -3,6 +3,8 @@ package ch.bailu.aat.preferences;
 import ch.bailu.aat.R;
 import android.content.Context;
 
+import java.util.Locale;
+
 public class SolidDistanceFilter extends SolidIndexList {
     private static final String KEY="distance_filter_";
     
@@ -49,7 +51,7 @@ public class SolidDistanceFilter extends SolidIndexList {
         if (i==0) return getContext().getString(R.string.off);
         if (i==length()-1) getContext().getString(R.string.auto);
         
-        return String.format("%.2f%s", VALUE_LIST[i] * sunit.getAltitudeFactor(), sunit.getAltitudeUnit());
+        return String.format(String.format((Locale)null,"%.2f%s", VALUE_LIST[i] * sunit.getAltitudeFactor(), sunit.getAltitudeUnit()));
     }
     
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidMapTileStack.java b/app/src/main/java/ch/bailu/aat/preferences/SolidMapTileStack.java
index de056725..b807dd61 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidMapTileStack.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidMapTileStack.java
@@ -202,9 +202,8 @@ public class SolidMapTileStack extends SolidCheckList {
     
     public int getCountOfEnabled() {
         int c = 0;
-        
-        for (int i=0; i<enabledArray.length; i++)
-            if (enabledArray[i].isEnabled()) c++;
+
+        for (SolidBoolean anEnabledArray : enabledArray) if (anEnabledArray.isEnabled()) c++;
         
         return c;
     }
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidMissingTrigger.java b/app/src/main/java/ch/bailu/aat/preferences/SolidMissingTrigger.java
index b0e0fdca..b7111981 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidMissingTrigger.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidMissingTrigger.java
@@ -4,7 +4,7 @@ import ch.bailu.aat.R;
 import android.content.Context;
 
 public class SolidMissingTrigger extends SolidStaticIndexList {
-    private static String KEY="missing_trigger_";
+    private static final String KEY="missing_trigger_";
     
     private static final int[] VALUE_LIST = {
     999,
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidOverlayFileList.java b/app/src/main/java/ch/bailu/aat/preferences/SolidOverlayFileList.java
index 352e2462..d2b5ddef 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidOverlayFileList.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidOverlayFileList.java
@@ -57,8 +57,7 @@ public class SolidOverlayFileList extends SolidCheckList {
     
     @Override
     public boolean hasKey(String s) {
-        for (int i=0; i<list.length; i++)
-            if (list[i].hasKey(s)) return true;
+        for (SolidOverlayFile aList : list) if (aList.hasKey(s)) return true;
         return false;
     }   
     
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidTileSize.java b/app/src/main/java/ch/bailu/aat/preferences/SolidTileSize.java
index df9a8678..075b33e2 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidTileSize.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidTileSize.java
@@ -5,7 +5,7 @@ import android.content.Context;
 
 
 public class SolidTileSize extends SolidIndexList {
-    private static String KEY="tile_size";
+    private static final String KEY="tile_size";
 
     public static final int DEFAULT_TILESIZE=256;
     private static final int STEP=32;
diff --git a/app/src/main/java/ch/bailu/aat/preferences/Storage.java b/app/src/main/java/ch/bailu/aat/preferences/Storage.java
index b137793e..76640d8b 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/Storage.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/Storage.java
@@ -8,7 +8,6 @@ import android.content.SharedPreferences;
 import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
 import android.os.Environment;
 
-import ch.bailu.aat.helpers.AppLog;
 import ch.bailu.aat.helpers.ContextWrapperInterface;
 import ch.bailu.aat.helpers.file.FileAccess;
 import ch.bailu.aat.helpers.file.UriAccess;
@@ -89,13 +88,13 @@ public class Storage  implements ContextWrapperInterface {
             String key = entry.getKey();
 
             if(v instanceof Boolean)
-                editor.putBoolean(key, ((Boolean)v).booleanValue());
+                editor.putBoolean(key, (Boolean) v);
             else if(v instanceof Float)
-                editor.putFloat(key, ((Float)v).floatValue());
+                editor.putFloat(key, (Float) v);
             else if(v instanceof Integer)
-                editor.putInt(key, ((Integer)v).intValue());
+                editor.putInt(key, (Integer) v);
             else if(v instanceof Long)
-                editor.putLong(key, ((Long)v).longValue());
+                editor.putLong(key, (Long) v);
             else if(v instanceof String)
                 editor.putString(key, ((String)v));         
         }
diff --git a/app/src/main/java/ch/bailu/aat/services/AbsService.java b/app/src/main/java/ch/bailu/aat/services/AbsService.java
index ae067d84..58dee19f 100644
--- a/app/src/main/java/ch/bailu/aat/services/AbsService.java
+++ b/app/src/main/java/ch/bailu/aat/services/AbsService.java
@@ -22,7 +22,7 @@ public abstract class AbsService  extends Service {
 
 
 
-    private final Set<String> locks = new HashSet<String>();
+    private final Set<String> locks = new HashSet<>();
 
     private final Timer lazyOff = new Timer(new Runnable() {
         @Override
diff --git a/app/src/main/java/ch/bailu/aat/services/ServiceLink.java b/app/src/main/java/ch/bailu/aat/services/ServiceLink.java
index a25c6a31..0598d537 100644
--- a/app/src/main/java/ch/bailu/aat/services/ServiceLink.java
+++ b/app/src/main/java/ch/bailu/aat/services/ServiceLink.java
@@ -62,14 +62,14 @@ public abstract class ServiceLink extends ServiceContext implements Closeable {
         public AbsService getService() {
             return service;
         }
-    };
+    }
 
 
     public abstract void onServicesUp();
 
 
-    private final Hashtable<Class<?>, Connection> serviceTable = 
-            new Hashtable<Class<?>, Connection>();
+    private final Hashtable<Class<?>, Connection> serviceTable =
+            new Hashtable<>();
 
 
     private final Context context;
diff --git a/app/src/main/java/ch/bailu/aat/services/background/BackgroundService.java b/app/src/main/java/ch/bailu/aat/services/background/BackgroundService.java
index e06d4945..da04ebe8 100644
--- a/app/src/main/java/ch/bailu/aat/services/background/BackgroundService.java
+++ b/app/src/main/java/ch/bailu/aat/services/background/BackgroundService.java
@@ -59,14 +59,14 @@ public class BackgroundService extends VirtualService {
     public class SelfOn extends Self {
         private final static int PROCESS_QUEUE_SIZE=500;
 
-        private final SparseArray<DownloaderThread> downloaders = new SparseArray<DownloaderThread>();
-        private final SparseArray<LoaderThread> loaders = new SparseArray<LoaderThread>();
+        private final SparseArray<DownloaderThread> downloaders = new SparseArray<>();
+        private final SparseArray<LoaderThread> loaders = new SparseArray<>();
         private ProcessThread process;
 
 
-        private MapFeaturesDownloader mapFeaturesDownloader;
+        private final MapFeaturesDownloader mapFeaturesDownloader;
 
-        private BroadcastReceiver onFileDownloaded = new BroadcastReceiver() {
+        private final BroadcastReceiver onFileDownloaded = new BroadcastReceiver() {
             @Override
             public void onReceive(Context context, Intent intent) {
                 AppLog.i(context, AppIntent.getFile(intent));
diff --git a/app/src/main/java/ch/bailu/aat/services/background/DownloadHandle.java b/app/src/main/java/ch/bailu/aat/services/background/DownloadHandle.java
index 6eb0d0c5..caad96e2 100644
--- a/app/src/main/java/ch/bailu/aat/services/background/DownloadHandle.java
+++ b/app/src/main/java/ch/bailu/aat/services/background/DownloadHandle.java
@@ -152,4 +152,4 @@ public class DownloadHandle extends ProcessHandle {
                 AppBroadcaster.FILE_CHANGED_ONDISK, file.toString(),url);
     }
 
-};
+}
diff --git a/app/src/main/java/ch/bailu/aat/services/background/LoaderThread.java b/app/src/main/java/ch/bailu/aat/services/background/LoaderThread.java
index c93e4465..d45ba3e1 100644
--- a/app/src/main/java/ch/bailu/aat/services/background/LoaderThread.java
+++ b/app/src/main/java/ch/bailu/aat/services/background/LoaderThread.java
@@ -10,7 +10,7 @@ public class LoaderThread extends ProcessThread {
     private int total_bytes=0;
     
     
-    private static int SIZE=100;
+    private static final int SIZE=100;
 
     public LoaderThread(Context c, String d) {
         super(SIZE);
diff --git a/app/src/main/java/ch/bailu/aat/services/background/MapFeaturesDownloader.java b/app/src/main/java/ch/bailu/aat/services/background/MapFeaturesDownloader.java
index 4551bbd0..5942a26c 100644
--- a/app/src/main/java/ch/bailu/aat/services/background/MapFeaturesDownloader.java
+++ b/app/src/main/java/ch/bailu/aat/services/background/MapFeaturesDownloader.java
@@ -21,7 +21,7 @@ public class MapFeaturesDownloader implements Closeable {
     private final ServiceContext scontext;
     
 
-    private ArrayList<DownloadHandle> pendingImages=new ArrayList<DownloadHandle>();
+    private ArrayList<DownloadHandle> pendingImages= new ArrayList<>();
     
     
     public MapFeaturesDownloader(ServiceContext sc) {
diff --git a/app/src/main/java/ch/bailu/aat/services/background/ProcessThread.java b/app/src/main/java/ch/bailu/aat/services/background/ProcessThread.java
index 7217c08e..7f8d249a 100644
--- a/app/src/main/java/ch/bailu/aat/services/background/ProcessThread.java
+++ b/app/src/main/java/ch/bailu/aat/services/background/ProcessThread.java
@@ -16,7 +16,7 @@ public abstract class ProcessThread extends Thread implements Closeable, ThreadC
 
     public ProcessThread(int size) {
         SIZE=size;
-        queue = new ArrayBlockingQueue<ProcessHandle>(SIZE, true);
+        queue = new ArrayBlockingQueue<>(SIZE, true);
         start();
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/CacheService.java b/app/src/main/java/ch/bailu/aat/services/cache/CacheService.java
index 522df2c4..3c676507 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/CacheService.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/CacheService.java
@@ -115,7 +115,7 @@ public class CacheService extends VirtualService {
             broadcaster.put(b);
         }
         
-        private BroadcastReceiver onFileProcessed = new BroadcastReceiver() {
+        private final BroadcastReceiver onFileProcessed = new BroadcastReceiver() {
             @Override
             public void onReceive(Context context, Intent intent) {
                 table.onObjectChanged(intent, SelfOn.this);
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/ElevationTile.java b/app/src/main/java/ch/bailu/aat/services/cache/ElevationTile.java
index 5e6913fc..373b0f89 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/ElevationTile.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/ElevationTile.java
@@ -34,7 +34,7 @@ public abstract class ElevationTile extends TileObject implements ElevationUpdat
     
     private final SynchronizedBitmap bitmap=new SynchronizedBitmap();
 
-    private final SparseArray<TilePainter> tilePainterList = new SparseArray<TilePainter>(25);
+    private final SparseArray<TilePainter> tilePainterList = new SparseArray<>(25);
     
     private final int[] toLaRaster = new int[TileObject.TILE_SIZE]; // 1. pixel to latitude | 2. pixel to dem index 
     private final int[] toLoRaster = new int[TileObject.TILE_SIZE];
@@ -156,8 +156,8 @@ public abstract class ElevationTile extends TileObject implements ElevationUpdat
 
     private class SrtmTileRasterInitializer extends ProcessHandle {
 
-        final private ArrayList<Span> laSpan = new ArrayList<Span>(5);
-        final private ArrayList<Span> loSpan = new ArrayList<Span>(5);
+        final private ArrayList<Span> laSpan = new ArrayList<>(5);
+        final private ArrayList<Span> loSpan = new ArrayList<>(5);
 
 
         @Override
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/FreeLater.java b/app/src/main/java/ch/bailu/aat/services/cache/FreeLater.java
index 5ec7f2d5..43f31da4 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/FreeLater.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/FreeLater.java
@@ -6,7 +6,7 @@ import android.util.SparseArray;
 
 public class FreeLater implements Closeable {
     private final static int INITIAL_CAPACITY=20;
-    private final SparseArray<ObjectHandle> table = new SparseArray<ObjectHandle>(INITIAL_CAPACITY);
+    private final SparseArray<ObjectHandle> table = new SparseArray<>(INITIAL_CAPACITY);
 
     
     public void freeLater(ObjectHandle handle) {
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/GpxObjectEditable.java b/app/src/main/java/ch/bailu/aat/services/cache/GpxObjectEditable.java
index fdcffb64..b95ec7b2 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/GpxObjectEditable.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/GpxObjectEditable.java
@@ -255,7 +255,7 @@ public class GpxObjectEditable extends  GpxObject {
             return editor.getList().getDelta().getBoundingBox();
         }
         
-    };
+    }
 
 
     public static class Factory extends ObjectHandle.Factory {
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/GpxObjectStatic.java b/app/src/main/java/ch/bailu/aat/services/cache/GpxObjectStatic.java
index c470fdeb..01af87f4 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/GpxObjectStatic.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/GpxObjectStatic.java
@@ -1,10 +1,8 @@
 package ch.bailu.aat.services.cache;
 
-import java.io.File;
 import java.io.IOException;
 
 import android.content.Context;
-import android.net.Uri;
 import android.util.SparseArray;
 import ch.bailu.aat.coordinates.SrtmCoordinates;
 import ch.bailu.aat.gpx.GpxList;
@@ -13,13 +11,11 @@ import ch.bailu.aat.gpx.GpxPoint;
 import ch.bailu.aat.gpx.GpxPointLinkedNode;
 import ch.bailu.aat.gpx.GpxPointNode;
 import ch.bailu.aat.gpx.GpxSegmentNode;
-import ch.bailu.aat.gpx.interfaces.GpxBigDeltaInterface;
+import ch.bailu.aat.gpx.interfaces.GpxType;
 import ch.bailu.aat.gpx.linked_list.Node;
 import ch.bailu.aat.gpx.parser.GpxListReader;
 import ch.bailu.aat.helpers.AppBroadcaster;
-import ch.bailu.aat.helpers.AppLog;
 import ch.bailu.aat.helpers.file.AbsAccess;
-import ch.bailu.aat.helpers.file.UriAccess;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.background.FileHandle;
 import ch.bailu.aat.services.dem.Dem3Tile;
@@ -29,7 +25,7 @@ import ch.bailu.aat.services.dem.ElevationUpdaterClient;
 public class GpxObjectStatic extends GpxObject implements ElevationUpdaterClient {
     
 
-    private GpxList gpxList=new GpxList(GpxBigDeltaInterface.TRK);
+    private GpxList gpxList=new GpxList(GpxType.TRK);
 
     private boolean ready=false;
     
@@ -203,7 +199,7 @@ public class GpxObjectStatic extends GpxObject implements ElevationUpdaterClient
     }
     
     private class SrtmTileCollector extends GpxListWalker {
-        public final SparseArray<SrtmCoordinates> coordinates = new SparseArray<SrtmCoordinates>();
+        public final SparseArray<SrtmCoordinates> coordinates = new SparseArray<>();
         
         @Override
         public boolean doList(GpxList l) {
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/HillshadeColorTable.java b/app/src/main/java/ch/bailu/aat/services/cache/HillshadeColorTable.java
index 45e5b678..dff899ac 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/HillshadeColorTable.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/HillshadeColorTable.java
@@ -20,7 +20,7 @@ public class HillshadeColorTable extends ObjectHandle {
     private static final int COLOR=50;
     private static final int GRAY=(COLOR << 16) | (COLOR << 8) | COLOR;
     
-    private byte table[][]=new byte[TABLE_DIM][TABLE_DIM];
+    private final byte[][] table=new byte[TABLE_DIM][TABLE_DIM];
     
     public HillshadeColorTable() {
         super(ID);
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/ObjectBroadcaster.java b/app/src/main/java/ch/bailu/aat/services/cache/ObjectBroadcaster.java
index 979e7806..d18680c1 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/ObjectBroadcaster.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/ObjectBroadcaster.java
@@ -16,7 +16,7 @@ public class ObjectBroadcaster implements Closeable {
 
     private final ServiceContext serviceContext;
 
-    private final SparseArray<ObjectBroadcastReceiver> table = new SparseArray<ObjectBroadcastReceiver>(INITIAL_CAPACITY);
+    private final SparseArray<ObjectBroadcastReceiver> table = new SparseArray<>(INITIAL_CAPACITY);
 
 
     public ObjectBroadcaster(ServiceContext sc) {
@@ -52,7 +52,7 @@ public class ObjectBroadcaster implements Closeable {
 
     }
 
-    private BroadcastReceiver onFileChanged = new BroadcastReceiver() {
+    private final BroadcastReceiver onFileChanged = new BroadcastReceiver() {
 
         @Override
         public void onReceive(Context context, Intent intent) {
@@ -62,7 +62,7 @@ public class ObjectBroadcaster implements Closeable {
         }
     };
     
-    private BroadcastReceiver onFileDownloaded = new BroadcastReceiver() {
+    private final BroadcastReceiver onFileDownloaded = new BroadcastReceiver() {
 
         @Override
         public void onReceive(Context context, Intent intent) {
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/ObjectTable.java b/app/src/main/java/ch/bailu/aat/services/cache/ObjectTable.java
index 83b2c425..a66c23cd 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/ObjectTable.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/ObjectTable.java
@@ -38,9 +38,9 @@ public class ObjectTable {
         public int hashCode() {
             return obj.hashCode();
         }
-    };
+    }
 
-    private final SparseArray<Container> table = new SparseArray<Container>(INITIAL_CAPACITY);
+    private final SparseArray<Container> table = new SparseArray<>(INITIAL_CAPACITY);
 
 
     public synchronized ObjectHandle getHandle(String id, Factory factory, SelfOn son) {
@@ -137,7 +137,7 @@ public class ObjectTable {
 
     private synchronized void trim(SelfOn self) {
 
-        while ((totalMemorySize > limit) && removeOldest(self));
+        while ((totalMemorySize > limit) && removeOldest(self)) {}
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/SynchronizedBitmap.java b/app/src/main/java/ch/bailu/aat/services/cache/SynchronizedBitmap.java
index ee860543..46b5798d 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/SynchronizedBitmap.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/SynchronizedBitmap.java
@@ -1,6 +1,5 @@
 package ch.bailu.aat.services.cache;
 
-import android.content.res.Resources;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.Color;
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/TileStackObject.java b/app/src/main/java/ch/bailu/aat/services/cache/TileStackObject.java
index f0be3bc0..0bce845b 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/TileStackObject.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/TileStackObject.java
@@ -192,8 +192,8 @@ public class TileStackObject extends ObjectHandle {
 
 
     public void deleteFromDisk() {
-        for (int i=0; i<tiles.length; i++) {
-            new File(tiles[i].id).delete();
+        for (TileContainer tile : tiles) {
+            new File(tile.id).delete();
         }
     }
 
@@ -268,12 +268,12 @@ public class TileStackObject extends ObjectHandle {
             tiles = new TileContainer[count];
 
             int x=0;
-            for (int i=0; i<s.length; i++) {
-                if (isZoomLevelSupported(s[i])) {
-                    tiles[x]=new TileContainer(
-                            s[i].getID(mapTile, context),
-                            s[i].getBitmapFilter(),
-                            s[i].getFactory(mapTile));
+            for (Source value : s) {
+                if (isZoomLevelSupported(value)) {
+                    tiles[x] = new TileContainer(
+                            value.getID(mapTile, context),
+                            value.getBitmapFilter(),
+                            value.getFactory(mapTile));
                     x++;
                 }
             }
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/Dem3Tile.java b/app/src/main/java/ch/bailu/aat/services/dem/Dem3Tile.java
index 09b185a2..11dd945d 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/Dem3Tile.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/Dem3Tile.java
@@ -85,7 +85,7 @@ public class Dem3Tile implements ElevationProvider, DemProvider {
     
     private static final int DEM3_BUFFER_DIM=1201;
     private static final int DEM3_BUFFER_OFFSET=1;
-    private static DemDimension DIMENSION= 
+    private static final DemDimension DIMENSION=
             new DemDimension(DEM3_BUFFER_DIM, DEM3_BUFFER_OFFSET);
     
     private final byte data[]= new byte[DEM3_BUFFER_DIM*DEM3_BUFFER_DIM*2];
@@ -178,7 +178,7 @@ public class Dem3Tile implements ElevationProvider, DemProvider {
                 if (zip.size()>0) {
                     int total=0;
 
-                    final ZipEntry entry = (ZipEntry) zip.entries().nextElement();
+                    final ZipEntry entry = zip.entries().nextElement();
                     input = new BufferedInputStream(zip.getInputStream(entry));
                     
                     int count=0;
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/DemGeoToIndex.java b/app/src/main/java/ch/bailu/aat/services/dem/DemGeoToIndex.java
index 346c824b..31394a54 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/DemGeoToIndex.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/DemGeoToIndex.java
@@ -13,7 +13,7 @@ public class DemGeoToIndex {
     public DemGeoToIndex(DemDimension _dim, boolean doffset) {
         dim = _dim;
         
-        if (doffset=true) {
+        if (doffset) {
             DOFFSET=dim.OFFSET;
             LAST_INDEX=dim.DIM-1-dim.OFFSET-DOFFSET;
         } else {
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/DemProvider.java b/app/src/main/java/ch/bailu/aat/services/dem/DemProvider.java
index e42d42a6..a42944b6 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/DemProvider.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/DemProvider.java
@@ -1,11 +1,11 @@
 package ch.bailu.aat.services.dem;
 
 public interface DemProvider {
-    public short getElevation(int index);
-    public DemDimension getDim();
+    short getElevation(int index);
+    DemDimension getDim();
     
-    public float getCellsize();
+    float getCellsize();
     
-    public boolean inverseLatitude();
-    public boolean inverseLongitude();
+    boolean inverseLatitude();
+    boolean inverseLongitude();
 }
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/ElevationUpdater.java b/app/src/main/java/ch/bailu/aat/services/dem/ElevationUpdater.java
index 975babc5..f96038cf 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/ElevationUpdater.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/ElevationUpdater.java
@@ -13,7 +13,7 @@ import ch.bailu.aat.services.ServiceContext;
 
 
 public class ElevationUpdater implements Closeable, ElevationProvider{
-    private final SparseArray <ElevationUpdaterEntry> pendingObjects = new SparseArray<ElevationUpdaterEntry>();
+    private final SparseArray <ElevationUpdaterEntry> pendingObjects = new SparseArray<>();
     private final ServiceContext scontext;
     private final ServiceContext serviceContext;
 
@@ -32,7 +32,7 @@ public class ElevationUpdater implements Closeable, ElevationProvider{
 
 
 
-    private BroadcastReceiver onRequestElevationUpdate = new BroadcastReceiver() {
+    private final BroadcastReceiver onRequestElevationUpdate = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             String id = AppIntent.getFile(intent);
@@ -44,7 +44,7 @@ public class ElevationUpdater implements Closeable, ElevationProvider{
     };
 
 
-    private BroadcastReceiver onFileDownloaded = new BroadcastReceiver() {
+    private final BroadcastReceiver onFileDownloaded = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             String id = AppIntent.getFile(intent);
@@ -56,7 +56,7 @@ public class ElevationUpdater implements Closeable, ElevationProvider{
         }
     };
 
-    private BroadcastReceiver onFileChanged = new BroadcastReceiver() {
+    private final BroadcastReceiver onFileChanged = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             String id = AppIntent.getFile(intent);
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/ElevationUpdaterClient.java b/app/src/main/java/ch/bailu/aat/services/dem/ElevationUpdaterClient.java
index bcd0f699..10081e06 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/ElevationUpdaterClient.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/ElevationUpdaterClient.java
@@ -4,12 +4,9 @@ import ch.bailu.aat.coordinates.SrtmCoordinates;
 import ch.bailu.aat.services.ServiceContext;
 
 public interface ElevationUpdaterClient  {
-    public SrtmCoordinates[] getSrtmTileCoordinates();
+    SrtmCoordinates[] getSrtmTileCoordinates();
     
-    public void updateFromSrtmTile(ServiceContext cs, Dem3Tile tile);
-    
-    public boolean isUpdating();
-
-  
+    void updateFromSrtmTile(ServiceContext cs, Dem3Tile tile);
     
+    boolean isUpdating();
 }
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/ElevationUpdaterEntry.java b/app/src/main/java/ch/bailu/aat/services/dem/ElevationUpdaterEntry.java
index af92de77..4a107fe3 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/ElevationUpdaterEntry.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/ElevationUpdaterEntry.java
@@ -6,7 +6,7 @@ import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.cache.ObjectHandle;
 
 public class ElevationUpdaterEntry {
-    private final SparseArray <SrtmCoordinates> tiles = new SparseArray<SrtmCoordinates>(5);
+    private final SparseArray <SrtmCoordinates> tiles = new SparseArray<>(5);
     private final String id;
     private final ServiceContext scontext;
  
@@ -30,8 +30,8 @@ public class ElevationUpdaterEntry {
     
             ElevationUpdaterClient updatable =  (ElevationUpdaterClient) handle;
             SrtmCoordinates c[] = updatable.getSrtmTileCoordinates();
-            for (int i = 0; i< c.length; i++) {
-                addSRTMTile(c[i]);
+            for (SrtmCoordinates aC : c) {
+                addSRTMTile(aC);
             }
         }
         
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/DirectorySynchronizer.java b/app/src/main/java/ch/bailu/aat/services/directory/DirectorySynchronizer.java
index b5d9575d..ad909b63 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/DirectorySynchronizer.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/DirectorySynchronizer.java
@@ -31,7 +31,7 @@ public class DirectorySynchronizer  implements Closeable {
     private OsmPreviewGenerator pendingPreviewGenerator=null;
 
     private FilesOnDisk filesToAdd=null;
-    private final ArrayList<String> filesToRemove = new ArrayList<String>();;
+    private final ArrayList<String> filesToRemove = new ArrayList<>();
 
     private SQLiteDatabase database;
 
@@ -53,7 +53,7 @@ public class DirectorySynchronizer  implements Closeable {
 
 
 
-    private BroadcastReceiver onFileChanged = new BroadcastReceiver () {
+    private final BroadcastReceiver onFileChanged = new BroadcastReceiver () {
         @Override
         public void onReceive(Context context, Intent intent) {
             state.ping();
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/FilesOnDisk.java b/app/src/main/java/ch/bailu/aat/services/directory/FilesOnDisk.java
index f324693c..06b727ef 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/FilesOnDisk.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/FilesOnDisk.java
@@ -25,19 +25,17 @@ public class FilesOnDisk {
     
     
     private static ArrayList<File> getFileList(File directory) throws IOException {
-        return new ArrayList<File>(Arrays.asList(directory.listFiles()));
+        return new ArrayList<>(Arrays.asList(directory.listFiles()));
     }
     
     
     public File findItem(String path) {
-        File file = null;
-        
         for (int i=0; i<files.size(); i++) {
             if (path.equalsIgnoreCase(files.get(i).getAbsolutePath())) {
                 return files.get(i);
             }
         }
-        return file;
+        return null;
     }
     
     
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/GpxDatabase.java b/app/src/main/java/ch/bailu/aat/services/directory/GpxDatabase.java
index 08a2aa2f..aa4304ac 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/GpxDatabase.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/GpxDatabase.java
@@ -14,14 +14,11 @@ public class GpxDatabase extends AbsDatabase{
 
     private SQLiteDatabase database;
 
-    private final File path;
 
 
 
-    public GpxDatabase (ServiceContext sc, File p) throws IOException {
+    public GpxDatabase (ServiceContext sc, File path) throws IOException {
         context=sc.getContext();
-        path=p;
-
         database = openDatabase(path);
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/GpxInformationDbSummary.java b/app/src/main/java/ch/bailu/aat/services/directory/GpxInformationDbSummary.java
index 7356807a..e96f7337 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/GpxInformationDbSummary.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/GpxInformationDbSummary.java
@@ -8,7 +8,7 @@ import ch.bailu.aat.gpx.GpxBigDelta;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.gpx.GpxList;
 import ch.bailu.aat.gpx.GpxPoint;
-import ch.bailu.aat.gpx.interfaces.GpxBigDeltaInterface;
+import ch.bailu.aat.gpx.interfaces.GpxType;
 
 public class GpxInformationDbSummary extends GpxInformation {
     private final GpxList list;
@@ -16,7 +16,7 @@ public class GpxInformationDbSummary extends GpxInformation {
     
     public GpxInformationDbSummary(File dir, Cursor cursor) {
         directory = dir;
-        list = new GpxList(GpxBigDeltaInterface.WAY);
+        list = new GpxList(GpxType.WAY);
         
         GpxBigDelta summary=new GpxBigDelta();
         GpxInformation entry = new GpxInformationDbEntry(cursor);
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/GpxIterator.java b/app/src/main/java/ch/bailu/aat/services/directory/GpxIterator.java
index 85ea7e6b..ada9616f 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/GpxIterator.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/GpxIterator.java
@@ -5,6 +5,7 @@ import ch.bailu.aat.coordinates.BoundingBox;
 import ch.bailu.aat.gpx.GpxBigDelta;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.gpx.GpxList;
+import ch.bailu.aat.gpx.interfaces.GpxType;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.cache.GpxObject;
 import ch.bailu.aat.services.cache.GpxObjectStatic;
@@ -85,7 +86,7 @@ public class GpxIterator extends AbsIterator {
     public GpxList getGpxList() {
         if (isLoaded()) 
             return ((GpxObject)handle).getGpxList();
-        else return	new GpxList(GpxBigDelta.WAY);
+        else return	new GpxList(GpxType.WAY);
     }
 
 
@@ -98,7 +99,7 @@ public class GpxIterator extends AbsIterator {
 
 
     class FileListSummary extends GpxInformation {
-        private GpxBigDelta summary;
+        private final GpxBigDelta summary;
 
         public FileListSummary() {
             summary=new GpxBigDelta();
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/Iterator.java b/app/src/main/java/ch/bailu/aat/services/directory/Iterator.java
index b5b5499c..e03e4a48 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/Iterator.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/Iterator.java
@@ -10,7 +10,7 @@ public class Iterator implements Closeable {
 
     public interface OnCursorChangedListener {
         void onCursorChanged();
-    };
+    }
 
     public static final OnCursorChangedListener NULL_LISTENER = new OnCursorChangedListener() {
         @Override
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/IteratorAbstract.java b/app/src/main/java/ch/bailu/aat/services/directory/IteratorAbstract.java
index 4bb7c341..84e7c2e8 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/IteratorAbstract.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/IteratorAbstract.java
@@ -44,7 +44,7 @@ public abstract class IteratorAbstract extends Iterator implements OnSharedPrefe
     }
 
     
-    private BroadcastReceiver  onSyncChanged = new BroadcastReceiver () {
+    private final BroadcastReceiver  onSyncChanged = new BroadcastReceiver () {
         @Override
         public void onReceive(Context context, Intent intent) {
             query();
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/IteratorFollowFile.java b/app/src/main/java/ch/bailu/aat/services/directory/IteratorFollowFile.java
index 3da46692..830ec855 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/IteratorFollowFile.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/IteratorFollowFile.java
@@ -9,7 +9,7 @@ import ch.bailu.aat.helpers.AppLog;
 import ch.bailu.aat.services.ServiceContext;
 
 public class IteratorFollowFile extends IteratorAbstract {
-    private static Closeable NULL_CLOSEABLE = new Closeable() {
+    private static final Closeable NULL_CLOSEABLE = new Closeable() {
         @Override
         public void close() {}
 
diff --git a/app/src/main/java/ch/bailu/aat/services/editor/EditorHelper.java b/app/src/main/java/ch/bailu/aat/services/editor/EditorHelper.java
index 74a7cb0e..696ada93 100644
--- a/app/src/main/java/ch/bailu/aat/services/editor/EditorHelper.java
+++ b/app/src/main/java/ch/bailu/aat/services/editor/EditorHelper.java
@@ -1,6 +1,5 @@
 package ch.bailu.aat.services.editor;
 
-import java.io.Closeable;
 import java.io.File;
 
 import ch.bailu.aat.gpx.GpxInformation;
diff --git a/app/src/main/java/ch/bailu/aat/services/editor/EditorInterface.java b/app/src/main/java/ch/bailu/aat/services/editor/EditorInterface.java
index f962aa1e..f3ee8ef2 100644
--- a/app/src/main/java/ch/bailu/aat/services/editor/EditorInterface.java
+++ b/app/src/main/java/ch/bailu/aat/services/editor/EditorInterface.java
@@ -52,20 +52,20 @@ public interface EditorInterface {
         @Override
         public void discard() {}
     };
-    public void save();
-    public void toggle();
-    public void remove();
-    public void add(GpxPoint point);
-    public void up();
-    public void down();
-    public boolean isModified();
-
-    public GpxPointNode getSelected();
-    public void select(GpxPointNode p);
-
-    public void saveAs();
-    public void clear();
-    public void redo();
-    public void undo();
-    public void discard();
+    void save();
+    void toggle();
+    void remove();
+    void add(GpxPoint point);
+    void up();
+    void down();
+    boolean isModified();
+
+    GpxPointNode getSelected();
+    void select(GpxPointNode p);
+
+    void saveAs();
+    void clear();
+    void redo();
+    void undo();
+    void discard();
 }
diff --git a/app/src/main/java/ch/bailu/aat/services/editor/GpxEditor.java b/app/src/main/java/ch/bailu/aat/services/editor/GpxEditor.java
index 57305a7f..639c6e8b 100644
--- a/app/src/main/java/ch/bailu/aat/services/editor/GpxEditor.java
+++ b/app/src/main/java/ch/bailu/aat/services/editor/GpxEditor.java
@@ -1,9 +1,9 @@
 package ch.bailu.aat.services.editor;
 
-import ch.bailu.aat.gpx.GpxBigDelta;
 import ch.bailu.aat.gpx.GpxList;
 import ch.bailu.aat.gpx.GpxPointNode;
 import ch.bailu.aat.gpx.interfaces.GpxPointInterface;
+import ch.bailu.aat.gpx.interfaces.GpxType;
 
 public class GpxEditor {
 
@@ -75,10 +75,10 @@ public class GpxEditor {
     public void toggleType() {
         int type = ring.get().getList().getDelta().getType();
 
-        if (type == GpxBigDelta.WAY) {
-            type = GpxBigDelta.RTE;
+        if (type == GpxType.WAY) {
+            type = GpxType.RTE;
         } else {
-            type = GpxBigDelta.WAY;
+            type = GpxType.WAY;
         }
         ring.get().getList().setType(type);
     }
diff --git a/app/src/main/java/ch/bailu/aat/services/editor/NodeEditor.java b/app/src/main/java/ch/bailu/aat/services/editor/NodeEditor.java
index 555cb9d7..12119946 100644
--- a/app/src/main/java/ch/bailu/aat/services/editor/NodeEditor.java
+++ b/app/src/main/java/ch/bailu/aat/services/editor/NodeEditor.java
@@ -1,7 +1,6 @@
 package ch.bailu.aat.services.editor;
 
 import ch.bailu.aat.gpx.GpxAttributes;
-import ch.bailu.aat.gpx.GpxBigDelta;
 import ch.bailu.aat.gpx.GpxList;
 import ch.bailu.aat.gpx.GpxListWalker;
 import ch.bailu.aat.gpx.GpxPoint;
@@ -9,6 +8,7 @@ import ch.bailu.aat.gpx.GpxPointFirstNode;
 import ch.bailu.aat.gpx.GpxPointNode;
 import ch.bailu.aat.gpx.GpxSegmentNode;
 import ch.bailu.aat.gpx.interfaces.GpxPointInterface;
+import ch.bailu.aat.gpx.interfaces.GpxType;
 
 public class NodeEditor {
     private final GpxList gpxList;
@@ -16,7 +16,7 @@ public class NodeEditor {
 
 
     public NodeEditor() {
-        this(GpxBigDelta.RTE);
+        this(GpxType.RTE);
     }
 
     public NodeEditor(int t) {
@@ -73,7 +73,7 @@ public class NodeEditor {
 
 
     private class Unlinker extends GpxListWalker {
-        private GpxList newList = new GpxList(gpxList.getDelta().getType());
+        private final GpxList newList = new GpxList(gpxList.getDelta().getType());
         private boolean startSegment=false;
         private NodeEditor newNode = null;
 
@@ -125,10 +125,10 @@ public class NodeEditor {
 
 
     private class Inserter extends GpxListWalker {
-        private GpxList newList = new GpxList(gpxList.getDelta().getType());
+        private final GpxList newList = new GpxList(gpxList.getDelta().getType());
         private NodeEditor newNode = new NodeEditor(gpxList.getDelta().getType());
         private boolean startSegment=false;
-        private GpxPointInterface newPoint;
+        private final GpxPointInterface newPoint;
 
 
         public Inserter(GpxPointInterface point) {
diff --git a/app/src/main/java/ch/bailu/aat/services/icons/IconMap.java b/app/src/main/java/ch/bailu/aat/services/icons/IconMap.java
index bbf59142..0987ecb9 100644
--- a/app/src/main/java/ch/bailu/aat/services/icons/IconMap.java
+++ b/app/src/main/java/ch/bailu/aat/services/icons/IconMap.java
@@ -3,14 +3,14 @@ package ch.bailu.aat.services.icons;
 import android.util.SparseArray;
 
 public class IconMap {
-    private final SparseArray<SparseArray<String>> key_list = new SparseArray<SparseArray<String>>(50);
+    private final SparseArray<SparseArray<String>> key_list = new SparseArray<>(50);
     
 
     public void add(String key, String value, String file) {
         SparseArray<String>  value_list = key_list.get(key.hashCode());
         
         if (value_list == null) {
-            value_list = new SparseArray<String>(10);
+            value_list = new SparseArray<>(10);
         }
         
         value_list.put(value.hashCode(), file);
diff --git a/app/src/main/java/ch/bailu/aat/services/icons/IconMapParser.java b/app/src/main/java/ch/bailu/aat/services/icons/IconMapParser.java
index 3754e3a9..cbfb9fde 100644
--- a/app/src/main/java/ch/bailu/aat/services/icons/IconMapParser.java
+++ b/app/src/main/java/ch/bailu/aat/services/icons/IconMapParser.java
@@ -8,7 +8,7 @@ import ch.bailu.aat.helpers.file.AbsAccess;
 public class IconMapParser {
     private final static int ICON=0, KEY=1, VALUE=2, END=3, MAX=4; 
     
-    private String[]  entries= new String[MAX];
+    private final String[]  entries= new String[MAX];
     private int entry=0;
     
     private final StringBuilder buffer = new StringBuilder();
diff --git a/app/src/main/java/ch/bailu/aat/services/icons/IconMapService.java b/app/src/main/java/ch/bailu/aat/services/icons/IconMapService.java
index a23073d6..e0590aac 100644
--- a/app/src/main/java/ch/bailu/aat/services/icons/IconMapService.java
+++ b/app/src/main/java/ch/bailu/aat/services/icons/IconMapService.java
@@ -55,7 +55,7 @@ public class IconMapService extends VirtualService {
 
         private final IconMap map = new IconMap();
 
-        private File directory;
+        private final File directory;
 
 
         public SelfOn() {
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/AutoPauseState.java b/app/src/main/java/ch/bailu/aat/services/tracker/AutoPauseState.java
index 7a1a9a51..35459e13 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/AutoPauseState.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/AutoPauseState.java
@@ -3,6 +3,7 @@ package ch.bailu.aat.services.tracker;
 import java.io.IOException;
 
 import ch.bailu.aat.R;
+import ch.bailu.aat.gpx.GpxInformation;
 
 
 public class AutoPauseState extends State {
@@ -22,7 +23,7 @@ public class AutoPauseState extends State {
 
     @Override
     public int getStateID() {
-        return STATE_AUTOPAUSED;
+        return GpxInformation.ID.STATE_AUTOPAUSED;
     }
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/NullState.java b/app/src/main/java/ch/bailu/aat/services/tracker/NullState.java
index 13a6b195..a801ab0c 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/NullState.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/NullState.java
@@ -1,12 +1,13 @@
 package ch.bailu.aat.services.tracker;
 
 import ch.bailu.aat.R;
+import ch.bailu.aat.gpx.GpxInformation;
 
 public class NullState extends State {
 
     @Override
     public int getStateID() {
-        return STATE_OFF;
+        return GpxInformation.ID.STATE_OFF;
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/OffState.java b/app/src/main/java/ch/bailu/aat/services/tracker/OffState.java
index acb58258..000873fd 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/OffState.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/OffState.java
@@ -2,6 +2,7 @@ package ch.bailu.aat.services.tracker;
 
 import java.io.IOException;
 
+import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.helpers.AppLog;
 import ch.bailu.aat.R;
 
@@ -20,7 +21,7 @@ public class OffState extends State {
 
     @Override
     public int getStateID() {
-        return STATE_OFF;
+        return GpxInformation.ID.STATE_OFF;
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/OnState.java b/app/src/main/java/ch/bailu/aat/services/tracker/OnState.java
index 8fa1a33e..cc3d31ae 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/OnState.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/OnState.java
@@ -2,6 +2,7 @@ package ch.bailu.aat.services.tracker;
 
 import java.io.IOException;
 
+import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.helpers.AppBroadcaster;
 import ch.bailu.aat.R;
 
@@ -22,7 +23,7 @@ public class OnState extends State {
 
     @Override
     public int getStateID() {
-        return STATE_ON;
+        return GpxInformation.ID.STATE_ON;
     }
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/PauseState.java b/app/src/main/java/ch/bailu/aat/services/tracker/PauseState.java
index dcdbc5f1..89e2f4e1 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/PauseState.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/PauseState.java
@@ -3,6 +3,7 @@ package ch.bailu.aat.services.tracker;
 import java.io.IOException;
 
 import ch.bailu.aat.R;
+import ch.bailu.aat.gpx.GpxInformation;
 
 
 public class PauseState extends State {
@@ -22,7 +23,7 @@ public class PauseState extends State {
 
     @Override
     public int getStateID() {
-        return STATE_PAUSE;
+        return GpxInformation.ID.STATE_PAUSE;
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/State.java b/app/src/main/java/ch/bailu/aat/services/tracker/State.java
index f71c31d2..004b742f 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/State.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/State.java
@@ -1,9 +1,8 @@
 package ch.bailu.aat.services.tracker;
 
-import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.helpers.AppBroadcaster;
 
-public abstract class State implements GpxInformation.ID {
+public abstract class State  {
     protected final TrackerInternals internal;
     
     
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/StatusIcon.java b/app/src/main/java/ch/bailu/aat/services/tracker/StatusIcon.java
index d7f7920e..661a5d7f 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/StatusIcon.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/StatusIcon.java
@@ -11,8 +11,10 @@ import ch.bailu.aat.services.ServiceContext.ServiceNotUpException;
 public class StatusIcon  {
     private final static int MY_ID=5;
     
-    private ServiceContext scontext;
-    private Notification pauseNotification, onNotification, autoPauseNotification;
+    private final ServiceContext scontext;
+    private final Notification pauseNotification;
+    private final Notification onNotification;
+    private final Notification autoPauseNotification;
     
     
     public StatusIcon(ServiceContext s) {
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/TrackLogger.java b/app/src/main/java/ch/bailu/aat/services/tracker/TrackLogger.java
index 1b29ba2d..fd67c37a 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/TrackLogger.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/TrackLogger.java
@@ -8,8 +8,8 @@ import ch.bailu.aat.gpx.GpxAttributes;
 import ch.bailu.aat.gpx.GpxList;
 import ch.bailu.aat.gpx.GpxPoint;
 import ch.bailu.aat.gpx.GpxPointNode;
-import ch.bailu.aat.gpx.interfaces.GpxBigDeltaInterface;
 import ch.bailu.aat.gpx.interfaces.GpxPointInterface;
+import ch.bailu.aat.gpx.interfaces.GpxType;
 import ch.bailu.aat.gpx.writer.GpxListWriter;
 import ch.bailu.aat.helpers.AppDirectory;
 import ch.bailu.aat.helpers.AppLog;
@@ -18,7 +18,7 @@ public class TrackLogger extends Logger {
     final public static int MIN_TRACKPOINTS=5;
 
     private boolean requestSegment=true;
-    private GpxList track=new GpxList(GpxBigDeltaInterface.TRK);
+    private final GpxList track=new GpxList(GpxType.TRK);
 
     final private File logFile;
     final private GpxListWriter writer;
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/TrackerInternals.java b/app/src/main/java/ch/bailu/aat/services/tracker/TrackerInternals.java
index 34a172cd..6cdea112 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/TrackerInternals.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/TrackerInternals.java
@@ -18,7 +18,7 @@ public class TrackerInternals
 implements OnSharedPreferenceChangeListener, Closeable ,Runnable {
 
     private final static int TIMEOUT = 1000;
-    private Timer timer;
+    private final Timer timer;
     
     
     public final ServiceContext scontext;
@@ -27,13 +27,13 @@ implements OnSharedPreferenceChangeListener, Closeable ,Runnable {
     
     
     public Logger logger;
-    public LocationStack location;
+    public final LocationStack location;
 
-    public StatusIcon statusIcon;
-    public Backlight backlight;
+    public final StatusIcon statusIcon;
+    public final Backlight backlight;
     
     
-    private Storage storage;
+    private final Storage storage;
     public SolidAutopause sautopause;
     public SolidBacklight sbacklight;
         
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/location/AccuracyFilter.java b/app/src/main/java/ch/bailu/aat/services/tracker/location/AccuracyFilter.java
index df18c55a..bc7f3b91 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/location/AccuracyFilter.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/location/AccuracyFilter.java
@@ -16,7 +16,7 @@ public class AccuracyFilter extends LocationStackChainedItem {
 
     @Override
     public void newLocation(LocationInformation location) {
-        if (location.getAccuracy()>0f && 
+        if (//location.getAccuracy()>0f &&
                 location.getAccuracy() < minAccuracy) sendLocation(location);
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/location/DirtyLocation.java b/app/src/main/java/ch/bailu/aat/services/tracker/location/DirtyLocation.java
index bfe9144b..fa17570d 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/location/DirtyLocation.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/location/DirtyLocation.java
@@ -100,6 +100,6 @@ public class DirtyLocation extends LocationStackChainedItem {
             return state;
         }
         
-    };
+    }
 
 }
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/location/LocationStack.java b/app/src/main/java/ch/bailu/aat/services/tracker/location/LocationStack.java
index f828f321..3f307bd5 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/location/LocationStack.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/location/LocationStack.java
@@ -15,7 +15,7 @@ import ch.bailu.aat.services.ServiceContext;
 public class LocationStack implements Closeable,  OnSharedPreferenceChangeListener, PresetDependent{
     private final SolidLocationProvider sprovider;
 
-    private ArrayList<LocationStackItem> itemList=new ArrayList<LocationStackItem>();
+    private final ArrayList<LocationStackItem> itemList= new ArrayList<>();
 
     private LocationStackItem provider;
     private CleanLocation clean;
@@ -51,7 +51,7 @@ public class LocationStack implements Closeable,  OnSharedPreferenceChangeListen
 
         itemList.add(new AccelerationFilter(lastItem()));
         itemList.add(new AccuracyFilter(lastItem()));
-        itemList.add(new InformationFilter(lastItem()));
+        //itemList.add(new InformationFilter(lastItem()));
 
         dirty = new DirtyLocation(lastItem(),scontext.getContext()); 
         itemList.add(dirty);
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/location/LocationStackChainedItem.java b/app/src/main/java/ch/bailu/aat/services/tracker/location/LocationStackChainedItem.java
index 9746409e..e119945a 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/location/LocationStackChainedItem.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/location/LocationStackChainedItem.java
@@ -2,7 +2,7 @@ package ch.bailu.aat.services.tracker.location;
 
 
 public abstract class LocationStackChainedItem extends LocationStackItem {
-    private LocationStackItem next;
+    private final LocationStackItem next;
     
     public LocationStackChainedItem(LocationStackItem n) {
         next = n;
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/location/MockLocation.java b/app/src/main/java/ch/bailu/aat/services/tracker/location/MockLocation.java
index 5b2c9470..49263523 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/location/MockLocation.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/location/MockLocation.java
@@ -8,26 +8,26 @@ import ch.bailu.aat.coordinates.BoundingBox;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.gpx.GpxList;
 import ch.bailu.aat.gpx.GpxPointNode;
-import ch.bailu.aat.gpx.interfaces.GpxBigDeltaInterface;
+import ch.bailu.aat.gpx.interfaces.GpxType;
 import ch.bailu.aat.gpx.parser.SimpleGpxListReader;
 import ch.bailu.aat.helpers.AppLog;
 import ch.bailu.aat.helpers.Timer;
 import ch.bailu.aat.helpers.file.FileAccess;
 import ch.bailu.aat.preferences.SolidMockLocationFile;
 
-public class MockLocation extends LocationStackChainedItem implements Runnable, GpxInformation.ID{
+public class MockLocation extends LocationStackChainedItem implements Runnable{
 
-    private static long INTERVAL=1*1000;
+    private static final long INTERVAL=1*1000;
     
     private GpxList mockData;
     private GpxPointNode node;
-    private Timer timer;
+    private final Timer timer;
     private int state;
     
     public MockLocation(Context c, LocationStackItem i) {
         super(i);
         
-        mockData = new GpxList(GpxBigDeltaInterface.TRK);
+        mockData = new GpxList(GpxType.TRK);
         timer=new Timer(this, INTERVAL);
         
         try {
@@ -35,11 +35,11 @@ public class MockLocation extends LocationStackChainedItem implements Runnable,
         	mockData = new SimpleGpxListReader(new FileAccess(file)).getGpxList();
             
             timer.kick();
-            sendState(STATE_WAIT);
+            sendState(GpxInformation.ID.STATE_WAIT);
             
         } catch (IOException e) {
             AppLog.e(c, e);
-            sendState(STATE_OFF);
+            sendState(GpxInformation.ID.STATE_OFF);
         }
     }
 
@@ -56,10 +56,10 @@ public class MockLocation extends LocationStackChainedItem implements Runnable,
         } else {
             node = (GpxPointNode) mockData.getPointList().getFirst(); 
             if (sendLocation()) {
-                sendState(STATE_ON);
+                sendState(GpxInformation.ID.STATE_ON);
                 timer.kick();
             } else {
-                sendState(STATE_OFF);
+                sendState(GpxInformation.ID.STATE_OFF);
             }
         }
     }
@@ -79,8 +79,8 @@ public class MockLocation extends LocationStackChainedItem implements Runnable,
 
     private class MockLocationInformation extends LocationInformation {
 
-        private GpxPointNode node;
-        private long creationTime = System.currentTimeMillis();
+        private final GpxPointNode node;
+        private final long creationTime = System.currentTimeMillis();
         
         public MockLocationInformation(GpxPointNode n) {
             setVisibleTrackPoint(n);
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/location/RealLocation.java b/app/src/main/java/ch/bailu/aat/services/tracker/location/RealLocation.java
index 6af71601..d3969941 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/location/RealLocation.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/location/RealLocation.java
@@ -12,16 +12,16 @@ import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.helpers.AppLog;
 import ch.bailu.aat.helpers.ContextWrapperInterface;
 
-public class RealLocation extends LocationStackChainedItem implements LocationListener, GpxInformation.ID, ContextWrapperInterface{
+public class RealLocation extends LocationStackChainedItem implements LocationListener, ContextWrapperInterface{
 
-    private String provider;
-    private Context context;
+    private final String provider;
+    private final Context context;
     private int state=-99;
     private LocationInformation lastLocation; 
 
 
     private class LocationWrapper extends LocationInformation {
-        private Location location;
+        private final Location location;
 
         public LocationWrapper(Location l) {
             location = l;
@@ -94,7 +94,7 @@ public class RealLocation extends LocationStackChainedItem implements LocationLi
         public boolean hasBearing() {
             return location.hasBearing();
         }
-    };
+    }
 
     private class NoServiceException extends Exception {
         private static final long serialVersionUID = 5318663897402154115L;
@@ -112,7 +112,7 @@ public class RealLocation extends LocationStackChainedItem implements LocationLi
     
     public void init(int gpsInterval) {
         try {
-            setState(STATE_WAIT);
+            setState(GpxInformation.ID.STATE_WAIT);
 
             final LocationManager lm = getLocationManager(context);
 
@@ -121,11 +121,9 @@ public class RealLocation extends LocationStackChainedItem implements LocationLi
             requestLocationUpdates(lm, provider, gpsInterval);
 
         } catch (NoServiceException ex) {
-            setState(STATE_NOSERVICE);
-        } catch (SecurityException ex) {
-            setState(STATE_NOACCESS);
-        } catch (IllegalArgumentException ex) {
-            setState(STATE_NOACCESS);
+            setState(GpxInformation.ID.STATE_NOSERVICE);
+        } catch (SecurityException | IllegalArgumentException ex) {
+            setState(GpxInformation.ID.STATE_NOACCESS);
         }
 
     }
@@ -182,13 +180,13 @@ public class RealLocation extends LocationStackChainedItem implements LocationLi
         try {
             getLocationManager(context).removeUpdates(this);
         } catch (NoServiceException e) {
-            state=STATE_NOSERVICE;
+            state=GpxInformation.ID.STATE_NOSERVICE;
         }
     }
 
     @Override
     public void onLocationChanged(Location l) {
-        setState(STATE_ON);
+        setState(GpxInformation.ID.STATE_ON);
         sendLocation(l);
     }
 
@@ -201,12 +199,12 @@ public class RealLocation extends LocationStackChainedItem implements LocationLi
 
     @Override
     public void onProviderDisabled(String p) {
-        setState(STATE_OFF);
+        setState(GpxInformation.ID.STATE_OFF);
     }
 
     @Override
     public void onProviderEnabled(String p) {
-        setState(STATE_WAIT);
+        setState(GpxInformation.ID.STATE_WAIT);
     }
 
 
@@ -253,12 +251,12 @@ public class RealLocation extends LocationStackChainedItem implements LocationLi
         builder.append("<br>");
 
         switch (state) {
-        case STATE_NOACCESS: builder.append("STATE_NOACCESS"); break;
-        case STATE_NOSERVICE: builder.append("STATE_NOSERVICE"); break;
-        case STATE_ON: builder.append("STATE_ON"); break;
-        case STATE_OFF: builder.append("STATE_OFF"); break;
-        case STATE_PAUSE: builder.append("STATE_PAUSE"); break;
-        case STATE_AUTOPAUSED: builder.append("STATE_AUTOPAUSED"); break;
+        case GpxInformation.ID.STATE_NOACCESS: builder.append("STATE_NOACCESS"); break;
+        case GpxInformation.ID.STATE_NOSERVICE: builder.append("STATE_NOSERVICE"); break;
+        case GpxInformation.ID.STATE_ON: builder.append("STATE_ON"); break;
+        case GpxInformation.ID.STATE_OFF: builder.append("STATE_OFF"); break;
+        case GpxInformation.ID.STATE_PAUSE: builder.append("STATE_PAUSE"); break;
+        case GpxInformation.ID.STATE_AUTOPAUSED: builder.append("STATE_AUTOPAUSED"); break;
         default: builder.append("STATE_WAIT"); break;
         }
         builder.append("<br>");
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/location/ServiceLocker.java b/app/src/main/java/ch/bailu/aat/services/tracker/location/ServiceLocker.java
index 8f38b32c..1e52dce0 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/location/ServiceLocker.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/location/ServiceLocker.java
@@ -11,7 +11,6 @@ import ch.bailu.aat.services.ServiceContext;
 
 public class ServiceLocker implements Closeable, OnSharedPreferenceChangeListener{
 
-    private final Storage storage;
     private final SolidGPSLock slock;
     private final ServiceContext scontext;
     private int gpsStatus=GpxInformation.ID.STATE_OFF;
@@ -19,7 +18,7 @@ public class ServiceLocker implements Closeable, OnSharedPreferenceChangeListene
     
     public ServiceLocker(ServiceContext sc) {
         scontext=sc;
-        storage=Storage.global(sc.getContext());
+        final Storage storage = Storage.global(sc.getContext());
         slock=new SolidGPSLock(storage);
         
         slock.register(this);
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/location/SystemLocation.java b/app/src/main/java/ch/bailu/aat/services/tracker/location/SystemLocation.java
index 21110a11..48e167e6 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/location/SystemLocation.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/location/SystemLocation.java
@@ -2,6 +2,8 @@ package ch.bailu.aat.services.tracker.location;
 
 import android.content.Context;
 import android.location.LocationManager;
+
+import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.services.ServiceContext;
 
 public class SystemLocation extends RealLocation {
@@ -47,7 +49,7 @@ public class SystemLocation extends RealLocation {
     public void sendState(int s) {
         if (locker != null) locker.autoLock(s);
         
-        if (s==STATE_ON) disableNetworkLocation();
+        if (s== GpxInformation.ID.STATE_ON) disableNetworkLocation();
         else enableNetworkLocation();
         super.sendState(s);
     }
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/location/Trigger.java b/app/src/main/java/ch/bailu/aat/services/tracker/location/Trigger.java
index 348abcaa..069a7cdb 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/location/Trigger.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/location/Trigger.java
@@ -5,8 +5,8 @@ public class Trigger {
     private static final int NEUTRAL = 0;
     private static final int HIGH = 1;
     
-    private int htrigger;
-    private int ltrigger;
+    private final int htrigger;
+    private final int ltrigger;
     
     private int trigger=NEUTRAL;
     
diff --git a/app/src/main/java/ch/bailu/aat/views/BusyButton.java b/app/src/main/java/ch/bailu/aat/views/BusyButton.java
index 1582804a..13e25a82 100644
--- a/app/src/main/java/ch/bailu/aat/views/BusyButton.java
+++ b/app/src/main/java/ch/bailu/aat/views/BusyButton.java
@@ -6,10 +6,11 @@ import android.widget.ImageButton;
 import ch.bailu.aat.R;
 import ch.bailu.aat.description.DescriptionInterface;
 import ch.bailu.aat.gpx.GpxInformation;
+import ch.bailu.aat.helpers.AppLog;
 import ch.bailu.aat.helpers.AppTheme;
 
 public class BusyButton extends ViewGroup   {
-    
+    private final int SPACE=16;
     
     private final ImageButton button;
     private final BusyIndicator busy;
@@ -21,47 +22,23 @@ public class BusyButton extends ViewGroup   {
         button.setImageResource(image_res);
         button.setClickable(false);
         AppTheme.themify(button);
-        addView(button);        
+        addView(button);
         
 
         busy = new BusyIndicator(context);
         busy.setClickable(false);
-        busy.setBackgroundResource(R.drawable.button);
         addView(busy);
 
         stopWaiting();
         setBackgroundResource(R.drawable.button);
     }
 
-
-    
-    
-    
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        // Above is my parents size requirement
-        
-        /*
-         * busy indicator will have the same size as the button
-         */
-        
-        // What is your size (calculate it!), also here is my (parents) size requirement
-         button.measure(widthMeasureSpec, heightMeasureSpec);
-         
-         widthMeasureSpec  = MeasureSpec.makeMeasureSpec (button.getMeasuredWidth(),  MeasureSpec.EXACTLY);
-         heightMeasureSpec = MeasureSpec.makeMeasureSpec (button.getMeasuredHeight(), MeasureSpec.EXACTLY);
-
-         // I wan't you to be exactly the same size as button (and as myself)
-         busy.measure(widthMeasureSpec, heightMeasureSpec);
-         
-         // This is my new size (from button)
-         setMeasuredDimension(widthMeasureSpec, heightMeasureSpec);
-    }
-
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
-        button.layout(0, 0, r-l, b-t);
-        busy.layout(0, 0, r-l, b-t);
+        if (changed) {
+            button.layout(l, t, r, b);
+            busy.layout(l+SPACE, t+SPACE, r-SPACE, b-SPACE);
+        }
     }
 
     
diff --git a/app/src/main/java/ch/bailu/aat/views/CockpitView.java b/app/src/main/java/ch/bailu/aat/views/CockpitView.java
index ec52539d..4c59ca12 100644
--- a/app/src/main/java/ch/bailu/aat/views/CockpitView.java
+++ b/app/src/main/java/ch/bailu/aat/views/CockpitView.java
@@ -4,14 +4,14 @@ package ch.bailu.aat.views;
 import android.content.Context;
 
 import ch.bailu.aat.description.*;
-
+import ch.bailu.aat.gpx.GpxInformation;
 
 
 public class CockpitView extends DescriptionViewGroup {
 
 
     public CockpitView(Context context, String key,  ContentDescription d[]) {
-        this(context, key, INFO_ID_ALL, d);
+        this(context, key, GpxInformation.ID.INFO_ID_ALL, d);
     }    
     
     public CockpitView(Context context, String key, int filter, ContentDescription d[]) {
@@ -38,7 +38,8 @@ public class CockpitView extends DescriptionViewGroup {
     
     private class Layouter {
         private final int MAX_CHARS_PER_LINE=50;
-        private int parent_width, parent_height;
+        private final int parent_width;
+        private final int parent_height;
         
         public Layouter(int w, int h) {
             int chars=1;
diff --git a/app/src/main/java/ch/bailu/aat/views/ControlBar.java b/app/src/main/java/ch/bailu/aat/views/ControlBar.java
index b78e5653..5970e0eb 100644
--- a/app/src/main/java/ch/bailu/aat/views/ControlBar.java
+++ b/app/src/main/java/ch/bailu/aat/views/ControlBar.java
@@ -10,6 +10,8 @@ import android.widget.HorizontalScrollView;
 import android.widget.ImageButton;
 import android.widget.LinearLayout;
 import android.widget.ScrollView;
+
+import ch.bailu.aat.helpers.AppLog;
 import ch.bailu.aat.helpers.AppTheme;
 import ch.bailu.aat.preferences.SolidIndexList;
 
@@ -17,25 +19,24 @@ import ch.bailu.aat.preferences.SolidIndexList;
 
 public class ControlBar extends LinearLayout {
     public final  static int DEFAULT_VISIBLE_BUTTON_COUNT=4;
-    
-    public final static int HORIZONTAL = LinearLayout.HORIZONTAL;
-    public final static int VERTICAL = LinearLayout.VERTICAL;
-    
+
+
     private final FrameLayout scroller;
+
     private final LinearLayout canvas;
 
     private final int orientation;
     private final int controlSize;
-    
+
     private OnClickListener listener1, listener2;
 
-    private ArrayList<SolidImageButton> solidButton = new ArrayList<SolidImageButton>();
-    
+    private final ArrayList<SolidImageButton> solidButton = new ArrayList<>();
+
     public ControlBar(Context context, int orientation) {
         this(context, orientation, DEFAULT_VISIBLE_BUTTON_COUNT);
     }
-    
-    
+
+
     public ControlBar(Context context, int orient, int visibleButtonCount) {
         super(context);
 
@@ -44,29 +45,28 @@ public class ControlBar extends LinearLayout {
 
         canvas = new LinearLayout(context);
         canvas.setOrientation(orientation);
-        this.setOrientation(orient);
-        
+        this.setOrientation(orientation);
+
         if (orientation == HORIZONTAL) {
             scroller = new HorizontalScrollView(context);
         } else {
             scroller = new ScrollView(context);
         }
-        
+
         scroller.addView(canvas);
         super.addView(scroller);
-
     }
 
 
     public int getControlSize() {
         return controlSize;
     }
-    
- 
+
+
     public void place(int x, int y, int length) {
         int large = length;
         int small = controlSize;
-        
+
         if (orientation == HORIZONTAL) {
             measure(large,small);
             layout(x, y, x+large, y+small);
@@ -75,15 +75,15 @@ public class ControlBar extends LinearLayout {
             layout(x, y, x+small, y+large);
         }
     }
+
     
-    
-    
+
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
         if (changed) scroller.layout(0,0,r-l,b-t);
     }
 
-    
+
     public ImageButton addImageButton(int res) {
         ImageButton button = new ImageButton(getContext());
         button.setImageResource(res);
@@ -91,9 +91,9 @@ public class ControlBar extends LinearLayout {
         this.addView(button);
         button.setOnClickListener(onClickListener);
         return button;
-    }    
-    
-    
+    }
+
+
     public Button addButton(String text) {
         Button button =  new Button(getContext());
         button.setText(text);
@@ -101,24 +101,24 @@ public class ControlBar extends LinearLayout {
         this.addView(button);
         button.setOnClickListener(onClickListener);
         return button;
-    }    
-    
-    
+    }
+
+
     @Override
     public void addView(View v) {
         canvas.addView(v, controlSize, controlSize);
-    }    
+    }
+
 
-    
     public void addViewIgnoreSize(View v) {
         canvas.addView(v);
     }
-    
-    
+
+
     public void setOnClickListener1(OnClickListener l) {
         listener1 = l;
     }
-    
+
     public void setOnClickListener2(OnClickListener l) {
         listener2 = l;
     }
@@ -129,14 +129,14 @@ public class ControlBar extends LinearLayout {
         public void onClick(View v) {
             if (listener1 != null) listener1.onClick(v);
             if (listener2 != null) listener2.onClick(v);
-        }    
+        }
     };
 
 
     public ImageButton addSolidIndexButton(SolidIndexList sIndexList) {
         SolidImageButton button = new SolidImageButton(sIndexList);
         AppTheme.themify(button);
-        canvas.addView(button, controlSize, controlSize);
+        addView(button);
         solidButton.add(button);
         return button;
     }
@@ -147,6 +147,6 @@ public class ControlBar extends LinearLayout {
             solidButton.get(i).onPreferencesChanged(key);
         }
     }
-    
+
 
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/DescriptionViewGroup.java b/app/src/main/java/ch/bailu/aat/views/DescriptionViewGroup.java
index ea2387e0..989fd94d 100644
--- a/app/src/main/java/ch/bailu/aat/views/DescriptionViewGroup.java
+++ b/app/src/main/java/ch/bailu/aat/views/DescriptionViewGroup.java
@@ -41,7 +41,7 @@ public abstract class DescriptionViewGroup extends TrackDescriptionView {
         for (TrackDescriptionView child: view) {
             child.measure(w, h);
         }
-        setMeasuredDimension(w,h);
+        setMeasuredDimension(MeasureSpec.getSize(w),MeasureSpec.getSize(h));
     }
     
     
diff --git a/app/src/main/java/ch/bailu/aat/views/DirectorySelection.java b/app/src/main/java/ch/bailu/aat/views/DirectorySelection.java
index 963bd830..d4b51304 100644
--- a/app/src/main/java/ch/bailu/aat/views/DirectorySelection.java
+++ b/app/src/main/java/ch/bailu/aat/views/DirectorySelection.java
@@ -17,6 +17,8 @@ import android.widget.CompoundButton;
 import android.widget.CompoundButton.OnCheckedChangeListener;
 import android.widget.DatePicker;
 import android.widget.LinearLayout;
+
+import ch.bailu.aat.R;
 import ch.bailu.aat.coordinates.BoundingBox;
 import ch.bailu.aat.helpers.AppLog;
 import ch.bailu.aat.helpers.AppTheme;
@@ -48,11 +50,11 @@ public class DirectorySelection extends LinearLayout implements OnClickListener
         
         LinearLayout geo = new LinearLayout(map.getContext());
         applayGeo = new SolidCheckBox(geo, sdirectory.getUseGeo());
-        applayGeo.setText("Inside bounding*");
+        applayGeo.setText(R.string.filter_geo);
 
         getBox = new Button(map.getContext());
         AppTheme.themify(getBox);
-        getBox.setText("Get bounding from map*");
+        getBox.setText(R.string.filter_geo_update);
         geo.addView(getBox);
         getBox.setOnClickListener(this);
         addView(geo);
@@ -60,14 +62,14 @@ public class DirectorySelection extends LinearLayout implements OnClickListener
         
         LinearLayout from = new LinearLayout(map.getContext());
         applayFrom = new SolidCheckBox(from, sdirectory.getUseDateStart());
-        applayFrom.setText("Start date*");
+        applayFrom.setText(R.string.filter_date_start);
 
         new DateSet(from, sdirectory.getDateStart());
         addView(from);
 
         LinearLayout to = new LinearLayout(map.getContext()); 
         applayTo = new SolidCheckBox(to, sdirectory.getUseDateEnd());
-        applayTo.setText("End date*");
+        applayTo.setText(R.string.filter_date_to);
 
         new DateSet(to, sdirectory.getDateEnd());
         addView(to);
@@ -107,12 +109,12 @@ public class DirectorySelection extends LinearLayout implements OnClickListener
     
     
     public class DateSet implements OnClickListener, OnDateSetListener {
-        private Button        button;
-        private java.text.DateFormat  formater;
+        private final Button        button;
+        private final java.text.DateFormat  formater;
         
-        private GregorianCalendar calendar=new GregorianCalendar();
+        private final GregorianCalendar calendar=new GregorianCalendar();
         
-        private SolidLong slong;
+        private final SolidLong slong;
         
         public DateSet(ViewGroup parent, SolidLong l) {
             slong = l;
@@ -153,9 +155,4 @@ public class DirectorySelection extends LinearLayout implements OnClickListener
         }
 
     }
-
-
-   
-
-    
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/FeaturesList.java b/app/src/main/java/ch/bailu/aat/views/FeaturesList.java
index a3bb9ab2..d09f63ac 100644
--- a/app/src/main/java/ch/bailu/aat/views/FeaturesList.java
+++ b/app/src/main/java/ch/bailu/aat/views/FeaturesList.java
@@ -45,7 +45,7 @@ OnHaveFeature {
     }
 
 
-    private final ArrayList<ListData> data = new ArrayList<ListData>();
+    private final ArrayList<ListData> data = new ArrayList<>();
 
 
     public FeaturesList(ServiceContext sc, FileAccess file) {
@@ -203,7 +203,7 @@ OnHaveFeature {
 
                 File file;
                 try {
-                    file = new File(AppDirectory.getDataDirectory(getContext(), AppDirectory.DIR_OSM_FEATURES_PREPARSED),d.name.toString());
+                    file = new File(AppDirectory.getDataDirectory(getContext(), AppDirectory.DIR_OSM_FEATURES_PREPARSED), d.name);
                     String content = new FileAccess(file).contentToString();
                     ActivitySwitcher.start(getContext(), HtmlViewActivity.class, content);
 
diff --git a/app/src/main/java/ch/bailu/aat/views/GpxListEntryView.java b/app/src/main/java/ch/bailu/aat/views/GpxListEntryView.java
index 5c64454f..82a939f3 100644
--- a/app/src/main/java/ch/bailu/aat/views/GpxListEntryView.java
+++ b/app/src/main/java/ch/bailu/aat/views/GpxListEntryView.java
@@ -22,7 +22,7 @@ public class GpxListEntryView extends  DescriptionViewGroup {
 
     
     public GpxListEntryView(ServiceContext sc, ContentDescription[] description) {
-        super(sc.getContext(), SOLID_KEY, INFO_ID_ALL);
+        super(sc.getContext(), SOLID_KEY, GpxInformation.ID.INFO_ID_ALL);
 
         scontext=sc;
 
@@ -80,11 +80,11 @@ public class GpxListEntryView extends  DescriptionViewGroup {
 
     private class SubEntryView extends TrackDescriptionView {
 
-        TextView entry;
-        ContentDescription data;
+        final TextView entry;
+        final ContentDescription data;
 
         public SubEntryView(Context context, String key, ContentDescription d) {
-            super(context, key,INFO_ID_ALL);
+            super(context, key,GpxInformation.ID.INFO_ID_ALL);
 
             data=d;
 
diff --git a/app/src/main/java/ch/bailu/aat/views/GpxListView.java b/app/src/main/java/ch/bailu/aat/views/GpxListView.java
index ea8c3f76..75aeb42c 100644
--- a/app/src/main/java/ch/bailu/aat/views/GpxListView.java
+++ b/app/src/main/java/ch/bailu/aat/views/GpxListView.java
@@ -34,7 +34,7 @@ public class GpxListView extends ListView implements OnCursorChangedListener {
     public void setAdapter(ServiceContext scontext, Iterator iterator) {
         iterator.setOnCursorChangedLinsener(this);
         setAdapter(new IteratorAdapter(scontext, iterator));
-    };
+    }
     
 
     @Override
diff --git a/app/src/main/java/ch/bailu/aat/views/MainControlBar.java b/app/src/main/java/ch/bailu/aat/views/MainControlBar.java
index 0b21d72a..e3534ee1 100644
--- a/app/src/main/java/ch/bailu/aat/views/MainControlBar.java
+++ b/app/src/main/java/ch/bailu/aat/views/MainControlBar.java
@@ -1,6 +1,9 @@
 package ch.bailu.aat.views;
 
 import android.view.View;
+import android.widget.LinearLayout;
+
+import ch.bailu.aat.R;
 import ch.bailu.aat.helpers.AppLayout;
 import ch.bailu.aat.menus.OptionsMenu;
 import ch.bailu.aat.services.ServiceContext;
@@ -18,7 +21,8 @@ public class MainControlBar extends ControlBar {
     public MainControlBar(final ServiceContext scontext, int button) {
         super(scontext.getContext(), AppLayout.getOrientationAlongSmallSide(scontext.getContext()), button);
         menu = new BusyButton(scontext.getContext(), ch.bailu.aat.R.drawable.open_menu_inverse);
-        this.addView(menu);
+        addView(menu);
+
         menu.setOnClickListener(new OnClickListener() {
 
             @Override
diff --git a/app/src/main/java/ch/bailu/aat/views/MultiView.java b/app/src/main/java/ch/bailu/aat/views/MultiView.java
index ca011321..10bea3d7 100644
--- a/app/src/main/java/ch/bailu/aat/views/MultiView.java
+++ b/app/src/main/java/ch/bailu/aat/views/MultiView.java
@@ -8,20 +8,20 @@ import ch.bailu.aat.preferences.Storage;
 
 public class MultiView extends TrackDescriptionView {
 
-    private  SparseArray<GpxInformation> informationMap = 
-        new SparseArray<GpxInformation>(5);
+    private final SparseArray<GpxInformation> informationMap =
+            new SparseArray<>(5);
     
-    private TrackDescriptionView[] data;
+    private final TrackDescriptionView[] viewList;
     private int active=0;
     
     public MultiView(Context context, String key, int filter, TrackDescriptionView[] d) {
         super(context, key, filter);
 
-        data = d;
-        
-        for (int i=0; i<data.length; i++) {
-            data[i].setVisibility(GONE);
-            addView(data[i]);
+        viewList = d;
+
+        for (TrackDescriptionView aData : viewList) {
+            aData.setVisibility(GONE);
+            addView(aData);
         }
         
         setActive(Storage.activity(context).readInteger(solidKey + "_index"));
@@ -42,19 +42,19 @@ public class MultiView extends TrackDescriptionView {
 
     public void setActive(int a) {
         if (a != active) {
-            data[active].setVisibility(GONE);
+            viewList[active].setVisibility(GONE);
         }
 
         active=a;
-        if (active >= data.length) active=0;
-        else if (active < 0) active=data.length-1;
+        if (active >= viewList.length) active=0;
+        else if (active < 0) active= viewList.length-1;
         
         
-        data[active].setVisibility(VISIBLE);
-        data[active].bringToFront();
+        viewList[active].setVisibility(VISIBLE);
+        viewList[active].bringToFront();
         
         for (int i=0; i< informationMap.size(); i++) 
-            data[active].updateGpxContent(informationMap.valueAt(i));
+            viewList[active].updateGpxContent(informationMap.valueAt(i));
     }
     
     
@@ -62,27 +62,31 @@ public class MultiView extends TrackDescriptionView {
     public void updateGpxContent(GpxInformation info) {
         if (filter.pass(info)) {
             informationMap.put(info.getID(), info);
-            for (int i=0; i<data.length; i++) data[i].updateGpxContent(info);
+            for (int i = 0; i< viewList.length; i++) viewList[i].updateGpxContent(info);
         }
     }
 
     @Override
     protected void onMeasure(int wSpec, int hSpec) {
+        int width = MeasureSpec.getSize(wSpec);
+        int height = MeasureSpec.getSize(hSpec);
+
+
         // As big as possible
-        wSpec  = MeasureSpec.makeMeasureSpec (MeasureSpec.getSize(wSpec),  MeasureSpec.EXACTLY);
-        hSpec  = MeasureSpec.makeMeasureSpec (MeasureSpec.getSize(hSpec),  MeasureSpec.EXACTLY);
+        wSpec  = MeasureSpec.makeMeasureSpec (width,  MeasureSpec.EXACTLY);
+        hSpec  = MeasureSpec.makeMeasureSpec (height,  MeasureSpec.EXACTLY);
 
         //int width=0,height=0;
-        for (int i=0; i<data.length; i++) {
-            data[i].measure(wSpec,hSpec);
+        for (TrackDescriptionView view : viewList) {
+            view.measure(wSpec, hSpec);
         }
-        setMeasuredDimension(wSpec, hSpec);
+        setMeasuredDimension(width, height);
     }
     
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
-        for (int i=0; i<data.length; i++) {
-            data[i].layout(0, 0, r-l, b-t);
+        for (TrackDescriptionView view : viewList) {
+            view.layout(0, 0, r-l, b-t);
         }
     }
     
@@ -90,6 +94,6 @@ public class MultiView extends TrackDescriptionView {
     public void onDetachedFromWindow() {
         Storage.activity(getContext()).writeInteger(solidKey + "_index",active);
         super.onDetachedFromWindow();
-    };
+    }
 
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/NodeEntryView.java b/app/src/main/java/ch/bailu/aat/views/NodeEntryView.java
index 1c5bd700..97c335a1 100644
--- a/app/src/main/java/ch/bailu/aat/views/NodeEntryView.java
+++ b/app/src/main/java/ch/bailu/aat/views/NodeEntryView.java
@@ -42,16 +42,18 @@ public class NodeEntryView extends ViewGroup {
     @Override
     protected void onMeasure(int wspec, int hspec) {
         final int width  = MeasureSpec.getSize(wspec);
-        final int wspecText = MeasureSpec.makeMeasureSpec(width-OsmPreviewGenerator.BITMAP_SIZE, MeasureSpec.EXACTLY);
+        final int height = OsmPreviewGenerator.BITMAP_SIZE; // MeasureSpec.getSize(hspec);
+
+        final int wspecText = MeasureSpec.makeMeasureSpec(
+                width-OsmPreviewGenerator.BITMAP_SIZE, MeasureSpec.EXACTLY);
 
         hspec = MeasureSpec.makeMeasureSpec(OsmPreviewGenerator.BITMAP_SIZE, MeasureSpec.EXACTLY);
-        wspec = MeasureSpec.makeMeasureSpec(width, MeasureSpec.EXACTLY);
-        
+
         map.measure(hspec, hspec);
         text.measure(wspecText, hspec);
 
-        
-        this.setMeasuredDimension(wspec, hspec);
+        //super.onMeasure(wspec, hspec);
+        setMeasuredDimension(width, height);
     }
 
 
diff --git a/app/src/main/java/ch/bailu/aat/views/NodeListView.java b/app/src/main/java/ch/bailu/aat/views/NodeListView.java
index d7199792..c4e89331 100644
--- a/app/src/main/java/ch/bailu/aat/views/NodeListView.java
+++ b/app/src/main/java/ch/bailu/aat/views/NodeListView.java
@@ -39,7 +39,7 @@ public class NodeListView extends TrackDescriptionView {
         hSpec  = MeasureSpec.makeMeasureSpec (MeasureSpec.getSize(hSpec),  MeasureSpec.EXACTLY);
 
         list.measure(wSpec, hSpec);
-        setMeasuredDimension(wSpec, hSpec);
+        setMeasuredDimension(MeasureSpec.getSize(wSpec), MeasureSpec.getSize(hSpec));
     }
 
     @Override
@@ -57,7 +57,7 @@ public class NodeListView extends TrackDescriptionView {
 
     private class MyWayListView extends ListView
     implements ListAdapter, android.widget.AdapterView.OnItemClickListener {
-        private final SparseArray<DataSetObserver> observer=new SparseArray<DataSetObserver>(5);
+        private final SparseArray<DataSetObserver> observer= new SparseArray<>(5);
 
         private GpxListArray array = new GpxListArray(GpxList.NULL_ROUTE);
         private GpxInformation info = GpxInformation.NULL;
diff --git a/app/src/main/java/ch/bailu/aat/views/NumberView.java b/app/src/main/java/ch/bailu/aat/views/NumberView.java
index 41773d73..9edb9ee4 100644
--- a/app/src/main/java/ch/bailu/aat/views/NumberView.java
+++ b/app/src/main/java/ch/bailu/aat/views/NumberView.java
@@ -29,7 +29,7 @@ public class NumberView extends TrackDescriptionView {
 
     
     public NumberView(ContentDescription data) {
-        this(data, INFO_ID_ALL);
+        this(data, GpxInformation.ID.INFO_ID_ALL);
     }
 
     private void setNumberFont(int size) {
diff --git a/app/src/main/java/ch/bailu/aat/views/PreviewView.java b/app/src/main/java/ch/bailu/aat/views/PreviewView.java
index ad0c42f8..944fd00f 100644
--- a/app/src/main/java/ch/bailu/aat/views/PreviewView.java
+++ b/app/src/main/java/ch/bailu/aat/views/PreviewView.java
@@ -108,7 +108,7 @@ public class PreviewView extends ImageView {
     }
 
 
-    private BroadcastReceiver onFileChanged = new BroadcastReceiver () {
+    private final BroadcastReceiver onFileChanged = new BroadcastReceiver () {
         @Override
         public void onReceive(Context context, Intent intent) {
             final String file = imageHandle.toString();
diff --git a/app/src/main/java/ch/bailu/aat/views/SolidImageButton.java b/app/src/main/java/ch/bailu/aat/views/SolidImageButton.java
index e87922f3..9e38dee3 100644
--- a/app/src/main/java/ch/bailu/aat/views/SolidImageButton.java
+++ b/app/src/main/java/ch/bailu/aat/views/SolidImageButton.java
@@ -33,7 +33,7 @@ public class SolidImageButton extends ImageButton {
     }
 
     
-    private OnClickListener onClick = new OnClickListener() {
+    private final OnClickListener onClick = new OnClickListener() {
         @Override
         public void onClick(View v) {
             sList.cycle();
diff --git a/app/src/main/java/ch/bailu/aat/views/SummaryListView.java b/app/src/main/java/ch/bailu/aat/views/SummaryListView.java
index 43638b11..f66a01ad 100644
--- a/app/src/main/java/ch/bailu/aat/views/SummaryListView.java
+++ b/app/src/main/java/ch/bailu/aat/views/SummaryListView.java
@@ -2,6 +2,8 @@ package ch.bailu.aat.views;
 
 import ch.bailu.aat.description.ContentDescription;
 import ch.bailu.aat.gpx.GpxInformation;
+import ch.bailu.aat.helpers.AppLog;
+
 import android.content.Context;
 import android.graphics.Color;
 import android.view.View;
@@ -10,6 +12,8 @@ import android.widget.BaseAdapter;
 import android.widget.ListView;
 import android.widget.TextView;
 
+import java.util.Locale;
+
 public class SummaryListView extends TrackDescriptionView {
     private final ListView list;
     
@@ -40,11 +44,11 @@ public class SummaryListView extends TrackDescriptionView {
                 data[i].updateGpxContent(info);
                 updateLabel(i);
             }
-        }   
+        }
     }
 
     private void updateLabel(int i) {
-        String text=String.format("%s:  %s%s", 
+        String text=String.format((Locale) null, "%s:  %s%s",
                 data[i].getLabel(), 
                 data[i].getValue(), 
                 data[i].getUnit());
@@ -54,18 +58,23 @@ public class SummaryListView extends TrackDescriptionView {
 
     @Override
     protected void onLayout(boolean c, int l, int t, int r, int b) {
-        if (c) list.layout(0, 0, r-l, b-t);
+        list.layout(0, 0, r-l, b-t);
     }
 
 
-    private int parentWidthHack=2000;
 
     @Override
-    protected void onMeasure(int w, int h) {
-        parentWidthHack=MeasureSpec.getSize(w);
-        super.onMeasure(w, h);
+    public void onMeasure(int w, int h) {
+        int width = MeasureSpec.getSize(w);
+        int height = MeasureSpec.getSize(h);
+
+        w = MeasureSpec.makeMeasureSpec(width, MeasureSpec.EXACTLY);
+        h = MeasureSpec.makeMeasureSpec(height, MeasureSpec.EXACTLY);
+        list.measure(w,h);
+        setMeasuredDimension(width, height);
     }
 
+
     private class MyTextView extends TextView {
 
         public MyTextView(Context context) {
@@ -75,7 +84,8 @@ public class SummaryListView extends TrackDescriptionView {
 
         @Override
         public void onMeasure(int w, int h) {
-            w = MeasureSpec.makeMeasureSpec(parentWidthHack, MeasureSpec.EXACTLY);
+            int width = MeasureSpec.getSize(w);
+            w = MeasureSpec.makeMeasureSpec(width, MeasureSpec.EXACTLY);
             super.onMeasure(w, h);
         }
     }
@@ -87,6 +97,7 @@ public class SummaryListView extends TrackDescriptionView {
 
         @Override
         public View getView(int position, View convertView, ViewGroup parent) {
+            AppLog.d(this, label[position].getText().toString());
             return label[position];
         }
 
diff --git a/app/src/main/java/ch/bailu/aat/views/TagEditor.java b/app/src/main/java/ch/bailu/aat/views/TagEditor.java
index 94ef3331..7c343dd4 100644
--- a/app/src/main/java/ch/bailu/aat/views/TagEditor.java
+++ b/app/src/main/java/ch/bailu/aat/views/TagEditor.java
@@ -63,7 +63,7 @@ public class TagEditor extends LinearLayout {
     }
 
 
-    private BroadcastReceiver onSelectMapFeature = new BroadcastReceiver() {
+    private final BroadcastReceiver onSelectMapFeature = new BroadcastReceiver() {
 
         @Override
         public void onReceive(Context context, Intent intent) {
diff --git a/app/src/main/java/ch/bailu/aat/views/TrackDescriptionView.java b/app/src/main/java/ch/bailu/aat/views/TrackDescriptionView.java
index 512cd0a2..a7d2c1a0 100644
--- a/app/src/main/java/ch/bailu/aat/views/TrackDescriptionView.java
+++ b/app/src/main/java/ch/bailu/aat/views/TrackDescriptionView.java
@@ -6,7 +6,7 @@ import ch.bailu.aat.description.DescriptionInterface;
 import ch.bailu.aat.gpx.GpxInformation;
 
 public abstract class TrackDescriptionView extends ViewGroup 
-implements DescriptionInterface, GpxInformation.ID {
+implements DescriptionInterface {
     public static final String DEFAULT_SOLID_KEY=TrackDescriptionView.class.getSimpleName();
     
     
@@ -30,7 +30,7 @@ implements DescriptionInterface, GpxInformation.ID {
         }
         
         public boolean pass(GpxInformation info) {
-            return (id==INFO_ID_ALL || id==info.getID());
+            return (id==GpxInformation.ID.INFO_ID_ALL || id==info.getID());
         }
     }
     
diff --git a/app/src/main/java/ch/bailu/aat/views/VerticalLayoutView.java b/app/src/main/java/ch/bailu/aat/views/VerticalLayoutView.java
index 3ce0b969..9ecf43da 100644
--- a/app/src/main/java/ch/bailu/aat/views/VerticalLayoutView.java
+++ b/app/src/main/java/ch/bailu/aat/views/VerticalLayoutView.java
@@ -16,7 +16,7 @@ public class VerticalLayoutView extends DescriptionViewGroup {
         
         for (TrackDescriptionView view: viewList) 
             layout.addView(view);
-        
+
         addView(layout);
     }
 
@@ -29,15 +29,15 @@ public class VerticalLayoutView extends DescriptionViewGroup {
         int height=MeasureSpec.getSize(hSpec);
         wSpec  = MeasureSpec.makeMeasureSpec (width,  MeasureSpec.EXACTLY);
         hSpec  = MeasureSpec.makeMeasureSpec (height,  MeasureSpec.EXACTLY);
-        setMeasuredDimension(wSpec, hSpec);
+        setMeasuredDimension(width, height);
         
         layout.measure(wSpec, hSpec);
-    }    
+    }
 
 
 
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
-        layout.layout(0, 0, r-l, b-t);
+        if (changed) layout.layout(l, t, r, b);
     }
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/VerticalView.java b/app/src/main/java/ch/bailu/aat/views/VerticalView.java
index 481ec933..94b3b6cc 100644
--- a/app/src/main/java/ch/bailu/aat/views/VerticalView.java
+++ b/app/src/main/java/ch/bailu/aat/views/VerticalView.java
@@ -2,58 +2,67 @@ package ch.bailu.aat.views;
 
 import android.content.Context;
 
-public class VerticalView extends DescriptionViewGroup {
-    
-    public VerticalView(Context context, String key, int filter, TrackDescriptionView[] viewList) {
+import ch.bailu.aat.gpx.GpxInformation;
+
+public class VerticalView extends TrackDescriptionView {
+
+    private final TrackDescriptionView[] viewList;
+
+
+    public VerticalView(Context context, String key, int filter, TrackDescriptionView[] vl) {
         super(context, key, filter);
-        init(viewList);
+        viewList = vl;
         
-        for (TrackDescriptionView view: viewList) 
+        for (TrackDescriptionView view: viewList) {
             addView(view);
+        }
     }
 
 
     
-    
+
     @Override
     protected void onMeasure(int wSpec, int hSpec) {
-        if (getDescriptionCount()>0) {
-            int width = MeasureSpec.getSize(wSpec);
-            int height=MeasureSpec.getSize(hSpec);
-        
-            int hSpecChild  = 
-                    MeasureSpec.makeMeasureSpec (height/getDescriptionCount(), MeasureSpec.EXACTLY);
-            
-            wSpec  = MeasureSpec.makeMeasureSpec (width,  MeasureSpec.EXACTLY);
-            hSpec  = MeasureSpec.makeMeasureSpec (height,  MeasureSpec.EXACTLY);
-
-            for (int i=0; i < getDescriptionCount(); i++) {
-                getDescriptionView(i).measure(wSpec, hSpecChild);
-            }
+        final int width = MeasureSpec.getSize(wSpec);
+        final int height = MeasureSpec.getSize(hSpec);
+
+        if (viewList.length > 0) {
+            wSpec = MeasureSpec.makeMeasureSpec (width,  MeasureSpec.EXACTLY);
+            hSpec = MeasureSpec.makeMeasureSpec (height/viewList.length, MeasureSpec.EXACTLY);
 
-            setMeasuredDimension(wSpec, hSpec);
+            for (TrackDescriptionView view : viewList) {
+                view.measure(wSpec, hSpec);
+            }
         }
+
+        setMeasuredDimension(width, height);
     }    
 
     
     
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
-        if (getDescriptionCount()>0) {
-            int height=(b-t) / getDescriptionCount();
-            
+        if (viewList.length>0) {
+            final int height=(b-t) / viewList.length;
+
+            r=r-l;
             l=t=0;
-            
-            for (int i=0; i < getDescriptionCount(); i++) {
+
+            for (TrackDescriptionView view : viewList) {
                 b=t+height;
                 
-                getDescriptionView(i).layout(l, t, r, b);
+                view.layout(l, t, r, b);
                 
                 t+=height;
-
             }
         }
-
     }
 
+
+    @Override
+    public void updateGpxContent(GpxInformation info) {
+        if (filter.pass(info)) {
+            for (int i = 0; i< viewList.length; i++) viewList[i].updateGpxContent(info);
+        }
+    }
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/ViewWrapper.java b/app/src/main/java/ch/bailu/aat/views/ViewWrapper.java
index 3185c8a0..65788cd3 100644
--- a/app/src/main/java/ch/bailu/aat/views/ViewWrapper.java
+++ b/app/src/main/java/ch/bailu/aat/views/ViewWrapper.java
@@ -8,7 +8,7 @@ public class ViewWrapper extends TrackDescriptionView {
     private final View view;
     
     public ViewWrapper(View v) {
-        super(v.getContext(), DEFAULT_SOLID_KEY,INFO_ID_ALL);
+        super(v.getContext(), DEFAULT_SOLID_KEY,GpxInformation.ID.INFO_ID_ALL);
         view = v;
         addView(view);
     }
@@ -25,10 +25,13 @@ public class ViewWrapper extends TrackDescriptionView {
 
         
         view.measure(wSpec, hSpec);
+
+        /*
         wSpec  = MeasureSpec.makeMeasureSpec (view.getMeasuredWidth(),  MeasureSpec.EXACTLY);
         hSpec  = MeasureSpec.makeMeasureSpec (view.getMeasuredHeight(),  MeasureSpec.EXACTLY);
+        */
 
-        setMeasuredDimension(wSpec, hSpec);
+        setMeasuredDimension(view.getMeasuredWidth(), view.getMeasuredHeight());
     }
     
     
diff --git a/app/src/main/java/ch/bailu/aat/views/graph/AbsGraphView.java b/app/src/main/java/ch/bailu/aat/views/graph/AbsGraphView.java
index 88633c0b..1b44b67f 100644
--- a/app/src/main/java/ch/bailu/aat/views/graph/AbsGraphView.java
+++ b/app/src/main/java/ch/bailu/aat/views/graph/AbsGraphView.java
@@ -11,15 +11,15 @@ public abstract class AbsGraphView extends TrackDescriptionView {
     
     public final static int SAMPLE_WIDTH_PIXEL=5;
     
-    private SolidUnit sunit;
-    private StringBuilder builder = new StringBuilder();
+    private final SolidUnit sunit;
+    private final StringBuilder builder = new StringBuilder();
     
     private boolean markerMode=false;
     
     private GpxList gpxList = GpxList.NULL_TRACK;
     
     public AbsGraphView(Context context, String key) {
-        super(context, key,INFO_ID_ALL);
+        super(context, key,GpxInformation.ID.INFO_ID_ALL);
         setWillNotDraw(false);
         sunit = new SolidUnit(context);
     }
@@ -43,8 +43,10 @@ public abstract class AbsGraphView extends TrackDescriptionView {
     
     @Override
     public void onDraw(Canvas c) {
-        markerMode = gpxList.getMarkerList().size() > getWidth() / SAMPLE_WIDTH_PIXEL;
-        plot(c, gpxList, sunit, markerMode);
+        if (getWidth() > 0 && getHeight() > 0) {
+            markerMode = gpxList.getMarkerList().size() > getWidth() / SAMPLE_WIDTH_PIXEL;
+            plot(c, gpxList, sunit, markerMode);
+        }
     }
 
     
diff --git a/app/src/main/java/ch/bailu/aat/views/graph/ColorTable.java b/app/src/main/java/ch/bailu/aat/views/graph/ColorTable.java
index f8c5254d..a137f4a8 100644
--- a/app/src/main/java/ch/bailu/aat/views/graph/ColorTable.java
+++ b/app/src/main/java/ch/bailu/aat/views/graph/ColorTable.java
@@ -6,9 +6,9 @@ public class ColorTable {
     public final static int GRADIENT_SIZE=256;
     public final static int MAX=GRADIENT_SIZE-1;
     
-    private int color_table[];
+    private final int[] color_table;
 
-    public static ColorTable altitude = new AltitudeColorTable();
+    public static final ColorTable altitude = new AltitudeColorTable();
     
     public ColorTable(int spectrum, int gradients) {
         Scaler scaler=new Scaler(gradients*GRADIENT_SIZE, spectrum);
diff --git a/app/src/main/java/ch/bailu/aat/views/graph/GraphPlotter.java b/app/src/main/java/ch/bailu/aat/views/graph/GraphPlotter.java
index 6a8e3730..2dfd87f2 100644
--- a/app/src/main/java/ch/bailu/aat/views/graph/GraphPlotter.java
+++ b/app/src/main/java/ch/bailu/aat/views/graph/GraphPlotter.java
@@ -10,13 +10,14 @@ public class GraphPlotter {
     private static final int YLABEL_XOFFSET=50;
     private static final int YLABEL_YOFFSET=30;
     
-    private Scaler xscaler;
-    private InvertetOffsetScaler yscaler;
+    private final Scaler xscaler;
+    private final InvertetOffsetScaler yscaler;
     
-    private Paint paint;
-    private Canvas canvas;
+    private final Paint paint;
+    private final Canvas canvas;
     
-    private int width,height;
+    private final int width;
+    private final int height;
     
     private Point pointA=new Point(-5,-5), pointB = new Point(-5,-5);
     
diff --git a/app/src/main/java/ch/bailu/aat/views/graph/InvertetOffsetScaler.java b/app/src/main/java/ch/bailu/aat/views/graph/InvertetOffsetScaler.java
index 37e7f6cd..b70467fc 100644
--- a/app/src/main/java/ch/bailu/aat/views/graph/InvertetOffsetScaler.java
+++ b/app/src/main/java/ch/bailu/aat/views/graph/InvertetOffsetScaler.java
@@ -3,7 +3,7 @@ package ch.bailu.aat.views.graph;
 
 public class InvertetOffsetScaler {
 
-    private Scaler scaler;
+    private final Scaler scaler;
     private float min=Float.MAX_VALUE,max=0;
     public InvertetOffsetScaler(int pixel) {
         scaler=new Scaler(pixel);
diff --git a/app/src/main/java/ch/bailu/aat/views/map/AbsOsmTileProvider.java b/app/src/main/java/ch/bailu/aat/views/map/AbsOsmTileProvider.java
index b2226a84..88c4e5bc 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/AbsOsmTileProvider.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/AbsOsmTileProvider.java
@@ -48,9 +48,9 @@ public abstract class AbsOsmTileProvider extends AbsTileProvider {
         builder.append('/');
         builder.append(mapTile.getY());
 
-        for (int i=0; i<sources.length; i++) {
+        for (Source source : sources) {
             builder.append('/');
-            builder.append(sources[i].getName()+sources[i].getBitmapFilter().toString());
+            builder.append(source.getName() + source.getBitmapFilter().toString());
         }
         return builder.toString();
     }
@@ -81,7 +81,7 @@ public abstract class AbsOsmTileProvider extends AbsTileProvider {
     }
 
     @Override
-    public void setTileSource(ITileSource s) {};
+    public void setTileSource(ITileSource s) {}
 
 
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/map/AbsOsmView.java b/app/src/main/java/ch/bailu/aat/views/map/AbsOsmView.java
index 3340453c..0360562c 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/AbsOsmView.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/AbsOsmView.java
@@ -23,7 +23,7 @@ public abstract class AbsOsmView extends TrackDescriptionView {
     
     
     public AbsOsmView(Context context, String key, AbsTileProvider provider, int tileSize) {
-        super(context, key,INFO_ID_ALL);
+        super(context, key, GpxInformation.ID.INFO_ID_ALL);
         
         map = createMapView(provider, tileSize);
         addView(map);
@@ -55,15 +55,16 @@ public abstract class AbsOsmView extends TrackDescriptionView {
         hSpec  = MeasureSpec.makeMeasureSpec (MeasureSpec.getSize(hSpec),  MeasureSpec.EXACTLY);
 
         map.measure(wSpec, hSpec);
-        setMeasuredDimension(wSpec, hSpec);
+        setMeasuredDimension(map.getMeasuredWidth(), map.getMeasuredHeight());
     }
     
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
-        map.layout(0, 0, r-l, b-t);
-        
-        if (pendingFrameBounding != null) 
-            frameBoundingBox(pendingFrameBounding);
+        if (changed) {
+            map.layout(0, 0, r-l, b-t);
+            if (pendingFrameBounding != null)
+                frameBoundingBox(pendingFrameBounding);
+        }
     }
     
     
diff --git a/app/src/main/java/ch/bailu/aat/views/map/CachedTileProvider.java b/app/src/main/java/ch/bailu/aat/views/map/CachedTileProvider.java
index c4b198e9..629657c9 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/CachedTileProvider.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/CachedTileProvider.java
@@ -20,7 +20,7 @@ public class CachedTileProvider extends AbsOsmTileProvider {
     private final Context context;
 
 
-    private BroadcastReceiver onFileChanged = new BroadcastReceiver() {
+    private final BroadcastReceiver onFileChanged = new BroadcastReceiver() {
 
         @Override
         public void onReceive(Context context, Intent intent) {
diff --git a/app/src/main/java/ch/bailu/aat/views/map/OsmInteractiveView.java b/app/src/main/java/ch/bailu/aat/views/map/OsmInteractiveView.java
index 986bf1a4..36fcd0cd 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/OsmInteractiveView.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/OsmInteractiveView.java
@@ -141,7 +141,7 @@ implements MapListener, OnSharedPreferenceChangeListener, OnTouchListener {
 
     
     private void updateLocation(GpxInformation info) {
-        if (info.getID()==INFO_ID_LOCATION) {
+        if (info.getID()==GpxInformation.ID.INFO_ID_LOCATION) {
             location.setLatitudeE6(info.getLatitudeE6());
             location.setLongitudeE6(info.getLongitudeE6());
         }
diff --git a/app/src/main/java/ch/bailu/aat/views/map/PreviewTileProvider.java b/app/src/main/java/ch/bailu/aat/views/map/PreviewTileProvider.java
index 701285b8..1d0d6b64 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/PreviewTileProvider.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/PreviewTileProvider.java
@@ -12,7 +12,7 @@ import ch.bailu.aat.services.cache.TileStackObject;
 
 public class PreviewTileProvider extends AbsOsmTileProvider implements Closeable  {
 
-    private ArrayList<TileStackObject> tiles = new ArrayList<TileStackObject>(10);
+    private final ArrayList<TileStackObject> tiles = new ArrayList<>(10);
     
 
     public PreviewTileProvider(ServiceContext sc) {
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/CurrentLocationOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/CurrentLocationOverlay.java
index 5e78263b..b513f36a 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/CurrentLocationOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/CurrentLocationOverlay.java
@@ -14,10 +14,10 @@ public class CurrentLocationOverlay extends OsmOverlay {
     private final static int STROKE_WIDTH=2;
 
     
-    private GeoPoint center = new GeoPoint(0,0);
+    private final GeoPoint center = new GeoPoint(0,0);
     private float accuracy=0f;
 
-    private Paint paint = new Paint();
+    private final Paint paint = new Paint();
 
 
     public CurrentLocationOverlay(OsmInteractiveView v) {
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/MapTwoNodes.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/MapTwoNodes.java
index c0a1bd9e..51917bfd 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/MapTwoNodes.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/MapTwoNodes.java
@@ -11,7 +11,7 @@ public class MapTwoNodes {
     
     
     public class PixelNode {
-        public Point pixel=new Point();
+        public final Point pixel=new Point();
         public GpxPointInterface point=GpxPoint.NULL;
         
         public boolean isVisible() {
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/RefreshLogOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/RefreshLogOverlay.java
index b919d46d..890d1ea3 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/RefreshLogOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/RefreshLogOverlay.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.views.map.overlay;
 
+import java.util.Locale;
+
 import ch.bailu.aat.views.map.OsmInteractiveView;
 
 public class RefreshLogOverlay extends OsmOverlay {
@@ -34,7 +36,7 @@ public class RefreshLogOverlay extends OsmOverlay {
                 ((double)refreshCounter)	 /	1000d;
         double currentTime = ((double)this.currentTime / 1000d);
 
-        painter.canvas.drawTextBottom(String.format("%d: %1.3f s / %1.3f s", 
+        painter.canvas.drawTextBottom(String.format((Locale)null,"%d: %1.3f s / %1.3f s",
                 refreshCounter, 
                 averageTime, 
                 currentTime),5);
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/ZoomLevelOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/ZoomLevelOverlay.java
index fb0a2967..0b303a64 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/ZoomLevelOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/ZoomLevelOverlay.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.views.map.overlay;
 
+import java.util.Locale;
+
 import ch.bailu.aat.views.map.OsmInteractiveView;
 
 public class ZoomLevelOverlay extends OsmOverlay {
@@ -13,7 +15,7 @@ public class ZoomLevelOverlay extends OsmOverlay {
         int z = getMapView().getZoomLevel();
 
         
-        p.canvas.drawTextTop(String.format("Zoomlevel*: %d", z) ,2);
+        p.canvas.drawTextTop(String.format((Locale)null,"Zoomlevel*: %d", z) ,2);
 
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/control/ControlBarOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/control/ControlBarOverlay.java
index d3e0fb55..100baa87 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/control/ControlBarOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/control/ControlBarOverlay.java
@@ -19,7 +19,7 @@ public abstract class ControlBarOverlay extends OsmOverlay implements Runnable,
 
     private final ControlBar bar;
     private boolean isVisible=false;
-    private Timer hideTimer = new Timer(this, HIDE_TIMER_MILLIS);
+    private final Timer hideTimer = new Timer(this, HIDE_TIMER_MILLIS);
 
     public ControlBarOverlay(OsmInteractiveView v, ControlBar b, int color) {
         super(v);
@@ -146,9 +146,9 @@ public abstract class ControlBarOverlay extends OsmOverlay implements Runnable,
     }
 
 
-    public void topTap()   {hideBar();};
-    public void bottomTap(){hideBar();};
-    public void middleTap(){hideBar();};
+    public void topTap()   {hideBar();}
+    public void bottomTap(){hideBar();}
+    public void middleTap(){hideBar();}
     public void rightTab() {hideBar();}
-    public void leftTab()  {hideBar();};
+    public void leftTab()  {hideBar();}
 }
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/control/EditorOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/control/EditorOverlay.java
index be686023..33867b86 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/control/EditorOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/control/EditorOverlay.java
@@ -3,6 +3,8 @@ package ch.bailu.aat.views.map.overlay.control;
 import org.osmdroid.api.IGeoPoint;
 
 import android.view.View;
+import android.widget.LinearLayout;
+
 import ch.bailu.aat.R;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.gpx.GpxPoint;
@@ -39,7 +41,7 @@ public class EditorOverlay extends ControlBarOverlay {
     public EditorOverlay(OsmInteractiveView osm, ServiceContext sc, int iid, EditorHelper e) {
         super(osm, new ControlBar(
                 osm.getContext(),
-                AppLayout.getOrientationAlongLargeSide(osm.getContext())));
+                LinearLayout.VERTICAL));
 
         edit = e;
         scontext=sc;
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/control/FileControlBar.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/control/FileControlBar.java
index 796b6dab..7c824908 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/control/FileControlBar.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/control/FileControlBar.java
@@ -3,6 +3,8 @@ package ch.bailu.aat.views.map.overlay.control;
 import java.io.File;
 
 import android.view.View;
+import android.widget.LinearLayout;
+
 import ch.bailu.aat.R;
 import ch.bailu.aat.activities.AbsGpxListActivity;
 import ch.bailu.aat.gpx.GpxInformation;
@@ -36,7 +38,7 @@ public class FileControlBar extends ControlBarOverlay{
     public FileControlBar(OsmInteractiveView osm, AbsGpxListActivity a) {
         super(osm, new ControlBar(
                 osm.getContext(),
-                AppLayout.getOrientationAlongLargeSide(osm.getContext())));
+                LinearLayout.VERTICAL));
 
         final ControlBar bar = getBar();
 
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/control/NavigationBarOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/control/NavigationBarOverlay.java
index b8603dee..3a1ce274 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/control/NavigationBarOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/control/NavigationBarOverlay.java
@@ -4,6 +4,8 @@ import org.osmdroid.views.MapView;
 
 import android.util.SparseArray;
 import android.view.View;
+import android.widget.LinearLayout;
+
 import ch.bailu.aat.R;
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.helpers.AppLayout;
@@ -15,10 +17,12 @@ import ch.bailu.aat.views.map.AbsOsmView;
 import ch.bailu.aat.views.map.OsmInteractiveView;
 
 
-public class NavigationBarOverlay extends ControlBarOverlay implements GpxInformation.ID {
-    private View buttonPlus, buttonMinus, buttonFrame;
+public class NavigationBarOverlay extends ControlBarOverlay {
+    private final View buttonPlus;
+    private final View buttonMinus;
+    private final View buttonFrame;
 
-    private final SparseArray<GpxInformation> infoCache = new SparseArray<GpxInformation>(10);
+    private final SparseArray<GpxInformation> infoCache = new SparseArray<>(10);
 
     private int boundingCycle=0;
 
@@ -29,8 +33,8 @@ public class NavigationBarOverlay extends ControlBarOverlay implements GpxInform
 
 
     public NavigationBarOverlay(OsmInteractiveView o, int i) {
-        super(o,new ControlBar(o.getContext(), 
-                AppLayout.getOrientationAlongSmallSide(o.getContext()), i));
+        super(o,new ControlBar(o.getContext(),
+                LinearLayout.HORIZONTAL, i));
 
         buttonPlus = getBar().addImageButton(R.drawable.zoom_in);
         buttonMinus = getBar().addImageButton(R.drawable.zoom_out);
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/GpxDynOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/GpxDynOverlay.java
index 9a4882a1..c55fb496 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/GpxDynOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/GpxDynOverlay.java
@@ -2,7 +2,7 @@ package ch.bailu.aat.views.map.overlay.gpx;
 
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.gpx.GpxList;
-import ch.bailu.aat.gpx.interfaces.GpxBigDeltaInterface;
+import ch.bailu.aat.gpx.interfaces.GpxType;
 import ch.bailu.aat.preferences.SolidLegend;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.views.map.AbsOsmView;
@@ -65,12 +65,12 @@ public class GpxDynOverlay extends OsmOverlay {
 
     public void setTrack(GpxList gpxList) {
 
-        if (gpxList.getDelta().getType()==GpxBigDeltaInterface.WAY) {
+        if (gpxList.getDelta().getType()== GpxType.WAY) {
             if (color == -1) gpx = new WayOverlay(getOsmView(), scontext, ID);
             else gpx = new WayOverlay(getOsmView(), scontext, ID, color);
             legend = slegend.createWayLegendOverlay(getOsmView(), ID);
 
-        } else if (gpxList.getDelta().getType()==GpxBigDeltaInterface.RTE) {
+        } else if (gpxList.getDelta().getType()==GpxType.RTE) {
             if (color == -1)  gpx = new RouteOverlay(getOsmView(), ID);
             else gpx = new RouteOverlay(getOsmView(), ID, color);
             legend = slegend.createRouteLegendOverlay(getOsmView(), ID);
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/GpxListPainter.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/GpxListPainter.java
index f24e0be0..b57a45f9 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/GpxListPainter.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/GpxListPainter.java
@@ -11,8 +11,8 @@ import ch.bailu.aat.views.map.overlay.MapTwoNodes.PixelNode;
 
 
 public abstract class GpxListPainter extends GpxListWalker {
-    private static int MIN_PIXEL_SPACE=10;
-    private static int MAX_PIXEL_SPACE=100;
+    private static final int MIN_PIXEL_SPACE=10;
+    private static final int MAX_PIXEL_SPACE=100;
 
     private final static int START_PAINTING=0;
     private final static int CONTINUE_PAINTING=2;
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/GpxTestOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/GpxTestOverlay.java
index ed74509c..3fecd669 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/GpxTestOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/GpxTestOverlay.java
@@ -14,7 +14,8 @@ import ch.bailu.aat.views.map.overlay.MapPainter;
 
 public class GpxTestOverlay extends GpxOverlay {
 
-    private Paint segmentPaint, markerPaint;
+    private final Paint segmentPaint;
+    private final Paint markerPaint;
     private int boxCount=0;
 
     public GpxTestOverlay(OsmInteractiveView map, int id) {
@@ -44,7 +45,7 @@ public class GpxTestOverlay extends GpxOverlay {
 
     private class Walker extends GpxListWalker {
         //private MapTwoNodes paintHelper;
-        private MapPainter painter;
+        private final MapPainter painter;
 
 
         public Walker(MapPainter p) {
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/NodeSelectorOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/NodeSelectorOverlay.java
index 98d3562a..37a14602 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/NodeSelectorOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/NodeSelectorOverlay.java
@@ -20,8 +20,8 @@ public abstract class NodeSelectorOverlay extends OsmOverlay {
     private final int SQUARE_SIZE=30;
     private final int SQUARE_HSIZE=SQUARE_SIZE/2;
 
-    private final SparseArray<GpxInformation> gpxHash = 
-            new SparseArray<GpxInformation>(5);
+    private final SparseArray<GpxInformation> gpxHash =
+            new SparseArray<>(5);
 
 
 
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/RouteOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/RouteOverlay.java
index 4c59832a..e2c4b7cb 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/RouteOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/RouteOverlay.java
@@ -30,7 +30,7 @@ public class RouteOverlay extends GpxOverlay {
 
     private class RoutePainter extends GpxListPainter {
 
-        private MapPainter painter;
+        private final MapPainter painter;
 
         public RoutePainter(MapPainter p) {
             super(p);
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/TrackOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/TrackOverlay.java
index e84559e9..2adacd28 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/TrackOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/TrackOverlay.java
@@ -9,7 +9,7 @@ import ch.bailu.aat.views.map.overlay.MapTwoNodes;
 import ch.bailu.aat.views.map.overlay.MapTwoNodes.PixelNode;
 
 public class TrackOverlay extends GpxOverlay{
-    private static int STROKE_WIDTH=5;
+    private static final int STROKE_WIDTH=5;
     private final Paint paint=new Paint();
 
 
@@ -34,7 +34,7 @@ public class TrackOverlay extends GpxOverlay{
 
 
     private class TrackPainter extends GpxListPainter {
-        private MapPainter painter;
+        private final MapPainter painter;
 
         public TrackPainter(MapPainter p) {
             super(p);
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/legend/MapViewContext.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/legend/MapViewContext.java
index 7a8ad483..1dd88f75 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/legend/MapViewContext.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/legend/MapViewContext.java
@@ -6,8 +6,8 @@ import ch.bailu.aat.views.map.overlay.MapTwoNodes;
 import ch.bailu.aat.views.map.overlay.MapTwoNodes.PixelNode;
 
 public class MapViewContext {
-    public static int COLOR = 0x99ffffff;
-    public static int MIN_PIXEL_DISTANCE=100;
+    public static final int COLOR = 0x99ffffff;
+    public static final int MIN_PIXEL_DISTANCE=100;
 
     public final MapPainter painter;
     public final MapTwoNodes nodes;
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/legend/PointNameWalker.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/legend/PointNameWalker.java
index a86c2acf..ccd48329 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/legend/PointNameWalker.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/legend/PointNameWalker.java
@@ -5,7 +5,7 @@ import ch.bailu.aat.gpx.GpxPointNode;
 import ch.bailu.aat.gpx.GpxSegmentNode;
 
 public class PointNameWalker extends LegendWalker {
-    private static int LIMIT=20;
+    private static final int LIMIT=20;
     private int displayed=0;
     
     
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/legend/SegmentIndexWalker.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/legend/SegmentIndexWalker.java
index 27f4f7a8..827cc30b 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/legend/SegmentIndexWalker.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/gpx/legend/SegmentIndexWalker.java
@@ -36,7 +36,7 @@ public class SegmentIndexWalker extends LegendWalker{
     @Override
     public void doPoint(GpxPointNode point) {
         if (point.getNext()==null) {
-            c.nodes.nodeB.set((GpxPointNode)point);
+            c.nodes.nodeB.set(point);
             drawLegendFromB();
         }
     }
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/grid/GridDynOverlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/grid/GridDynOverlay.java
index c6fd6771..8cb321f0 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/grid/GridDynOverlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/grid/GridDynOverlay.java
@@ -9,7 +9,7 @@ import ch.bailu.aat.views.map.overlay.OsmOverlay;
 public class GridDynOverlay extends OsmOverlay {
 
     private OsmOverlay gridOverlay;
-    private SolidMapGrid    sgrid;
+    private final SolidMapGrid    sgrid;
     
     private final ServiceContext scontext;
 
diff --git a/app/src/main/java/ch/bailu/aat/views/map/overlay/grid/WGS84Overlay.java b/app/src/main/java/ch/bailu/aat/views/map/overlay/grid/WGS84Overlay.java
index 5d23d765..f494f4cb 100644
--- a/app/src/main/java/ch/bailu/aat/views/map/overlay/grid/WGS84Overlay.java
+++ b/app/src/main/java/ch/bailu/aat/views/map/overlay/grid/WGS84Overlay.java
@@ -4,6 +4,9 @@ import org.osmdroid.api.IGeoPoint;
 import org.osmdroid.util.constants.GeoConstants;
 
 import android.graphics.Point;
+
+import java.util.Locale;
+
 import ch.bailu.aat.coordinates.WGS84Sexagesimal;
 import ch.bailu.aat.description.AltitudeDescription;
 import ch.bailu.aat.services.ServiceContext;
@@ -44,7 +47,8 @@ public class WGS84Overlay extends OsmOverlay implements GeoConstants{
     
     private void drawCoordinates(MapPainter painter, IGeoPoint point) {
         painter.canvas.drawTextBottom(new WGS84Sexagesimal(point).toString(),2);
-        painter.canvas.drawTextBottom(String.format("%.6f/%.6f", 
+        painter.canvas.drawTextBottom(
+                String.format((Locale)null,"%.6f/%.6f",
                 ((double)point.getLatitudeE6()/1E6), 
                 ((double)point.getLongitudeE6()/1E6)),
                 1);
diff --git a/app/src/main/java/org/osmdroid/tileprovider/tilesource/TileSourceFactory.java b/app/src/main/java/org/osmdroid/tileprovider/tilesource/TileSourceFactory.java
index 560c406e..69ec2ebb 100644
--- a/app/src/main/java/org/osmdroid/tileprovider/tilesource/TileSourceFactory.java
+++ b/app/src/main/java/org/osmdroid/tileprovider/tilesource/TileSourceFactory.java
@@ -105,7 +105,7 @@ public class TileSourceFactory {
 
 	private static ArrayList<ITileSource> mTileSources;
 	static {
-		mTileSources = new ArrayList<ITileSource>();
+		mTileSources = new ArrayList<>();
 		mTileSources.add(OSMARENDER);
 		mTileSources.add(MAPNIK);
 		mTileSources.add(CYCLEMAP);
diff --git a/app/src/main/java/org/osmdroid/views/MapController.java b/app/src/main/java/org/osmdroid/views/MapController.java
index b6dec381..e8461001 100644
--- a/app/src/main/java/org/osmdroid/views/MapController.java
+++ b/app/src/main/java/org/osmdroid/views/MapController.java
@@ -358,7 +358,7 @@ public class MapController implements IMapController, MapViewConstants {
 		 * </li>
 		 * </ul>
 		 */
-		MIDDLEPEAKSPEED;
+		MIDDLEPEAKSPEED
 	}
 
 	private abstract class AbstractAnimationRunner extends Thread {
diff --git a/app/src/main/java/org/osmdroid/views/overlay/OverlayManager.java b/app/src/main/java/org/osmdroid/views/overlay/OverlayManager.java
index cbe0d037..29007626 100644
--- a/app/src/main/java/org/osmdroid/views/overlay/OverlayManager.java
+++ b/app/src/main/java/org/osmdroid/views/overlay/OverlayManager.java
@@ -23,7 +23,7 @@ public class OverlayManager extends AbstractList<Overlay> {
 
 	public OverlayManager(final TilesOverlay tilesOverlay) {
 		setTilesOverlay(tilesOverlay);
-		mOverlayList = new CopyOnWriteArrayList<Overlay>();
+		mOverlayList = new CopyOnWriteArrayList<>();
 	}
 
 	@Override
