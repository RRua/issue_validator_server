diff --git a/app/src/main/java/com/innodroid/mongobrowser/Events.java b/app/src/main/java/com/innodroid/mongobrowser/Events.java
new file mode 100644
index 0000000..9701013
--- /dev/null
+++ b/app/src/main/java/com/innodroid/mongobrowser/Events.java
@@ -0,0 +1,248 @@
+package com.innodroid.mongobrowser;
+
+import de.greenrobot.event.EventBus;
+
+public class Events {
+    public static void postAddConnection() {
+        EventBus.getDefault().post(new AddConnection());
+    }
+
+    public static void postConnectionSelected(long connectionID) {
+        EventBus.getDefault().post(new ConnectionSelected(connectionID));
+    }
+
+    public static void postConnected(long connectionID) {
+        EventBus.getDefault().post(new Connected(connectionID));
+    }
+
+    public static void postConnectionDeleted() {
+        EventBus.getDefault().post(new ConnectionDeleted());
+    }
+
+    public static void postCollectionSelected(long connectionId, String collectionName) {
+        EventBus.getDefault().post(new CollectionSelected(connectionId, collectionName));
+    }
+
+    public static void postAddDocument() {
+        EventBus.getDefault().post(new AddDocument());
+    }
+
+    public static void postRefreshDocumentList() {
+        EventBus.getDefault().post(new RefreshDocumentList());
+    }
+
+    public static void postDocumentSelected(String content) {
+        EventBus.getDefault().post(new DocumentSelected(content));
+    }
+
+    public static void postDocumentClicked(String content) {
+        EventBus.getDefault().post(new DocumentClicked(content));
+    }
+
+    public static void postCreateCollection(String name) {
+        EventBus.getDefault().post(new CreateCollection(name));
+    }
+
+    public static void postRenameCollection(String name) {
+        EventBus.getDefault().post(new RenameCollection(name));
+    }
+
+    public static void postCollectionRenamed(String name) {
+        EventBus.getDefault().post(new CollectionRenamed(name));
+    }
+
+    public static void postCollectionDropped(String name) {
+        EventBus.getDefault().post(new CollectionDropped(name));
+    }
+
+    public static void postConnectionAdded(long connectionId) {
+        EventBus.getDefault().post(new ConnectionAdded(connectionId));
+    }
+
+    public static void postConnectionUpdated(long connectionId) {
+        EventBus.getDefault().post(new ConnectionUpdated(connectionId));
+    }
+
+    public static void postEditDocument(String content) {
+        EventBus.getDefault().post(new EditDocument(content));
+    }
+
+    public static void postDocumentEdited(String content) {
+        EventBus.getDefault().post(new DocumentEdited(content));
+    }
+
+    public static void postDocumentCreated(String content) {
+        EventBus.getDefault().post(new DocumentCreated(content));
+    }
+
+    public static void postDocumentDeleted() {
+        EventBus.getDefault().post(new DocumentDeleted());
+    }
+
+    public static void postChangeDatabase(String name) {
+        EventBus.getDefault().post(new ChangeDatabase(name));
+    }
+
+    public static void postQueryNamed(String name) {
+        EventBus.getDefault().post(new QueryNamed(name));
+    }
+
+    public static void postQueryUpdated(String query) {
+        EventBus.getDefault().post(new QueryUpdated(query));
+    }
+
+    public static class AddConnection {
+    }
+
+    public static class AddDocument {
+    }
+
+    public static class DocumentDeleted {
+    }
+
+    public static class ConnectionSelected {
+        public long ConnectionId;
+
+        public ConnectionSelected(long connectionId) {
+            ConnectionId = connectionId;
+        }
+    }
+
+    public static class ConnectionDeleted {
+    }
+
+    public static class RefreshDocumentList {
+    }
+
+    public static class Connected {
+        public long ConnectionId;
+
+        public Connected(long connectionId) {
+            ConnectionId = connectionId;
+        }
+    }
+
+    public static class CollectionSelected {
+        public long ConnectionId;
+        public String CollectionName;
+
+        public CollectionSelected(long connectionId, String collectionName) {
+            ConnectionId = connectionId;
+            CollectionName = collectionName;
+        }
+    }
+
+    public static class DocumentSelected {
+        public String Content;
+
+        public DocumentSelected(String content) {
+            Content = content;
+        }
+    }
+
+    public static class DocumentClicked {
+        public String Content;
+
+        public DocumentClicked(String content) {
+            Content = content;
+        }
+    }
+
+    public static class EditDocument {
+        public String Content;
+
+        public EditDocument(String content) {
+            Content = content;
+        }
+    }
+
+    public static class DocumentCreated {
+        public String Content;
+
+        public DocumentCreated(String content) {
+            Content = content;
+        }
+    }
+
+    public static class ChangeDatabase {
+        public String Name;
+
+        public ChangeDatabase(String name) {
+            Name = name;
+        }
+    }
+
+    public static class QueryNamed {
+        public String Name;
+
+        public QueryNamed(String name) {
+            Name = name;
+        }
+    }
+
+    public static class QueryUpdated {
+        public String Content;
+
+        public QueryUpdated(String content) {
+            Content = content;
+        }
+    }
+
+    public static class DocumentEdited {
+        public String Content;
+
+        public DocumentEdited(String content) {
+            Content = content;
+        }
+    }
+
+    public static class CollectionRenamed {
+        public String Name;
+
+        public CollectionRenamed(String name) {
+            Name = name;
+        }
+    }
+
+    public static class RenameCollection {
+        public String Name;
+
+        public RenameCollection(String name) {
+            Name = name;
+        }
+    }
+
+    public static class CreateCollection {
+        public String Name;
+
+        public CreateCollection(String name) {
+            Name = name;
+        }
+    }
+
+    public static class CollectionDropped {
+        public String Name;
+
+        public CollectionDropped(String name) {
+            Name = name;
+        }
+    }
+
+    public static class ConnectionAdded {
+        public long ConnectionId;
+
+        public ConnectionAdded(long connectionId) {
+            ConnectionId = connectionId;
+        }
+    }
+
+    public static class ConnectionUpdated {
+        public long ConnectionId;
+
+        public ConnectionUpdated(long connectionId) {
+            ConnectionId = connectionId;
+        }
+    }
+
+}
+
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/BaseFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/BaseFragment.java
index d45dbb0..a59233e 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/BaseFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/BaseFragment.java
@@ -8,6 +8,7 @@ import android.view.View;
 import android.view.ViewGroup;
 
 import butterknife.ButterKnife;
+import de.greenrobot.event.EventBus;
 
 public class BaseFragment extends Fragment {
     protected View onCreateView(int layout, LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
@@ -24,4 +25,18 @@ public class BaseFragment extends Fragment {
 
         ButterKnife.unbind(this);
     }
+
+    @Override
+    public void onStart() {
+        super.onStart();
+
+        EventBus.getDefault().register(this);
+    }
+
+    @Override
+    public void onStop() {
+        super.onStop();
+
+        EventBus.getDefault().unregister(this);
+    }
 }
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/ChangeDatabaseDialogFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/ChangeDatabaseDialogFragment.java
index a657066..c72925e 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/ChangeDatabaseDialogFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/ChangeDatabaseDialogFragment.java
@@ -12,6 +12,7 @@ import android.widget.AdapterView.OnItemClickListener;
 import android.widget.ArrayAdapter;
 import android.widget.ListView;
 
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.R;
 
 import butterknife.Bind;
@@ -21,10 +22,6 @@ public class ChangeDatabaseDialogFragment extends BaseDialogFragment {
 
 	private static String ARG_DATABASES = "databases";
 	
-	public interface Callbacks {
-		void onChangeDatabase(String name);
-	}
-	
 	public ChangeDatabaseDialogFragment() {
 		super();
 	}
@@ -62,7 +59,7 @@ public class ChangeDatabaseDialogFragment extends BaseDialogFragment {
 		mDatabaseListView.setOnItemClickListener(new OnItemClickListener() {
 			@Override
 			public void onItemClick(AdapterView<?> arg0, View arg1, int position, long arg3) {
-				((Callbacks) getTargetFragment()).onChangeDatabase(adapter.getItem(position));
+				Events.postChangeDatabase(adapter.getItem(position));
 				dialog.dismiss();
 			}
 		});
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/CollectionEditDialogFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/CollectionEditDialogFragment.java
index eba8994..a5ac7e6 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/CollectionEditDialogFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/CollectionEditDialogFragment.java
@@ -1,6 +1,7 @@
 package com.innodroid.mongobrowser.ui;
 
 import com.innodroid.mongobrowser.Constants;
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.R;
 import com.innodroid.mongobrowser.util.UiUtils;
 
@@ -16,11 +17,6 @@ public class CollectionEditDialogFragment extends BaseDialogFragment {
 	@Bind(R.id.edit_collection_name) TextView mNameView;
 	private String mName;
 
-	public interface Callbacks {
-		void onCreateCollection(String name);
-		void onRenameCollection(String name);
-	}
-	
 	public CollectionEditDialogFragment() {
 		super();
 	}
@@ -65,11 +61,10 @@ public class CollectionEditDialogFragment extends BaseDialogFragment {
     		return false;
     	}
 
-    	Callbacks callbacks = (Callbacks)getTargetFragment();
     	if (getArguments().getBoolean(Constants.ARG_IS_NEW))
-    		callbacks.onCreateCollection(name);
+			Events.postCreateCollection(name);
     	else
-    		callbacks.onRenameCollection(name);
+    		Events.postRenameCollection(name);
 
     	return true;
     }
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/CollectionListFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/CollectionListFragment.java
index ab09d27..270bdee 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/CollectionListFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/CollectionListFragment.java
@@ -15,6 +15,7 @@ import android.view.MenuItem;
 import android.view.View;
 import android.widget.ListView;
 
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.util.MongoHelper;
 import com.innodroid.mongobrowser.Constants;
 import com.innodroid.mongobrowser.R;
@@ -22,19 +23,13 @@ import com.innodroid.mongobrowser.data.MongoCollectionAdapter;
 import com.innodroid.mongobrowser.util.SafeAsyncTask;
 import com.innodroid.mongobrowser.util.UiUtils;
 
-public class CollectionListFragment extends ListFragment implements CollectionEditDialogFragment.Callbacks, ChangeDatabaseDialogFragment.Callbacks {
-
+public class CollectionListFragment extends ListFragment {
     private static final String STATE_ACTIVATED_POSITION = "activated_position";
 
     private long mConnectionId;
     private MongoCollectionAdapter mAdapter;
-    private Callbacks mCallbacks = null;
     private int mActivatedPosition = ListView.INVALID_POSITION;
 
-    public interface Callbacks {
-        public void onCollectionItemSelected(long connectionId, String name);
-    }
-
     public CollectionListFragment() {
     }
 
@@ -53,6 +48,10 @@ public class CollectionListFragment extends ListFragment implements CollectionEd
 		reloadList();
     }
 
+	public void onEvent(Events.DocumentDeleted e) {
+		reloadList();
+	}
+
 	public void reloadList() {
     	new LoadNamesTask().execute();
 	}
@@ -91,38 +90,20 @@ public class CollectionListFragment extends ListFragment implements CollectionEd
         super.onViewCreated(view, savedInstanceState);
 
         getListView().setChoiceMode(getArguments().getBoolean(Constants.ARG_ACTIVATE_ON_CLICK)
-                ? ListView.CHOICE_MODE_SINGLE
-                : ListView.CHOICE_MODE_NONE);
+				? ListView.CHOICE_MODE_SINGLE
+				: ListView.CHOICE_MODE_NONE);
         
         if (mActivatedPosition != ListView.INVALID_POSITION)
             setActivatedPosition(mActivatedPosition);
     }
     
-    @Override
-    public void onAttach(Activity activity) {
-        super.onAttach(activity);
-
-        if (!(activity instanceof Callbacks)) {
-            throw new IllegalStateException("Activity must implement fragment's callbacks.");
-        }
-
-        mCallbacks = (Callbacks) activity;
-    }
-
-    @Override
-    public void onDetach() {
-        mCallbacks = null;
-        super.onDetach();
-    }
-
     @Override
     public void onListItemClick(ListView listView, View view, int position, long id) {
         super.onListItemClick(listView, view, position, id);
         
         setActivatedPosition(position);
-        
-        if (mCallbacks != null)
-        	mCallbacks.onCollectionItemSelected(mConnectionId, mAdapter.getCollectionName(position));
+
+		Events.postCollectionSelected(mConnectionId, mAdapter.getCollectionName(position));
     }
 
     @Override
@@ -143,32 +124,25 @@ public class CollectionListFragment extends ListFragment implements CollectionEd
         mActivatedPosition = position;
     }
     
-	@Override
-	public void onCreateCollection(String name) {
-		new AddCollectionTask().execute(name);
+	public void onEvent(Events.CreateCollection e) {
+		new AddCollectionTask().execute(e.Name);
 	}
 
-	@Override
-	public void onRenameCollection(String name) {
-		Log.e("ERR", "Shouldnt get here");
-	}
-	
-	public void onCollectionEdited(String name) {
-		mAdapter.setItemName(mActivatedPosition, name);
+	public void onEvent(Events.CollectionRenamed e) {
+		mAdapter.setItemName(mActivatedPosition, e.Name);
 	}
 	
-	@Override
-	public void onChangeDatabase(String name) {
-		new ChangeDatabaseTask().execute(name);
+	public void onEvent(Events.ChangeDatabase e) {
+		new ChangeDatabaseTask().execute(e.Name);
 	}
 
-	public void onCollectionDropped() {
+	public void onEvent(Events.CollectionDropped e) {
 		mAdapter.delete(mActivatedPosition);
 
 		if (mActivatedPosition < mAdapter.getCount())
-			mCallbacks.onCollectionItemSelected(mConnectionId, mAdapter.getItem(mActivatedPosition).Name);
+			Events.postCollectionSelected(mConnectionId, mAdapter.getItem(mActivatedPosition).Name);
 		else {
-			mCallbacks.onCollectionItemSelected(mConnectionId, null);
+			Events.postCollectionSelected(mConnectionId, null);
 			mActivatedPosition = ListView.INVALID_POSITION;
 		}
 	}
@@ -188,7 +162,7 @@ public class CollectionListFragment extends ListFragment implements CollectionEd
 		protected void safeOnPostExecute(String result) {
 			mAdapter.add(0, result);
 			setActivatedPosition(0);
-			mCallbacks.onCollectionItemSelected(mConnectionId, result);
+			Events.postCollectionSelected(mConnectionId, result);
 		}
 
 		@Override
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/ConnectionDetailFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/ConnectionDetailFragment.java
index 65639ff..ab6dc2b 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/ConnectionDetailFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/ConnectionDetailFragment.java
@@ -22,6 +22,7 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.util.MongoHelper;
 import com.innodroid.mongobrowser.Constants;
 import com.innodroid.mongobrowser.R;
@@ -33,8 +34,9 @@ import com.innodroid.mongobrowser.util.UiUtils.ConfirmCallbacks;
 
 import butterknife.Bind;
 import butterknife.OnClick;
+import de.greenrobot.event.EventBus;
 
-public class ConnectionDetailFragment extends BaseFragment implements LoaderCallbacks<Cursor>, ConnectionEditDialogFragment.Callbacks {
+public class ConnectionDetailFragment extends BaseFragment implements LoaderCallbacks<Cursor> {
 	@Bind(R.id.connection_detail_title) TextView mTitle;
 	@Bind(R.id.connection_detail_server) TextView mServer;
 	@Bind(R.id.connection_detail_port) TextView mPort;
@@ -43,12 +45,6 @@ public class ConnectionDetailFragment extends BaseFragment implements LoaderCall
 	@Bind(R.id.connection_detail_last_connect) TextView mLastConnect;
 
 	private long mConnectionID;
-	private Callbacks mCallbacks;
-
-	public interface Callbacks {
-    	public void onConnectionDeleted();
-        public void onConnected(long id);
-    }
 
     public ConnectionDetailFragment() {
     }
@@ -75,20 +71,6 @@ public class ConnectionDetailFragment extends BaseFragment implements LoaderCall
 		new ConnectTask().execute();
 	}
 
-	@Override
-    public void onAttach(Activity activity) {
-    	super.onAttach(activity);
-    	
-    	mCallbacks = (Callbacks)activity;
-    }
-    
-    @Override
-    public void onDetach() {
-    	super.onDetach();
-    	
-    	mCallbacks = null;
-    }
-    
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     	inflater.inflate(R.menu.connection_detail_menu, menu);
@@ -154,13 +136,7 @@ public class ConnectionDetailFragment extends BaseFragment implements LoaderCall
     	});
     }
 
-	@Override
-	public void onConnectionAdded(long id) {
-		Log.e("ERR", "Should never get here");
-	}
-
-	@Override
-	public void onConnectionUpdated(long id) {
+	public void onEvent(Events.ConnectionUpdated e) {
 		// Gets detached on orientation change
 		if (super.isAdded())
 			getLoaderManager().initLoader(0, getArguments(), this);
@@ -191,7 +167,7 @@ public class ConnectionDetailFragment extends BaseFragment implements LoaderCall
 		
 		@Override
 		protected void safeOnPostExecute(Boolean result) {
-			mCallbacks.onConnected(mConnectionID);
+			Events.postConnected(mConnectionID);
 		}
 
 		@Override
@@ -218,7 +194,7 @@ public class ConnectionDetailFragment extends BaseFragment implements LoaderCall
 		
 		@Override
 		protected void safeOnPostExecute(Boolean result) {
-			mCallbacks.onConnectionDeleted();
+			Events.postConnectionDeleted();
 		}
 
 		@Override
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/ConnectionEditDialogFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/ConnectionEditDialogFragment.java
index 4ea6fb4..6867b75 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/ConnectionEditDialogFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/ConnectionEditDialogFragment.java
@@ -14,6 +14,7 @@ import android.widget.TextView;
 import android.widget.Toast;
 
 import com.innodroid.mongobrowser.Constants;
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.R;
 import com.innodroid.mongobrowser.data.MongoBrowserProvider;
 import com.innodroid.mongobrowser.data.MongoBrowserProviderHelper;
@@ -28,13 +29,7 @@ public class ConnectionEditDialogFragment extends BaseDialogFragment implements
 	@Bind(R.id.edit_connection_db) TextView mDatabaseView;
 	@Bind(R.id.edit_connection_user) TextView mUserView;
 	@Bind(R.id.edit_connection_pass) TextView mPasswordView;
-	private Callbacks mCallbacks;
 
-	public interface Callbacks {
-		void onConnectionAdded(long id);
-		void onConnectionUpdated(long id);
-	}
-	
 	public ConnectionEditDialogFragment() {
 		super();
 	}
@@ -69,17 +64,7 @@ public class ConnectionEditDialogFragment extends BaseDialogFragment implements
 		});    	
     }
 
-    @Override
-    public void onAttach(Activity activity) {
-    	super.onAttach(activity);
-
-    	if (getTargetFragment() != null)
-    		mCallbacks = (Callbacks)getTargetFragment();
-    	else
-    		mCallbacks = (Callbacks)activity;
-    }
-    
-    private boolean save() {    	
+    private boolean save() {
     	String name = mNameView.getText().toString();
     	String server = mServerView.getText().toString();
     	String porttxt = mPortView.getText().toString();
@@ -106,11 +91,11 @@ public class ConnectionEditDialogFragment extends BaseDialogFragment implements
 
     	if (id == 0) {
     		id = helper.addConnection(name, server, port, db, user, pass);
-    		mCallbacks.onConnectionAdded(id);
+    		Events.postConnectionAdded(id);
     	}
     	else {
     		helper.updateConnection(id, name, server, port, db, user, pass);
-        	mCallbacks.onConnectionUpdated(id);
+        	Events.postConnectionUpdated(id);
     	}
     	
     	return true;
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/ConnectionListFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/ConnectionListFragment.java
index 3b40759..8cdee23 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/ConnectionListFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/ConnectionListFragment.java
@@ -15,24 +15,21 @@ import android.view.View;
 import android.widget.ListView;
 
 import com.innodroid.mongobrowser.Constants;
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.R;
 import com.innodroid.mongobrowser.data.MongoBrowserProvider;
 import com.innodroid.mongobrowser.data.MongoConnectionAdapter;
 
+import de.greenrobot.event.EventBus;
+
 public class ConnectionListFragment extends ListFragment implements LoaderCallbacks<Cursor> {
 
     private static final String STATE_ACTIVATED_POSITION = "activated_position";
 
     private MongoConnectionAdapter mAdapter;
-    private Callbacks mCallbacks = null;
     private int mActivatedPosition = ListView.INVALID_POSITION;
     private long mSelectAfterLoad;
 
-    public interface Callbacks {
-    	public void onAddConnection();
-        public void onConnectionItemSelected(int position, long id);
-    }
-    
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -57,7 +54,7 @@ public class ConnectionListFragment extends ListFragment implements LoaderCallba
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.menu_connection_list_add:
-            	mCallbacks.onAddConnection();
+                Events.postAddConnection();
                 return true;
             case R.id.menu_connection_list_configure:
             	Intent intent = new Intent(getActivity(), PreferencesActivity.class);
@@ -80,27 +77,13 @@ public class ConnectionListFragment extends ListFragment implements LoaderCallba
             setActivatedPosition(mActivatedPosition);
     }
     
-    @Override
-    public void onAttach(Activity activity) {
-        super.onAttach(activity);
-
-        mCallbacks = (Callbacks) activity;
-    }
-
-    @Override
-    public void onDetach() {
-        mCallbacks = null;
-        super.onDetach();
-    }
-
     @Override
     public void onListItemClick(ListView listView, View view, int position, long id) {
         super.onListItemClick(listView, view, position, id);
         
         setActivatedPosition(position);
-        
-        if (mCallbacks != null)
-        	mCallbacks.onConnectionItemSelected(position, mAdapter.getItemId(position));
+
+        Events.postConnectionSelected(mAdapter.getItemId(position));
     }
 
     @Override
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentDetailFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentDetailFragment.java
index fe2669f..7c41d42 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentDetailFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentDetailFragment.java
@@ -10,6 +10,7 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.util.MongoHelper;
 import com.innodroid.mongobrowser.Constants;
 import com.innodroid.mongobrowser.R;
@@ -26,12 +27,6 @@ public class DocumentDetailFragment extends BaseFragment {
 	private String mCollectionName;
 	private String mRawText;
 	private String mFormattedText;
-	private Callbacks mCallbacks;
-
-    public interface Callbacks {
-    	void onEditDocument(String content);
-		void onDeleteDocument();
-    }
 
     public DocumentDetailFragment() {
     }
@@ -54,20 +49,6 @@ public class DocumentDetailFragment extends BaseFragment {
         return view;
     }
 
-    @Override
-    public void onAttach(Activity activity) {
-    	super.onAttach(activity);
-    	
-    	mCallbacks = (Callbacks)activity;
-    }
-    
-    @Override
-    public void onDetach() {
-    	super.onDetach();
-    	
-    	mCallbacks = null;
-    }
-    
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     	inflater.inflate(R.menu.document_detail_menu, menu);
@@ -78,7 +59,7 @@ public class DocumentDetailFragment extends BaseFragment {
     	switch (item.getItemId()) {
     		case R.id.menu_document_detail_edit:
     			if (mRawText != null)
-    				mCallbacks.onEditDocument(mFormattedText);
+    				Events.postEditDocument(mFormattedText);
     			return true;
     		case R.id.menu_document_detail_delete:
     			if (mRawText != null)
@@ -135,7 +116,7 @@ public class DocumentDetailFragment extends BaseFragment {
 
 		@Override
 		protected void safeOnPostExecute(Void result) {
-			mCallbacks.onDeleteDocument();
+			Events.postDocumentDeleted();
 		}
 
 		@Override
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentEditDialogFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentEditDialogFragment.java
index d205446..3d06e8c 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentEditDialogFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentEditDialogFragment.java
@@ -6,6 +6,7 @@ import android.os.Bundle;
 import android.view.View;
 import android.widget.EditText;
 
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.util.MongoHelper;
 import com.innodroid.mongobrowser.Constants;
 import com.innodroid.mongobrowser.R;
@@ -19,12 +20,6 @@ public class DocumentEditDialogFragment extends BaseDialogFragment {
 
 	private String mContent;
 	private String mCollectionName;
-	private Callbacks mCallbacks;
-
-    public interface Callbacks {
-    	void onDocumentCreated(String content);
-    	void onDocumentUpdated(String content);
-    }
 
 	public DocumentEditDialogFragment() {
 		super();
@@ -62,13 +57,6 @@ public class DocumentEditDialogFragment extends BaseDialogFragment {
 		});    	
     }
     
-    @Override
-    public void onAttach(Activity activity) {
-    	super.onAttach(activity);
-    	
-    	mCallbacks = (Callbacks)activity;
-    }
-    
     public void save() {
     	String doc = mContentEdit.getText().toString();
     	new SaveDocumentTask().execute(doc);
@@ -87,9 +75,9 @@ public class DocumentEditDialogFragment extends BaseDialogFragment {
 		@Override
 		protected void safeOnPostExecute(String result) {
 			if (getArguments().getBoolean(Constants.ARG_IS_NEW))
-				mCallbacks.onDocumentCreated(result);
+				Events.postDocumentCreated(result);
 			else
-				mCallbacks.onDocumentUpdated(result);
+				Events.postDocumentEdited(result);
 		}
 
 		@Override
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentEditFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentEditFragment.java
index 8b2aca0..aebe899 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentEditFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentEditFragment.java
@@ -10,6 +10,7 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.widget.EditText;
 
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.util.MongoHelper;
 import com.innodroid.mongobrowser.Constants;
 import com.innodroid.mongobrowser.R;
@@ -21,11 +22,6 @@ public class DocumentEditFragment extends BaseFragment {
 	@Bind(R.id.document_edit_content) EditText mContentEdit;
 
 	private String mCollectionName;
-	private Callbacks mCallbacks;
-
-    public interface Callbacks {
-    	void onDocumentSaved(String content);
-    }
 
     public DocumentEditFragment() {
     }
@@ -50,20 +46,6 @@ public class DocumentEditFragment extends BaseFragment {
         return view;
     }
     
-    @Override
-    public void onAttach(Activity activity) {
-    	super.onAttach(activity);
-    	
-    	mCallbacks = (Callbacks)activity;
-    }
-    
-    @Override
-    public void onDetach() {
-    	super.onDetach();
-    	
-    	mCallbacks = null;
-    }
-    
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     	inflater.inflate(R.menu.document_edit_menu, menu);
@@ -92,7 +74,7 @@ public class DocumentEditFragment extends BaseFragment {
 		
 		@Override
 		protected void safeOnPostExecute(String result) {			
-			mCallbacks.onDocumentSaved(result);
+			Events.postDocumentEdited(result);
 		}
 
 		@Override
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentListFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentListFragment.java
index e758348..1f3b96a 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentListFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/DocumentListFragment.java
@@ -17,6 +17,7 @@ import android.view.View;
 import android.widget.ListView;
 import android.widget.Toast;
 
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.util.MongoHelper;
 import com.innodroid.mongobrowser.Constants;
 import com.innodroid.mongobrowser.R;
@@ -30,7 +31,7 @@ import com.innodroid.mongobrowser.util.UiUtils.ConfirmCallbacks;
 
 import java.net.UnknownHostException;
 
-public class DocumentListFragment extends ListFragment implements CollectionEditDialogFragment.Callbacks, QueryEditTextDialogFragment.Callbacks, QueryEditNameDialogFragment.Callbacks {
+public class DocumentListFragment extends ListFragment {
     private static final String STATE_ACTIVATED_POSITION = "activated_position";
     private static final String STATE_QUERY_ID = "query_id";
     private static final String STATE_QUERY_NAME = "query_name";
@@ -42,20 +43,10 @@ public class DocumentListFragment extends ListFragment implements CollectionEdit
     private String mQueryName;
     private String mQueryText;
     private MongoDocumentAdapter mAdapter;
-    private Callbacks mCallbacks = null;
     private int mActivatedPosition = ListView.INVALID_POSITION;
     private int mStart = 0;
     private int mTake = 5;
 
-    public interface Callbacks {
-    	public void onDocumentListRefreshRequested();
-    	public void onAddDocument();
-        public void onDocumentItemClicked(String content);
-        public void onDocumentItemActivated(String content);
-        public void onCollectionEdited(String name);
-        public void onCollectionDropped(String name);
-    }
-
     public DocumentListFragment() {
     }
 
@@ -92,26 +83,13 @@ public class DocumentListFragment extends ListFragment implements CollectionEdit
         super.onViewCreated(view, savedInstanceState);
 
         getListView().setChoiceMode(getArguments().getBoolean(Constants.ARG_ACTIVATE_ON_CLICK)
-                ? ListView.CHOICE_MODE_SINGLE
-                : ListView.CHOICE_MODE_NONE);
+				? ListView.CHOICE_MODE_SINGLE
+				: ListView.CHOICE_MODE_NONE);
         
         if (mActivatedPosition != ListView.INVALID_POSITION)
             setActivatedPosition(mActivatedPosition);
     }
     
-    @Override
-    public void onAttach(Activity activity) {
-        super.onAttach(activity);
-
-        mCallbacks = (Callbacks) activity;
-    }
-
-    @Override
-    public void onDetach() {
-        mCallbacks = null;
-        super.onDetach();
-    }
-
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     	inflater.inflate(R.menu.document_list_menu, menu);
@@ -131,7 +109,7 @@ public class DocumentListFragment extends ListFragment implements CollectionEdit
     public boolean onOptionsItemSelected(MenuItem item) {    	
         switch (item.getItemId()) {
     		case R.id.menu_document_list_add:
-    			mCallbacks.onAddDocument();
+    			Events.postAddDocument();
     			return true;
     		case R.id.menu_document_list_new_query:
     			newQuery();
@@ -155,7 +133,7 @@ public class DocumentListFragment extends ListFragment implements CollectionEdit
     			dropCollection();
     			return true;
     		case R.id.menu_document_list_refresh:
-    			mCallbacks.onDocumentListRefreshRequested();
+    			Events.postRefreshDocumentList();
     			return true;
     		default:
     	    	return super.onOptionsItemSelected(item);
@@ -225,30 +203,29 @@ public class DocumentListFragment extends ListFragment implements CollectionEdit
 		getActivity().invalidateOptionsMenu();
 	}
 	
-	@Override 
-	public void onQueryNamed(String name) {
-		mQueryName = name;
+	public void onEvent(Events.QueryNamed e) {
+		mQueryName = e.Name;
 		new SaveQuery().execute();
 	}
 
-	public void onDocumentCreated(String content) {
-		mAdapter.insert(0, content);
+	public void onEvent(Events.DocumentCreated e) {
+		mAdapter.insert(0, e.Content);
 		setActivatedPosition(0);
-		mCallbacks.onDocumentItemActivated(content);
+		Events.postDocumentSelected(e.Content);
 	}
-	
-	public void onDocumentUpdated(String content) {
-		mAdapter.update(mActivatedPosition, content);
-		mCallbacks.onDocumentItemActivated(content);
+
+	public void onEvent(Events.DocumentEdited e) {
+		mAdapter.update(mActivatedPosition, e.Content);
+		Events.postDocumentSelected(e.Content);
 	}
 
-	public void onDocumentDeleted() {
+	public void onEvent(Events.DocumentDeleted e) {
 		mAdapter.delete(mActivatedPosition);
 
 		if (mActivatedPosition < mAdapter.getActualCount())
-			mCallbacks.onDocumentItemActivated(mAdapter.getItem(mActivatedPosition));
+			Events.postDocumentSelected(mAdapter.getItem(mActivatedPosition));
 		else {
-			mCallbacks.onDocumentItemActivated(null);
+			Events.postDocumentSelected(null);
 			mActivatedPosition = ListView.INVALID_POSITION;
 		}
 	}
@@ -294,8 +271,7 @@ public class DocumentListFragment extends ListFragment implements CollectionEdit
         } else {
         	setActivatedPosition(position);
         	
-        	if (mCallbacks != null)
-        		mCallbacks.onDocumentItemClicked(mAdapter.getItem(position));
+			Events.postDocumentClicked(mAdapter.getItem(position));
         }
     }
 
@@ -320,14 +296,8 @@ public class DocumentListFragment extends ListFragment implements CollectionEdit
         mActivatedPosition = position;
     }
 
-	@Override
-	public void onCreateCollection(String name) {
-		Log.e("ERROR", "Shouldnt get here");
-	}
-    
-	@Override
-	public void onRenameCollection(String name) {
-		new RenameCollectionTask().execute(name);
+	public void onEvent(Events.RenameCollection e) {
+		new RenameCollectionTask().execute(e.Name);
 	}
 	
 	public int getItemCount() {
@@ -341,15 +311,14 @@ public class DocumentListFragment extends ListFragment implements CollectionEdit
 	public void reloadList(boolean trySelectAfterLoad) {
 		boolean selectAfterLoad = trySelectAfterLoad && (mActivatedPosition != ListView.INVALID_POSITION);
 		setActivatedPosition(ListView.INVALID_POSITION);
-		mCallbacks.onDocumentItemActivated(null);
+		Events.postDocumentSelected(null);
 		mAdapter.removeAll();
 		mStart = 0;
 		new LoadNextDocumentsTask(selectAfterLoad).execute();		
 	}
 
-	@Override
-	public void onQueryUpdated(String query) {
-		mQueryText = query;
+	public void onEvent(Events.QueryUpdated e) {
+		mQueryText = e.Content;
 		
 		if (mQueryID == 0)
 			mQueryID = -1;
@@ -372,7 +341,7 @@ public class DocumentListFragment extends ListFragment implements CollectionEdit
 		@Override
 		protected void safeOnPostExecute(String result) {
 			mCollectionName = result;
-			mCallbacks.onCollectionEdited(result);
+			Events.postCollectionRenamed(result);
 		}
 
 		@Override
@@ -394,7 +363,7 @@ public class DocumentListFragment extends ListFragment implements CollectionEdit
 
 		@Override
 		protected void safeOnPostExecute(Void result) {
-			mCallbacks.onCollectionDropped(mCollectionName);
+			Events.postCollectionDropped(mCollectionName);
 		}
 
 		@Override
@@ -430,7 +399,7 @@ public class DocumentListFragment extends ListFragment implements CollectionEdit
 			
 			if (mSelectAfterLoad && results.length > 0) {
 				setActivatedPosition(0);
-				mCallbacks.onDocumentItemActivated(results[0]);
+				Events.postDocumentSelected(results[0]);
 			}
 		}
 
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/MainActivity.java b/app/src/main/java/com/innodroid/mongobrowser/ui/MainActivity.java
index b4b15dd..8eaab61 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/MainActivity.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/MainActivity.java
@@ -1,13 +1,11 @@
 package com.innodroid.mongobrowser.ui;
 
-import android.content.Intent;
 import android.os.Bundle;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v7.app.AppCompatActivity;
-import android.view.KeyEvent;
 import android.view.View;
 import android.view.ViewGroup.MarginLayoutParams;
 import android.view.Window;
@@ -16,13 +14,16 @@ import android.view.animation.AnimationSet;
 import android.widget.FrameLayout;
 
 import com.innodroid.mongobrowser.Constants;
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.R;
 import com.innodroid.mongobrowser.data.MongoBrowserProviderHelper;
 import com.innodroid.mongobrowser.util.LeftMarginAnimation;
 import com.innodroid.mongobrowser.util.SafeAsyncTask;
 import com.innodroid.mongobrowser.util.WidthAnimation;
 
-public class MainActivity extends AppCompatActivity implements ConnectionListFragment.Callbacks, ConnectionDetailFragment.Callbacks, CollectionListFragment.Callbacks, DocumentListFragment.Callbacks, ConnectionEditDialogFragment.Callbacks, DocumentDetailFragment.Callbacks, DocumentEditDialogFragment.Callbacks {
+import de.greenrobot.event.EventBus;
+
+public class MainActivity extends AppCompatActivity {
 	private static final String STATE_COLLECTION_NAME = "collname";
 	
 	private boolean mTwoPane;
@@ -100,7 +101,21 @@ public class MainActivity extends AppCompatActivity implements ConnectionListFra
     	}
     }
 
-	private void moveOffscreenToLeft(View view) {		
+	@Override
+	protected void onStart() {
+		super.onStart();
+
+		EventBus.getDefault().register(this);
+	}
+
+	@Override
+	protected void onStop() {
+		super.onStop();
+
+		EventBus.getDefault().unregister(this);
+	}
+
+	private void moveOffscreenToLeft(View view) {
 		((MarginLayoutParams)view.getLayoutParams()).leftMargin = mScreenWidth + 1;
 	}
 
@@ -144,11 +159,10 @@ public class MainActivity extends AppCompatActivity implements ConnectionListFra
 		super.onBackPressed();
 	}
 
-	@Override
-    public void onConnectionItemSelected(int position, long id) {
-		loadConnectionDetailsPane(id);
-    }
-	
+	public void onEvent(Events.ConnectionSelected e) {
+		loadConnectionDetailsPane(e.ConnectionId);
+	}
+
 	private void loadConnectionListPane() {
     	Bundle args = new Bundle();
         ConnectionListFragment fragment = new ConnectionListFragment();
@@ -185,6 +199,11 @@ public class MainActivity extends AppCompatActivity implements ConnectionListFra
 		}
     }
 
+	private void showAddConnection() {
+		DialogFragment fragment = ConnectionEditDialogFragment.create(0);
+		fragment.show(getSupportFragmentManager(), null);
+	}
+
     private void loadDocumentListPane(long connectionId, String collection) {
     	Bundle arguments = new Bundle();
         DocumentListFragment fragment = new DocumentListFragment();
@@ -318,57 +337,53 @@ public class MainActivity extends AppCompatActivity implements ConnectionListFra
 		Animation animation = new LeftMarginAnimation(view, mLeftPaneWidth, mScreenWidth+1);
 		view.startAnimation(animation);
 	}
-	
-    @Override
-    public void onAddConnection() {
-        DialogFragment fragment = ConnectionEditDialogFragment.create(0);
-        fragment.show(getSupportFragmentManager(), null);
+
+    public void onEvent(Events.AddConnection e) {
+		showAddConnection();
     }
 
-	@Override
-	public void onCollectionItemSelected(long connectionId, String name) {
-		mCollectionName = name;
-		loadDocumentListPane(connectionId, name);
+	public void onEvent(Events.AddDocument e) {
+		DocumentEditDialogFragment fragment = DocumentEditDialogFragment.create(mCollectionName, true, Constants.NEW_DOCUMENT_CONTENT_PADDED);
+		fragment.show(getSupportFragmentManager(), null);
 	}
 
-	@Override
-	public void onDocumentItemClicked(String content) {
-		loadDocumentDetailsPane(content);
+	public void onEvent(Events.CollectionSelected e) {
+		mCollectionName = e.CollectionName;
+		loadDocumentListPane(e.ConnectionId, e.CollectionName);
 	}
 
-	@Override
-	public void onDocumentItemActivated(String content) {
-		if (content == null && !mTwoPane) {
+	public void onEvent(Events.DocumentClicked e) {
+		loadDocumentDetailsPane(e.Content);
+	}
+
+	public void onEvent(Events.DocumentSelected e) {
+		if (e.Content == null && !mTwoPane) {
 			return;
 		}
 
 		// If nothing was selected (i.e., refresh) and we aren't showing the details pane, then dont shift to it
-		if (content == null && getSupportFragmentManager().getBackStackEntryCount() < 2)
+		if (e.Content == null && getSupportFragmentManager().getBackStackEntryCount() < 2)
 			return;
 		
-		loadDocumentDetailsPane(content);
+		loadDocumentDetailsPane(e.Content);
 	}
 
-	@Override
-	public void onConnected(long connectionId) {
-		loadCollectionListPane(connectionId);
+	public void onEvent(Events.Connected e) {
+		loadCollectionListPane(e.ConnectionId);
 	}
 
-	@Override
-	public void onConnectionDeleted() {
+	public void onEvent(Events.ConnectionDeleted e) {
         getSupportFragmentManager().beginTransaction()
 	        .remove(getSupportFragmentManager().findFragmentById(R.id.frame_2))
 	        .commit();        
 	}
 
-	@Override
-	public void onConnectionAdded(long id) {
-		reloadConnectionListAndSelect(id);
+	public void onEvent(Events.ConnectionAdded e) {
+		reloadConnectionListAndSelect(e.ConnectionId);
 	}
 
-	@Override
-	public void onConnectionUpdated(long id) {
-		reloadConnectionListAndSelect(id);
+	public void onEvent(Events.ConnectionUpdated e) {
+		reloadConnectionListAndSelect(e.ConnectionId);
 	}
 
 	private void reloadConnectionListAndSelect(long id) {
@@ -384,14 +399,7 @@ public class MainActivity extends AppCompatActivity implements ConnectionListFra
         	loadConnectionDetailsPane(id);
 	}
 
-	@Override
-	public void onCollectionEdited(String name) {
-        CollectionListFragment fragment = (CollectionListFragment)getSupportFragmentManager().findFragmentById(R.id.frame_2);
-        fragment.onCollectionEdited(name);		
-	}
-
-	@Override
-	public void onCollectionDropped(String name) {
+	public void onEvent(Events.CollectionDropped e) {
         FragmentManager fm = getSupportFragmentManager();
 
         if (fm.getBackStackEntryCount() > 1) {
@@ -399,56 +407,22 @@ public class MainActivity extends AppCompatActivity implements ConnectionListFra
         }
         
         fm.beginTransaction().remove(fm.findFragmentById(R.id.frame_3)).commit();
-
-    	CollectionListFragment fragment = (CollectionListFragment) getSupportFragmentManager().findFragmentById(R.id.frame_2);
-        fragment.onCollectionDropped();
 	}
 	
-	@Override
-	public void onAddDocument() {
-		DocumentEditDialogFragment fragment = DocumentEditDialogFragment.create(mCollectionName, true, Constants.NEW_DOCUMENT_CONTENT_PADDED);
-		fragment.show(getSupportFragmentManager(), null);
-	}
-
-	@Override
-	public void onEditDocument(String content) {
-		DocumentEditDialogFragment fragment = DocumentEditDialogFragment.create(mCollectionName, false, content);
+	public void onEvent(Events.EditDocument e) {
+		DocumentEditDialogFragment fragment = DocumentEditDialogFragment.create(mCollectionName, false, e.Content);
 		fragment.show(getSupportFragmentManager(), null);
 	}
 
-	@Override
-	public void onDocumentCreated(String content) {
+	public void onEvent(Events.DocumentCreated e) {
 		if (mTwoPane) {
-			DocumentListFragment fragment = (DocumentListFragment) getSupportFragmentManager().findFragmentById(R.id.frame_3);
-			fragment.onDocumentCreated(content);
-
 			CollectionListFragment collectionList = (CollectionListFragment) getSupportFragmentManager().findFragmentById(R.id.frame_2);
 			if (collectionList != null)
 				collectionList.reloadList();
 		}
 	}
 
-	@Override
-	public void onDocumentUpdated(String content) {
-        DocumentListFragment fragment = (DocumentListFragment)getSupportFragmentManager().findFragmentById(R.id.frame_3);
-        fragment.onDocumentUpdated(content);
-	}
-
-	@Override
-	public void onDeleteDocument() {
-        DocumentListFragment fragment = (DocumentListFragment)getSupportFragmentManager().findFragmentById(R.id.frame_3);
-        fragment.onDocumentDeleted();
-        
-        if (fragment.getItemCount() == 0)
-        	hideDocumentDetailPane();
-
-        CollectionListFragment collectionList = (CollectionListFragment)getSupportFragmentManager().findFragmentById(R.id.frame_2);
-        if (collectionList != null)
-        	collectionList.reloadList();
-	}
-
-	@Override 
-	public void onDocumentListRefreshRequested() {
+	public void onEvent(Events.RefreshDocumentList e) {
 		if (mTwoPane) {
 			DocumentListFragment fragment = (DocumentListFragment) getSupportFragmentManager().findFragmentById(R.id.frame_3);
 
@@ -477,7 +451,7 @@ public class MainActivity extends AppCompatActivity implements ConnectionListFra
 		@Override
 		protected void safeOnPostExecute(Boolean res) {
 			if (res) {
-				onAddConnection();
+				showAddConnection();
 			}
 		}
 
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/QueryEditNameDialogFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/QueryEditNameDialogFragment.java
index 7a80a4e..3b09280 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/QueryEditNameDialogFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/QueryEditNameDialogFragment.java
@@ -6,6 +6,7 @@ import android.view.View;
 import android.widget.EditText;
 
 import com.innodroid.mongobrowser.Constants;
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.R;
 import com.innodroid.mongobrowser.util.UiUtils;
 
@@ -16,10 +17,6 @@ public class QueryEditNameDialogFragment extends BaseDialogFragment {
 
 	private String mContent;
 
-    public interface Callbacks {
-    	void onQueryNamed(String query);
-    }
-    
     public QueryEditNameDialogFragment() {
     	super();
     }
@@ -42,7 +39,7 @@ public class QueryEditNameDialogFragment extends BaseDialogFragment {
     	return UiUtils.buildAlertDialog(view, R.drawable.ic_mode_edit_black, "Query Name", true, 0, new UiUtils.AlertDialogCallbacks() {
 			@Override
 			public boolean onOK() {
-				((Callbacks)getTargetFragment()).onQueryNamed(mContentEdit.getText().toString());
+				Events.postQueryNamed(mContentEdit.getText().toString());
 				return true;
 			}
 
diff --git a/app/src/main/java/com/innodroid/mongobrowser/ui/QueryEditTextDialogFragment.java b/app/src/main/java/com/innodroid/mongobrowser/ui/QueryEditTextDialogFragment.java
index d0d5c74..1cb6676 100644
--- a/app/src/main/java/com/innodroid/mongobrowser/ui/QueryEditTextDialogFragment.java
+++ b/app/src/main/java/com/innodroid/mongobrowser/ui/QueryEditTextDialogFragment.java
@@ -6,6 +6,7 @@ import android.view.View;
 import android.widget.EditText;
 
 import com.innodroid.mongobrowser.Constants;
+import com.innodroid.mongobrowser.Events;
 import com.innodroid.mongobrowser.R;
 import com.innodroid.mongobrowser.util.UiUtils;
 
@@ -16,10 +17,6 @@ public class QueryEditTextDialogFragment extends BaseDialogFragment {
 
 	private String mContent;
 
-    public interface Callbacks {
-    	void onQueryUpdated(String query);
-    }
-    
     public QueryEditTextDialogFragment() {
     	super();
     }
@@ -42,7 +39,7 @@ public class QueryEditTextDialogFragment extends BaseDialogFragment {
     	return UiUtils.buildAlertDialog(view, R.drawable.ic_mode_edit_black, "Edit Query", true, 0, new UiUtils.AlertDialogCallbacks() {
 			@Override
 			public boolean onOK() {
-				((Callbacks)getTargetFragment()).onQueryUpdated(mContentEdit.getText().toString());
+				Events.postQueryUpdated(mContentEdit.getText().toString());
 				return true;
 			}
 
