diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsActivity.java
index e0432067..ea48c1bc 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsActivity.java
@@ -2,6 +2,7 @@ package ch.bailu.aat.activities;
 
 import android.app.Activity;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 
 import ch.bailu.aat.preferences.PreferenceLoadDefaults;
 import ch.bailu.aat.util.AppPermission;
@@ -30,8 +31,8 @@ public abstract class AbsActivity extends Activity {
 
     @Override
     public void onRequestPermissionsResult (int requestCode,
-                                            String[] permissions,
-                                            int[] grantResults) {
+                                            @NonNull String[] permissions,
+                                            @NonNull int[] grantResults) {
         AppPermission.onRequestPermissionsResult(this, requestCode);
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java b/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
index 20b0de7d..e66fe65b 100644
--- a/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/AbsOsmApiActivity.java
@@ -193,7 +193,7 @@ public abstract class AbsOsmApiActivity extends ActivityContext implements OnCli
         LinearLayout layout = new LinearLayout(this);
         layout.setOrientation(LinearLayout.HORIZONTAL);
 
-        String strings[] = osmApi.getUrlStart().split(osmApi.getApiName().toLowerCase());
+        String[] strings = osmApi.getUrlStart().split(osmApi.getApiName().toLowerCase());
 
         TextView b = new TitleView(this, osmApi.getApiName());
         b.setSingleLine();
diff --git a/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java b/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java
index 6d44b6c6..6d99eba3 100644
--- a/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/GpxEditorActivity.java
@@ -36,7 +36,7 @@ public class GpxEditorActivity extends AbsFileContentActivity {
         map = MapFactory.DEF(this, SOLID_KEY).editor(editorSource);
 
 
-        ContentDescription summaryData[] = {
+        ContentDescription[] summaryData = {
                 new NameDescription(this),
                 new PathDescription(this),
                 new DistanceDescription(this),
diff --git a/app/src/main/java/ch/bailu/aat/activities/TestActivity.java b/app/src/main/java/ch/bailu/aat/activities/TestActivity.java
index 33ea361d..cc25c08c 100644
--- a/app/src/main/java/ch/bailu/aat/activities/TestActivity.java
+++ b/app/src/main/java/ch/bailu/aat/activities/TestActivity.java
@@ -83,7 +83,7 @@ public class TestActivity extends ActivityContext {
 
 
     private MultiView createMultiView() {
-        ContentDescription locationDescription[] = new ContentDescription[]{
+        ContentDescription[] locationDescription = new ContentDescription[]{
                 new NameDescription(this),
                 new GpsStateDescription(this),
                 new AltitudeDescription(this),
@@ -97,7 +97,7 @@ public class TestActivity extends ActivityContext {
                 new BearingDescription(this),
         };
 
-        ContentDescription trackerDescription[] = new ContentDescription[]{
+        ContentDescription[] trackerDescription = new ContentDescription[]{
                 new NameDescription(this),
                 new PathDescription(this),
                 new TrackerStateDescription(this),
diff --git a/app/src/main/java/ch/bailu/aat/coordinates/BoundingBoxE6.java b/app/src/main/java/ch/bailu/aat/coordinates/BoundingBoxE6.java
index 11c1dcca..9ae649f9 100644
--- a/app/src/main/java/ch/bailu/aat/coordinates/BoundingBoxE6.java
+++ b/app/src/main/java/ch/bailu/aat/coordinates/BoundingBoxE6.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.coordinates;
 
+import android.support.annotation.NonNull;
+
 import org.mapsforge.core.model.BoundingBox;
 import org.mapsforge.core.model.LatLong;
 import org.mapsforge.core.util.LatLongUtils;
@@ -182,6 +184,7 @@ public class BoundingBoxE6 {
     }
 
 
+    @NonNull
     @Override
     public String toString() {
         final FF f = FF.f();
diff --git a/app/src/main/java/ch/bailu/aat/coordinates/CH1903Coordinates.java b/app/src/main/java/ch/bailu/aat/coordinates/CH1903Coordinates.java
index fb9d2b10..e1ac6a19 100644
--- a/app/src/main/java/ch/bailu/aat/coordinates/CH1903Coordinates.java
+++ b/app/src/main/java/ch/bailu/aat/coordinates/CH1903Coordinates.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.coordinates;
 
+import android.support.annotation.NonNull;
+
 import org.mapsforge.core.model.LatLong;
 
 import ch.bailu.aat.description.FF;
@@ -149,6 +151,7 @@ public class CH1903Coordinates extends MeterCoordinates {
 
     private final FF f = FF.f();
 
+    @NonNull
     @Override
     public String toString() {
         return f.N3_3.format(((float)northing)/1000f) + "/"
diff --git a/app/src/main/java/ch/bailu/aat/coordinates/Coordinates.java b/app/src/main/java/ch/bailu/aat/coordinates/Coordinates.java
index d13f15fd..298e7da1 100644
--- a/app/src/main/java/ch/bailu/aat/coordinates/Coordinates.java
+++ b/app/src/main/java/ch/bailu/aat/coordinates/Coordinates.java
@@ -1,10 +1,13 @@
 package ch.bailu.aat.coordinates;
 
+import android.support.annotation.NonNull;
+
 import org.mapsforge.core.model.LatLong;
 
 import ch.bailu.aat.util.ui.AppLog;
 
 public abstract class Coordinates {
+    @NonNull
     public abstract String toString();
 
 
diff --git a/app/src/main/java/ch/bailu/aat/coordinates/LatLongE6.java b/app/src/main/java/ch/bailu/aat/coordinates/LatLongE6.java
index 44d10b2c..3170991f 100644
--- a/app/src/main/java/ch/bailu/aat/coordinates/LatLongE6.java
+++ b/app/src/main/java/ch/bailu/aat/coordinates/LatLongE6.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.coordinates;
 
+import android.support.annotation.NonNull;
+
 import org.mapsforge.core.model.LatLong;
 import org.mapsforge.core.util.LatLongUtils;
 
@@ -56,6 +58,7 @@ public class LatLongE6 implements LatLongE6Interface {
 
     }
 
+    @NonNull
     @Override
     public String toString() {
         return toLatLong().toString();
diff --git a/app/src/main/java/ch/bailu/aat/coordinates/SrtmCoordinates.java b/app/src/main/java/ch/bailu/aat/coordinates/SrtmCoordinates.java
index 6e55c6a0..54ba4178 100644
--- a/app/src/main/java/ch/bailu/aat/coordinates/SrtmCoordinates.java
+++ b/app/src/main/java/ch/bailu/aat/coordinates/SrtmCoordinates.java
@@ -1,6 +1,7 @@
 package ch.bailu.aat.coordinates;
 
 import android.content.Context;
+import android.support.annotation.NonNull;
 
 import org.mapsforge.core.model.LatLong;
 
@@ -64,6 +65,7 @@ public class SrtmCoordinates extends Coordinates implements LatLongE6Interface {
         return WGS84Sexagesimal.getLongitudeChar(lo) + f3.format(Math.abs(lo));
     }
     
+    @NonNull
     @Override
     public String toString() {
         return string;
diff --git a/app/src/main/java/ch/bailu/aat/coordinates/UTMCoordinates.java b/app/src/main/java/ch/bailu/aat/coordinates/UTMCoordinates.java
index 295230e3..1e86da5e 100644
--- a/app/src/main/java/ch/bailu/aat/coordinates/UTMCoordinates.java
+++ b/app/src/main/java/ch/bailu/aat/coordinates/UTMCoordinates.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.coordinates;
 
+import android.support.annotation.NonNull;
+
 import org.mapsforge.core.model.LatLong;
 
 import ch.bailu.aat.description.FF;
@@ -124,6 +126,7 @@ public class UTMCoordinates extends MeterCoordinates {
 
     private final FF f = FF.f();
 
+    @NonNull
     @Override
     public String toString() {
 
diff --git a/app/src/main/java/ch/bailu/aat/coordinates/WGS84Sexagesimal.java b/app/src/main/java/ch/bailu/aat/coordinates/WGS84Sexagesimal.java
index d2c1aa8c..7f1f4c04 100644
--- a/app/src/main/java/ch/bailu/aat/coordinates/WGS84Sexagesimal.java
+++ b/app/src/main/java/ch/bailu/aat/coordinates/WGS84Sexagesimal.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.coordinates;
 
+import android.support.annotation.NonNull;
+
 import java.text.DecimalFormat;
 
 public class WGS84Sexagesimal extends Coordinates {
@@ -32,6 +34,7 @@ public class WGS84Sexagesimal extends Coordinates {
         private final static DecimalFormat fX = new DecimalFormat("#");
         private final static DecimalFormat f00 = new DecimalFormat("00");
 
+        @NonNull
         public String toString() {
             return fX.format(Math.abs(deg)) + "\u00B0 "
                     + f00.format(min) + "\u0027 "
@@ -58,6 +61,7 @@ public class WGS84Sexagesimal extends Coordinates {
     }
 
 
+    @NonNull
     @Override
     public String toString() {
         return latitude.toString() + " "
diff --git a/app/src/main/java/ch/bailu/aat/description/DistanceDescription.java b/app/src/main/java/ch/bailu/aat/description/DistanceDescription.java
index bd4cacb7..fb8c59ac 100644
--- a/app/src/main/java/ch/bailu/aat/description/DistanceDescription.java
+++ b/app/src/main/java/ch/bailu/aat/description/DistanceDescription.java
@@ -9,7 +9,7 @@ import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.preferences.general.SolidUnit;
 
 public class DistanceDescription extends FloatDescription {
-    private final DecimalFormat FORMAT[] =
+    private final DecimalFormat[] FORMAT =
             {FF.f().N3, FF.f().N2, FF.f().N1, FF.f().N};
     private final SolidUnit unit;
     
diff --git a/app/src/main/java/ch/bailu/aat/description/FF.java b/app/src/main/java/ch/bailu/aat/description/FF.java
index 048cf1ed..d2f6c960 100644
--- a/app/src/main/java/ch/bailu/aat/description/FF.java
+++ b/app/src/main/java/ch/bailu/aat/description/FF.java
@@ -18,7 +18,7 @@ public class FF {
 
     public final DecimalFormat N3_3 = new DecimalFormat("000.000");
 
-    private FF() {};
+    private FF() {}
 
     private static final ThreadLocal<FF> F = new ThreadLocal<FF>() {
         @Override
diff --git a/app/src/main/java/ch/bailu/aat/gpx/GpxPointNode.java b/app/src/main/java/ch/bailu/aat/gpx/GpxPointNode.java
index a6ad46a0..88ab3184 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/GpxPointNode.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/GpxPointNode.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.gpx;
 
+import android.support.annotation.NonNull;
+
 import ch.bailu.aat.coordinates.BoundingBoxE6;
 import ch.bailu.aat.gpx.attributes.GpxAttributes;
 import ch.bailu.aat.gpx.attributes.Keys;
@@ -99,6 +101,7 @@ public abstract class GpxPointNode extends Node implements GpxDeltaPointInterfac
     }
 */
     
+    @NonNull
     @Override
     public String toString() {
         return attributes.toString();
diff --git a/app/src/main/java/ch/bailu/aat/gpx/attributes/GpxAttributesStatic.java b/app/src/main/java/ch/bailu/aat/gpx/attributes/GpxAttributesStatic.java
index 75186762..245934ee 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/attributes/GpxAttributesStatic.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/attributes/GpxAttributesStatic.java
@@ -1,6 +1,8 @@
 package ch.bailu.aat.gpx.attributes;
 
 
+import android.support.annotation.NonNull;
+
 public class GpxAttributesStatic extends GpxAttributes {
 
 
@@ -19,7 +21,7 @@ public class GpxAttributesStatic extends GpxAttributes {
 
 
         @Override
-        public int compareTo(Tag another) {
+        public int compareTo(@NonNull Tag another) {
             return Integer.compare(key, another.key);
         }
     }
diff --git a/app/src/main/java/ch/bailu/aat/gpx/attributes/MaxSpeed.java b/app/src/main/java/ch/bailu/aat/gpx/attributes/MaxSpeed.java
index dd3297a3..99dfa30c 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/attributes/MaxSpeed.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/attributes/MaxSpeed.java
@@ -63,7 +63,7 @@ public abstract class MaxSpeed  extends GpxSubAttributes {
 
 
     public static class Samples extends MaxSpeed {
-        private final float speeds[];
+        private final float[] speeds;
         private int i = 0;
 
         private float maximum = 0f;
diff --git a/app/src/main/java/ch/bailu/aat/gpx/attributes/SampleRate.java b/app/src/main/java/ch/bailu/aat/gpx/attributes/SampleRate.java
index 71b6e4eb..f4bd1d1c 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/attributes/SampleRate.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/attributes/SampleRate.java
@@ -7,7 +7,7 @@ import ch.bailu.aat.services.sensor.attributes.StepCounterAttributes;
 
 public class SampleRate extends GpxSubAttributes {
 
-    private final int KEY[];
+    private final int[] KEY;
 
     private long sampleTimeMillis = 0L;
     private long totalTimeMillis = 0L;
@@ -168,13 +168,13 @@ public class SampleRate extends GpxSubAttributes {
     }
 
     public int getTotalSamples() {
-        return Math.round(totalSamples60KM / 60000);
+        return Math.round(totalSamples60KM / 60000f);
     }
 
 
     public int getAverageSpm() {
         if (totalTimeMillis > 0)
-            return Math.round(totalSamples60KM / totalTimeMillis);
+            return (int) Math.round(totalSamples60KM / (double)totalTimeMillis);
         return 0;
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxType.java b/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxType.java
index 90046537..1c7069d5 100644
--- a/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxType.java
+++ b/app/src/main/java/ch/bailu/aat/gpx/interfaces/GpxType.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.gpx.interfaces;
 
+import android.support.annotation.NonNull;
+
 public enum GpxType {
     WAY,
     ROUTE,
@@ -8,6 +10,7 @@ public enum GpxType {
 
 
 
+    @NonNull
     @Override
     public String toString() {
         return name();
diff --git a/app/src/main/java/ch/bailu/aat/map/layer/CurrentLocationLayer.java b/app/src/main/java/ch/bailu/aat/map/layer/CurrentLocationLayer.java
index 109bfead..b2fb2814 100644
--- a/app/src/main/java/ch/bailu/aat/map/layer/CurrentLocationLayer.java
+++ b/app/src/main/java/ch/bailu/aat/map/layer/CurrentLocationLayer.java
@@ -47,9 +47,9 @@ public class CurrentLocationLayer implements OnContentUpdatedInterface, MapLayer
     private static class Satturate {
         private final static int STEPS=60;
 
-        private final short r[] = new short[STEPS];
-        private final short g[] = new short[STEPS];
-        private final short b[] = new short[STEPS];
+        private final short[] r = new short[STEPS];
+        private final short[] g = new short[STEPS];
+        private final short[] b = new short[STEPS];
 
 
         public Satturate(int c) {
@@ -65,9 +65,11 @@ public class CurrentLocationLayer implements OnContentUpdatedInterface, MapLayer
         }
 
 
-        private void fill(int base, int max, short t[]) {
+        private void fill(int base, int max, short[] t) {
+            final float steps = STEPS;
+
             for (int i=0; i<STEPS; i++) {
-                float step = (max - base) / STEPS;
+                float step = (max - base) / steps;
 
                 t[i] = (short) (base+ Math.round(step * i));
             }
diff --git a/app/src/main/java/ch/bailu/aat/map/layer/control/FileControlBarLayer.java b/app/src/main/java/ch/bailu/aat/map/layer/control/FileControlBarLayer.java
index 7bcc1498..d30da901 100644
--- a/app/src/main/java/ch/bailu/aat/map/layer/control/FileControlBarLayer.java
+++ b/app/src/main/java/ch/bailu/aat/map/layer/control/FileControlBarLayer.java
@@ -149,7 +149,7 @@ public class FileControlBarLayer extends ControlBarLayer {
             super(mc);
         }
 
-        final ContentDescription summaryData[] = {
+        final ContentDescription[] summaryData = {
 
                 new DateDescription(acontext),
                 new TimeDescription(acontext),
diff --git a/app/src/main/java/ch/bailu/aat/map/layer/grid/GridMetricScaler.java b/app/src/main/java/ch/bailu/aat/map/layer/grid/GridMetricScaler.java
index dcb940e5..bfd6ed1f 100644
--- a/app/src/main/java/ch/bailu/aat/map/layer/grid/GridMetricScaler.java
+++ b/app/src/main/java/ch/bailu/aat/map/layer/grid/GridMetricScaler.java
@@ -40,7 +40,8 @@ public class GridMetricScaler {
     
     public void findOptimalScale(int distance) {
         for (int level:GRID_LEVELS) {
-            if (Math.round(distance / level) > 0) {
+            final float flevel = level;
+            if (Math.round(distance / flevel) > 0) {
                 squareDistance=level;
                 break;
             }
diff --git a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeTileLayerStackConfigured.java b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeTileLayerStackConfigured.java
index 7110458c..e7d0e44f 100644
--- a/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeTileLayerStackConfigured.java
+++ b/app/src/main/java/ch/bailu/aat/map/mapsforge/MapsForgeTileLayerStackConfigured.java
@@ -39,8 +39,8 @@ public abstract class MapsForgeTileLayerStackConfigured extends MapsForgeTileLay
 
 
     private void initLayers() {
-        boolean enabled[] = stiles.getEnabledArray();
-        Source sources[] = SolidMapTileStack.SOURCES;
+        boolean[] enabled = stiles.getEnabledArray();
+        Source[] sources = SolidMapTileStack.SOURCES;
 
         removeLayers();
 
@@ -50,11 +50,11 @@ public abstract class MapsForgeTileLayerStackConfigured extends MapsForgeTileLay
         setMapViewZoomLimit(mapView);
     }
 
-    protected abstract void addBackgroundLayers(boolean enabled[], Source sources[]);
+    protected abstract void addBackgroundLayers(boolean[] enabled, Source[] sources);
 
 
 
-    protected abstract void addOverlayLayers(boolean enabled[], Source sources[]);
+    protected abstract void addOverlayLayers(boolean[] enabled, Source[] sources);
 
 
 
@@ -97,7 +97,7 @@ public abstract class MapsForgeTileLayerStackConfigured extends MapsForgeTileLay
         }
 
         @Override
-        protected void addBackgroundLayers(boolean enabled[], Source sources[]) {
+        protected void addBackgroundLayers(boolean[] enabled, Source[] sources) {
             Source mapnik = null, mapsforge = null;
 
             if (enabled[1] && sources[1] == DownloadSource.MAPNIK) {
@@ -121,7 +121,7 @@ public abstract class MapsForgeTileLayerStackConfigured extends MapsForgeTileLay
         }
 
         @Override
-        protected void addOverlayLayers(boolean enabled[], Source sources[]) {
+        protected void addOverlayLayers(boolean[] enabled, Source[] sources) {
 
         }
     }
@@ -133,7 +133,7 @@ public abstract class MapsForgeTileLayerStackConfigured extends MapsForgeTileLay
         }
 
         @Override
-        protected void addOverlayLayers(boolean enabled[], Source sources[]) {
+        protected void addOverlayLayers(boolean[] enabled, Source[] sources) {
             for (int i=2; i< sources.length; i++) {
                 if (enabled[i]) {
                     Source s = sources[i];
diff --git a/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java b/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java
index a5796055..571ed865 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/AbsSolidType.java
@@ -2,6 +2,7 @@ package ch.bailu.aat.preferences;
 
 import android.content.Context;
 import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
+import android.support.annotation.NonNull;
 
 import ch.bailu.aat.exception.ValidationException;
 import ch.bailu.util_java.util.Objects;
@@ -45,6 +46,7 @@ public abstract class AbsSolidType implements SolidTypeInterface {
     }
 
 
+    @NonNull
     @Override
     public String toString() {
         return getValueAsString();
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidDirectoryQuery.java b/app/src/main/java/ch/bailu/aat/preferences/SolidDirectoryQuery.java
index d5d50aba..aa9161ee 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidDirectoryQuery.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidDirectoryQuery.java
@@ -121,9 +121,9 @@ public class SolidDirectoryQuery extends SolidFile {
 
             selection = GpxDbConstants.KEY_START_TIME 
                     + " BETWEEN " 
-                    + String.valueOf(Math.min(start, end)) 
+                    + Math.min(start, end)
                     + " AND " 
-                    + String.valueOf(Math.max(start, end)) ;
+                    + Math.max(start, end);
         }
 
         return selection;
diff --git a/app/src/main/java/ch/bailu/aat/preferences/SolidFile.java b/app/src/main/java/ch/bailu/aat/preferences/SolidFile.java
index a713a4a9..3cf4bb6c 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/SolidFile.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/SolidFile.java
@@ -6,6 +6,7 @@ import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Build;
+import android.support.annotation.NonNull;
 
 import java.util.ArrayList;
 
@@ -31,6 +32,7 @@ public abstract class SolidFile extends SolidString {
 
 
 
+    @NonNull
     @Override
     public String toString() {
         return getValueAsFile().getPathName();
diff --git a/app/src/main/java/ch/bailu/aat/preferences/general/SolidUnit.java b/app/src/main/java/ch/bailu/aat/preferences/general/SolidUnit.java
index b6a88552..1631a86e 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/general/SolidUnit.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/general/SolidUnit.java
@@ -13,12 +13,12 @@ public class SolidUnit extends SolidStaticIndexList {
     static public final int SI = 3;
 
 
-    static private final float DIST_FACTOR[]  = {1f/1000f, 0.000621371f, 1f, 1f};
-    static public final float ALT_FACTOR[]   = {1, 3.28084f, 1f, 1f};
-    static private final float SPEED_FACTOR[] = {3.6f, 2.23694f, 1f, 1f};
-    static private final String DIST_UNIT[]   = {"km", "miles", "m", "m"};
-    static private final String SPEED_UNIT[]  = {"km/h", "mph", "m/s", "m/s"};
-    static public final String ALT_UNIT[]    = {"m", "f", "m", "m"};
+    static private final float[] DIST_FACTOR = {1f / 1000f, 0.000621371f, 1f, 1f};
+    static public final float[] ALT_FACTOR = {1, 3.28084f, 1f, 1f};
+    static private final float[] SPEED_FACTOR = {3.6f, 2.23694f, 1f, 1f};
+    static private final String[] DIST_UNIT = {"km", "miles", "m", "m"};
+    static private final String[] SPEED_UNIT = {"km/h", "mph", "m/s", "m/s"};
+    static public final String[] ALT_UNIT = {"m", "f", "m", "m"};
     
     public SolidUnit(Context c) {
         super(c, KEY,
diff --git a/app/src/main/java/ch/bailu/aat/preferences/map/SolidTrimDate.java b/app/src/main/java/ch/bailu/aat/preferences/map/SolidTrimDate.java
index 9dc69a20..ee5cb8bc 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/map/SolidTrimDate.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/map/SolidTrimDate.java
@@ -47,14 +47,14 @@ public class SolidTrimDate extends SolidIndexList {
 
 
     private final Entry[] entries = {
-            new Entry(2 * DateUtils.YEAR_IN_MILLIS),
-            new Entry(1 * DateUtils.YEAR_IN_MILLIS),
-            new Entry(6 * 30 * DateUtils.DAY_IN_MILLIS),
-            new Entry(3 * 30 * DateUtils.DAY_IN_MILLIS),
-            new Entry(2 * 30 * DateUtils.DAY_IN_MILLIS),
-            new Entry(1 * 30 * DateUtils.DAY_IN_MILLIS),
-            new Entry(2 * 7 * DateUtils.DAY_IN_MILLIS),
-            new Entry(1 * 7 * DateUtils.DAY_IN_MILLIS),
+            new Entry(2L * DateUtils.YEAR_IN_MILLIS),
+            new Entry(1L * DateUtils.YEAR_IN_MILLIS),
+            new Entry(6L * 30L * DateUtils.DAY_IN_MILLIS),
+            new Entry(3L * 30L * DateUtils.DAY_IN_MILLIS),
+            new Entry(2L * 30L * DateUtils.DAY_IN_MILLIS),
+            new Entry(1L * 30L * DateUtils.DAY_IN_MILLIS),
+            new Entry(2L * 7L * DateUtils.DAY_IN_MILLIS),
+            new Entry(1L * 7L * DateUtils.DAY_IN_MILLIS),
     };
 
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/map/SolidTrimSize.java b/app/src/main/java/ch/bailu/aat/preferences/map/SolidTrimSize.java
index f4a764d5..132ff6b9 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/map/SolidTrimSize.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/map/SolidTrimSize.java
@@ -22,15 +22,15 @@ public class SolidTrimSize extends SolidIndexList {
 
 
     private static final Entry[] entries = {
-            new Entry(16 * MemSize.GB),
-            new Entry(8 * MemSize.GB),
-            new Entry(4 * MemSize.GB),
-            new Entry(2 * MemSize.GB),
-            new Entry(1 * MemSize.GB),
-            new Entry(500 * MemSize.MB),
-            new Entry(200 * MemSize.MB),
-            new Entry(100 * MemSize.MB),
-            new Entry(50 * MemSize.MB),
+            new Entry(16L * MemSize.GB),
+            new Entry(8L * MemSize.GB),
+            new Entry(4L * MemSize.GB),
+            new Entry(2L * MemSize.GB),
+            new Entry(1L * MemSize.GB),
+            new Entry(500L * MemSize.MB),
+            new Entry(200L * MemSize.MB),
+            new Entry(100L * MemSize.MB),
+            new Entry(50L * MemSize.MB),
     };
 
 
diff --git a/app/src/main/java/ch/bailu/aat/preferences/presets/SolidDistanceFilter.java b/app/src/main/java/ch/bailu/aat/preferences/presets/SolidDistanceFilter.java
index 4a3fa016..f1f9e9cf 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/presets/SolidDistanceFilter.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/presets/SolidDistanceFilter.java
@@ -6,7 +6,6 @@ import ch.bailu.aat.R;
 import ch.bailu.aat.description.FF;
 import ch.bailu.aat.preferences.SolidIndexList;
 import ch.bailu.aat.preferences.general.SolidUnit;
-import ch.bailu.aat.util.ToDo;
 
 public class SolidDistanceFilter extends SolidIndexList {
     private static final String KEY="distance_filter_";
diff --git a/app/src/main/java/ch/bailu/aat/preferences/presets/SolidMissingTrigger.java b/app/src/main/java/ch/bailu/aat/preferences/presets/SolidMissingTrigger.java
index 578dfd92..f7cc7bf5 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/presets/SolidMissingTrigger.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/presets/SolidMissingTrigger.java
@@ -30,7 +30,7 @@ public class SolidMissingTrigger extends SolidStaticIndexList {
 
             label_list[0] = c.getString(R.string.off);
             for (int i = 1; i < label_list.length; i++) {
-                label_list[i] = String.valueOf(VALUE_LIST[i]) + "s";
+                label_list[i] = VALUE_LIST[i] + "s";
             }
         }
         return label_list;
diff --git a/app/src/main/java/ch/bailu/aat/preferences/system/SolidStatusMessages.java b/app/src/main/java/ch/bailu/aat/preferences/system/SolidStatusMessages.java
index 2c974376..4549b242 100644
--- a/app/src/main/java/ch/bailu/aat/preferences/system/SolidStatusMessages.java
+++ b/app/src/main/java/ch/bailu/aat/preferences/system/SolidStatusMessages.java
@@ -9,7 +9,7 @@ public class SolidStatusMessages extends SolidIndexList {
 
     private static final String KEY = "Satus Messages";
 
-    private static final String VAL[] = {ToDo.translate("Download size"),
+    private static final String[] VAL = {ToDo.translate("Download size"),
             ToDo.translate("URL"),
             ToDo.translate("URL and filepath"),
             ToDo.translate("None")};
diff --git a/app/src/main/java/ch/bailu/aat/providers/GpxProvider.java b/app/src/main/java/ch/bailu/aat/providers/GpxProvider.java
index 3bf37041..746174ae 100644
--- a/app/src/main/java/ch/bailu/aat/providers/GpxProvider.java
+++ b/app/src/main/java/ch/bailu/aat/providers/GpxProvider.java
@@ -7,6 +7,7 @@ import android.database.MatrixCursor;
 import android.net.Uri;
 import android.os.ParcelFileDescriptor;
 import android.provider.OpenableColumns;
+import android.support.annotation.NonNull;
 
 import java.io.File;
 import java.io.FileNotFoundException;
@@ -18,7 +19,7 @@ public class GpxProvider extends ContentProvider {
     
 
     @Override
-    public ParcelFileDescriptor openFile(Uri uri, String mode) throws FileNotFoundException {
+    public ParcelFileDescriptor openFile(@NonNull Uri uri, @NonNull String mode) throws FileNotFoundException {
 
         final String path = uri.getPath();
 
@@ -41,7 +42,7 @@ public class GpxProvider extends ContentProvider {
     }
 
     @Override
-    public Cursor query(Uri uri, String[] strings, String s, String[] strings2, String s2) {
+    public Cursor query(@NonNull Uri uri, String[] strings, String s, String[] strings2, String s2) {
         
         MatrixCursor cursor = new MatrixCursor(new String[]{OpenableColumns.DISPLAY_NAME, OpenableColumns.SIZE});
         
@@ -53,7 +54,7 @@ public class GpxProvider extends ContentProvider {
     }
 
     @Override
-    public String getType(Uri uri) {
+    public String getType(@NonNull Uri uri) {
         final File file =  new File(uri.getPath());
         return mimeTypeFromFileName(file.getName());
     }
@@ -65,17 +66,17 @@ public class GpxProvider extends ContentProvider {
     }
 
     @Override
-    public Uri insert(Uri uri, ContentValues contentValues) {
+    public Uri insert(@NonNull Uri uri, ContentValues contentValues) {
         throw UNSUPORTED;
     }
 
     @Override
-    public int delete(Uri uri, String s, String[] strings) {
+    public int delete(@NonNull Uri uri, String s, String[] strings) {
         throw UNSUPORTED;
     }
 
     @Override
-    public int update(Uri uri, ContentValues contentValues, String s, String[] strings) {
+    public int update(@NonNull Uri uri, ContentValues contentValues, String s, String[] strings) {
         throw UNSUPORTED;
     }
     
diff --git a/app/src/main/java/ch/bailu/aat/services/background/BackgroundService.java b/app/src/main/java/ch/bailu/aat/services/background/BackgroundService.java
index f57d32df..48515c42 100644
--- a/app/src/main/java/ch/bailu/aat/services/background/BackgroundService.java
+++ b/app/src/main/java/ch/bailu/aat/services/background/BackgroundService.java
@@ -21,8 +21,7 @@ public class BackgroundService extends VirtualService {
     private final HandleStack queue = new HandleStack();
 
 
-
-    private final WorkerThread workers[] =
+    private final WorkerThread[] workers =
             new WorkerThread[SolidRendererThreads.numberOfBackgroundThreats()];
 
 
diff --git a/app/src/main/java/ch/bailu/aat/services/background/DownloadStatistics.java b/app/src/main/java/ch/bailu/aat/services/background/DownloadStatistics.java
index 3cc63bed..29cc3fdb 100644
--- a/app/src/main/java/ch/bailu/aat/services/background/DownloadStatistics.java
+++ b/app/src/main/java/ch/bailu/aat/services/background/DownloadStatistics.java
@@ -58,7 +58,7 @@ public class DownloadStatistics {
 
         if (success > 0) {
             builder.append("<br>Average file pixelCount: ");
-            builder.append(Math.round(bytes / success));
+            builder.append(Math.round(bytes / (float)success));
             builder.append(" bytes");
         }
 
diff --git a/app/src/main/java/ch/bailu/aat/services/background/DownloadTask.java b/app/src/main/java/ch/bailu/aat/services/background/DownloadTask.java
index d13a553c..9d051c99 100644
--- a/app/src/main/java/ch/bailu/aat/services/background/DownloadTask.java
+++ b/app/src/main/java/ch/bailu/aat/services/background/DownloadTask.java
@@ -1,6 +1,7 @@
 package ch.bailu.aat.services.background;
 
 import android.content.Context;
+import android.support.annotation.NonNull;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -77,6 +78,7 @@ public class DownloadTask extends BackgroundTask implements ContextWrapperInterf
     }
 
 
+    @NonNull
     @Override
     public String toString() {
         return urx.toString();
diff --git a/app/src/main/java/ch/bailu/aat/services/background/FileTask.java b/app/src/main/java/ch/bailu/aat/services/background/FileTask.java
index e813ba79..f4d8cf00 100644
--- a/app/src/main/java/ch/bailu/aat/services/background/FileTask.java
+++ b/app/src/main/java/ch/bailu/aat/services/background/FileTask.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.services.background;
 
+import android.support.annotation.NonNull;
+
 import ch.bailu.util_java.foc.Foc;
 
 public abstract class FileTask extends BackgroundTask {
@@ -12,7 +14,8 @@ public abstract class FileTask extends BackgroundTask {
     }
     
 
-    @Override 
+    @NonNull
+    @Override
     public String toString() {
         return file.toString();
     }
diff --git a/app/src/main/java/ch/bailu/aat/services/background/LoaderThread.java b/app/src/main/java/ch/bailu/aat/services/background/LoaderThread.java
index 05963dce..dd68ec88 100644
--- a/app/src/main/java/ch/bailu/aat/services/background/LoaderThread.java
+++ b/app/src/main/java/ch/bailu/aat/services/background/LoaderThread.java
@@ -35,7 +35,7 @@ public class LoaderThread extends WorkerThread {
 
         if (total_loads >0) {
             builder.append("<br>Average bytes: ");
-            builder.append(Math.round(total_bytes/total_loads));
+            builder.append(Math.round(total_bytes/(float)total_loads));
             builder.append(" bytes");
         }
 
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/LockCache.java b/app/src/main/java/ch/bailu/aat/services/cache/LockCache.java
index 3d126333..461cfa3a 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/LockCache.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/LockCache.java
@@ -85,7 +85,7 @@ public class LockCache<E extends ObjectHandle>  implements Closeable {
 
     private void resizeCache(int capacity) {
         final E[] newObjects= (E[]) new ObjectHandle[capacity];
-        final long newAccess[] = new long[capacity];
+        final long[] newAccess = new long[capacity];
 
         final int l = Math.min(newObjects.length, objects.length);
         int x,i;
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/ObjectHandle.java b/app/src/main/java/ch/bailu/aat/services/cache/ObjectHandle.java
index b396e66f..74474a80 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/ObjectHandle.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/ObjectHandle.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.services.cache;
 
+import android.support.annotation.NonNull;
+
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.util.ui.AppLog;
 import ch.bailu.util_java.foc.Foc;
@@ -23,6 +25,7 @@ public abstract class ObjectHandle implements ObjectBroadcastReceiver{
     }
 
 
+    @NonNull
     @Override
     public String toString() {
         return ID;
diff --git a/app/src/main/java/ch/bailu/aat/services/cache/elevation/SubTile.java b/app/src/main/java/ch/bailu/aat/services/cache/elevation/SubTile.java
index ce09140f..d5280319 100644
--- a/app/src/main/java/ch/bailu/aat/services/cache/elevation/SubTile.java
+++ b/app/src/main/java/ch/bailu/aat/services/cache/elevation/SubTile.java
@@ -1,6 +1,7 @@
 package ch.bailu.aat.services.cache.elevation;
 
 import android.graphics.Rect;
+import android.support.annotation.NonNull;
 
 import ch.bailu.aat.coordinates.SrtmCoordinates;
 import ch.bailu.aat.services.cache.Span;
@@ -31,6 +32,7 @@ public class SubTile {
         return coordinates.hashCode();
     }
 
+    @NonNull
     @Override
     public String toString() {
         return coordinates.toString();
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/loader/Dem3Tiles.java b/app/src/main/java/ch/bailu/aat/services/dem/loader/Dem3Tiles.java
index 9c83770f..366ac9aa 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/loader/Dem3Tiles.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/loader/Dem3Tiles.java
@@ -8,8 +8,8 @@ import ch.bailu.aat.services.dem.tile.Dem3Tile;
 public class Dem3Tiles {
 
     private final static int NUM_TILES=1;
-    
-    private final Dem3Tile tiles[];
+
+    private final Dem3Tile[] tiles;
 
     public Dem3Tiles() {
         tiles = new Dem3Tile[NUM_TILES];
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/tile/Dem3Array.java b/app/src/main/java/ch/bailu/aat/services/dem/tile/Dem3Array.java
index 3e33d85b..1c8b181a 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/tile/Dem3Array.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/tile/Dem3Array.java
@@ -6,7 +6,7 @@ public class Dem3Array {
     public static final DemDimension DIMENSION=
             new DemDimension(DEM3_BUFFER_DIM, DEM3_BUFFER_OFFSET);
 
-    protected final byte data[]= new byte[DEM3_BUFFER_DIM*DEM3_BUFFER_DIM*2];
+    protected final byte[] data = new byte[DEM3_BUFFER_DIM * DEM3_BUFFER_DIM * 2];
     private final DemGeoToIndex toIndex = new DemGeoToIndex(DIMENSION);
 
 
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/tile/Dem3Tile.java b/app/src/main/java/ch/bailu/aat/services/dem/tile/Dem3Tile.java
index b247f49b..d6092ded 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/tile/Dem3Tile.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/tile/Dem3Tile.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.services.dem.tile;
 
+import android.support.annotation.NonNull;
+
 import ch.bailu.aat.coordinates.SrtmCoordinates;
 import ch.bailu.aat.services.ServiceContext;
 import ch.bailu.aat.services.background.BackgroundTask;
@@ -52,6 +54,7 @@ public class Dem3Tile implements ElevationProvider, DemProvider {
 
     private BackgroundTask loader = BackgroundTask.NULL;
 
+    @NonNull
     @Override
     public String toString() {
         return coordinates.coordinates.toString();
diff --git a/app/src/main/java/ch/bailu/aat/services/dem/tile/DemSplitter.java b/app/src/main/java/ch/bailu/aat/services/dem/tile/DemSplitter.java
index 541f4150..107b3c2d 100644
--- a/app/src/main/java/ch/bailu/aat/services/dem/tile/DemSplitter.java
+++ b/app/src/main/java/ch/bailu/aat/services/dem/tile/DemSplitter.java
@@ -81,7 +81,7 @@ public class DemSplitter implements DemProvider {
 
         
         int sum = parent.getElevation(e)*2;
-        final int div=12;
+        final float div=12;
         
         if (row_mode+col_mode == 0) { // A
             sum = sum + 
diff --git a/app/src/main/java/ch/bailu/aat/services/directory/DirectorySynchronizer.java b/app/src/main/java/ch/bailu/aat/services/directory/DirectorySynchronizer.java
index f83272d4..2fc2cd38 100644
--- a/app/src/main/java/ch/bailu/aat/services/directory/DirectorySynchronizer.java
+++ b/app/src/main/java/ch/bailu/aat/services/directory/DirectorySynchronizer.java
@@ -119,7 +119,7 @@ public class DirectorySynchronizer  implements Closeable {
 
         private GpxDatabase openDatabase()  throws Exception {
             final String dbPath = SummaryConfig.getWriteableDBPath(scontext.getContext(), directory);
-            final String query[] = {GpxDbConstants.KEY_FILENAME};
+            final String[] query = {GpxDbConstants.KEY_FILENAME};
 
             dbAccessTime = new File(dbPath).lastModified();
             return new GpxDatabase(scontext, dbPath, query);
diff --git a/app/src/main/java/ch/bailu/aat/services/editor/EditorRing.java b/app/src/main/java/ch/bailu/aat/services/editor/EditorRing.java
index 97c3ee96..e18a796d 100644
--- a/app/src/main/java/ch/bailu/aat/services/editor/EditorRing.java
+++ b/app/src/main/java/ch/bailu/aat/services/editor/EditorRing.java
@@ -1,7 +1,7 @@
 package ch.bailu.aat.services.editor;
 
 public class EditorRing {
-    private final NodeEditor ring[] = new NodeEditor[10];
+    private final NodeEditor[] ring = new NodeEditor[10];
     private int index=0;
     private int undoable=0;
     private int redoable=0;
diff --git a/app/src/main/java/ch/bailu/aat/services/location/MockLocation.java b/app/src/main/java/ch/bailu/aat/services/location/MockLocation.java
index 582745f9..023ac9d8 100644
--- a/app/src/main/java/ch/bailu/aat/services/location/MockLocation.java
+++ b/app/src/main/java/ch/bailu/aat/services/location/MockLocation.java
@@ -19,7 +19,7 @@ import ch.bailu.util_java.foc.FocName;
 public class MockLocation extends LocationStackChainedItem implements Runnable{
 
     private final static Foc NULL_FILE = new FocName(MockLocation.class.getSimpleName());
-    private static final long INTERVAL=1*1000;
+    private static final long INTERVAL=1000L;
 
     private GpxList list;
     private GpxPointNode node;
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/Averager.java b/app/src/main/java/ch/bailu/aat/services/sensor/Averager.java
index 06d6d24b..eed06fc5 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/Averager.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/Averager.java
@@ -3,7 +3,7 @@ package ch.bailu.aat.services.sensor;
 public class Averager {
 
 
-    private final int values[];
+    private final int[] values;
     private int size = 0;
     private int next = 0;
     private int average = 0;
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/SensorService.java b/app/src/main/java/ch/bailu/aat/services/sensor/SensorService.java
index 48166a02..9b139a36 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/SensorService.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/SensorService.java
@@ -5,6 +5,7 @@ import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
 import android.os.Build;
+import android.support.annotation.NonNull;
 
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.services.ServiceContext;
@@ -80,6 +81,7 @@ public class SensorService extends VirtualService {
     }
 
 
+    @NonNull
     @Override
     public synchronized String toString() {
         return bluetoothLE.toString();
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorSDK18.java b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorSDK18.java
index 52f37995..617fb49a 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorSDK18.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorSDK18.java
@@ -9,6 +9,7 @@ import android.bluetooth.BluetoothGattService;
 import android.bluetooth.BluetoothProfile;
 import android.content.Context;
 import android.os.Build;
+import android.support.annotation.NonNull;
 import android.support.annotation.RequiresApi;
 
 import java.util.List;
@@ -234,6 +235,7 @@ public class BleSensorSDK18 extends BluetoothGattCallback implements SensorInter
     }
 
 
+    @NonNull
     @Override
     public String toString() {
         return device.getName()
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorsSDK18.java b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorsSDK18.java
index 406da7d8..b9d97b76 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorsSDK18.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/BleSensorsSDK18.java
@@ -4,6 +4,7 @@ import android.bluetooth.BluetoothAdapter;
 import android.bluetooth.BluetoothDevice;
 import android.bluetooth.BluetoothManager;
 import android.content.Context;
+import android.support.annotation.NonNull;
 import android.support.annotation.RequiresApi;
 
 import ch.bailu.aat.services.ServiceContext;
@@ -117,6 +118,7 @@ public class BleSensorsSDK18 extends Sensors {
 
 
 
+    @NonNull
     @Override
     public  synchronized String toString() {
         if (isEnabled()) {
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/CscService.java b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/CscService.java
index a7ab6525..695f3c20 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/CscService.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/CscService.java
@@ -1,6 +1,7 @@
 package ch.bailu.aat.services.sensor.bluetooth_le;
 
 import android.bluetooth.BluetoothGattCharacteristic;
+import android.support.annotation.NonNull;
 import android.support.annotation.RequiresApi;
 
 import ch.bailu.aat.gpx.attributes.GpxAttributes;
@@ -127,6 +128,7 @@ public class CscService extends CscServiceID implements ServiceInterface {
     }
 
 
+    @NonNull
     @Override
     public String toString() {
         String name = "";
@@ -158,7 +160,7 @@ public class CscService extends CscServiceID implements ServiceInterface {
     private class Attributes extends CadenceSpeedAttributes {
 
         final boolean haveCadence;
-        boolean haveSpeed;
+        final boolean haveSpeed;
         private int speed_rpm = 0;
         private float speedSI = 0f;
 
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/HeartRateService.java b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/HeartRateService.java
index 39481bac..5bbbc849 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/HeartRateService.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/bluetooth_le/HeartRateService.java
@@ -2,6 +2,7 @@ package ch.bailu.aat.services.sensor.bluetooth_le;
 
 import android.bluetooth.BluetoothGattCharacteristic;
 import android.content.Context;
+import android.support.annotation.NonNull;
 import android.support.annotation.RequiresApi;
 
 import java.util.UUID;
@@ -92,6 +93,7 @@ public class HeartRateService extends HeartRateServiceID implements ServiceInter
     }
 
 
+    @NonNull
     @Override
     public String toString() {
         return SensorState.getName(InfoID.HEART_RATE_SENSOR);
@@ -154,7 +156,7 @@ public class HeartRateService extends HeartRateServiceID implements ServiceInter
                 rrIntervall = c.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT16, offset);
 
                 if (bpm == 0 && rrIntervall > 0) {
-                    bpm = Math.round (MINUTE / rrIntervall);
+                    bpm = Math.round (MINUTE / (float)rrIntervall);
                 }
             }
 
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/internal/InternalSensorSDK23.java b/app/src/main/java/ch/bailu/aat/services/sensor/internal/InternalSensorSDK23.java
index 24cb7193..1c7566f5 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/internal/InternalSensorSDK23.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/internal/InternalSensorSDK23.java
@@ -4,6 +4,7 @@ import android.content.Context;
 import android.hardware.Sensor;
 import android.hardware.SensorEventListener;
 import android.hardware.SensorManager;
+import android.support.annotation.NonNull;
 import android.support.annotation.RequiresApi;
 
 import ch.bailu.aat.services.sensor.Connector;
@@ -58,6 +59,7 @@ public abstract class InternalSensorSDK23 implements SensorEventListener, Sensor
     }
 
 
+    @NonNull
     @Override
     public String toString() {
         return getName() + "@" + getAddress() + ":" + item.getSensorStateDescription();
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/internal/StepCounterSensor.java b/app/src/main/java/ch/bailu/aat/services/sensor/internal/StepCounterSensor.java
index 66f597d7..7d4ef162 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/internal/StepCounterSensor.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/internal/StepCounterSensor.java
@@ -96,7 +96,7 @@ public class StepCounterSensor extends InternalSensorSDK23 {
         //AppLog.d(this , "s: " + steps + " t: " + timeDelta);
 
         if (timeDelta > 0 && steps > 0) {
-            return Math.round((steps * 1000 * 60)  / timeDelta);
+            return (int) Math.round((steps * 1000 * 60)  / (float)timeDelta);
         }
         return 0;
     }
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorItemState.java b/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorItemState.java
index 50c9593f..6cc1e462 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorItemState.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorItemState.java
@@ -12,8 +12,7 @@ public class SensorItemState {
     public final static int UNSUPPORTED = 6;
 
 
-
-    private static final String STATE_DESCRIPTION[] = {
+    private static final String[] STATE_DESCRIPTION = {
             ToDo.translate("Unscanned"),
             ToDo.translate("Scanning..."),
             ToDo.translate("Supported"),
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorListItem.java b/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorListItem.java
index 54d3017f..20c08871 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorListItem.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorListItem.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.services.sensor.list;
 
+import android.support.annotation.NonNull;
+
 import ch.bailu.aat.gpx.GpxInformation;
 import ch.bailu.aat.services.sensor.SensorInterface;
 import ch.bailu.aat.util.ToDo;
@@ -82,6 +84,7 @@ public class SensorListItem extends SensorItemState implements SensorInterface {
     }
 
 
+    @NonNull
     @Override
     public String toString() {
 
diff --git a/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorState.java b/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorState.java
index 08715cfa..201f387e 100644
--- a/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorState.java
+++ b/app/src/main/java/ch/bailu/aat/services/sensor/list/SensorState.java
@@ -46,15 +46,13 @@ public class SensorState {
 
 
     public static String getOverviewString() {
-        String overview="";
+        StringBuilder overview= new StringBuilder();
         for (int i = 0; i< SIZE; i++) {
             if (connected[i] > 0) {
-                overview = overview
-                        + CHARS[i]
-                        + String.valueOf(connected[i]);
+                overview.append(CHARS[i]).append(connected[i]);
             }
         }
 
-        return overview;
+        return overview.toString();
     }
 }
diff --git a/app/src/main/java/ch/bailu/aat/services/tileremover/TileFile.java b/app/src/main/java/ch/bailu/aat/services/tileremover/TileFile.java
index 1b6d1ff6..b941daee 100644
--- a/app/src/main/java/ch/bailu/aat/services/tileremover/TileFile.java
+++ b/app/src/main/java/ch/bailu/aat/services/tileremover/TileFile.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.services.tileremover;
 
+import android.support.annotation.NonNull;
+
 import ch.bailu.util_java.foc.Foc;
 
 public class TileFile {
@@ -68,12 +70,13 @@ public class TileFile {
         return base_dir.child(toString());
     }
 
+    @NonNull
     @Override
     public String toString() {
-        return String.valueOf(zoom)+"/" +
-                String.valueOf(x) +
+        return zoom +"/" +
+                x +
                 "/" +
-                String.valueOf(y)+ ".png";
+                y + ".png";
     }
     public long lastModified() {
         return age;
diff --git a/app/src/main/java/ch/bailu/aat/services/tracker/AttributesCollector.java b/app/src/main/java/ch/bailu/aat/services/tracker/AttributesCollector.java
index 347757f5..0230eda8 100644
--- a/app/src/main/java/ch/bailu/aat/services/tracker/AttributesCollector.java
+++ b/app/src/main/java/ch/bailu/aat/services/tracker/AttributesCollector.java
@@ -19,12 +19,11 @@ public class AttributesCollector {
     public long time = System.currentTimeMillis();
 
 
-
-    private final Collector collectors[] = new Collector[] {
-            new Collector(InfoID.HEART_RATE_SENSOR,   HeartRateAttributes.KEY_INDEX_BPM,
+    private final Collector[] collectors = new Collector[]{
+            new Collector(InfoID.HEART_RATE_SENSOR, HeartRateAttributes.KEY_INDEX_BPM,
                     SHORT_TIMEOUT),
 
-            new Collector(InfoID.CADENCE_SENSOR,      CadenceSpeedAttributes.KEY_INDEX_CRANK_RPM,
+            new Collector(InfoID.CADENCE_SENSOR, CadenceSpeedAttributes.KEY_INDEX_CRANK_RPM,
                     SHORT_TIMEOUT),
 
             new Collector(InfoID.STEP_COUNTER_SENSOR, StepCounterAttributes.KEY_INDEX_STEPS_RATE,
diff --git a/app/src/main/java/ch/bailu/aat/util/HtmlBuilder.java b/app/src/main/java/ch/bailu/aat/util/HtmlBuilder.java
index 31e0a2e3..e83fb638 100644
--- a/app/src/main/java/ch/bailu/aat/util/HtmlBuilder.java
+++ b/app/src/main/java/ch/bailu/aat/util/HtmlBuilder.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.util;
 
+import android.support.annotation.NonNull;
+
 public class HtmlBuilder {
 
     private final StringBuilder b = new StringBuilder();
@@ -42,6 +44,7 @@ public class HtmlBuilder {
     }
 
 
+    @NonNull
     @Override
     public String toString() {
         return b.toString();
diff --git a/app/src/main/java/ch/bailu/aat/util/MemSize.java b/app/src/main/java/ch/bailu/aat/util/MemSize.java
index a14bb743..07bd1912 100644
--- a/app/src/main/java/ch/bailu/aat/util/MemSize.java
+++ b/app/src/main/java/ch/bailu/aat/util/MemSize.java
@@ -63,7 +63,7 @@ public class MemSize {
                 break;
         }
 
-        size = Math.round(size / ldivider[i]);
+        size = Math.round(size / (double)ldivider[i]);
         return size * ldivider[i];
     }
 
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/foc/DocumentData.java b/app/src/main/java/ch/bailu/aat/util/fs/foc/DocumentData.java
index 7db55d8b..d141e24b 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/foc/DocumentData.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/foc/DocumentData.java
@@ -3,6 +3,7 @@ package ch.bailu.aat.util.fs.foc;
 import android.annotation.TargetApi;
 import android.database.Cursor;
 import android.provider.DocumentsContract.Document;
+import android.support.annotation.NonNull;
 
 import ch.bailu.aat.util.ui.AppLog;
 
@@ -64,6 +65,7 @@ public class DocumentData  {
     }
 
 
+    @NonNull
     @Override
     public String toString() {
         return documentId;
diff --git a/app/src/main/java/ch/bailu/aat/util/fs/foc/DocumentId.java b/app/src/main/java/ch/bailu/aat/util/fs/foc/DocumentId.java
index 6f339c03..bf240deb 100644
--- a/app/src/main/java/ch/bailu/aat/util/fs/foc/DocumentId.java
+++ b/app/src/main/java/ch/bailu/aat/util/fs/foc/DocumentId.java
@@ -1,5 +1,7 @@
 package ch.bailu.aat.util.fs.foc;
 
+import android.support.annotation.NonNull;
+
 import ch.bailu.aat.util.ui.AppLog;
 
 public class DocumentId {
@@ -9,6 +11,7 @@ public class DocumentId {
         documentId = did;
     }
 
+    @NonNull
     @Override
     public String toString() {
         return documentId;
diff --git a/app/src/main/java/ch/bailu/aat/util/net/URX.java b/app/src/main/java/ch/bailu/aat/util/net/URX.java
index fe00a7a7..4edc9617 100644
--- a/app/src/main/java/ch/bailu/aat/util/net/URX.java
+++ b/app/src/main/java/ch/bailu/aat/util/net/URX.java
@@ -1,6 +1,7 @@
 package ch.bailu.aat.util.net;
 
 import android.net.Uri;
+import android.support.annotation.NonNull;
 
 import java.net.MalformedURLException;
 import java.net.URL;
@@ -27,6 +28,7 @@ public class URX {
 
 
 
+    @NonNull
     @Override
     public String toString() {
         if (string == null) {
diff --git a/app/src/main/java/ch/bailu/aat/util/ui/AppSelectDirectoryDialog.java b/app/src/main/java/ch/bailu/aat/util/ui/AppSelectDirectoryDialog.java
index e584cf05..13b243a6 100644
--- a/app/src/main/java/ch/bailu/aat/util/ui/AppSelectDirectoryDialog.java
+++ b/app/src/main/java/ch/bailu/aat/util/ui/AppSelectDirectoryDialog.java
@@ -10,7 +10,7 @@ import ch.bailu.util_java.foc.Foc;
 
 public abstract class AppSelectDirectoryDialog  implements  DialogInterface.OnClickListener {
     private final Foc srcFile;
-    private final Foc directories[];
+    private final Foc[] directories;
 
 
     private final Context context;
diff --git a/app/src/main/java/ch/bailu/aat/views/GpxListView.java b/app/src/main/java/ch/bailu/aat/views/GpxListView.java
index e3eed215..9c09f44c 100644
--- a/app/src/main/java/ch/bailu/aat/views/GpxListView.java
+++ b/app/src/main/java/ch/bailu/aat/views/GpxListView.java
@@ -18,13 +18,13 @@ public class GpxListView extends ListView implements OnCursorChangedListener {
 
     private DataSetObserver observer;
 
-    private final ContentDescription data[];
+    private final ContentDescription[] data;
 
 
 
 
-    public GpxListView(Context c, 
-            ContentDescription cd[]) {
+    public GpxListView(Context c,
+                       ContentDescription[] cd) {
         super(c);
 
         data = cd;
diff --git a/app/src/main/java/ch/bailu/aat/views/description/NumberView.java b/app/src/main/java/ch/bailu/aat/views/description/NumberView.java
index 79e29731..6c8124d0 100644
--- a/app/src/main/java/ch/bailu/aat/views/description/NumberView.java
+++ b/app/src/main/java/ch/bailu/aat/views/description/NumberView.java
@@ -91,7 +91,7 @@ public class NumberView extends ViewGroup implements OnContentUpdatedInterface {
 
 
 
-            final float textSizeLimit = height /4;
+            final float textSizeLimit = height /4f;
             final float textSize = Math.min(defaultTextSize, textSizeLimit);
 
             setTextSize(label, textSize);
diff --git a/app/src/main/java/ch/bailu/aat/views/graph/DistanceSpeedGraphView.java b/app/src/main/java/ch/bailu/aat/views/graph/DistanceSpeedGraphView.java
index 1bc6014a..5b49f166 100644
--- a/app/src/main/java/ch/bailu/aat/views/graph/DistanceSpeedGraphView.java
+++ b/app/src/main/java/ch/bailu/aat/views/graph/DistanceSpeedGraphView.java
@@ -71,7 +71,7 @@ public class DistanceSpeedGraphView extends AbsGraphView implements SharedPrefer
     public void plot(Canvas canvas, GpxList list, int index, SolidUnit sunit, boolean markerMode) {
         int km_factor = (int) (list.getDelta().getDistance()/1000) + 1;
 
-        GraphPlotter plotter[] = new GraphPlotter[3];
+        GraphPlotter[] plotter = new GraphPlotter[3];
 
         for (int i=0; i<plotter.length; i++) {
             plotter[i] = new GraphPlotter(canvas,getWidth(), getHeight(), 1000 * km_factor,
diff --git a/app/src/main/java/ch/bailu/aat/views/html/LinkHandler.java b/app/src/main/java/ch/bailu/aat/views/html/LinkHandler.java
index 80987be2..8f141512 100644
--- a/app/src/main/java/ch/bailu/aat/views/html/LinkHandler.java
+++ b/app/src/main/java/ch/bailu/aat/views/html/LinkHandler.java
@@ -1,5 +1,6 @@
 package ch.bailu.aat.views.html;
 
+import android.support.annotation.NonNull;
 import android.text.Spannable;
 import android.text.SpannableString;
 import android.text.Spanned;
@@ -33,7 +34,7 @@ public abstract class LinkHandler {
             urlSpan = span;
         }
         @Override
-        public void onClick(View view) {
+        public void onClick(@NonNull View view) {
             if (openLink(urlSpan.getURL()) == false)
                 urlSpan.onClick(view);
         }
diff --git a/util-java/src/main/java/ch/bailu/util_java/parser/scanner/DateScanner.java b/util-java/src/main/java/ch/bailu/util_java/parser/scanner/DateScanner.java
index e97b9a59..15599b7f 100644
--- a/util-java/src/main/java/ch/bailu/util_java/parser/scanner/DateScanner.java
+++ b/util-java/src/main/java/ch/bailu/util_java/parser/scanner/DateScanner.java
@@ -21,7 +21,7 @@ public class DateScanner extends AbsScanner {
 
     private long millis;
     private long utcDateMillis;
-    private final int dateBuffer[] = new int[10];
+    private final int[] dateBuffer = new int[10];
 
     public DateScanner(long l) {
 
@@ -65,7 +65,7 @@ public class DateScanner extends AbsScanner {
     }
 
     private void scanDate() {
-        int list[]=new int[3];
+        int[] list = new int[3];
         int x=0;
 
         for (int aDateBuffer : dateBuffer) {
diff --git a/util-java/src/main/java/ch/bailu/util_java/parser/scanner/DoubleScanner.java b/util-java/src/main/java/ch/bailu/util_java/parser/scanner/DoubleScanner.java
index 8c722b39..1fc6cf64 100644
--- a/util-java/src/main/java/ch/bailu/util_java/parser/scanner/DoubleScanner.java
+++ b/util-java/src/main/java/ch/bailu/util_java/parser/scanner/DoubleScanner.java
@@ -5,16 +5,16 @@ import ch.bailu.util_java.io.Stream;
 
 
 public class DoubleScanner extends AbsScanner {
-    private static final int exp_table[] = {
-        1,
-        10,
-        100,
-        1000,
-        10000,
-        100000,
-        1000000,
-        10000000,
-        100000000};
+    private static final int[] exp_table = {
+            1,
+            10,
+            100,
+            1000,
+            10000,
+            100000,
+            1000000,
+            10000000,
+            100000000};
     
     
     private int output=0;
diff --git a/util-java/src/main/java/ch/bailu/util_java/parser/scanner/SimpleStringReader.java b/util-java/src/main/java/ch/bailu/util_java/parser/scanner/SimpleStringReader.java
index 5f223bf6..fbaf96ba 100644
--- a/util-java/src/main/java/ch/bailu/util_java/parser/scanner/SimpleStringReader.java
+++ b/util-java/src/main/java/ch/bailu/util_java/parser/scanner/SimpleStringReader.java
@@ -26,7 +26,7 @@ public class SimpleStringReader extends Reader {
 
 
     @Override
-    public int read(char cbuf[]) throws IOException {
+    public int read(char[] cbuf) throws IOException {
         return read(cbuf, 0, cbuf.length);
     }
 
