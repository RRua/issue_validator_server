diff --git a/app/src/main/java/com/blanyal/remindme/BootReceiver.java b/app/src/main/java/com/blanyal/remindme/BootReceiver.java
new file mode 100644
index 0000000..587a929
--- /dev/null
+++ b/app/src/main/java/com/blanyal/remindme/BootReceiver.java
@@ -0,0 +1,37 @@
+/*
+ * Copyright 2015 Blanyal D'souza.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+package com.blanyal.remindme;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+
+
+public class BootReceiver extends BroadcastReceiver {
+
+    ReminderAlarm alarm = new ReminderAlarm();
+
+    @Override
+    public void onReceive(Context context, Intent intent) {
+
+        if (intent.getAction().equals("android.intent.action.BOOT_COMPLETED"))
+        {
+            //alarm.setAlarm(context, MainActivity.DEFAULT_INTERVAL_DURATION);
+        }
+    }
+}
\ No newline at end of file
diff --git a/app/src/main/java/com/blanyal/remindme/MainActivity.java b/app/src/main/java/com/blanyal/remindme/MainActivity.java
index bbc2035..f67e940 100644
--- a/app/src/main/java/com/blanyal/remindme/MainActivity.java
+++ b/app/src/main/java/com/blanyal/remindme/MainActivity.java
@@ -61,8 +61,6 @@ public class MainActivity extends AppCompatActivity {
     private LinkedHashMap<Integer, Integer> IDmap = new LinkedHashMap<>();
     private ReminderDatabase rb;
     private MultiSelector mMultiSelector = new MultiSelector();
-    private ReminderScheduleClient scheduleClient;
-    private Calendar c;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -91,28 +89,6 @@ public class MainActivity extends AppCompatActivity {
                 startActivity(intent);
             }
         });
-
-        scheduleClient = new ReminderScheduleClient(this);
-        scheduleClient.doBindService();
-
-        c = Calendar.getInstance();
-        c.set(Calendar.YEAR, 2015);
-        c.set(Calendar.MONTH, 3);
-        c.set(Calendar.DATE, 27);
-        c.set(Calendar.HOUR_OF_DAY, 10);
-        c.set(Calendar.MINUTE, 14);
-        c.set(Calendar.SECOND, 0);
-        // Ask our service to set an alarm for that date, this activity talks to the client that talks to the service
-
-    }
-
-    @Override
-    protected void onStop() {
-        // When our activity is stopped ensure we also stop the connection to the service
-        // this stops us leaking our activity into the system *bad*
-        if(scheduleClient != null)
-            scheduleClient.doUnbindService();
-        super.onStop();
     }
 
     @Override
@@ -166,8 +142,6 @@ public class MainActivity extends AppCompatActivity {
     };
 
     private void selectReminder(int mClickID) {
-        scheduleClient.setAlarmForNotification(c);
-
         Log.d("LOG", "ExtraID " + mClickID);
         String mStringClickID = Integer.toString(mClickID);
 
diff --git a/app/src/main/java/com/blanyal/remindme/ReminderAlarm.java b/app/src/main/java/com/blanyal/remindme/ReminderAlarm.java
index 532c874..6ce8c85 100644
--- a/app/src/main/java/com/blanyal/remindme/ReminderAlarm.java
+++ b/app/src/main/java/com/blanyal/remindme/ReminderAlarm.java
@@ -17,33 +17,69 @@
 
 package com.blanyal.remindme;
 
+
 import android.app.AlarmManager;
+import android.app.NotificationManager;
 import android.app.PendingIntent;
+import android.content.ComponentName;
 import android.content.Context;
 import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.graphics.BitmapFactory;
+import android.media.RingtoneManager;
+import android.os.SystemClock;
+import android.support.v4.app.NotificationCompat;
+import android.support.v4.content.WakefulBroadcastReceiver;
+
 
-import java.util.Calendar;
+public class ReminderAlarm extends WakefulBroadcastReceiver {
+    AlarmManager mAlarmManager;
+    PendingIntent mPendingIntent;
 
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        NotificationCompat.Builder nBuilder = new NotificationCompat.Builder(context)
+                .setLargeIcon(BitmapFactory.decodeResource(context.getResources(), R.drawable.ic_launcher))
+                .setTicker("Reminder")
+                .setContentTitle(context.getResources().getString(R.string.app_name))
+                .setContentText("This is a reminder")
+                .setSound(RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION))
+                .setPriority(NotificationCompat.PRIORITY_MAX)
+                .setOnlyAlertOnce(true);
+        NotificationManager nManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
+        nManager.notify(1, nBuilder.build());
+    }
 
-public class ReminderAlarm implements Runnable{
-    private final Calendar date;
-    private final AlarmManager am;
-    private final Context context;
+    public void setAlarm(Context context, int milliseconds)
+    {
+        mAlarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
+        mPendingIntent = PendingIntent.getBroadcast(context, 0, new Intent(context, ReminderAlarm.class), 0);
 
-    public ReminderAlarm(Context context, Calendar date) {
-        this.context = context;
-        this.am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
-        this.date = date;
+        // Fire alarm every "milliseconds"
+        mAlarmManager.setInexactRepeating(AlarmManager.ELAPSED_REALTIME,
+                SystemClock.elapsedRealtime() + milliseconds,
+                milliseconds,
+                mPendingIntent);
+
+        // Restart alarm if device is rebooted
+        ComponentName receiver = new ComponentName(context, BootReceiver.class);
+        PackageManager pm = context.getPackageManager();
+        pm.setComponentEnabledSetting(receiver,
+                PackageManager.COMPONENT_ENABLED_STATE_ENABLED,
+                PackageManager.DONT_KILL_APP);
     }
 
-    @Override
-    public void run() {
-        // Request to start are service when the alarm date is upon us
-        Intent intent = new Intent(context, ReminderNotifyService.class);
-        intent.putExtra(ReminderNotifyService.INTENT_NOTIFY, true);
-        PendingIntent pendingIntent = PendingIntent.getService(context, 0, intent, 0);
-
-        // Sets an alarm - note this alarm will be lost if the phone is turned off and on again
-        am.set(AlarmManager.RTC, date.getTimeInMillis(), pendingIntent);
+    public void cancelAlarm(Context context)
+    {
+        mAlarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
+        mPendingIntent = PendingIntent.getBroadcast(context, 0, new Intent(context, ReminderAlarm.class), 0);
+        mAlarmManager.cancel(mPendingIntent);
+
+        // Disable BootReceiver so that alarm won't start again if device is rebooted
+        ComponentName receiver = new ComponentName(context, BootReceiver.class);
+        PackageManager pm = context.getPackageManager();
+        pm.setComponentEnabledSetting(receiver,
+                PackageManager.COMPONENT_ENABLED_STATE_DISABLED,
+                PackageManager.DONT_KILL_APP);
     }
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/blanyal/remindme/ReminderNotifyService.java b/app/src/main/java/com/blanyal/remindme/ReminderNotifyService.java
deleted file mode 100644
index faf7004..0000000
--- a/app/src/main/java/com/blanyal/remindme/ReminderNotifyService.java
+++ /dev/null
@@ -1,93 +0,0 @@
-/*
- * Copyright 2015 Blanyal D'souza.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-
-package com.blanyal.remindme;
-
-import android.app.Notification;
-import android.app.NotificationManager;
-import android.app.PendingIntent;
-import android.app.Service;
-import android.content.Intent;
-import android.os.Binder;
-import android.os.IBinder;
-import android.util.Log;
-
-
-public class ReminderNotifyService extends Service {
-    private final IBinder mBinder = new ServiceBinder();
-
-    public class ServiceBinder extends Binder {
-        ReminderNotifyService getService() {
-            return ReminderNotifyService.this;
-        }
-    }
-
-    // Unique id to identify the notification.
-    private static final int NOTIFICATION = 123;
-    // Name of an intent extra we can use to identify if this service was started to create a notification
-    public static final String INTENT_NOTIFY = "REMINDLY_INTENT_NOTIFY";
-    private NotificationManager mNM;
-
-    @Override
-    public void onCreate() {
-        Log.i("ReminderNotifyService", "onCreate()");
-        mNM = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
-    }
-
-    @Override
-    public int onStartCommand(Intent intent, int flags, int startId) {
-        Log.i("LocalService", "Received start id " + startId + ": " + intent);
-
-        if(intent.getBooleanExtra(INTENT_NOTIFY, false))
-            showNotification();
-
-        return START_NOT_STICKY;
-    }
-
-    @Override
-    public IBinder onBind(Intent intent) {
-        return mBinder;
-    }
-
-
-
-    // Creates a notification and displays it in the notification drawer
-    private void showNotification() {
-        CharSequence title = "Remindly";
-        int icon = R.drawable.ic_launcher;
-        CharSequence text = "Reminder: ";
-        // What time to show on the notification
-        long time = System.currentTimeMillis();
-
-        Notification notification = new Notification(icon, text, time);
-
-        // The PendingIntent to launch our activity if the user selects this notification
-        PendingIntent contentIntent = PendingIntent.getActivity(this, 0, new Intent(this, ReminderAddActivity.class), 0);
-
-        // Set the info for the views that show in the notification panel.
-        notification.setLatestEventInfo(this, title, text, contentIntent);
-
-        // Clear the notification when it is pressed
-        notification.flags |= Notification.FLAG_AUTO_CANCEL;
-
-        // Send the notification to the system.
-        mNM.notify(NOTIFICATION, notification);
-
-        // Stop the service when we are finished
-        stopSelf();
-    }
-}
\ No newline at end of file
diff --git a/app/src/main/java/com/blanyal/remindme/ReminderScheduleClient.java b/app/src/main/java/com/blanyal/remindme/ReminderScheduleClient.java
deleted file mode 100644
index 2177c13..0000000
--- a/app/src/main/java/com/blanyal/remindme/ReminderScheduleClient.java
+++ /dev/null
@@ -1,73 +0,0 @@
-/*
- * Copyright 2015 Blanyal D'souza.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-
-package com.blanyal.remindme;
-
-import android.content.ComponentName;
-import android.content.Context;
-import android.content.Intent;
-import android.content.ServiceConnection;
-import android.os.IBinder;
-
-import java.util.Calendar;
-
-
-public class ReminderScheduleClient {
-
-    // The hook into our service
-    private ReminderScheduleService mBoundService;
-    // The context to start the service in
-    private Context mContext;
-    // A flag if we are connected to the service or not
-    private boolean mIsBound;
-
-    public ReminderScheduleClient(Context context) {
-        mContext = context;
-    }
-
-    // Call this to connect your activity to your service
-    public void doBindService() {
-        // Establish a connection with our service
-        mContext.bindService(new Intent(mContext, ReminderScheduleService.class), mConnection, Context.BIND_AUTO_CREATE);
-        mIsBound = true;
-    }
-
-    // On an attempt to connect to the service, this connection will be called with the result.
-    private ServiceConnection mConnection = new ServiceConnection() {
-        public void onServiceConnected(ComponentName className, IBinder service) {
-            // This is called when the connection with service has been established,
-            // giving us the service object we can use to interact with service.
-            mBoundService = ((ReminderScheduleService.ServiceBinder) service).getService();
-        }
-
-        public void onServiceDisconnected(ComponentName className) {
-            mBoundService = null;
-        }
-    };
-
-    public void setAlarmForNotification(Calendar c){
-        mBoundService.setAlarm(c);
-    }
-
-    public void doUnbindService() {
-        if (mIsBound) {
-            // Detach our existing connection.
-            mContext.unbindService(mConnection);
-            mIsBound = false;
-        }
-    }
-}
\ No newline at end of file
diff --git a/app/src/main/java/com/blanyal/remindme/ReminderScheduleService.java b/app/src/main/java/com/blanyal/remindme/ReminderScheduleService.java
deleted file mode 100644
index 21e9b2e..0000000
--- a/app/src/main/java/com/blanyal/remindme/ReminderScheduleService.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Copyright 2015 Blanyal D'souza.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-
-package com.blanyal.remindme;
-
-import android.app.Service;
-import android.content.Intent;
-import android.os.Binder;
-import android.os.IBinder;
-import android.util.Log;
-
-import java.util.Calendar;
-
-
-public class ReminderScheduleService extends Service {
-    private final IBinder mBinder = new ServiceBinder();
-
-    public class ServiceBinder extends Binder {
-        ReminderScheduleService getService() {
-            return ReminderScheduleService.this;
-        }
-    }
-
-    @Override
-    public int onStartCommand(Intent intent, int flags, int startId) {
-        Log.i("ReminderScheduleService", "Received start id " + startId + ": " + intent);
-
-        // We want this service to continue running until it is explicitly stopped, so return sticky.
-        return START_STICKY;
-    }
-
-    @Override
-    public IBinder onBind(Intent intent) {
-        return mBinder;
-    }
-
-    public void setAlarm(Calendar c) {
-        // This starts a new thread to set the alarm
-        new ReminderAlarm(this, c).run();
-    }
-}
\ No newline at end of file
