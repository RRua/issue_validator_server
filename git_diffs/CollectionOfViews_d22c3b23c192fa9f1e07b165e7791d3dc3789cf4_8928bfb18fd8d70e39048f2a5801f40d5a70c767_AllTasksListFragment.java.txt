diff --git a/app/src/main/java/com/sdex/activityrunner/AllTasksListAdapter.java b/app/src/main/java/com/sdex/activityrunner/AllTasksListAdapter.java
deleted file mode 100644
index 38509a5..0000000
--- a/app/src/main/java/com/sdex/activityrunner/AllTasksListAdapter.java
+++ /dev/null
@@ -1,128 +0,0 @@
-package com.sdex.activityrunner;
-
-import android.content.Context;
-import android.content.pm.PackageInfo;
-import android.content.pm.PackageManager;
-import android.content.pm.PackageManager.NameNotFoundException;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.BaseExpandableListAdapter;
-import android.widget.ImageView;
-import android.widget.TextView;
-import com.sdex.activityrunner.info.MyActivityInfo;
-import com.sdex.activityrunner.info.MyPackageInfo;
-import com.sdex.activityrunner.loader.AllTasksListAsyncProvider;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-
-@Deprecated
-public class AllTasksListAdapter extends BaseExpandableListAdapter {
-
-  private List<MyPackageInfo> packages;
-  private Context context;
-
-  public AllTasksListAdapter(Context context, AllTasksListAsyncProvider.Updater updater) {
-    this.context = context;
-    PackageManager pm = context.getPackageManager();
-    PackageManagerCache cache = PackageManagerCache.getPackageManagerCache(pm);
-    List<PackageInfo> all_packages = pm.getInstalledPackages(0);
-    this.packages = new ArrayList<>(all_packages.size());
-    updater.updateMax(all_packages.size());
-    updater.update(0);
-
-    for (int i = 0; i < all_packages.size(); ++i) {
-      updater.update(i + 1);
-      PackageInfo pack = all_packages.get(i);
-      MyPackageInfo mypack;
-      try {
-        mypack = cache.getPackageInfo(pack.packageName);
-        if (mypack.getActivitiesCount() > 0) {
-          this.packages.add(mypack);
-        }
-      } catch (NameNotFoundException e) {
-      }
-    }
-
-    Collections.sort(this.packages);
-  }
-
-  @Override
-  public Object getChild(int groupPosition, int childPosition) {
-    return this.packages.get(groupPosition).getActivity(childPosition);
-  }
-
-  @Override
-  public long getChildId(int groupPosition, int childPosition) {
-    return childPosition;
-  }
-
-  @Override
-  public View getChildView(int groupPosition, int childPosition, boolean isLastChild,
-    View convertView, ViewGroup parent) {
-    MyActivityInfo activity = (MyActivityInfo) getChild(groupPosition, childPosition);
-    LayoutInflater inflater = LayoutInflater.from(context);
-    View view = inflater.inflate(R.layout.item_application, parent, false);
-
-    TextView text1 = view.findViewById(android.R.id.text1);
-    text1.setText(activity.getName());
-
-    TextView text2 = view.findViewById(android.R.id.text2);
-    text2.setText(activity.getComponentName().getShortClassName());
-
-    ImageView icon = view.findViewById(android.R.id.icon);
-    icon.setImageBitmap(activity.getIcon());
-
-    return view;
-  }
-
-  @Override
-  public int getChildrenCount(int groupPosition) {
-    return this.packages.get(groupPosition).getActivitiesCount();
-  }
-
-  @Override
-  public Object getGroup(int groupPosition) {
-    return this.packages.get(groupPosition);
-  }
-
-  @Override
-  public int getGroupCount() {
-    return this.packages.size();
-  }
-
-  @Override
-  public long getGroupId(int groupPosition) {
-    return groupPosition;
-  }
-
-  @Override
-  public View getGroupView(int groupPosition, boolean isExpanded, View convertView,
-    ViewGroup parent) {
-    MyPackageInfo pack = (MyPackageInfo) getGroup(groupPosition);
-    LayoutInflater inflater = LayoutInflater.from(context);
-    View view = inflater.inflate(R.layout.item_activity, parent, false);
-
-    TextView text = view.findViewById(android.R.id.text1);
-    text.setText(pack.getName());
-
-    TextView text2 = view.findViewById(android.R.id.text2);
-    text2.setText(pack.getPackageName());
-
-    ImageView icon = view.findViewById(android.R.id.icon);
-    icon.setImageBitmap(pack.getIcon());
-
-    return view;
-  }
-
-  @Override
-  public boolean hasStableIds() {
-    return false;
-  }
-
-  @Override
-  public boolean isChildSelectable(int groupPosition, int childPosition) {
-    return true;
-  }
-}
diff --git a/app/src/main/java/com/sdex/activityrunner/AllTasksListFragment.java b/app/src/main/java/com/sdex/activityrunner/AllTasksListFragment.java
deleted file mode 100644
index d3669ce..0000000
--- a/app/src/main/java/com/sdex/activityrunner/AllTasksListFragment.java
+++ /dev/null
@@ -1,111 +0,0 @@
-package com.sdex.activityrunner;
-
-import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.v4.app.DialogFragment;
-import android.support.v4.app.Fragment;
-import android.view.ContextMenu;
-import android.view.ContextMenu.ContextMenuInfo;
-import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ExpandableListAdapter;
-import android.widget.ExpandableListView;
-import android.widget.ExpandableListView.ExpandableListContextMenuInfo;
-import android.widget.ExpandableListView.OnChildClickListener;
-import com.sdex.activityrunner.info.MyActivityInfo;
-import com.sdex.activityrunner.loader.AllTasksListAsyncProvider;
-import com.sdex.activityrunner.loader.AsyncProvider;
-import com.sdex.activityrunner.util.IntentUtils;
-
-@Deprecated
-public class AllTasksListFragment extends Fragment implements
-  AllTasksListAsyncProvider.Listener<AllTasksListAdapter> {
-
-  private ExpandableListView list;
-
-  @Override
-  public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
-    Bundle savedInstanceState) {
-    View view = inflater.inflate(R.layout.fragment_apps_list, container, false);
-
-    list = view.findViewById(R.id.expandableListView1);
-
-    list.setOnChildClickListener(new OnChildClickListener() {
-      @Override
-      public boolean onChildClick(ExpandableListView parent, View v, int groupPosition,
-        int childPosition, long id) {
-        ExpandableListAdapter adapter = parent.getExpandableListAdapter();
-        MyActivityInfo info = (MyActivityInfo) adapter.getChild(groupPosition, childPosition);
-        IntentUtils.launchActivity(getActivity(),
-          info.getComponentName(), info.getName());
-        return false;
-      }
-    });
-
-    AllTasksListAsyncProvider provider = new AllTasksListAsyncProvider(this.getActivity(), this);
-    provider.execute();
-
-    return view;
-  }
-
-  @Override
-  public void onActivityCreated(Bundle savedInstanceState) {
-    super.onActivityCreated(savedInstanceState);
-    registerForContextMenu(list);
-  }
-
-  @Override
-  public void onCreateContextMenu(ContextMenu menu, View v, ContextMenuInfo menuInfo) {
-    ExpandableListContextMenuInfo info = (ExpandableListContextMenuInfo) menuInfo;
-    ExpandableListView list = getView().findViewById(R.id.expandableListView1);
-    switch (ExpandableListView.getPackedPositionType(info.packedPosition)) {
-      case ExpandableListView.PACKED_POSITION_TYPE_CHILD:
-        MyActivityInfo activity = (MyActivityInfo) list.getExpandableListAdapter()
-          .getChild(ExpandableListView.getPackedPositionGroup(info.packedPosition),
-            ExpandableListView.getPackedPositionChild(info.packedPosition));
-        menu.setHeaderTitle(activity.getName());
-        menu.add(Menu.NONE, 0, Menu.NONE, R.string.context_action_shortcut);
-        menu.add(Menu.NONE, 1, Menu.NONE, R.string.context_action_launch);
-        break;
-    }
-
-    super.onCreateContextMenu(menu, v, menuInfo);
-  }
-
-  @Override
-  public boolean onContextItemSelected(MenuItem item) {
-    ExpandableListContextMenuInfo info = (ExpandableListContextMenuInfo) item.getMenuInfo();
-    ExpandableListView list = getView().findViewById(R.id.expandableListView1);
-
-    switch (ExpandableListView.getPackedPositionType(info.packedPosition)) {
-      case ExpandableListView.PACKED_POSITION_TYPE_CHILD:
-        MyActivityInfo activity = (MyActivityInfo) list.getExpandableListAdapter()
-          .getChild(ExpandableListView.getPackedPositionGroup(info.packedPosition),
-            ExpandableListView.getPackedPositionChild(info.packedPosition));
-        switch (item.getItemId()) {
-          case 0:
-            DialogFragment dialog = new ShortcutEditDialogFragment();
-            Bundle args = new Bundle();
-            args.putParcelable("activityInfo", activity.getComponentName());
-            dialog.setArguments(args);
-            dialog.show(getFragmentManager(), "ShortcutEditor");
-            break;
-          case 1:
-            IntentUtils.launchActivity(getActivity(),
-              activity.getComponentName(), activity.getName());
-            break;
-        }
-        break;
-    }
-    return super.onContextItemSelected(item);
-  }
-
-  @Override
-  public void onProviderFinished(AsyncProvider<AllTasksListAdapter> task,
-    AllTasksListAdapter value) {
-    list.setAdapter(value);
-  }
-}
diff --git a/app/src/main/java/com/sdex/activityrunner/MainActivity.java b/app/src/main/java/com/sdex/activityrunner/MainActivity.java
index 8a5ee8c..32dd210 100644
--- a/app/src/main/java/com/sdex/activityrunner/MainActivity.java
+++ b/app/src/main/java/com/sdex/activityrunner/MainActivity.java
@@ -36,7 +36,7 @@ public class MainActivity extends BaseActivity {
 
   @Override
   public boolean onCreateOptionsMenu(Menu menu) {
-    getMenuInflater().inflate(R.menu.main, menu);
+    //getMenuInflater().inflate(R.menu.main, menu);
     return super.onCreateOptionsMenu(menu);
   }
 
diff --git a/app/src/main/java/com/sdex/activityrunner/PackageManagerCache.java b/app/src/main/java/com/sdex/activityrunner/PackageManagerCache.java
deleted file mode 100644
index 92c06eb..0000000
--- a/app/src/main/java/com/sdex/activityrunner/PackageManagerCache.java
+++ /dev/null
@@ -1,58 +0,0 @@
-package com.sdex.activityrunner;
-
-import android.content.ComponentName;
-import android.content.pm.PackageInfo;
-import android.content.pm.PackageManager;
-import android.content.pm.PackageManager.NameNotFoundException;
-import com.sdex.activityrunner.info.MyActivityInfo;
-import com.sdex.activityrunner.info.MyPackageInfo;
-import java.util.HashMap;
-import java.util.Map;
-
-@Deprecated
-public class PackageManagerCache {
-
-  private static PackageManagerCache instance = null;
-  private final Map<String, MyPackageInfo> packageInfos;
-  private final Map<ComponentName, MyActivityInfo> activityInfos;
-  private final PackageManager pm;
-
-  public static PackageManagerCache getPackageManagerCache(PackageManager pm) {
-    if (instance == null) {
-      instance = new PackageManagerCache(pm);
-    }
-    return instance;
-  }
-
-  private PackageManagerCache(PackageManager pm) {
-    this.pm = pm;
-    this.packageInfos = new HashMap<>();
-    this.activityInfos = new HashMap<>();
-  }
-
-  public MyPackageInfo getPackageInfo(String packageName) throws NameNotFoundException {
-    MyPackageInfo myInfo;
-    synchronized (packageInfos) {
-      if (packageInfos.containsKey(packageName)) {
-        return packageInfos.get(packageName);
-      }
-      PackageInfo info;
-      info = pm.getPackageInfo(packageName, PackageManager.GET_ACTIVITIES);
-      myInfo = new MyPackageInfo(info, pm, this);
-      packageInfos.put(packageName, myInfo);
-    }
-    return myInfo;
-  }
-
-  public MyActivityInfo getActivityInfo(ComponentName activityName) {
-    MyActivityInfo myInfo;
-    synchronized (activityInfos) {
-      if (activityInfos.containsKey(activityName)) {
-        return activityInfos.get(activityName);
-      }
-      myInfo = new MyActivityInfo(activityName, pm);
-      activityInfos.put(activityName, myInfo);
-    }
-    return myInfo;
-  }
-}
diff --git a/app/src/main/java/com/sdex/activityrunner/info/MyActivityInfo.java b/app/src/main/java/com/sdex/activityrunner/info/MyActivityInfo.java
deleted file mode 100644
index a12fe51..0000000
--- a/app/src/main/java/com/sdex/activityrunner/info/MyActivityInfo.java
+++ /dev/null
@@ -1,69 +0,0 @@
-package com.sdex.activityrunner.info;
-
-import android.content.ComponentName;
-import android.content.pm.ActivityInfo;
-import android.content.pm.PackageManager;
-import android.content.pm.PackageManager.NameNotFoundException;
-import android.graphics.Bitmap;
-import android.support.annotation.NonNull;
-import com.sdex.activityrunner.util.Utils;
-
-@Deprecated
-public class MyActivityInfo implements Comparable<MyActivityInfo> {
-
-  private String name;
-  private ComponentName componentName;
-  private Bitmap icon;
-
-  public MyActivityInfo(ComponentName activity, PackageManager pm) {
-    this.componentName = activity;
-
-    ActivityInfo act;
-    try {
-      act = pm.getActivityInfo(activity, 0);
-      this.name = act.loadLabel(pm).toString();
-      try {
-        this.icon = Utils.getBitmap(act.loadIcon(pm));
-      } catch (ClassCastException e) {
-        this.icon = Utils.getBitmap(pm.getDefaultActivityIcon());
-      }
-    } catch (NameNotFoundException e) {
-      this.name = activity.getShortClassName();
-      this.icon = Utils.getBitmap(pm.getDefaultActivityIcon());
-    }
-  }
-
-  public ComponentName getComponentName() {
-    return componentName;
-  }
-
-  public Bitmap getIcon() {
-    return icon;
-  }
-
-  public String getName() {
-    return name;
-  }
-
-  public void setName(String name) {
-    this.name = name;
-  }
-
-  @Override
-  public int compareTo(@NonNull MyActivityInfo another) {
-    int cmp_name = this.name.compareTo(another.name);
-    if (cmp_name != 0) {
-      return cmp_name;
-    }
-    return this.componentName.compareTo(another.componentName);
-  }
-
-  @Override
-  public boolean equals(Object other) {
-    if (!other.getClass().equals(MyPackageInfo.class)) {
-      return false;
-    }
-    MyActivityInfo other_info = (MyActivityInfo) other;
-    return this.componentName.equals(other_info.componentName);
-  }
-}
diff --git a/app/src/main/java/com/sdex/activityrunner/info/MyPackageInfo.java b/app/src/main/java/com/sdex/activityrunner/info/MyPackageInfo.java
deleted file mode 100644
index f86b0ad..0000000
--- a/app/src/main/java/com/sdex/activityrunner/info/MyPackageInfo.java
+++ /dev/null
@@ -1,105 +0,0 @@
-package com.sdex.activityrunner.info;
-
-import android.content.ComponentName;
-import android.content.pm.ActivityInfo;
-import android.content.pm.ApplicationInfo;
-import android.content.pm.PackageInfo;
-import android.content.pm.PackageManager;
-import android.graphics.Bitmap;
-import android.support.annotation.NonNull;
-import com.sdex.activityrunner.PackageManagerCache;
-import com.sdex.activityrunner.util.Utils;
-import java.util.Arrays;
-
-@Deprecated
-public class MyPackageInfo implements Comparable<MyPackageInfo> {
-
-  private String name;
-  private String packageName;
-  private Bitmap icon;
-  private MyActivityInfo[] activities;
-
-  public MyPackageInfo(PackageInfo info, PackageManager pm, PackageManagerCache cache) {
-    this.packageName = info.packageName;
-    ApplicationInfo app = info.applicationInfo;
-
-    if (app != null) {
-      this.name = pm.getApplicationLabel(app).toString();
-      try {
-        this.icon = Utils.getBitmap(pm.getApplicationIcon(app));
-      } catch (ClassCastException e) {
-        this.icon = Utils.getBitmap(pm.getDefaultActivityIcon());
-      }
-    } else {
-      this.name = info.packageName;
-      this.icon = Utils.getBitmap(pm.getDefaultActivityIcon());
-    }
-
-    if (info.activities == null) {
-      this.activities = new MyActivityInfo[0];
-    } else {
-      int n_activities = countActivitiesFromInfo(info);
-      int i = 0;
-
-      this.activities = new MyActivityInfo[n_activities];
-
-      for (ActivityInfo activity : info.activities) {
-        if (activity.isEnabled() && activity.exported) {
-          ComponentName acomp = new ComponentName(activity.packageName, activity.name);
-          this.activities[i++] = cache.getActivityInfo(acomp);
-        }
-      }
-
-      Arrays.sort(this.activities);
-    }
-  }
-
-  private static int countActivitiesFromInfo(PackageInfo info) {
-    int n_activities = 0;
-    for (ActivityInfo activity : info.activities) {
-      if (activity.isEnabled() && activity.exported) {
-        n_activities++;
-      }
-    }
-    return n_activities;
-  }
-
-  public int getActivitiesCount() {
-    return activities.length;
-  }
-
-  public MyActivityInfo getActivity(int i) {
-    return activities[i];
-  }
-
-  public String getPackageName() {
-    return packageName;
-  }
-
-  public Bitmap getIcon() {
-    return icon;
-  }
-
-  public String getName() {
-    return name;
-  }
-
-  @Override
-  public int compareTo(@NonNull MyPackageInfo another) {
-    int cmp_name = this.name.compareTo(another.name);
-    if (cmp_name != 0) {
-      return cmp_name;
-    }
-
-    return this.packageName.compareTo(another.packageName);
-  }
-
-  @Override
-  public boolean equals(Object other) {
-    if (!other.getClass().equals(MyPackageInfo.class)) {
-      return false;
-    }
-    MyPackageInfo other_info = (MyPackageInfo) other;
-    return this.packageName.equals(other_info.packageName);
-  }
-}
diff --git a/app/src/main/java/com/sdex/activityrunner/loader/AllTasksListAsyncProvider.java b/app/src/main/java/com/sdex/activityrunner/loader/AllTasksListAsyncProvider.java
deleted file mode 100644
index 66504a4..0000000
--- a/app/src/main/java/com/sdex/activityrunner/loader/AllTasksListAsyncProvider.java
+++ /dev/null
@@ -1,18 +0,0 @@
-package com.sdex.activityrunner.loader;
-
-import android.content.Context;
-import com.sdex.activityrunner.AllTasksListAdapter;
-
-@Deprecated
-public class AllTasksListAsyncProvider extends AsyncProvider<AllTasksListAdapter> {
-
-  public AllTasksListAsyncProvider(Context context,
-    AsyncProvider.Listener<AllTasksListAdapter> listener) {
-    super(context, listener, true);
-  }
-
-  @Override
-  protected AllTasksListAdapter run(Updater updater) {
-    return new AllTasksListAdapter(getContext(), updater);
-  }
-}
diff --git a/app/src/main/java/com/sdex/activityrunner/loader/AsyncProvider.java b/app/src/main/java/com/sdex/activityrunner/loader/AsyncProvider.java
deleted file mode 100644
index 7145ab5..0000000
--- a/app/src/main/java/com/sdex/activityrunner/loader/AsyncProvider.java
+++ /dev/null
@@ -1,99 +0,0 @@
-package com.sdex.activityrunner.loader;
-
-import android.app.ProgressDialog;
-import android.content.Context;
-import android.os.AsyncTask;
-import com.sdex.activityrunner.R;
-
-@Deprecated
-public abstract class AsyncProvider<ReturnType> extends AsyncTask<Void, Integer, ReturnType> {
-
-  public interface Listener<ReturnType> {
-
-    void onProviderFinished(AsyncProvider<ReturnType> task, ReturnType value);
-  }
-
-  public class Updater {
-
-    private AsyncProvider<ReturnType> provider;
-
-    public Updater(AsyncProvider<ReturnType> provider) {
-      this.provider = provider;
-    }
-
-    public void update(int value) {
-      this.provider.publishProgress(value);
-    }
-
-    public void updateMax(int value) {
-      this.provider.max = value;
-    }
-  }
-
-  private Context context;
-  private Listener<ReturnType> listener;
-  private int max;
-  private ProgressDialog progress;
-
-  public AsyncProvider(Context context, Listener<ReturnType> listener,
-    boolean showProgressDialog) {
-    this.context = context;
-    this.listener = listener;
-
-    if (showProgressDialog) {
-      this.progress = new ProgressDialog(context);
-    } else {
-      progress = null;
-    }
-  }
-
-  @Override
-  protected void onProgressUpdate(Integer... values) {
-    if (this.progress != null && values.length > 0) {
-      int value = values[0];
-
-      if (value == 0) {
-        this.progress.setIndeterminate(false);
-        this.progress.setMax(this.max);
-      }
-
-      this.progress.setProgress(value);
-    }
-  }
-
-  @Override
-  protected void onPreExecute() {
-    super.onPreExecute();
-
-    if (this.progress != null) {
-      this.progress.setCancelable(false);
-      this.progress.setTitle(context.getText(R.string.app_name));
-      this.progress.setMessage(context.getText(R.string.dialog_progress_loading));
-      this.progress.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-      this.progress.show();
-    }
-  }
-
-  @Override
-  protected void onPostExecute(ReturnType result) {
-    super.onPostExecute(result);
-    if (this.listener != null) {
-      this.listener.onProviderFinished(this, result);
-    }
-
-    if (this.progress != null) {
-      this.progress.dismiss();
-    }
-  }
-
-  abstract protected ReturnType run(Updater updater);
-
-  @Override
-  protected ReturnType doInBackground(Void... params) {
-    return run(new Updater(this));
-  }
-
-  protected Context getContext() {
-    return context;
-  }
-}
