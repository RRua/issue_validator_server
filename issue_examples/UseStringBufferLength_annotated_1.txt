// Inefficient: This code is inefficient because it creates an unnecessary string object and then checks for equality, which involves additional overhead.
StringBuffer sb = new StringBuffer();
return sb.toString().equals("");


----

// Efficient: This code is efficient because it directly checks the length of the StringBuffer, avoiding the creation of an unnecessary string object and the overhead of the equals method.
StringBuffer sb = new StringBuffer();
return sb.length() == 0;
