// Inefficient: Uses notifyDataSetChanged which redraws the entire list
class MyAdapter : RecyclerView.Adapter<MyViewHolder>() {
    fun updateData(newData: List<Item>) {
        items = newData
        notifyDataSetChanged()
    }
}

----

// Efficient: Uses DiffUtil to calculate and animate only the changes
class MyAdapter : RecyclerView.Adapter<MyViewHolder>() {
    fun updateData(newData: List<Item>) {
        val diffCallback = MyDiffCallback(items, newData)
        val diffResult = DiffUtil.calculateDiff(diffCallback)
        items = newData
        diffResult.dispatchUpdatesTo(this)
    }
}
