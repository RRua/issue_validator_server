// Inefficient: This code is inefficient because it inflates a new view for every item in the list, instead of reusing existing views ---- 
public static class Adapter2 extends ViewHolderTest {
        LayoutInflater mInflater;

        public View getView(int position, View convertView, ViewGroup parent) {
            // Should use View Holder pattern here
            convertView = mInflater.inflate(R.layout.your_layout, null);

            TextView text = (TextView) convertView.findViewById(R.id.text);
            text.setText("Position " + position);

            return convertView;
        }
    }

----

// Efficient: This code is efficient because it reuses existing views by checking if convertView is null before inflating a new view 
public static class Adapter3 extends ViewHolderTest {
        LayoutInflater mInflater;
        public View getView(int position, View convertView, ViewGroup parent) {
            // Already using View Holder pattern
            if (convertView == null) {
                convertView = mInflater.inflate(R.layout.your_layout, null);
            }

            TextView text = (TextView) convertView.findViewById(R.id.text);
            text.setText("Position " + position);
            return convertView;
        }
    }
