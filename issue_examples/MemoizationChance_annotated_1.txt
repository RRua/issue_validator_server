// Inefficient: Performs calculation everytime
int fib(int n) { return n <= 1 ? n : fib(n-1) + fib(n-2); }


----------------

// Efficient: Uses cache for pre-calculated results 
private Map<Integer, Integer> cache = new HashMap<>();
int fib(int n) {
    if (!cache.containsKey(n)) {
        cache.put(n, n <= 1 ? n : fib(n-1) + fib(n-2));
    }
    return cache.get(n);
}
