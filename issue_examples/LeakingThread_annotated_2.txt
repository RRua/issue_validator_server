// Inefficient: Creates a thread that runs indefinitely
void onCreate() {
    new Thread(() -> {
        while (true) processData();
    }).start();
}


------

// Efficient: Uses a coroutine with proper lifecycle management
val scope = CoroutineScope(Dispatchers.Default + SupervisorJob())

fun startProcessing() {
    scope.launch {
        processData()
    }
}

override fun onCleared() {
    scope.cancel()
}
