
// Inefficient: Uses JDBC for direct database access
public List<User> getUsersFromRemoteDB() {
    List<User> users = new ArrayList<>();
    try {
        Class.forName("com.mysql.jdbc.Driver");
        Connection conn = DriverManager.getConnection(
            "jdbc:mysql://remote-server:3306/mydb", 
            "user", 
            "password"
        );
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT * FROM users"); // Raw SQL
        
        while (rs.next()) {
            users.add(new User(rs.getString("name"), rs.getInt("age")));
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    return users;
}


-----------

// Efficient: Uses remot API calls
public List<User> getUsersFromWebService() {
    Retrofit retrofit = new Retrofit.Builder()
        .baseUrl("https://api.example.com/")
        .build();
    
    UserService service = retrofit.create(UserService.class);
    Call<List<User>> call = service.getUsers();
    
    try {
        Response<List<User>> response = call.execute();
        return response.body(); // Returns parsed JSON
    } catch (IOException e) {
        return Collections.emptyList();
    }
}

// Retrofit interface
public interface UserService {
    @GET("users")
    Call<List<User>> getUsers();
}
