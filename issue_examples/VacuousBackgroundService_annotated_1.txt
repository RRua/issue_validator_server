// Inefficient: Starting a service directly can be inefficient as it may run even when the network is not available, potentially wasting resources and causing delays.
startService(new Intent(this, DataSyncService.class));

----

// Efficient: Using WorkManager to schedule a work request ensures that the task is executed only when the required constraints are met, such as a connected network, making it more efficient and reliable.
WorkRequest syncWork = new OneTimeWorkRequest.Builder(SyncWorker.class)
    .setConstraints(new Constraints.Builder().setRequiredNetworkType(CONNECTED).build())
    .build();
WorkManager.getInstance(this).enqueue(syncWork);
