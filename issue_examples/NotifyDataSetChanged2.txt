public class RecyclerViewTest {
    // From https://developer.android.com/training/material/lists-cards.html
    public abstract static class Test1 extends RecyclerView.Adapter<test1.viewholder> {
        private String[] mDataset;
        public static class ViewHolder extends RecyclerView.ViewHolder {
            public TextView mTextView;
            public ViewHolder(TextView v) {
                super(v);
                mTextView = v;
            }
        }

        public Test1(String[] myDataset) {
            mDataset = myDataset;
            notifyDataSetChanged();
        }

        @Override
        public void onBindViewHolder(ViewHolder holder, int position) { }
    }
}

--------


public class RecyclerViewTest {
    public abstract static class Test1 extends RecyclerView.Adapter<Test1.ViewHolder> {
        private List<String> mDataset;

        public static class ViewHolder extends RecyclerView.ViewHolder {
            public TextView mTextView;
            public ViewHolder(TextView v) {
                super(v);
                mTextView = v;
            }
        }

        public Test1(String[] myDataset) {
            mDataset = Arrays.asList(myDataset);
            notifyItemRangeInserted(0, myDataset.length);
        }

        @Override
        public void onBindViewHolder(ViewHolder holder, int position) {
            holder.mTextView.setText(mDataset.get(position));
        }

        @Override
        public int getItemCount() {
            return mDataset.size();
        }

        public void updateData(String[] newDataset) {
            int oldSize = mDataset.size();
            mDataset.clear();
            mDataset.addAll(Arrays.asList(newDataset));
            int newSize = mDataset.size();

            if (newSize > oldSize) {
                notifyItemRangeChanged(0, oldSize);
                notifyItemRangeInserted(oldSize, newSize - oldSize);
            } else if (newSize < oldSize) {
                notifyItemRangeChanged(0, newSize);
                notifyItemRangeRemoved(newSize, oldSize - newSize);
            } else {
                notifyItemRangeChanged(0, newSize);
            }
        }
    }
}
