// Inefficient: This code is inefficient because it creates a new complex path on every draw call, which can lead to performance issues if onDraw is called frequently.
protected void onDraw(Canvas canvas) {
    Path complexPath = createHugeBezierPath(); 
    canvas.drawPath(complexPath, paint); 
}


----

// Efficient: This code is efficient because it uses a ShapeDrawable, which is optimized for drawing simple shapes and can reduce the overhead of creating and drawing complex paths.
protected void onDraw(Canvas canvas) {
    ShapeDrawable shape = new ShapeDrawable(new OvalShape());
    shape.getPaint().setColor(Color.RED);
    shape.setBounds(0, 0, 100, 100);
    shape.draw(canvas);
}
